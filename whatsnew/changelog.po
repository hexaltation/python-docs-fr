# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-01 13:21+0200\n"
"PO-Revision-Date: 2017-08-18 20:58+0200\n"
"Last-Translator: Gregoire Cutzach\n"
"Language-Team: \n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.8.7.1\n"

#: ../Doc/whatsnew/changelog.rst:5
msgid "Changelog"
msgstr "Changements"

#: ../../../Misc/NEWS:5
msgid "Python 3.6.3 release candidate 1"
msgstr "Python 3.6.3 release candidate 1"

#: ../../../Misc/NEWS:7
msgid "*Release date: XXXX-XX-XX*"
msgstr "*Date de sortie : XXXX-XX-XX*"

#: ../../../Misc/NEWS:10 ../../../Misc/NEWS:44 ../../../Misc/NEWS:73
#: ../../../Misc/NEWS:414 ../../../Misc/NEWS:438 ../../../Misc/NEWS:761
#: ../../../Misc/NEWS:792 ../../../Misc/NEWS:854 ../../../Misc/NEWS:970
#: ../../../Misc/NEWS:1097 ../../../Misc/NEWS:1369 ../../../Misc/NEWS:1880
#: ../../../Misc/NEWS:2117 ../../../Misc/NEWS:2325 ../../../Misc/NEWS:2623
#: ../../../Misc/NEWS:3916 ../../../Misc/NEWS:4602 ../../../Misc/NEWS:4623
#: ../../../Misc/NEWS:5358 ../../../Misc/NEWS:5376 ../../../Misc/NEWS:5896
#: ../../../Misc/NEWS:5931 ../../../Misc/NEWS:5959 ../../../Misc/NEWS:6050
#: ../../../Misc/NEWS:6137 ../../../Misc/NEWS:6242 ../../../Misc/NEWS:6284
#: ../../../Misc/NEWS:6557 ../../../Misc/NEWS:6788 ../../../Misc/NEWS:6974
#: ../../../Misc/NEWS:7114
msgid "Core and Builtins"
msgstr "Noyeau et natifs"

#: ../../../Misc/NEWS:12
msgid ""
"`bpo-30814 <https://bugs.python.org/issue30814>`__: Fixed a race condition "
"when import a submodule from a package."
msgstr ""
"`bpo-30814 <https://bugs.python.org/issue30814>`__: Fixed a race condition "
"when import a submodule from a package."

#: ../../../Misc/NEWS:14
msgid ""
"`bpo-30597 <https://bugs.python.org/issue30597>`__: ``print`` now shows "
"expected input in custom error message when used as a Python 2 statement. "
"Patch by Sanyam Khurana."
msgstr ""
"`bpo-30597 <https://bugs.python.org/issue30597>`__: ``print`` now shows "
"expected input in custom error message when used as a Python 2 statement. "
"Patch by Sanyam Khurana."

#: ../../../Misc/NEWS:18 ../../../Misc/NEWS:47 ../../../Misc/NEWS:120
#: ../../../Misc/NEWS:510 ../../../Misc/NEWS:808 ../../../Misc/NEWS:890
#: ../../../Misc/NEWS:994 ../../../Misc/NEWS:1166 ../../../Misc/NEWS:1506
#: ../../../Misc/NEWS:1925 ../../../Misc/NEWS:2134 ../../../Misc/NEWS:2365
#: ../../../Misc/NEWS:2907 ../../../Misc/NEWS:4046 ../../../Misc/NEWS:4753
#: ../../../Misc/NEWS:5442 ../../../Misc/NEWS:5879 ../../../Misc/NEWS:5906
#: ../../../Misc/NEWS:5944 ../../../Misc/NEWS:5964 ../../../Misc/NEWS:6071
#: ../../../Misc/NEWS:6164 ../../../Misc/NEWS:6260 ../../../Misc/NEWS:6334
#: ../../../Misc/NEWS:6589 ../../../Misc/NEWS:6808 ../../../Misc/NEWS:6981
#: ../../../Misc/NEWS:7341
msgid "Library"
msgstr "Biblioth√®que"

#: ../../../Misc/NEWS:20
msgid ""
"`bpo-30879 <https://bugs.python.org/issue30879>`__: os.listdir() and os."
"scandir() now emit bytes names when called with bytes-like argument."
msgstr ""
"`bpo-30879 <https://bugs.python.org/issue30879>`__: os.listdir() and os."
"scandir() now emit bytes names when called with bytes-like argument."

#: ../../../Misc/NEWS:23
msgid ""
"`bpo-30746 <https://bugs.python.org/issue30746>`__: Prohibited the '=' "
"character in environment variable names in ``os.putenv()`` and ``os."
"spawn*()``."
msgstr ""
"`bpo-30746 <https://bugs.python.org/issue30746>`__: Prohibited the '=' "
"character in environment variable names in ``os.putenv()`` and ``os."
"spawn*()``."

#: ../../../Misc/NEWS:26
msgid ""
"`bpo-29755 <https://bugs.python.org/issue29755>`__: Fixed the lgettext() "
"family of functions in the gettext module. They now always return bytes."
msgstr ""
"`bpo-29755 <https://bugs.python.org/issue29755>`__: Fixed the lgettext() "
"family of functions in the gettext module. They now always return bytes."

#: ../../../Misc/NEWS:31
msgid "Python 3.6.2"
msgstr "Python 3.6.2"

#: ../../../Misc/NEWS:33
msgid "*Release date: 2017-07-17*"
msgstr "*Date de sortie : 2017-07-17*"

#: ../../../Misc/NEWS:35 ../../../Misc/NEWS:752
msgid "No changes since release candidate 2"
msgstr "Aucun changement depuis la seconde *release candidate*"

#: ../../../Misc/NEWS:39
msgid "Python 3.6.2 release candidate 2"
msgstr "Python 3.6.2 release candidate 2"

#: ../../../Misc/NEWS:41
msgid "*Release date: 2017-07-07*"
msgstr "*Date de sortie : 2017-07-07*"

#: ../../../Misc/NEWS:49
msgid ""
"[Security] `bpo-30730 <https://bugs.python.org/issue30730>`__: Prevent "
"environment variables injection in subprocess on Windows.  Prevent passing "
"other environment variables and command arguments."
msgstr ""
"[Security] `bpo-30730 <https://bugs.python.org/issue30730>`__: Prevent "
"environment variables injection in subprocess on Windows.  Prevent passing "
"other environment variables and command arguments."

#: ../../../Misc/NEWS:52
msgid ""
"[Security] `bpo-30694 <https://bugs.python.org/issue30694>`__: Upgrade expat "
"copy from 2.2.0 to 2.2.1 to get fixes of multiple security vulnerabilities "
"including: CVE-2017-9233 (External entity infinite loop DoS), CVE-2016-9063 "
"(Integer overflow, re-fix), CVE-2016-0718 (Fix regression bugs from 2.2.0's "
"fix to CVE-2016-0718) and CVE-2012-0876 (Counter hash flooding with "
"SipHash). Note: the CVE-2016-5300 (Use os-specific entropy sources like "
"getrandom) doesn't impact Python, since Python already gets entropy from the "
"OS to set the expat secret using ``XML_SetHashSalt()``."
msgstr ""
"[Security] `bpo-30694 <https://bugs.python.org/issue30694>`__: Upgrade expat "
"copy from 2.2.0 to 2.2.1 to get fixes of multiple security vulnerabilities "
"including: CVE-2017-9233 (External entity infinite loop DoS), CVE-2016-9063 "
"(Integer overflow, re-fix), CVE-2016-0718 (Fix regression bugs from 2.2.0's "
"fix to CVE-2016-0718) and CVE-2012-0876 (Counter hash flooding with "
"SipHash). Note: the CVE-2016-5300 (Use os-specific entropy sources like "
"getrandom) doesn't impact Python, since Python already gets entropy from the "
"OS to set the expat secret using ``XML_SetHashSalt()``."

#: ../../../Misc/NEWS:61
msgid ""
"[Security] `bpo-30500 <https://bugs.python.org/issue30500>`__: Fix urllib."
"parse.splithost() to correctly parse fragments. For example, "
"``splithost('//127.0.0.1#@evil.com/')`` now correctly returns the "
"``127.0.0.1`` host, instead of treating ``@evil.com`` as the host in an "
"authentification (``login@host``)."
msgstr ""
"[Security] `bpo-30500 <https://bugs.python.org/issue30500>`__: Fix urllib."
"parse.splithost() to correctly parse fragments. For example, "
"``splithost('//127.0.0.1#@evil.com/')`` now correctly returns the "
"``127.0.0.1`` host, instead of treating ``@evil.com`` as the host in an "
"authentification (``login@host``)."

#: ../../../Misc/NEWS:68
msgid "Python 3.6.2 release candidate 1"
msgstr "Python 3.6.2 release candidate 1"

#: ../../../Misc/NEWS:70
msgid "*Release date: 2017-06-17*"
msgstr "*Date de sortie : 2017-06-17*"

#: ../../../Misc/NEWS:75
msgid ""
"`bpo-30682 <https://bugs.python.org/issue30682>`__: Removed a too-strict "
"assertion that failed for certain f-strings, such as eval(\"f'\\\\\\n'\") "
"and eval(\"f'\\\\\\r'\")."
msgstr ""
"`bpo-30682 <https://bugs.python.org/issue30682>`__: Removed a too-strict "
"assertion that failed for certain f-strings, such as eval(\"f'\\\\\\n'\") "
"and eval(\"f'\\\\\\r'\")."

#: ../../../Misc/NEWS:78
msgid ""
"`bpo-30604 <https://bugs.python.org/issue30604>`__: Move co_extra_freefuncs "
"to not be per-thread to avoid crashes"
msgstr ""
"`bpo-30604 <https://bugs.python.org/issue30604>`__: Move co_extra_freefuncs "
"to not be per-thread to avoid crashes"

#: ../../../Misc/NEWS:80
msgid ""
"`bpo-29104 <https://bugs.python.org/issue29104>`__: Fixed parsing "
"backslashes in f-strings."
msgstr ""
"`bpo-29104 <https://bugs.python.org/issue29104>`__: Fixed parsing "
"backslashes in f-strings."

#: ../../../Misc/NEWS:82
msgid ""
"`bpo-27945 <https://bugs.python.org/issue27945>`__: Fixed various segfaults "
"with dict when input collections are mutated during searching, inserting or "
"comparing.  Based on patches by Duane Griffin and Tim Mitchell."
msgstr ""
"`bpo-27945 <https://bugs.python.org/issue27945>`__: Fixed various segfaults "
"with dict when input collections are mutated during searching, inserting or "
"comparing.  Based on patches by Duane Griffin and Tim Mitchell."

#: ../../../Misc/NEWS:86
msgid ""
"`bpo-25794 <https://bugs.python.org/issue25794>`__: Fixed type.__setattr__() "
"and type.__delattr__() for non-interned attribute names.  Based on patch by "
"Eryk Sun."
msgstr ""
"`bpo-25794 <https://bugs.python.org/issue25794>`__: Fixed type.__setattr__() "
"and type.__delattr__() for non-interned attribute names.  Based on patch by "
"Eryk Sun."

#: ../../../Misc/NEWS:89
msgid ""
"`bpo-30039 <https://bugs.python.org/issue30039>`__: If a KeyboardInterrupt "
"happens when the interpreter is in the middle of resuming a chain of nested "
"'yield from' or 'await' calls, it's now correctly delivered to the innermost "
"frame."
msgstr ""
"`bpo-30039 <https://bugs.python.org/issue30039>`__: If a KeyboardInterrupt "
"happens when the interpreter is in the middle of resuming a chain of nested "
"'yield from' or 'await' calls, it's now correctly delivered to the innermost "
"frame."

#: ../../../Misc/NEWS:93
msgid ""
"`bpo-12414 <https://bugs.python.org/issue12414>`__: sys.getsizeof() on a "
"code object now returns the sizes which includes the code struct and sizes "
"of objects which it references. Patch by Dong-hee Na."
msgstr ""
"`bpo-12414 <https://bugs.python.org/issue12414>`__: sys.getsizeof() on a "
"code object now returns the sizes which includes the code struct and sizes "
"of objects which it references. Patch by Dong-hee Na."

#: ../../../Misc/NEWS:97
msgid ""
"`bpo-29949 <https://bugs.python.org/issue29949>`__: Fix memory usage "
"regression of set and frozenset object."
msgstr ""
"`bpo-29949 <https://bugs.python.org/issue29949>`__: Fix memory usage "
"regression of set and frozenset object."

#: ../../../Misc/NEWS:99
msgid ""
"`bpo-29935 <https://bugs.python.org/issue29935>`__: Fixed error messages in "
"the index() method of tuple, list and deque when pass indices of wrong type."
msgstr ""
"`bpo-29935 <https://bugs.python.org/issue29935>`__: Fixed error messages in "
"the index() method of tuple, list and deque when pass indices of wrong type."

#: ../../../Misc/NEWS:102
msgid ""
"`bpo-29859 <https://bugs.python.org/issue29859>`__: Show correct error "
"messages when any of the pthread_* calls in thread_pthread.h fails."
msgstr ""
"`bpo-29859 <https://bugs.python.org/issue29859>`__: Show correct error "
"messages when any of the pthread_* calls in thread_pthread.h fails."

#: ../../../Misc/NEWS:105
msgid ""
"`bpo-28876 <https://bugs.python.org/issue28876>`__: ``bool(range)`` works "
"even if ``len(range)`` raises :exc:`OverflowError`."
msgstr ""
"`bpo-28876 <https://bugs.python.org/issue28876>`__: ``bool(range)`` works "
"even if ``len(range)`` raises :exc:`OverflowError`."

#: ../../../Misc/NEWS:108
msgid ""
"`bpo-29600 <https://bugs.python.org/issue29600>`__: Fix wrapping coroutine "
"return values in StopIteration."
msgstr ""
"`bpo-29600 <https://bugs.python.org/issue29600>`__: Fix wrapping coroutine "
"return values in StopIteration."

#: ../../../Misc/NEWS:110
msgid ""
"`bpo-28856 <https://bugs.python.org/issue28856>`__: Fix an oversight that %b "
"format for bytes should support objects follow the buffer protocol."
msgstr ""
"`bpo-28856 <https://bugs.python.org/issue28856>`__: Fix an oversight that %b "
"format for bytes should support objects follow the buffer protocol."

#: ../../../Misc/NEWS:113
msgid ""
"`bpo-29714 <https://bugs.python.org/issue29714>`__: Fix a regression that "
"bytes format may fail when containing zero bytes inside."
msgstr ""
"`bpo-29714 <https://bugs.python.org/issue29714>`__: Fix a regression that "
"bytes format may fail when containing zero bytes inside."

#: ../../../Misc/NEWS:116
msgid ""
"`bpo-29478 <https://bugs.python.org/issue29478>`__: If max_line_length=None "
"is specified while using the Compat32 policy, it is no longer ignored.  "
"Patch by Mircea Cosbuc."
msgstr ""
"`bpo-29478 <https://bugs.python.org/issue29478>`__: If max_line_length=None "
"is specified while using the Compat32 policy, it is no longer ignored.  "
"Patch by Mircea Cosbuc."

#: ../../../Misc/NEWS:122
msgid ""
"`bpo-30616 <https://bugs.python.org/issue30616>`__: Functional API of enum "
"allows to create empty enums. Patched by Dong-hee Na"
msgstr ""
"`bpo-30616 <https://bugs.python.org/issue30616>`__: Functional API of enum "
"allows to create empty enums. Patched by Dong-hee Na"

#: ../../../Misc/NEWS:125
msgid ""
"`bpo-30038 <https://bugs.python.org/issue30038>`__: Fix race condition "
"between signal delivery and wakeup file descriptor.  Patch by Nathaniel "
"Smith."
msgstr ""
"`bpo-30038 <https://bugs.python.org/issue30038>`__: Fix race condition "
"between signal delivery and wakeup file descriptor.  Patch by Nathaniel "
"Smith."

#: ../../../Misc/NEWS:128
msgid ""
"`bpo-23894 <https://bugs.python.org/issue23894>`__: lib2to3 now recognizes "
"``rb'...'`` and ``f'...'`` strings."
msgstr ""
"`bpo-23894 <https://bugs.python.org/issue23894>`__: lib2to3 now recognizes "
"``rb'...'`` and ``f'...'`` strings."

#: ../../../Misc/NEWS:130
msgid ""
"`bpo-23890 <https://bugs.python.org/issue23890>`__: unittest.TestCase."
"assertRaises() now manually breaks a reference cycle to not keep objects "
"alive longer than expected."
msgstr ""
"`bpo-23890 <https://bugs.python.org/issue23890>`__: unittest.TestCase."
"assertRaises() now manually breaks a reference cycle to not keep objects "
"alive longer than expected."

#: ../../../Misc/NEWS:133
msgid ""
"`bpo-30149 <https://bugs.python.org/issue30149>`__: inspect.signature() now "
"supports callables with variable-argument parameters wrapped with "
"partialmethod. Patch by Dong-hee Na."
msgstr ""
"`bpo-30149 <https://bugs.python.org/issue30149>`__: inspect.signature() now "
"supports callables with variable-argument parameters wrapped with "
"partialmethod. Patch by Dong-hee Na."

#: ../../../Misc/NEWS:137
msgid ""
"`bpo-30645 <https://bugs.python.org/issue30645>`__: Fix path calculation in "
"imp.load_package(), fixing it for cases when a package is only shipped with "
"bytecodes. Patch by Alexandru Ardelean."
msgstr ""
"`bpo-30645 <https://bugs.python.org/issue30645>`__: Fix path calculation in "
"imp.load_package(), fixing it for cases when a package is only shipped with "
"bytecodes. Patch by Alexandru Ardelean."

#: ../../../Misc/NEWS:141
msgid ""
"`bpo-29931 <https://bugs.python.org/issue29931>`__: Fixed comparison check "
"for ipaddress.ip_interface objects. Patch by Sanjay Sundaresan."
msgstr ""
"`bpo-29931 <https://bugs.python.org/issue29931>`__: Fixed comparison check "
"for ipaddress.ip_interface objects. Patch by Sanjay Sundaresan."

#: ../../../Misc/NEWS:144
msgid ""
"`bpo-30605 <https://bugs.python.org/issue30605>`__: re.compile() no longer "
"raises a BytesWarning when compiling a bytes instance with misplaced inline "
"modifier.  Patch by Roy Williams."
msgstr ""
"`bpo-30605 <https://bugs.python.org/issue30605>`__: re.compile() no longer "
"raises a BytesWarning when compiling a bytes instance with misplaced inline "
"modifier.  Patch by Roy Williams."

#: ../../../Misc/NEWS:147
msgid ""
"[Security] `bpo-29591 <https://bugs.python.org/issue29591>`__: Update expat "
"copy from 2.1.1 to 2.2.0 to get fixes of CVE-2016-0718 and CVE-2016-4472. "
"See https://sourceforge.net/p/expat/bugs/537/ for more information."
msgstr ""
"[Security] `bpo-29591 <https://bugs.python.org/issue29591>`__: Update expat "
"copy from 2.1.1 to 2.2.0 to get fixes of CVE-2016-0718 and CVE-2016-4472. "
"See https://sourceforge.net/p/expat/bugs/537/ for more information."

#: ../../../Misc/NEWS:151
msgid ""
"`bpo-24484 <https://bugs.python.org/issue24484>`__: Avoid race condition in "
"multiprocessing cleanup (#2159)"
msgstr ""
"`bpo-24484 <https://bugs.python.org/issue24484>`__: Avoid race condition in "
"multiprocessing cleanup (#2159)"

#: ../../../Misc/NEWS:153
msgid ""
"`bpo-28994 <https://bugs.python.org/issue28994>`__: The traceback no longer "
"displayed for SystemExit raised in a callback registered by atexit."
msgstr ""
"`bpo-28994 <https://bugs.python.org/issue28994>`__: The traceback no longer "
"displayed for SystemExit raised in a callback registered by atexit."

#: ../../../Misc/NEWS:156
msgid ""
"`bpo-30508 <https://bugs.python.org/issue30508>`__: Don't log exceptions if "
"Task/Future \"cancel()\" method was called."
msgstr ""
"`bpo-30508 <https://bugs.python.org/issue30508>`__: Don't log exceptions if "
"Task/Future \"cancel()\" method was called."

#: ../../../Misc/NEWS:159
msgid ""
"`bpo-28556 <https://bugs.python.org/issue28556>`__: Updates to typing "
"module: Add generic AsyncContextManager, add support for ContextManager on "
"all versions. Original PRs by Jelle Zijlstra and Ivan Levkivskyi"
msgstr ""
"`bpo-28556 <https://bugs.python.org/issue28556>`__: Updates to typing "
"module: Add generic AsyncContextManager, add support for ContextManager on "
"all versions. Original PRs by Jelle Zijlstra and Ivan Levkivskyi"

#: ../../../Misc/NEWS:163
msgid ""
"`bpo-29870 <https://bugs.python.org/issue29870>`__: Fix ssl sockets leaks "
"when connection is aborted in asyncio/ssl implementation. Patch by Micha√´l "
"Sgha√Øer."
msgstr ""
"`bpo-29870 <https://bugs.python.org/issue29870>`__: Fix ssl sockets leaks "
"when connection is aborted in asyncio/ssl implementation. Patch by Micha√´l "
"Sgha√Øer."

#: ../../../Misc/NEWS:166
msgid ""
"`bpo-29743 <https://bugs.python.org/issue29743>`__: Closing transport during "
"handshake process leaks open socket. Patch by Nikolay Kim"
msgstr ""
"`bpo-29743 <https://bugs.python.org/issue29743>`__: Closing transport during "
"handshake process leaks open socket. Patch by Nikolay Kim"

#: ../../../Misc/NEWS:169
msgid ""
"`bpo-27585 <https://bugs.python.org/issue27585>`__: Fix waiter cancellation "
"in asyncio.Lock. Patch by Mathieu Sornay."
msgstr ""
"`bpo-27585 <https://bugs.python.org/issue27585>`__: Fix waiter cancellation "
"in asyncio.Lock. Patch by Mathieu Sornay."

#: ../../../Misc/NEWS:172
msgid ""
"`bpo-30418 <https://bugs.python.org/issue30418>`__: On Windows, subprocess."
"Popen.communicate() now also ignore EINVAL on stdin.write() if the child "
"process is still running but closed the pipe."
msgstr ""
"`bpo-30418 <https://bugs.python.org/issue30418>`__: On Windows, subprocess."
"Popen.communicate() now also ignore EINVAL on stdin.write() if the child "
"process is still running but closed the pipe."

#: ../../../Misc/NEWS:175
msgid ""
"`bpo-29822 <https://bugs.python.org/issue29822>`__: inspect.isabstract() now "
"works during __init_subclass__.  Patch by Nate Soares."
msgstr ""
"`bpo-29822 <https://bugs.python.org/issue29822>`__: inspect.isabstract() now "
"works during __init_subclass__.  Patch by Nate Soares."

#: ../../../Misc/NEWS:178
msgid ""
"`bpo-29581 <https://bugs.python.org/issue29581>`__: ABCMeta.__new__ now "
"accepts ``**kwargs``, allowing abstract base classes to use keyword "
"parameters in __init_subclass__. Patch by Nate Soares."
msgstr ""
"`bpo-29581 <https://bugs.python.org/issue29581>`__: ABCMeta.__new__ now "
"accepts ``**kwargs``, allowing abstract base classes to use keyword "
"parameters in __init_subclass__. Patch by Nate Soares."

#: ../../../Misc/NEWS:181
msgid ""
"`bpo-30557 <https://bugs.python.org/issue30557>`__: faulthandler now "
"correctly filters and displays exception codes on Windows"
msgstr ""
"`bpo-30557 <https://bugs.python.org/issue30557>`__: faulthandler now "
"correctly filters and displays exception codes on Windows"

#: ../../../Misc/NEWS:184
msgid ""
"`bpo-30378 <https://bugs.python.org/issue30378>`__: Fix the problem that "
"logging.handlers.SysLogHandler cannot handle IPv6 addresses."
msgstr ""
"`bpo-30378 <https://bugs.python.org/issue30378>`__: Fix the problem that "
"logging.handlers.SysLogHandler cannot handle IPv6 addresses."

#: ../../../Misc/NEWS:187
msgid ""
"`bpo-29960 <https://bugs.python.org/issue29960>`__: Preserve generator state "
"when _random.Random.setstate() raises an exception.  Patch by Bryan Olson."
msgstr ""
"`bpo-29960 <https://bugs.python.org/issue29960>`__: Preserve generator state "
"when _random.Random.setstate() raises an exception.  Patch by Bryan Olson."

#: ../../../Misc/NEWS:190
msgid ""
"`bpo-30414 <https://bugs.python.org/issue30414>`__: multiprocessing.Queue."
"_feed background running thread do not break from main loop on exception."
msgstr ""
"`bpo-30414 <https://bugs.python.org/issue30414>`__: multiprocessing.Queue."
"_feed background running thread do not break from main loop on exception."

#: ../../../Misc/NEWS:193
msgid ""
"`bpo-30003 <https://bugs.python.org/issue30003>`__: Fix handling escape "
"characters in HZ codec.  Based on patch by Ma Lin."
msgstr ""
"`bpo-30003 <https://bugs.python.org/issue30003>`__: Fix handling escape "
"characters in HZ codec.  Based on patch by Ma Lin."

#: ../../../Misc/NEWS:196
msgid ""
"`bpo-30301 <https://bugs.python.org/issue30301>`__: Fix AttributeError when "
"using SimpleQueue.empty() under *spawn* and *forkserver* start methods."
msgstr ""
"`bpo-30301 <https://bugs.python.org/issue30301>`__: Fix AttributeError when "
"using SimpleQueue.empty() under *spawn* and *forkserver* start methods."

#: ../../../Misc/NEWS:199
msgid ""
"`bpo-30329 <https://bugs.python.org/issue30329>`__: imaplib and poplib now "
"catch the Windows socket WSAEINVAL error (code 10022) on "
"shutdown(SHUT_RDWR): An invalid operation was attempted. This error occurs "
"sometimes on SSL connections."
msgstr ""
"`bpo-30329 <https://bugs.python.org/issue30329>`__: imaplib and poplib now "
"catch the Windows socket WSAEINVAL error (code 10022) on "
"shutdown(SHUT_RDWR): An invalid operation was attempted. This error occurs "
"sometimes on SSL connections."

#: ../../../Misc/NEWS:203
msgid ""
"`bpo-30375 <https://bugs.python.org/issue30375>`__: Warnings emitted when "
"compile a regular expression now always point to the line in the user code.  "
"Previously they could point into inners of the re module if emitted from "
"inside of groups or conditionals."
msgstr ""
"`bpo-30375 <https://bugs.python.org/issue30375>`__: Warnings emitted when "
"compile a regular expression now always point to the line in the user code.  "
"Previously they could point into inners of the re module if emitted from "
"inside of groups or conditionals."

#: ../../../Misc/NEWS:207
msgid ""
"`bpo-30048 <https://bugs.python.org/issue30048>`__: Fixed ``Task.cancel()`` "
"can be ignored when the task is running coroutine and the coroutine returned "
"without any more ``await``."
msgstr ""
"`bpo-30048 <https://bugs.python.org/issue30048>`__: Fixed ``Task.cancel()`` "
"can be ignored when the task is running coroutine and the coroutine returned "
"without any more ``await``."

#: ../../../Misc/NEWS:210
msgid ""
"`bpo-30266 <https://bugs.python.org/issue30266>`__: contextlib."
"AbstractContextManager now supports anti-registration by setting __enter__ = "
"None or __exit__ = None, following the pattern introduced in `bpo-25958 "
"<https://bugs.python.org/issue25958>`__. Patch by Jelle Zijlstra."
msgstr ""
"`bpo-30266 <https://bugs.python.org/issue30266>`__: contextlib."
"AbstractContextManager now supports anti-registration by setting __enter__ = "
"None or __exit__ = None, following the pattern introduced in `bpo-25958 "
"<https://bugs.python.org/issue25958>`__. Patch by Jelle Zijlstra."

#: ../../../Misc/NEWS:214
msgid ""
"`bpo-30298 <https://bugs.python.org/issue30298>`__: Weaken the condition of "
"deprecation warnings for inline modifiers. Now allowed several subsequential "
"inline modifiers at the start of the pattern (e.g. ``'(?i)(?s)...'``).  In "
"verbose mode whitespaces and comments now are allowed before and between "
"inline modifiers (e.g. ``'(?x) (?i) (?s)...'``)."
msgstr ""
"`bpo-30298 <https://bugs.python.org/issue30298>`__: Weaken the condition of "
"deprecation warnings for inline modifiers. Now allowed several subsequential "
"inline modifiers at the start of the pattern (e.g. ``'(?i)(?s)...'``).  In "
"verbose mode whitespaces and comments now are allowed before and between "
"inline modifiers (e.g. ``'(?x) (?i) (?s)...'``)."

#: ../../../Misc/NEWS:220
msgid ""
"`bpo-29990 <https://bugs.python.org/issue29990>`__: Fix range checking in "
"GB18030 decoder.  Original patch by Ma Lin."
msgstr ""
"`bpo-29990 <https://bugs.python.org/issue29990>`__: Fix range checking in "
"GB18030 decoder.  Original patch by Ma Lin."

#: ../../../Misc/NEWS:222
msgid ""
"Revert `bpo-26293 <https://bugs.python.org/issue26293>`__ for zipfile "
"breakage. See also `bpo-29094 <https://bugs.python.org/issue29094>`__."
msgstr ""
"Revert `bpo-26293 <https://bugs.python.org/issue26293>`__ for zipfile "
"breakage. See also `bpo-29094 <https://bugs.python.org/issue29094>`__."

#: ../../../Misc/NEWS:224
msgid ""
"`bpo-30243 <https://bugs.python.org/issue30243>`__: Removed the __init__ "
"methods of _json's scanner and encoder. Misusing them could cause memory "
"leaks or crashes.  Now scanner and encoder objects are completely "
"initialized in the __new__ methods."
msgstr ""
"`bpo-30243 <https://bugs.python.org/issue30243>`__: Removed the __init__ "
"methods of _json's scanner and encoder. Misusing them could cause memory "
"leaks or crashes.  Now scanner and encoder objects are completely "
"initialized in the __new__ methods."

#: ../../../Misc/NEWS:228
msgid ""
"`bpo-30185 <https://bugs.python.org/issue30185>`__: Avoid KeyboardInterrupt "
"tracebacks in forkserver helper process when Ctrl-C is received."
msgstr ""
"`bpo-30185 <https://bugs.python.org/issue30185>`__: Avoid KeyboardInterrupt "
"tracebacks in forkserver helper process when Ctrl-C is received."

#: ../../../Misc/NEWS:231
msgid ""
"`bpo-28556 <https://bugs.python.org/issue28556>`__: Various updates to "
"typing module: add typing.NoReturn type, use WrapperDescriptorType, minor "
"bug-fixes.  Original PRs by Jim Fasarakis-Hilliard and Ivan Levkivskyi."
msgstr ""
"`bpo-28556 <https://bugs.python.org/issue28556>`__: Various updates to "
"typing module: add typing.NoReturn type, use WrapperDescriptorType, minor "
"bug-fixes.  Original PRs by Jim Fasarakis-Hilliard and Ivan Levkivskyi."

#: ../../../Misc/NEWS:235
msgid ""
"`bpo-30205 <https://bugs.python.org/issue30205>`__: Fix getsockname() for "
"unbound AF_UNIX sockets on Linux."
msgstr ""
"`bpo-30205 <https://bugs.python.org/issue30205>`__: Fix getsockname() for "
"unbound AF_UNIX sockets on Linux."

#: ../../../Misc/NEWS:237
msgid ""
"`bpo-30070 <https://bugs.python.org/issue30070>`__: Fixed leaks and crashes "
"in errors handling in the parser module."
msgstr ""
"`bpo-30070 <https://bugs.python.org/issue30070>`__: Fixed leaks and crashes "
"in errors handling in the parser module."

#: ../../../Misc/NEWS:239
msgid ""
"`bpo-30061 <https://bugs.python.org/issue30061>`__: Fixed crashes in IOBase "
"methods __next__() and readlines() when readline() or __next__() "
"respectively return non-sizeable object. Fixed possible other errors caused "
"by not checking results of PyObject_Size(), PySequence_Size(), or "
"PyMapping_Size()."
msgstr ""
"`bpo-30061 <https://bugs.python.org/issue30061>`__: Fixed crashes in IOBase "
"methods __next__() and readlines() when readline() or __next__() "
"respectively return non-sizeable object. Fixed possible other errors caused "
"by not checking results of PyObject_Size(), PySequence_Size(), or "
"PyMapping_Size()."

#: ../../../Misc/NEWS:244
msgid ""
"`bpo-30017 <https://bugs.python.org/issue30017>`__: Allowed calling the "
"close() method of the zip entry writer object multiple times.  Writing to a "
"closed writer now always produces a ValueError."
msgstr ""
"`bpo-30017 <https://bugs.python.org/issue30017>`__: Allowed calling the "
"close() method of the zip entry writer object multiple times.  Writing to a "
"closed writer now always produces a ValueError."

#: ../../../Misc/NEWS:247
msgid ""
"`bpo-30068 <https://bugs.python.org/issue30068>`__: _io._IOBase.readlines "
"will check if it's closed first when hint is present."
msgstr ""
"`bpo-30068 <https://bugs.python.org/issue30068>`__: _io._IOBase.readlines "
"will check if it's closed first when hint is present."

#: ../../../Misc/NEWS:250
msgid ""
"`bpo-29694 <https://bugs.python.org/issue29694>`__: Fixed race condition in "
"pathlib mkdir with flags parents=True.  Patch by Armin Rigo."
msgstr ""
"`bpo-29694 <https://bugs.python.org/issue29694>`__: Fixed race condition in "
"pathlib mkdir with flags parents=True.  Patch by Armin Rigo."

#: ../../../Misc/NEWS:253
msgid ""
"`bpo-29692 <https://bugs.python.org/issue29692>`__: Fixed arbitrary "
"unchaining of RuntimeError exceptions in contextlib.contextmanager.  Patch "
"by Siddharth Velankar."
msgstr ""
"`bpo-29692 <https://bugs.python.org/issue29692>`__: Fixed arbitrary "
"unchaining of RuntimeError exceptions in contextlib.contextmanager.  Patch "
"by Siddharth Velankar."

#: ../../../Misc/NEWS:256
msgid ""
"`bpo-29998 <https://bugs.python.org/issue29998>`__: Pickling and copying "
"ImportError now preserves name and path attributes."
msgstr ""
"`bpo-29998 <https://bugs.python.org/issue29998>`__: Pickling and copying "
"ImportError now preserves name and path attributes."

#: ../../../Misc/NEWS:259
msgid ""
"`bpo-29953 <https://bugs.python.org/issue29953>`__: Fixed memory leaks in "
"the replace() method of datetime and time objects when pass out of bound "
"fold argument."
msgstr ""
"`bpo-29953 <https://bugs.python.org/issue29953>`__: Fixed memory leaks in "
"the replace() method of datetime and time objects when pass out of bound "
"fold argument."

#: ../../../Misc/NEWS:262
msgid ""
"`bpo-29942 <https://bugs.python.org/issue29942>`__: Fix a crash in itertools."
"chain.from_iterable when encountering long runs of empty iterables."
msgstr ""
"`bpo-29942 <https://bugs.python.org/issue29942>`__: Fix a crash in itertools."
"chain.from_iterable when encountering long runs of empty iterables."

#: ../../../Misc/NEWS:265
msgid ""
"`bpo-27863 <https://bugs.python.org/issue27863>`__: Fixed multiple crashes "
"in ElementTree caused by race conditions and wrong types."
msgstr ""
"`bpo-27863 <https://bugs.python.org/issue27863>`__: Fixed multiple crashes "
"in ElementTree caused by race conditions and wrong types."

#: ../../../Misc/NEWS:268
msgid ""
"`bpo-28699 <https://bugs.python.org/issue28699>`__: Fixed a bug in pools in "
"multiprocessing.pool that raising an exception at the very first of an "
"iterable may swallow the exception or make the program hang. Patch by Davin "
"Potts and Xiang Zhang."
msgstr ""
"`bpo-28699 <https://bugs.python.org/issue28699>`__: Fixed a bug in pools in "
"multiprocessing.pool that raising an exception at the very first of an "
"iterable may swallow the exception or make the program hang. Patch by Davin "
"Potts and Xiang Zhang."

#: ../../../Misc/NEWS:272
msgid ""
"`bpo-25803 <https://bugs.python.org/issue25803>`__: Avoid incorrect errors "
"raised by Path.mkdir(exist_ok=True) when the OS gives priority to errors "
"such as EACCES over EEXIST."
msgstr ""
"`bpo-25803 <https://bugs.python.org/issue25803>`__: Avoid incorrect errors "
"raised by Path.mkdir(exist_ok=True) when the OS gives priority to errors "
"such as EACCES over EEXIST."

#: ../../../Misc/NEWS:275
msgid ""
"`bpo-29861 <https://bugs.python.org/issue29861>`__: Release references to "
"tasks, their arguments and their results as soon as they are finished in "
"multiprocessing.Pool."
msgstr ""
"`bpo-29861 <https://bugs.python.org/issue29861>`__: Release references to "
"tasks, their arguments and their results as soon as they are finished in "
"multiprocessing.Pool."

#: ../../../Misc/NEWS:278
msgid ""
"`bpo-29884 <https://bugs.python.org/issue29884>`__: faulthandler: Restore "
"the old sigaltstack during teardown. Patch by Christophe Zeitouny."
msgstr ""
"`bpo-29884 <https://bugs.python.org/issue29884>`__: faulthandler: Restore "
"the old sigaltstack during teardown. Patch by Christophe Zeitouny."

#: ../../../Misc/NEWS:281
msgid ""
"`bpo-25455 <https://bugs.python.org/issue25455>`__: Fixed crashes in repr of "
"recursive buffered file-like objects."
msgstr ""
"`bpo-25455 <https://bugs.python.org/issue25455>`__: Fixed crashes in repr of "
"recursive buffered file-like objects."

#: ../../../Misc/NEWS:283
msgid ""
"`bpo-29800 <https://bugs.python.org/issue29800>`__: Fix crashes in partial."
"__repr__ if the keys of partial.keywords are not strings.  Patch by Michael "
"Seifert."
msgstr ""
"`bpo-29800 <https://bugs.python.org/issue29800>`__: Fix crashes in partial."
"__repr__ if the keys of partial.keywords are not strings.  Patch by Michael "
"Seifert."

#: ../../../Misc/NEWS:286
msgid ""
"`bpo-29742 <https://bugs.python.org/issue29742>`__: get_extra_info() raises "
"exception if get called on closed ssl transport. Patch by Nikolay Kim."
msgstr ""
"`bpo-29742 <https://bugs.python.org/issue29742>`__: get_extra_info() raises "
"exception if get called on closed ssl transport. Patch by Nikolay Kim."

#: ../../../Misc/NEWS:289
msgid ""
"`bpo-8256 <https://bugs.python.org/issue8256>`__: Fixed possible failing or "
"crashing input() if attributes \"encoding\" or \"errors\" of sys.stdin or "
"sys.stdout are not set or are not strings."
msgstr ""
"`bpo-8256 <https://bugs.python.org/issue8256>`__: Fixed possible failing or "
"crashing input() if attributes \"encoding\" or \"errors\" of sys.stdin or "
"sys.stdout are not set or are not strings."

#: ../../../Misc/NEWS:292
msgid ""
"`bpo-28298 <https://bugs.python.org/issue28298>`__: Fix a bug that prevented "
"array 'Q', 'L' and 'I' from accepting big intables (objects that have "
"__int__) as elements.  Patch by Oren Milman."
msgstr ""
"`bpo-28298 <https://bugs.python.org/issue28298>`__: Fix a bug that prevented "
"array 'Q', 'L' and 'I' from accepting big intables (objects that have "
"__int__) as elements.  Patch by Oren Milman."

#: ../../../Misc/NEWS:295
msgid ""
"`bpo-28231 <https://bugs.python.org/issue28231>`__: The zipfile module now "
"accepts path-like objects for external paths."
msgstr ""
"`bpo-28231 <https://bugs.python.org/issue28231>`__: The zipfile module now "
"accepts path-like objects for external paths."

#: ../../../Misc/NEWS:298
msgid ""
"`bpo-26915 <https://bugs.python.org/issue26915>`__: index() and count() "
"methods of collections.abc.Sequence now check identity before checking "
"equality when do comparisons."
msgstr ""
"`bpo-26915 <https://bugs.python.org/issue26915>`__: index() and count() "
"methods of collections.abc.Sequence now check identity before checking "
"equality when do comparisons."

#: ../../../Misc/NEWS:301
msgid ""
"`bpo-29615 <https://bugs.python.org/issue29615>`__: SimpleXMLRPCDispatcher "
"no longer chains KeyError (or any other exception) to exception(s) raised in "
"the dispatched methods. Patch by Petr Motejlek."
msgstr ""
"`bpo-29615 <https://bugs.python.org/issue29615>`__: SimpleXMLRPCDispatcher "
"no longer chains KeyError (or any other exception) to exception(s) raised in "
"the dispatched methods. Patch by Petr Motejlek."

#: ../../../Misc/NEWS:305
msgid ""
"`bpo-30177 <https://bugs.python.org/issue30177>`__: path."
"resolve(strict=False) no longer cuts the path after the first element not "
"present in the filesystem.  Patch by Antoine Pietri."
msgstr ""
"`bpo-30177 <https://bugs.python.org/issue30177>`__: path."
"resolve(strict=False) no longer cuts the path after the first element not "
"present in the filesystem.  Patch by Antoine Pietri."

#: ../../../Misc/NEWS:309 ../../../Misc/NEWS:640 ../../../Misc/NEWS:1761
#: ../../../Misc/NEWS:2033 ../../../Misc/NEWS:2232 ../../../Misc/NEWS:2491
#: ../../../Misc/NEWS:3617 ../../../Misc/NEWS:4444 ../../../Misc/NEWS:4612
#: ../../../Misc/NEWS:5155 ../../../Misc/NEWS:5672 ../../../Misc/NEWS:6006
#: ../../../Misc/NEWS:6513 ../../../Misc/NEWS:8530
msgid "IDLE"
msgstr "IDLE"

#: ../../../Misc/NEWS:311
msgid ""
"`bpo-15786 <https://bugs.python.org/issue15786>`__: Fix several problems "
"with IDLE's autocompletion box. The following should now work: clicking on "
"selection box items; using the scrollbar; selecting an item by hitting "
"Return. Hangs on MacOSX should no longer happen. Patch by Louie Lu."
msgstr ""
"`bpo-15786 <https://bugs.python.org/issue15786>`__: Fix several problems "
"with IDLE's autocompletion box. The following should now work: clicking on "
"selection box items; using the scrollbar; selecting an item by hitting "
"Return. Hangs on MacOSX should no longer happen. Patch by Louie Lu."

#: ../../../Misc/NEWS:316
msgid ""
"`bpo-25514 <https://bugs.python.org/issue25514>`__: Add doc subsubsection "
"about IDLE failure to start. Popup no-connection message directs users to "
"this section."
msgstr ""
"`bpo-25514 <https://bugs.python.org/issue25514>`__: Add doc subsubsection "
"about IDLE failure to start. Popup no-connection message directs users to "
"this section."

#: ../../../Misc/NEWS:319
msgid ""
"`bpo-30642 <https://bugs.python.org/issue30642>`__: Fix reference leaks in "
"IDLE tests. Patches by Louie Lu and Terry Jan Reedy."
msgstr ""
"`bpo-30642 <https://bugs.python.org/issue30642>`__: Fix reference leaks in "
"IDLE tests. Patches by Louie Lu and Terry Jan Reedy."

#: ../../../Misc/NEWS:322
msgid ""
"`bpo-30495 <https://bugs.python.org/issue30495>`__: Add docstrings for "
"textview.py and use PEP8 names. Patches by Cheryl Sabella and Terry Jan "
"Reedy."
msgstr ""
"`bpo-30495 <https://bugs.python.org/issue30495>`__: Add docstrings for "
"textview.py and use PEP8 names. Patches by Cheryl Sabella and Terry Jan "
"Reedy."

#: ../../../Misc/NEWS:325
msgid ""
"`bpo-30290 <https://bugs.python.org/issue30290>`__: Help-about: use pep8 "
"names and add tests. Increase coverage to 100%. Patches by Louie Lu, Cheryl "
"Sabella, and Terry Jan Reedy."
msgstr ""
"`bpo-30290 <https://bugs.python.org/issue30290>`__: Help-about: use pep8 "
"names and add tests. Increase coverage to 100%. Patches by Louie Lu, Cheryl "
"Sabella, and Terry Jan Reedy."

#: ../../../Misc/NEWS:329
msgid ""
"`bpo-30303 <https://bugs.python.org/issue30303>`__: Add _utest option to "
"textview; add new tests. Increase coverage to 100%. Patches by Louie Lu and "
"Terry Jan Reedy."
msgstr ""
"`bpo-30303 <https://bugs.python.org/issue30303>`__: Add _utest option to "
"textview; add new tests. Increase coverage to 100%. Patches by Louie Lu and "
"Terry Jan Reedy."

#: ../../../Misc/NEWS:334 ../../../Misc/NEWS:665 ../../../Misc/NEWS:831
#: ../../../Misc/NEWS:1340 ../../../Misc/NEWS:1781 ../../../Misc/NEWS:2267
#: ../../../Misc/NEWS:2603 ../../../Misc/NEWS:3891 ../../../Misc/NEWS:4472
#: ../../../Misc/NEWS:6777 ../../../Misc/NEWS:7093 ../../../Misc/NEWS:8689
msgid "C API"
msgstr "API C"

#: ../../../Misc/NEWS:336
msgid ""
"`bpo-27867 <https://bugs.python.org/issue27867>`__: Function "
"PySlice_GetIndicesEx() no longer replaced with a macro if Py_LIMITED_API is "
"not set."
msgstr ""
"`bpo-27867 <https://bugs.python.org/issue27867>`__: Function "
"PySlice_GetIndicesEx() no longer replaced with a macro if Py_LIMITED_API is "
"not set."

#: ../../../Misc/NEWS:341 ../../../Misc/NEWS:425 ../../../Misc/NEWS:716
#: ../../../Misc/NEWS:781 ../../../Misc/NEWS:953 ../../../Misc/NEWS:1074
#: ../../../Misc/NEWS:1347 ../../../Misc/NEWS:1803 ../../../Misc/NEWS:2089
#: ../../../Misc/NEWS:2273 ../../../Misc/NEWS:2588 ../../../Misc/NEWS:3788
#: ../../../Misc/NEWS:4532 ../../../Misc/NEWS:5254 ../../../Misc/NEWS:5807
#: ../../../Misc/NEWS:5867 ../../../Misc/NEWS:5884 ../../../Misc/NEWS:6125
#: ../../../Misc/NEWS:6230 ../../../Misc/NEWS:6737 ../../../Misc/NEWS:6949
#: ../../../Misc/NEWS:7085 ../../../Misc/NEWS:8609
msgid "Build"
msgstr "Build"

#: ../../../Misc/NEWS:343
msgid ""
"`bpo-29941 <https://bugs.python.org/issue29941>`__: Add ``--with-"
"assertions`` configure flag to explicitly enable C ``assert()`` checks. "
"Defaults to off. ``--with-pydebug`` implies ``--with-assertions``."
msgstr ""
"`bpo-29941 <https://bugs.python.org/issue29941>`__: Add ``--with-"
"assertions`` configure flag to explicitly enable C ``assert()`` checks. "
"Defaults to off. ``--with-pydebug`` implies ``--with-assertions``."

#: ../../../Misc/NEWS:347
msgid ""
"`bpo-28787 <https://bugs.python.org/issue28787>`__: Fix out-of-tree builds "
"of Python when configured with ``--with--dtrace``."
msgstr ""
"`bpo-28787 <https://bugs.python.org/issue28787>`__: Fix out-of-tree builds "
"of Python when configured with ``--with--dtrace``."

#: ../../../Misc/NEWS:350
msgid ""
"`bpo-29243 <https://bugs.python.org/issue29243>`__: Prevent unnecessary "
"rebuilding of Python during ``make test``, ``make install`` and some other "
"make targets when configured with ``--enable-optimizations``."
msgstr ""
"`bpo-29243 <https://bugs.python.org/issue29243>`__: Prevent unnecessary "
"rebuilding of Python during ``make test``, ``make install`` and some other "
"make targets when configured with ``--enable-optimizations``."

#: ../../../Misc/NEWS:354
msgid ""
"`bpo-23404 <https://bugs.python.org/issue23404>`__: Don't regenerate "
"generated files based on file modification time anymore: the action is now "
"explicit. Replace ``make touch`` with ``make regen-all``."
msgstr ""
"`bpo-23404 <https://bugs.python.org/issue23404>`__: Don't regenerate "
"generated files based on file modification time anymore: the action is now "
"explicit. Replace ``make touch`` with ``make regen-all``."

#: ../../../Misc/NEWS:358
msgid ""
"`bpo-29643 <https://bugs.python.org/issue29643>`__: Fix ``--enable-"
"optimization`` didn't work."
msgstr ""
"`bpo-29643 <https://bugs.python.org/issue29643>`__: Fix ``--enable-"
"optimization`` didn't work."

#: ../../../Misc/NEWS:361 ../../../Misc/NEWS:682 ../../../Misc/NEWS:836
#: ../../../Misc/NEWS:940 ../../../Misc/NEWS:2304 ../../../Misc/NEWS:2559
#: ../../../Misc/NEWS:3727 ../../../Misc/NEWS:4480 ../../../Misc/NEWS:5208
#: ../../../Misc/NEWS:5769 ../../../Misc/NEWS:6022 ../../../Misc/NEWS:6221
#: ../../../Misc/NEWS:6528 ../../../Misc/NEWS:8718
msgid "Documentation"
msgstr "Documentation"

#: ../../../Misc/NEWS:363
msgid ""
"`bpo-30176 <https://bugs.python.org/issue30176>`__: Add missing attribute "
"related constants in curses documentation."
msgstr ""
"`bpo-30176 <https://bugs.python.org/issue30176>`__: Add missing attribute "
"related constants in curses documentation."

#: ../../../Misc/NEWS:365
msgid ""
"`bpo-30052 <https://bugs.python.org/issue30052>`__: the link targets for :"
"func:`bytes` and :func:`bytearray` are now their respective type "
"definitions, rather than the corresponding builtin function entries. Use :"
"ref:`bytes <func-bytes>` and :ref:`bytearray <func-bytearray>` to reference "
"the latter."
msgstr ""
"`bpo-30052 <https://bugs.python.org/issue30052>`__: the link targets for :"
"func:`bytes` and :func:`bytearray` are now their respective type "
"definitions, rather than the corresponding builtin function entries. Use :"
"ref:`bytes <func-bytes>` and :ref:`bytearray <func-bytearray>` to reference "
"the latter."

#: ../../../Misc/NEWS:370
msgid ""
"In order to ensure this and future cross-reference updates are applied "
"automatically, the daily documentation builds now disable the default output "
"caching features in Sphinx."
msgstr ""
"Pour s'assurer que les mises √† jour des r√©f√©rences crois√©es soient "
"appliqu√©es automatiquement, la g√©n√©ration de documentations d√©sactive le "
"cache par d√©faut de sphinx."

#: ../../../Misc/NEWS:374
msgid ""
"`bpo-26985 <https://bugs.python.org/issue26985>`__: Add missing info of code "
"object in inspect documentation."
msgstr ""
"`bpo-26985 <https://bugs.python.org/issue26985>`__: Add missing info of code "
"object in inspect documentation."

#: ../../../Misc/NEWS:377 ../../../Misc/NEWS:771 ../../../Misc/NEWS:843
#: ../../../Misc/NEWS:1838 ../../../Misc/NEWS:2296 ../../../Misc/NEWS:2611
#: ../../../Misc/NEWS:3870 ../../../Misc/NEWS:4504 ../../../Misc/NEWS:5330
#: ../../../Misc/NEWS:5856 ../../../Misc/NEWS:6538 ../../../Misc/NEWS:6754
#: ../../../Misc/NEWS:6961 ../../../Misc/NEWS:8864
msgid "Tools/Demos"
msgstr "Outils / D√©mos"

#: ../../../Misc/NEWS:379
msgid ""
"`bpo-29367 <https://bugs.python.org/issue29367>`__: python-gdb.py now "
"supports also ``method-wrapper`` (``wrapperobject``) objects."
msgstr ""
"`bpo-29367 <https://bugs.python.org/issue29367>`__: python-gdb.py now "
"supports also ``method-wrapper`` (``wrapperobject``) objects."

#: ../../../Misc/NEWS:383 ../../../Misc/NEWS:695 ../../../Misc/NEWS:945
#: ../../../Misc/NEWS:1083 ../../../Misc/NEWS:1358 ../../../Misc/NEWS:1789
#: ../../../Misc/NEWS:2062 ../../../Misc/NEWS:2313 ../../../Misc/NEWS:2571
#: ../../../Misc/NEWS:3745 ../../../Misc/NEWS:4485 ../../../Misc/NEWS:4607
#: ../../../Misc/NEWS:5231 ../../../Misc/NEWS:5794 ../../../Misc/NEWS:6037
#: ../../../Misc/NEWS:6214 ../../../Misc/NEWS:6519 ../../../Misc/NEWS:6745
#: ../../../Misc/NEWS:6954 ../../../Misc/NEWS:8758
msgid "Tests"
msgstr "Tests"

#: ../../../Misc/NEWS:385
msgid ""
"`bpo-30357 <https://bugs.python.org/issue30357>`__: test_thread: setUp() now "
"uses support.threading_setup() and support.threading_cleanup() to wait until "
"threads complete to avoid random side effects on following tests. Initial "
"patch written by Grzegorz Grzywacz."
msgstr ""
"`bpo-30357 <https://bugs.python.org/issue30357>`__: test_thread: setUp() now "
"uses support.threading_setup() and support.threading_cleanup() to wait until "
"threads complete to avoid random side effects on following tests. Initial "
"patch written by Grzegorz Grzywacz."

#: ../../../Misc/NEWS:390
msgid ""
"`bpo-30197 <https://bugs.python.org/issue30197>`__: Enhanced functions "
"swap_attr() and swap_item() in the test.support module.  They now work when "
"delete replaced attribute or item inside the with statement.  The old value "
"of the attribute or item (or None if it doesn't exist) now will be assigned "
"to the target of the \"as\" clause, if there is one."
msgstr ""
"`bpo-30197 <https://bugs.python.org/issue30197>`__: Enhanced functions "
"swap_attr() and swap_item() in the test.support module.  They now work when "
"delete replaced attribute or item inside the with statement.  The old value "
"of the attribute or item (or None if it doesn't exist) now will be assigned "
"to the target of the \"as\" clause, if there is one."

#: ../../../Misc/NEWS:397 ../../../Misc/NEWS:648 ../../../Misc/NEWS:776
#: ../../../Misc/NEWS:1069 ../../../Misc/NEWS:1313 ../../../Misc/NEWS:1845
#: ../../../Misc/NEWS:2077 ../../../Misc/NEWS:2581 ../../../Misc/NEWS:3851
#: ../../../Misc/NEWS:4516 ../../../Misc/NEWS:5313 ../../../Misc/NEWS:5364
#: ../../../Misc/NEWS:5818 ../../../Misc/NEWS:7099 ../../../Misc/NEWS:8904
msgid "Windows"
msgstr "Windows"

#: ../../../Misc/NEWS:399
msgid ""
"`bpo-30687 <https://bugs.python.org/issue30687>`__: Locate msbuild.exe on "
"Windows when building rather than vcvarsall.bat"
msgstr ""
"`bpo-30687 <https://bugs.python.org/issue30687>`__: Locate msbuild.exe on "
"Windows when building rather than vcvarsall.bat"

#: ../../../Misc/NEWS:402
msgid ""
"`bpo-30450 <https://bugs.python.org/issue30450>`__: The build process on "
"Windows no longer depends on Subversion, instead pulling external code from "
"GitHub via a Python script.  If Python 3.6 is not found on the system (via "
"``py -3.6``), NuGet is used to download a copy of 32-bit Python."
msgstr ""
"`bpo-30450 <https://bugs.python.org/issue30450>`__: The build process on "
"Windows no longer depends on Subversion, instead pulling external code from "
"GitHub via a Python script.  If Python 3.6 is not found on the system (via "
"``py -3.6``), NuGet is used to download a copy of 32-bit Python."

#: ../../../Misc/NEWS:409
msgid "Python 3.6.1"
msgstr "Python 3.6.1"

#: ../../../Misc/NEWS:411
msgid "*Release date: 2017-03-21*"
msgstr "*Release date: 2017-03-21*"

#: ../../../Misc/NEWS:416
msgid ""
"`bpo-29723 <https://bugs.python.org/issue29723>`__: The ``sys.path[0]`` "
"initialization change for `bpo-29139 <https://bugs.python.org/issue29139>`__ "
"caused a regression by revealing an inconsistency in how sys.path is "
"initialized when executing ``__main__`` from a zipfile, directory, or other "
"import location. The interpreter now consistently avoids ever adding the "
"import location's parent directory to ``sys.path``, and ensures no other "
"``sys.path`` entries are inadvertently modified when inserting the import "
"location named on the command line."
msgstr ""
"`bpo-29723 <https://bugs.python.org/issue29723>`__: The ``sys.path[0]`` "
"initialization change for `bpo-29139 <https://bugs.python.org/issue29139>`__ "
"caused a regression by revealing an inconsistency in how sys.path is "
"initialized when executing ``__main__`` from a zipfile, directory, or other "
"import location. The interpreter now consistently avoids ever adding the "
"import location's parent directory to ``sys.path``, and ensures no other "
"``sys.path`` entries are inadvertently modified when inserting the import "
"location named on the command line."

#: ../../../Misc/NEWS:427
msgid ""
"`bpo-27593 <https://bugs.python.org/issue27593>`__: fix format of git "
"information used in sys.version"
msgstr ""
"`bpo-27593 <https://bugs.python.org/issue27593>`__: fix format of git "
"information used in sys.version"

#: ../../../Misc/NEWS:429
msgid "Fix incompatible comment in python.h"
msgstr "Correction d'un commentaire incompatible dans python.h"

#: ../../../Misc/NEWS:433
msgid "Python 3.6.1 release candidate 1"
msgstr "Python 3.6.1 release candidate 1"

#: ../../../Misc/NEWS:435
msgid "*Release date: 2017-03-04*"
msgstr "*Date de sortie : 2017-03-04*"

#: ../../../Misc/NEWS:440
msgid ""
"`bpo-28893 <https://bugs.python.org/issue28893>`__: Set correct __cause__ "
"for errors about invalid awaitables returned from __aiter__ and __anext__."
msgstr ""
"`bpo-28893 <https://bugs.python.org/issue28893>`__: Set correct __cause__ "
"for errors about invalid awaitables returned from __aiter__ and __anext__."

#: ../../../Misc/NEWS:443
msgid ""
"`bpo-29683 <https://bugs.python.org/issue29683>`__: Fixes to memory "
"allocation in _PyCode_SetExtra.  Patch by Brian Coleman."
msgstr ""
"`bpo-29683 <https://bugs.python.org/issue29683>`__: Fixes to memory "
"allocation in _PyCode_SetExtra.  Patch by Brian Coleman."

#: ../../../Misc/NEWS:446
msgid ""
"`bpo-29684 <https://bugs.python.org/issue29684>`__: Fix minor regression of "
"PyEval_CallObjectWithKeywords. It should raise TypeError when kwargs is not "
"a dict.  But it might cause segv when args=NULL and kwargs is not a dict."
msgstr ""
"`bpo-29684 <https://bugs.python.org/issue29684>`__: Fix minor regression of "
"PyEval_CallObjectWithKeywords. It should raise TypeError when kwargs is not "
"a dict.  But it might cause segv when args=NULL and kwargs is not a dict."

#: ../../../Misc/NEWS:450
msgid ""
"`bpo-28598 <https://bugs.python.org/issue28598>`__: Support __rmod__ for "
"subclasses of str being called before str.__mod__.  Patch by Martijn Pieters."
msgstr ""
"`bpo-28598 <https://bugs.python.org/issue28598>`__: Support __rmod__ for "
"subclasses of str being called before str.__mod__.  Patch by Martijn Pieters."

#: ../../../Misc/NEWS:453
msgid ""
"`bpo-29607 <https://bugs.python.org/issue29607>`__: Fix stack_effect "
"computation for CALL_FUNCTION_EX. Patch by Matthieu Dartiailh."
msgstr ""
"`bpo-29607 <https://bugs.python.org/issue29607>`__: Fix stack_effect "
"computation for CALL_FUNCTION_EX. Patch by Matthieu Dartiailh."

#: ../../../Misc/NEWS:456
msgid ""
"`bpo-29602 <https://bugs.python.org/issue29602>`__: Fix incorrect handling "
"of signed zeros in complex constructor for complex subclasses and for inputs "
"having a __complex__ method. Patch by Serhiy Storchaka."
msgstr ""
"`bpo-29602 <https://bugs.python.org/issue29602>`__: Fix incorrect handling "
"of signed zeros in complex constructor for complex subclasses and for inputs "
"having a __complex__ method. Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:460
msgid ""
"`bpo-29347 <https://bugs.python.org/issue29347>`__: Fixed possibly "
"dereferencing undefined pointers when creating weakref objects."
msgstr ""
"`bpo-29347 <https://bugs.python.org/issue29347>`__: Fixed possibly "
"dereferencing undefined pointers when creating weakref objects."

#: ../../../Misc/NEWS:463
msgid ""
"`bpo-29438 <https://bugs.python.org/issue29438>`__: Fixed use-after-free "
"problem in key sharing dict."
msgstr ""
"`bpo-29438 <https://bugs.python.org/issue29438>`__: Fixed use-after-free "
"problem in key sharing dict."

#: ../../../Misc/NEWS:465
msgid ""
"`bpo-29319 <https://bugs.python.org/issue29319>`__: Prevent "
"RunMainFromImporter overwriting sys.path[0]."
msgstr ""
"`bpo-29319 <https://bugs.python.org/issue29319>`__: Prevent "
"RunMainFromImporter overwriting sys.path[0]."

#: ../../../Misc/NEWS:467
msgid ""
"`bpo-29337 <https://bugs.python.org/issue29337>`__: Fixed possible "
"BytesWarning when compare the code objects. Warnings could be emitted at "
"compile time."
msgstr ""
"`bpo-29337 <https://bugs.python.org/issue29337>`__: Fixed possible "
"BytesWarning when compare the code objects. Warnings could be emitted at "
"compile time."

#: ../../../Misc/NEWS:470
msgid ""
"`bpo-29327 <https://bugs.python.org/issue29327>`__: Fixed a crash when pass "
"the iterable keyword argument to sorted()."
msgstr ""
"`bpo-29327 <https://bugs.python.org/issue29327>`__: Fixed a crash when pass "
"the iterable keyword argument to sorted()."

#: ../../../Misc/NEWS:473
msgid ""
"`bpo-29034 <https://bugs.python.org/issue29034>`__: Fix memory leak and use-"
"after-free in os module (path_converter)."
msgstr ""
"`bpo-29034 <https://bugs.python.org/issue29034>`__: Fix memory leak and use-"
"after-free in os module (path_converter)."

#: ../../../Misc/NEWS:475
msgid ""
"`bpo-29159 <https://bugs.python.org/issue29159>`__: Fix regression in "
"bytes(x) when x.__index__() raises Exception."
msgstr ""
"`bpo-29159 <https://bugs.python.org/issue29159>`__: Fix regression in "
"bytes(x) when x.__index__() raises Exception."

#: ../../../Misc/NEWS:477 ../../../Misc/NEWS:3920
msgid ""
"`bpo-28932 <https://bugs.python.org/issue28932>`__: Do not include <sys/"
"random.h> if it does not exist."
msgstr ""
"`bpo-28932 <https://bugs.python.org/issue28932>`__: Do not include <sys/"
"random.h> if it does not exist."

#: ../../../Misc/NEWS:479 ../../../Misc/NEWS:3925
msgid ""
"`bpo-25677 <https://bugs.python.org/issue25677>`__: Correct the positioning "
"of the syntax error caret for indented blocks.  Based on patch by Michael "
"Layzell."
msgstr ""
"`bpo-25677 <https://bugs.python.org/issue25677>`__: Correct the positioning "
"of the syntax error caret for indented blocks.  Based on patch by Michael "
"Layzell."

#: ../../../Misc/NEWS:482 ../../../Misc/NEWS:3928
msgid ""
"`bpo-29000 <https://bugs.python.org/issue29000>`__: Fixed bytes formatting "
"of octals with zero padding in alternate form."
msgstr ""
"`bpo-29000 <https://bugs.python.org/issue29000>`__: Fixed bytes formatting "
"of octals with zero padding in alternate form."

#: ../../../Misc/NEWS:485
msgid ""
"`bpo-26919 <https://bugs.python.org/issue26919>`__: On Android, operating "
"system data is now always encoded/decoded to/from UTF-8, instead of the "
"locale encoding to avoid inconsistencies with os.fsencode() and os."
"fsdecode() which are already using UTF-8."
msgstr ""
"`bpo-26919 <https://bugs.python.org/issue26919>`__: On Android, operating "
"system data is now always encoded/decoded to/from UTF-8, instead of the "
"locale encoding to avoid inconsistencies with os.fsencode() and os."
"fsdecode() which are already using UTF-8."

#: ../../../Misc/NEWS:489
msgid ""
"`bpo-28991 <https://bugs.python.org/issue28991>`__:  functools.lru_cache() "
"was susceptible to an obscure reentrancy bug triggerable by a monkey-patched "
"len() function."
msgstr ""
"`bpo-28991 <https://bugs.python.org/issue28991>`__:  functools.lru_cache() "
"was susceptible to an obscure reentrancy bug triggerable by a monkey-patched "
"len() function."

#: ../../../Misc/NEWS:492
msgid ""
"`bpo-28739 <https://bugs.python.org/issue28739>`__: f-string expressions are "
"no longer accepted as docstrings and by ast.literal_eval() even if they do "
"not include expressions."
msgstr ""
"`bpo-28739 <https://bugs.python.org/issue28739>`__: f-string expressions are "
"no longer accepted as docstrings and by ast.literal_eval() even if they do "
"not include expressions."

#: ../../../Misc/NEWS:495 ../../../Misc/NEWS:3931
msgid ""
"`bpo-28512 <https://bugs.python.org/issue28512>`__: Fixed setting the offset "
"attribute of SyntaxError by PyErr_SyntaxLocationEx() and "
"PyErr_SyntaxLocationObject()."
msgstr ""
"`bpo-28512 <https://bugs.python.org/issue28512>`__: Fixed setting the offset "
"attribute of SyntaxError by PyErr_SyntaxLocationEx() and "
"PyErr_SyntaxLocationObject()."

#: ../../../Misc/NEWS:498
msgid ""
"`bpo-28918 <https://bugs.python.org/issue28918>`__: Fix the cross "
"compilation of xxlimited when Python has been built with Py_DEBUG defined."
msgstr ""
"`bpo-28918 <https://bugs.python.org/issue28918>`__: Fix the cross "
"compilation of xxlimited when Python has been built with Py_DEBUG defined."

#: ../../../Misc/NEWS:501
msgid ""
"`bpo-28731 <https://bugs.python.org/issue28731>`__: Optimize "
"_PyDict_NewPresized() to create correct size dict. Improve speed of dict "
"literal with constant keys up to 30%."
msgstr ""
"`bpo-28731 <https://bugs.python.org/issue28731>`__: Optimize "
"_PyDict_NewPresized() to create correct size dict. Improve speed of dict "
"literal with constant keys up to 30%."

#: ../../../Misc/NEWS:505
msgid "Extension Modules"
msgstr ""

#: ../../../Misc/NEWS:507
msgid ""
"`bpo-29169 <https://bugs.python.org/issue29169>`__: Update zlib to 1.2.11."
msgstr ""
"`bpo-29169 <https://bugs.python.org/issue29169>`__: Update zlib to 1.2.11."

#: ../../../Misc/NEWS:512
msgid ""
"`bpo-29623 <https://bugs.python.org/issue29623>`__: Allow use of path-like "
"object as a single argument in ConfigParser.read().  Patch by David Ellis."
msgstr ""
"`bpo-29623 <https://bugs.python.org/issue29623>`__: Allow use of path-like "
"object as a single argument in ConfigParser.read().  Patch by David Ellis."

#: ../../../Misc/NEWS:515
msgid ""
"`bpo-28963 <https://bugs.python.org/issue28963>`__: Fix out of bound "
"iteration in asyncio.Future.remove_done_callback implemented in C."
msgstr ""
"`bpo-28963 <https://bugs.python.org/issue28963>`__: Fix out of bound "
"iteration in asyncio.Future.remove_done_callback implemented in C."

#: ../../../Misc/NEWS:518
msgid ""
"`bpo-29704 <https://bugs.python.org/issue29704>`__: asyncio.subprocess."
"SubprocessStreamProtocol no longer closes before all pipes are closed."
msgstr ""
"`bpo-29704 <https://bugs.python.org/issue29704>`__: asyncio.subprocess."
"SubprocessStreamProtocol no longer closes before all pipes are closed."

#: ../../../Misc/NEWS:521
msgid ""
"`bpo-29271 <https://bugs.python.org/issue29271>`__: Fix Task.current_task "
"and Task.all_tasks implemented in C to accept None argument as their pure "
"Python implementation."
msgstr ""
"`bpo-29271 <https://bugs.python.org/issue29271>`__: Fix Task.current_task "
"and Task.all_tasks implemented in C to accept None argument as their pure "
"Python implementation."

#: ../../../Misc/NEWS:524
msgid ""
"`bpo-29703 <https://bugs.python.org/issue29703>`__: Fix asyncio to support "
"instantiation of new event loops in child processes."
msgstr ""
"`bpo-29703 <https://bugs.python.org/issue29703>`__: Fix asyncio to support "
"instantiation of new event loops in child processes."

#: ../../../Misc/NEWS:527
msgid ""
"`bpo-29376 <https://bugs.python.org/issue29376>`__: Fix assertion error in "
"threading._DummyThread.is_alive()."
msgstr ""
"`bpo-29376 <https://bugs.python.org/issue29376>`__: Fix assertion error in "
"threading._DummyThread.is_alive()."

#: ../../../Misc/NEWS:529
msgid ""
"`bpo-28624 <https://bugs.python.org/issue28624>`__: Add a test that checks "
"that cwd parameter of Popen() accepts PathLike objects.  Patch by Sayan "
"Chowdhury."
msgstr ""
"`bpo-28624 <https://bugs.python.org/issue28624>`__: Add a test that checks "
"that cwd parameter of Popen() accepts PathLike objects.  Patch by Sayan "
"Chowdhury."

#: ../../../Misc/NEWS:532
msgid ""
"`bpo-28518 <https://bugs.python.org/issue28518>`__: Start a transaction "
"implicitly before a DML statement. Patch by Aviv Palivoda."
msgstr ""
"`bpo-28518 <https://bugs.python.org/issue28518>`__: Start a transaction "
"implicitly before a DML statement. Patch by Aviv Palivoda."

#: ../../../Misc/NEWS:535
msgid ""
"`bpo-29532 <https://bugs.python.org/issue29532>`__: Altering a kwarg "
"dictionary passed to functools.partial() no longer affects a partial object "
"after creation."
msgstr ""
"`bpo-29532 <https://bugs.python.org/issue29532>`__: Altering a kwarg "
"dictionary passed to functools.partial() no longer affects a partial object "
"after creation."

#: ../../../Misc/NEWS:538
msgid ""
"`bpo-29110 <https://bugs.python.org/issue29110>`__: Fix file object leak in "
"aifc.open() when file is given as a filesystem path and is not in valid AIFF "
"format. Patch by Anthony Zhang."
msgstr ""
"`bpo-29110 <https://bugs.python.org/issue29110>`__: Fix file object leak in "
"aifc.open() when file is given as a filesystem path and is not in valid AIFF "
"format. Patch by Anthony Zhang."

#: ../../../Misc/NEWS:541
msgid ""
"`bpo-28556 <https://bugs.python.org/issue28556>`__: Various updates to "
"typing module: typing.Counter, typing.ChainMap, improved ABC caching, etc. "
"Original PRs by Jelle Zijlstra, Ivan Levkivskyi, Manuel Krebber, and ≈Åukasz "
"Langa."
msgstr ""
"`bpo-28556 <https://bugs.python.org/issue28556>`__: Various updates to "
"typing module: typing.Counter, typing.ChainMap, improved ABC caching, etc. "
"Original PRs by Jelle Zijlstra, Ivan Levkivskyi, Manuel Krebber, and ≈Åukasz "
"Langa."

#: ../../../Misc/NEWS:545
msgid ""
"`bpo-29100 <https://bugs.python.org/issue29100>`__: Fix datetime."
"fromtimestamp() regression introduced in Python 3.6.0: check minimum and "
"maximum years."
msgstr ""
"`bpo-29100 <https://bugs.python.org/issue29100>`__: Fix datetime."
"fromtimestamp() regression introduced in Python 3.6.0: check minimum and "
"maximum years."

#: ../../../Misc/NEWS:548
msgid ""
"`bpo-29519 <https://bugs.python.org/issue29519>`__: Fix weakref spewing "
"exceptions during interpreter shutdown when used with a rare combination of "
"multiprocessing and custom codecs."
msgstr ""
"`bpo-29519 <https://bugs.python.org/issue29519>`__: Fix weakref spewing "
"exceptions during interpreter shutdown when used with a rare combination of "
"multiprocessing and custom codecs."

#: ../../../Misc/NEWS:551
msgid ""
"`bpo-29416 <https://bugs.python.org/issue29416>`__: Prevent infinite loop in "
"pathlib.Path.mkdir"
msgstr ""
"`bpo-29416 <https://bugs.python.org/issue29416>`__: Prevent infinite loop in "
"pathlib.Path.mkdir"

#: ../../../Misc/NEWS:553
msgid ""
"`bpo-29444 <https://bugs.python.org/issue29444>`__: Fixed out-of-bounds "
"buffer access in the group() method of the match object.  Based on patch by "
"WGH."
msgstr ""
"`bpo-29444 <https://bugs.python.org/issue29444>`__: Fixed out-of-bounds "
"buffer access in the group() method of the match object.  Based on patch by "
"WGH."

#: ../../../Misc/NEWS:556
msgid ""
"`bpo-29335 <https://bugs.python.org/issue29335>`__: Fix subprocess.Popen."
"wait() when the child process has exited to a stopped instead of terminated "
"state (ex: when under ptrace)."
msgstr ""
"`bpo-29335 <https://bugs.python.org/issue29335>`__: Fix subprocess.Popen."
"wait() when the child process has exited to a stopped instead of terminated "
"state (ex: when under ptrace)."

#: ../../../Misc/NEWS:559
msgid ""
"`bpo-29290 <https://bugs.python.org/issue29290>`__: Fix a regression in "
"argparse that help messages would wrap at non-breaking spaces."
msgstr ""
"`bpo-29290 <https://bugs.python.org/issue29290>`__: Fix a regression in "
"argparse that help messages would wrap at non-breaking spaces."

#: ../../../Misc/NEWS:562
msgid ""
"`bpo-28735 <https://bugs.python.org/issue28735>`__: Fixed the comparison of "
"mock.MagickMock with mock.ANY."
msgstr ""
"`bpo-28735 <https://bugs.python.org/issue28735>`__: Fixed the comparison of "
"mock.MagickMock with mock.ANY."

#: ../../../Misc/NEWS:564
msgid ""
"`bpo-29316 <https://bugs.python.org/issue29316>`__: Restore the provisional "
"status of typing module, add corresponding note to documentation. Patch by "
"Ivan L."
msgstr ""
"`bpo-29316 <https://bugs.python.org/issue29316>`__: Restore the provisional "
"status of typing module, add corresponding note to documentation. Patch by "
"Ivan L."

#: ../../../Misc/NEWS:567
msgid ""
"`bpo-29219 <https://bugs.python.org/issue29219>`__: Fixed infinite recursion "
"in the repr of uninitialized ctypes.CDLL instances."
msgstr ""
"`bpo-29219 <https://bugs.python.org/issue29219>`__: Fixed infinite recursion "
"in the repr of uninitialized ctypes.CDLL instances."

#: ../../../Misc/NEWS:570
msgid ""
"`bpo-29011 <https://bugs.python.org/issue29011>`__:  Fix an important "
"omission by adding Deque to the typing module."
msgstr ""
"`bpo-29011 <https://bugs.python.org/issue29011>`__:  Fix an important "
"omission by adding Deque to the typing module."

#: ../../../Misc/NEWS:572
msgid ""
"`bpo-28969 <https://bugs.python.org/issue28969>`__: Fixed race condition in "
"C implementation of functools.lru_cache. KeyError could be raised when "
"cached function with full cache was simultaneously called from differen "
"threads with the same uncached arguments."
msgstr ""
"`bpo-28969 <https://bugs.python.org/issue28969>`__: Fixed race condition in "
"C implementation of functools.lru_cache. KeyError could be raised when "
"cached function with full cache was simultaneously called from differen "
"threads with the same uncached arguments."

#: ../../../Misc/NEWS:576
msgid ""
"`bpo-29142 <https://bugs.python.org/issue29142>`__: In urllib.request, "
"suffixes in no_proxy environment variable with leading dots could match "
"related hostnames again (e.g. .b.c matches a.b.c). Patch by Milan Oberkirch."
msgstr ""
"`bpo-29142 <https://bugs.python.org/issue29142>`__: In urllib.request, "
"suffixes in no_proxy environment variable with leading dots could match "
"related hostnames again (e.g. .b.c matches a.b.c). Patch by Milan Oberkirch."

#: ../../../Misc/NEWS:580
msgid ""
"`bpo-28961 <https://bugs.python.org/issue28961>`__: Fix unittest.mock._Call "
"helper: don't ignore the name parameter anymore. Patch written by Jiajun "
"Huang."
msgstr ""
"`bpo-28961 <https://bugs.python.org/issue28961>`__: Fix unittest.mock._Call "
"helper: don't ignore the name parameter anymore. Patch written by Jiajun "
"Huang."

#: ../../../Misc/NEWS:583
msgid ""
"`bpo-29203 <https://bugs.python.org/issue29203>`__:  functools.lru_cache() "
"now respects PEP 468 and preserves the order of keyword arguments.  f(a=1, "
"b=2) is now cached separately from f(b=2, a=1) since both calls could "
"potentially give different results."
msgstr ""
"`bpo-29203 <https://bugs.python.org/issue29203>`__:  functools.lru_cache() "
"now respects PEP 468 and preserves the order of keyword arguments.  f(a=1, "
"b=2) is now cached separately from f(b=2, a=1) since both calls could "
"potentially give different results."

#: ../../../Misc/NEWS:587 ../../../Misc/NEWS:4048
msgid ""
"`bpo-15812 <https://bugs.python.org/issue15812>`__: inspect.getframeinfo() "
"now correctly shows the first line of a context.  Patch by Sam Breese."
msgstr ""
"`bpo-15812 <https://bugs.python.org/issue15812>`__: inspect.getframeinfo() "
"now correctly shows the first line of a context.  Patch by Sam Breese."

#: ../../../Misc/NEWS:590 ../../../Misc/NEWS:4051
msgid ""
"`bpo-29094 <https://bugs.python.org/issue29094>`__: Offsets in a ZIP file "
"created with extern file object and modes \"w\" and \"x\" now are relative "
"to the start of the file."
msgstr ""
"`bpo-29094 <https://bugs.python.org/issue29094>`__: Offsets in a ZIP file "
"created with extern file object and modes \"w\" and \"x\" now are relative "
"to the start of the file."

#: ../../../Misc/NEWS:593
msgid ""
"`bpo-29085 <https://bugs.python.org/issue29085>`__: Allow random.Random."
"seed() to use high quality OS randomness rather than the pid and time."
msgstr ""
"`bpo-29085 <https://bugs.python.org/issue29085>`__: Allow random.Random."
"seed() to use high quality OS randomness rather than the pid and time."

#: ../../../Misc/NEWS:596
msgid ""
"`bpo-29061 <https://bugs.python.org/issue29061>`__: Fixed bug in secrets."
"randbelow() which would hang when given a negative input.  Patch by Brendan "
"Donegan."
msgstr ""
"`bpo-29061 <https://bugs.python.org/issue29061>`__: Fixed bug in secrets."
"randbelow() which would hang when given a negative input.  Patch by Brendan "
"Donegan."

#: ../../../Misc/NEWS:599
msgid ""
"`bpo-29079 <https://bugs.python.org/issue29079>`__: Prevent infinite loop in "
"pathlib.resolve() on Windows"
msgstr ""
"`bpo-29079 <https://bugs.python.org/issue29079>`__: Prevent infinite loop in "
"pathlib.resolve() on Windows"

#: ../../../Misc/NEWS:601 ../../../Misc/NEWS:4054
msgid ""
"`bpo-13051 <https://bugs.python.org/issue13051>`__: Fixed recursion errors "
"in large or resized curses.textpad.Textbox.  Based on patch by Tycho "
"Andersen."
msgstr ""
"`bpo-13051 <https://bugs.python.org/issue13051>`__: Fixed recursion errors "
"in large or resized curses.textpad.Textbox.  Based on patch by Tycho "
"Andersen."

#: ../../../Misc/NEWS:604 ../../../Misc/NEWS:4057
msgid ""
"`bpo-29119 <https://bugs.python.org/issue29119>`__: Fix weakrefs in the pure "
"python version of collections.OrderedDict move_to_end() method. Contributed "
"by Andra Bogildea."
msgstr ""
"`bpo-29119 <https://bugs.python.org/issue29119>`__: Fix weakrefs in the pure "
"python version of collections.OrderedDict move_to_end() method. Contributed "
"by Andra Bogildea."

#: ../../../Misc/NEWS:608 ../../../Misc/NEWS:4061
msgid ""
"`bpo-9770 <https://bugs.python.org/issue9770>`__: curses.ascii predicates "
"now work correctly with negative integers."
msgstr ""
"`bpo-9770 <https://bugs.python.org/issue9770>`__: curses.ascii predicates "
"now work correctly with negative integers."

#: ../../../Misc/NEWS:611 ../../../Misc/NEWS:4064
msgid ""
"`bpo-28427 <https://bugs.python.org/issue28427>`__: old keys should not "
"remove new values from WeakValueDictionary when collecting from another "
"thread."
msgstr ""
"`bpo-28427 <https://bugs.python.org/issue28427>`__: old keys should not "
"remove new values from WeakValueDictionary when collecting from another "
"thread."

#: ../../../Misc/NEWS:614 ../../../Misc/NEWS:4067
msgid ""
"`bpo-28923 <https://bugs.python.org/issue28923>`__: Remove editor artifacts "
"from Tix.py."
msgstr ""
"`bpo-28923 <https://bugs.python.org/issue28923>`__: Remove editor artifacts "
"from Tix.py."

#: ../../../Misc/NEWS:616
msgid ""
"`bpo-29055 <https://bugs.python.org/issue29055>`__:  Neaten-up empty "
"population error on random.choice() by suppressing the upstream exception."
msgstr ""
"`bpo-29055 <https://bugs.python.org/issue29055>`__:  Neaten-up empty "
"population error on random.choice() by suppressing the upstream exception."

#: ../../../Misc/NEWS:619 ../../../Misc/NEWS:4069
msgid ""
"`bpo-28871 <https://bugs.python.org/issue28871>`__: Fixed a crash when "
"deallocate deep ElementTree."
msgstr ""
"`bpo-28871 <https://bugs.python.org/issue28871>`__: Fixed a crash when "
"deallocate deep ElementTree."

#: ../../../Misc/NEWS:621 ../../../Misc/NEWS:4071
msgid ""
"`bpo-19542 <https://bugs.python.org/issue19542>`__: Fix bugs in "
"WeakValueDictionary.setdefault() and WeakValueDictionary.pop() when a GC "
"collection happens in another thread."
msgstr ""
"`bpo-19542 <https://bugs.python.org/issue19542>`__: Fix bugs in "
"WeakValueDictionary.setdefault() and WeakValueDictionary.pop() when a GC "
"collection happens in another thread."

#: ../../../Misc/NEWS:625
msgid ""
"`bpo-20191 <https://bugs.python.org/issue20191>`__: Fixed a crash in "
"resource.prlimit() when passing a sequence that doesn't own its elements as "
"limits."
msgstr ""
"`bpo-20191 <https://bugs.python.org/issue20191>`__: Fixed a crash in "
"resource.prlimit() when passing a sequence that doesn't own its elements as "
"limits."

#: ../../../Misc/NEWS:628 ../../../Misc/NEWS:4078
msgid ""
"`bpo-28779 <https://bugs.python.org/issue28779>`__: multiprocessing."
"set_forkserver_preload() would crash the forkserver process if a preloaded "
"module instantiated some multiprocessing objects such as locks."
msgstr ""
"`bpo-28779 <https://bugs.python.org/issue28779>`__: multiprocessing."
"set_forkserver_preload() would crash the forkserver process if a preloaded "
"module instantiated some multiprocessing objects such as locks."

#: ../../../Misc/NEWS:632 ../../../Misc/NEWS:4082
msgid ""
"`bpo-28847 <https://bugs.python.org/issue28847>`__: dbm.dumb now supports "
"reading read-only files and no longer writes the index file when it is not "
"changed."
msgstr ""
"`bpo-28847 <https://bugs.python.org/issue28847>`__: dbm.dumb now supports "
"reading read-only files and no longer writes the index file when it is not "
"changed."

#: ../../../Misc/NEWS:635
msgid ""
"`bpo-26937 <https://bugs.python.org/issue26937>`__: The chown() method of "
"the tarfile.TarFile class does not fail now when the grp module cannot be "
"imported, as for example on Android platforms."
msgstr ""
"`bpo-26937 <https://bugs.python.org/issue26937>`__: The chown() method of "
"the tarfile.TarFile class does not fail now when the grp module cannot be "
"imported, as for example on Android platforms."

#: ../../../Misc/NEWS:642
msgid ""
"`bpo-29071 <https://bugs.python.org/issue29071>`__: IDLE colors f-string "
"prefixes (but not invalid ur prefixes)."
msgstr ""
"`bpo-29071 <https://bugs.python.org/issue29071>`__: IDLE colors f-string "
"prefixes (but not invalid ur prefixes)."

#: ../../../Misc/NEWS:644
msgid ""
"`bpo-28572 <https://bugs.python.org/issue28572>`__: Add 10% to coverage of "
"IDLE's test_configdialog. Update and augment description of the "
"configuration system."
msgstr ""
"`bpo-28572 <https://bugs.python.org/issue28572>`__: Add 10% to coverage of "
"IDLE's test_configdialog. Update and augment description of the "
"configuration system."

#: ../../../Misc/NEWS:650
msgid ""
"`bpo-29579 <https://bugs.python.org/issue29579>`__: Removes readme.txt from "
"the installer"
msgstr ""
"`bpo-29579 <https://bugs.python.org/issue29579>`__: Removes readme.txt from "
"the installer"

#: ../../../Misc/NEWS:652
msgid ""
"`bpo-29326 <https://bugs.python.org/issue29326>`__: Ignores blank lines in ."
"_pth files (Patch by Alexey Izbyshev)"
msgstr ""
"`bpo-29326 <https://bugs.python.org/issue29326>`__: Ignores blank lines in ."
"_pth files (Patch by Alexey Izbyshev)"

#: ../../../Misc/NEWS:654
msgid ""
"`bpo-28164 <https://bugs.python.org/issue28164>`__: Correctly handle special "
"console filenames (patch by Eryk Sun)"
msgstr ""
"`bpo-28164 <https://bugs.python.org/issue28164>`__: Correctly handle special "
"console filenames (patch by Eryk Sun)"

#: ../../../Misc/NEWS:656
msgid ""
"`bpo-29409 <https://bugs.python.org/issue29409>`__: Implement PEP 529 for io."
"FileIO (Patch by Eryk Sun)"
msgstr ""
"`bpo-29409 <https://bugs.python.org/issue29409>`__: Implement PEP 529 for io."
"FileIO (Patch by Eryk Sun)"

#: ../../../Misc/NEWS:658
msgid ""
"`bpo-29392 <https://bugs.python.org/issue29392>`__: Prevent crash when "
"passing invalid arguments into msvcrt module."
msgstr ""
"`bpo-29392 <https://bugs.python.org/issue29392>`__: Prevent crash when "
"passing invalid arguments into msvcrt module."

#: ../../../Misc/NEWS:660
msgid ""
"`bpo-25778 <https://bugs.python.org/issue25778>`__: winreg does not truncate "
"string correctly (Patch by Eryk Sun)"
msgstr ""
"`bpo-25778 <https://bugs.python.org/issue25778>`__: winreg does not truncate "
"string correctly (Patch by Eryk Sun)"

#: ../../../Misc/NEWS:662
msgid ""
"`bpo-28896 <https://bugs.python.org/issue28896>`__: Deprecate "
"WindowsRegistryFinder and disable it by default."
msgstr ""
"`bpo-28896 <https://bugs.python.org/issue28896>`__: Deprecate "
"WindowsRegistryFinder and disable it by default."

#: ../../../Misc/NEWS:667
msgid ""
"`bpo-27867 <https://bugs.python.org/issue27867>`__: Function "
"PySlice_GetIndicesEx() is replaced with a macro if Py_LIMITED_API is not set "
"or set to the value between 0x03050400 and 0x03060000 (not including) or "
"0x03060100 or higher."
msgstr ""
"`bpo-27867 <https://bugs.python.org/issue27867>`__: Function "
"PySlice_GetIndicesEx() is replaced with a macro if Py_LIMITED_API is not set "
"or set to the value between 0x03050400 and 0x03060000 (not including) or "
"0x03060100 or higher."

#: ../../../Misc/NEWS:671
msgid ""
"`bpo-29083 <https://bugs.python.org/issue29083>`__: Fixed the declaration of "
"some public API functions. PyArg_VaParse() and "
"PyArg_VaParseTupleAndKeywords() were not available in limited API.  "
"PyArg_ValidateKeywordArguments(), PyArg_UnpackTuple() and Py_BuildValue() "
"were not available in limited API of version < 3.3 when PY_SSIZE_T_CLEAN is "
"defined."
msgstr ""
"`bpo-29083 <https://bugs.python.org/issue29083>`__: Fixed the declaration of "
"some public API functions. PyArg_VaParse() and "
"PyArg_VaParseTupleAndKeywords() were not available in limited API.  "
"PyArg_ValidateKeywordArguments(), PyArg_UnpackTuple() and Py_BuildValue() "
"were not available in limited API of version < 3.3 when PY_SSIZE_T_CLEAN is "
"defined."

#: ../../../Misc/NEWS:677
msgid ""
"`bpo-29058 <https://bugs.python.org/issue29058>`__: All stable API "
"extensions added after Python 3.2 are now available only when Py_LIMITED_API "
"is set to the PY_VERSION_HEX value of the minimum Python version supporting "
"this API."
msgstr ""
"`bpo-29058 <https://bugs.python.org/issue29058>`__: All stable API "
"extensions added after Python 3.2 are now available only when Py_LIMITED_API "
"is set to the PY_VERSION_HEX value of the minimum Python version supporting "
"this API."

#: ../../../Misc/NEWS:684
msgid ""
"`bpo-28929 <https://bugs.python.org/issue28929>`__: Link the documentation "
"to its source file on GitHub."
msgstr ""
"`bpo-28929 <https://bugs.python.org/issue28929>`__: Link the documentation "
"to its source file on GitHub."

#: ../../../Misc/NEWS:686
msgid ""
"`bpo-25008 <https://bugs.python.org/issue25008>`__: Document smtpd.py as "
"effectively deprecated and add a pointer to aiosmtpd, a third-party asyncio-"
"based replacement."
msgstr ""
"`bpo-25008 <https://bugs.python.org/issue25008>`__: Document smtpd.py as "
"effectively deprecated and add a pointer to aiosmtpd, a third-party asyncio-"
"based replacement."

#: ../../../Misc/NEWS:689
msgid ""
"`bpo-26355 <https://bugs.python.org/issue26355>`__: Add canonical header "
"link on each page to corresponding major version of the documentation. Patch "
"by Matthias Bussonnier."
msgstr ""
"`bpo-26355 <https://bugs.python.org/issue26355>`__: Add canonical header "
"link on each page to corresponding major version of the documentation. Patch "
"by Matthias Bussonnier."

#: ../../../Misc/NEWS:692
msgid ""
"`bpo-29349 <https://bugs.python.org/issue29349>`__: Fix Python 2 syntax in "
"code for building the documentation."
msgstr ""
"`bpo-29349 <https://bugs.python.org/issue29349>`__: Fix Python 2 syntax in "
"code for building the documentation."

#: ../../../Misc/NEWS:697
msgid ""
"`bpo-28087 <https://bugs.python.org/issue28087>`__: Skip test_asyncore and "
"test_eintr poll failures on macOS. Skip some tests of select.poll when "
"running on macOS due to unresolved issues with the underlying system poll "
"function on some macOS versions."
msgstr ""
"`bpo-28087 <https://bugs.python.org/issue28087>`__: Skip test_asyncore and "
"test_eintr poll failures on macOS. Skip some tests of select.poll when "
"running on macOS due to unresolved issues with the underlying system poll "
"function on some macOS versions."

#: ../../../Misc/NEWS:701
msgid ""
"`bpo-29571 <https://bugs.python.org/issue29571>`__: to match the behaviour "
"of the ``re.LOCALE`` flag, test_re.test_locale_flag now uses ``locale."
"getpreferredencoding(False)`` to determine the candidate encoding for the "
"test regex (allowing it to correctly skip the test when the default locale "
"encoding is a multi-byte encoding)"
msgstr ""
"`bpo-29571 <https://bugs.python.org/issue29571>`__: to match the behaviour "
"of the ``re.LOCALE`` flag, test_re.test_locale_flag now uses ``locale."
"getpreferredencoding(False)`` to determine the candidate encoding for the "
"test regex (allowing it to correctly skip the test when the default locale "
"encoding is a multi-byte encoding)"

#: ../../../Misc/NEWS:706
msgid ""
"`bpo-28950 <https://bugs.python.org/issue28950>`__: Disallow -j0 to be "
"combined with -T/-l in regrtest command line arguments."
msgstr ""
"`bpo-28950 <https://bugs.python.org/issue28950>`__: Disallow -j0 to be "
"combined with -T/-l in regrtest command line arguments."

#: ../../../Misc/NEWS:709
msgid ""
"`bpo-28683 <https://bugs.python.org/issue28683>`__: Fix the tests that "
"bind() a unix socket and raise PermissionError on Android for a non-root "
"user."
msgstr ""
"`bpo-28683 <https://bugs.python.org/issue28683>`__: Fix the tests that "
"bind() a unix socket and raise PermissionError on Android for a non-root "
"user."

#: ../../../Misc/NEWS:712
msgid ""
"`bpo-26939 <https://bugs.python.org/issue26939>`__: Add the support."
"setswitchinterval() function to fix test_functools hanging on the Android "
"armv7 qemu emulator."
msgstr ""
"`bpo-26939 <https://bugs.python.org/issue26939>`__: Add the support."
"setswitchinterval() function to fix test_functools hanging on the Android "
"armv7 qemu emulator."

#: ../../../Misc/NEWS:718
msgid ""
"`bpo-27593 <https://bugs.python.org/issue27593>`__: sys.version and the "
"platform module python_build(), python_branch(), and python_revision() "
"functions now use git information rather than hg when building from a repo."
msgstr ""
"`bpo-27593 <https://bugs.python.org/issue27593>`__: sys.version and the "
"platform module python_build(), python_branch(), and python_revision() "
"functions now use git information rather than hg when building from a repo."

#: ../../../Misc/NEWS:722
msgid ""
"`bpo-29572 <https://bugs.python.org/issue29572>`__: Update Windows build and "
"OS X installers to use OpenSSL 1.0.2k."
msgstr ""
"`bpo-29572 <https://bugs.python.org/issue29572>`__: Update Windows build and "
"OS X installers to use OpenSSL 1.0.2k."

#: ../../../Misc/NEWS:724
msgid ""
"`bpo-26851 <https://bugs.python.org/issue26851>`__: Set Android compilation "
"and link flags."
msgstr ""
"`bpo-26851 <https://bugs.python.org/issue26851>`__: Set Android compilation "
"and link flags."

#: ../../../Misc/NEWS:726
msgid ""
"`bpo-28768 <https://bugs.python.org/issue28768>`__: Fix implicit declaration "
"of function _setmode. Patch by Masayuki Yamamoto"
msgstr ""
"`bpo-28768 <https://bugs.python.org/issue28768>`__: Fix implicit declaration "
"of function _setmode. Patch by Masayuki Yamamoto"

#: ../../../Misc/NEWS:729 ../../../Misc/NEWS:4534
msgid ""
"`bpo-29080 <https://bugs.python.org/issue29080>`__: Removes hard dependency "
"on hg.exe from PCBuild/build.bat"
msgstr ""
"`bpo-29080 <https://bugs.python.org/issue29080>`__: Removes hard dependency "
"on hg.exe from PCBuild/build.bat"

#: ../../../Misc/NEWS:731 ../../../Misc/NEWS:4536
msgid ""
"`bpo-23903 <https://bugs.python.org/issue23903>`__: Added missed names to PC/"
"python3.def."
msgstr ""
"`bpo-23903 <https://bugs.python.org/issue23903>`__: Added missed names to PC/"
"python3.def."

#: ../../../Misc/NEWS:733
msgid ""
"`bpo-28762 <https://bugs.python.org/issue28762>`__: lockf() is available on "
"Android API level 24, but the F_LOCK macro is not defined in android-ndk-r13."
msgstr ""
"`bpo-28762 <https://bugs.python.org/issue28762>`__: lockf() is available on "
"Android API level 24, but the F_LOCK macro is not defined in android-ndk-r13."

#: ../../../Misc/NEWS:736
msgid ""
"`bpo-28538 <https://bugs.python.org/issue28538>`__: Fix the compilation "
"error that occurs because if_nameindex() is available on Android API level "
"24, but the if_nameindex structure is not defined."
msgstr ""
"`bpo-28538 <https://bugs.python.org/issue28538>`__: Fix the compilation "
"error that occurs because if_nameindex() is available on Android API level "
"24, but the if_nameindex structure is not defined."

#: ../../../Misc/NEWS:740
msgid ""
"`bpo-20211 <https://bugs.python.org/issue20211>`__: Do not add the directory "
"for installing C header files and the directory for installing object code "
"libraries to the cross compilation search paths. Original patch by Thomas "
"Petazzoni."
msgstr ""
"`bpo-20211 <https://bugs.python.org/issue20211>`__: Do not add the directory "
"for installing C header files and the directory for installing object code "
"libraries to the cross compilation search paths. Original patch by Thomas "
"Petazzoni."

#: ../../../Misc/NEWS:744
msgid ""
"`bpo-28849 <https://bugs.python.org/issue28849>`__: Do not define sys."
"implementation._multiarch on Android."
msgstr ""
"`bpo-28849 <https://bugs.python.org/issue28849>`__: Do not define sys."
"implementation._multiarch on Android."

#: ../../../Misc/NEWS:748
msgid "Python 3.6.0"
msgstr "Python 3.6.0"

#: ../../../Misc/NEWS:750
msgid "*Release date: 2016-12-23*"
msgstr "*Date de sortie : 2016-12-23*"

#: ../../../Misc/NEWS:756
msgid "Python 3.6.0 release candidate 2"
msgstr "Python 3.6.0 release candidate 2"

#: ../../../Misc/NEWS:758
msgid "*Release date: 2016-12-16*"
msgstr "*Date de sortie : 2016-12-16*"

#: ../../../Misc/NEWS:763
msgid ""
"`bpo-28147 <https://bugs.python.org/issue28147>`__: Fix a memory leak in "
"split-table dictionaries: setattr() must not convert combined table into "
"split table. Patch written by INADA Naoki."
msgstr ""
"`bpo-28147 <https://bugs.python.org/issue28147>`__: Fix a memory leak in "
"split-table dictionaries: setattr() must not convert combined table into "
"split table. Patch written by INADA Naoki."

#: ../../../Misc/NEWS:767
msgid ""
"`bpo-28990 <https://bugs.python.org/issue28990>`__: Fix asyncio SSL hanging "
"if connection is closed before handshake is completed. (Patch by HoHo-Ho)"
msgstr ""
"`bpo-28990 <https://bugs.python.org/issue28990>`__: Fix asyncio SSL hanging "
"if connection is closed before handshake is completed. (Patch by HoHo-Ho)"

#: ../../../Misc/NEWS:773
msgid ""
"`bpo-28770 <https://bugs.python.org/issue28770>`__: Fix python-gdb.py for "
"fastcalls."
msgstr ""
"`bpo-28770 <https://bugs.python.org/issue28770>`__: Fix python-gdb.py for "
"fastcalls."

#: ../../../Misc/NEWS:778
msgid ""
"`bpo-28896 <https://bugs.python.org/issue28896>`__: Deprecate "
"WindowsRegistryFinder."
msgstr ""
"`bpo-28896 <https://bugs.python.org/issue28896>`__: Deprecate "
"WindowsRegistryFinder."

#: ../../../Misc/NEWS:783
msgid ""
"`bpo-28898 <https://bugs.python.org/issue28898>`__: Prevent gdb build errors "
"due to HAVE_LONG_LONG redefinition."
msgstr ""
"`bpo-28898 <https://bugs.python.org/issue28898>`__: Prevent gdb build errors "
"due to HAVE_LONG_LONG redefinition."

#: ../../../Misc/NEWS:787
msgid "Python 3.6.0 release candidate 1"
msgstr "Python 3.6.0 release candidate 1"

#: ../../../Misc/NEWS:789
msgid "*Release date: 2016-12-06*"
msgstr "*Date de sortie : 2016-12-06*"

#: ../../../Misc/NEWS:794
msgid ""
"`bpo-23722 <https://bugs.python.org/issue23722>`__: Rather than silently "
"producing a class that doesn't support zero-argument ``super()`` in methods, "
"failing to pass the new ``__classcell__`` namespace entry up to ``type."
"__new__`` now results in a ``DeprecationWarning`` and a class that supports "
"zero-argument ``super()``."
msgstr ""
"`bpo-23722 <https://bugs.python.org/issue23722>`__: Rather than silently "
"producing a class that doesn't support zero-argument ``super()`` in methods, "
"failing to pass the new ``__classcell__`` namespace entry up to ``type."
"__new__`` now results in a ``DeprecationWarning`` and a class that supports "
"zero-argument ``super()``."

#: ../../../Misc/NEWS:799
msgid ""
"`bpo-28797 <https://bugs.python.org/issue28797>`__: Modifying the class "
"__dict__ inside the __set_name__ method of a descriptor that is used inside "
"that class no longer prevents calling the __set_name__ method of other "
"descriptors."
msgstr ""
"`bpo-28797 <https://bugs.python.org/issue28797>`__: Modifying the class "
"__dict__ inside the __set_name__ method of a descriptor that is used inside "
"that class no longer prevents calling the __set_name__ method of other "
"descriptors."

#: ../../../Misc/NEWS:803
msgid ""
"`bpo-28782 <https://bugs.python.org/issue28782>`__: Fix a bug in the "
"implementation ``yield from`` when checking if the next instruction is "
"YIELD_FROM. Regression introduced by WORDCODE (`bpo-26647 <https://bugs."
"python.org/issue26647>`__)."
msgstr ""
"`bpo-28782 <https://bugs.python.org/issue28782>`__: Fix a bug in the "
"implementation ``yield from`` when checking if the next instruction is "
"YIELD_FROM. Regression introduced by WORDCODE (`bpo-26647 <https://bugs."
"python.org/issue26647>`__)."

#: ../../../Misc/NEWS:810
msgid ""
"`bpo-27030 <https://bugs.python.org/issue27030>`__: Unknown escapes in re."
"sub() replacement template are allowed again.  But they still are deprecated "
"and will be disabled in 3.7."
msgstr ""
"`bpo-27030 <https://bugs.python.org/issue27030>`__: Unknown escapes in re."
"sub() replacement template are allowed again.  But they still are deprecated "
"and will be disabled in 3.7."

#: ../../../Misc/NEWS:813
msgid ""
"`bpo-28835 <https://bugs.python.org/issue28835>`__: Fix a regression "
"introduced in warnings.catch_warnings(): call warnings.showwarning() if it "
"was overriden inside the context manager."
msgstr ""
"`bpo-28835 <https://bugs.python.org/issue28835>`__: Fix a regression "
"introduced in warnings.catch_warnings(): call warnings.showwarning() if it "
"was overriden inside the context manager."

#: ../../../Misc/NEWS:816
msgid ""
"`bpo-27172 <https://bugs.python.org/issue27172>`__: To assist with upgrades "
"from 2.7, the previously documented deprecation of ``inspect."
"getfullargspec()`` has been reversed. This decision may be revisited again "
"after the Python 2.7 branch is no longer officially supported."
msgstr ""
"`bpo-27172 <https://bugs.python.org/issue27172>`__: To assist with upgrades "
"from 2.7, the previously documented deprecation of ``inspect."
"getfullargspec()`` has been reversed. This decision may be revisited again "
"after the Python 2.7 branch is no longer officially supported."

#: ../../../Misc/NEWS:821
msgid ""
"`bpo-26273 <https://bugs.python.org/issue26273>`__: Add new :data:`socket."
"TCP_CONGESTION` (Linux 2.6.13) and :data:`socket.TCP_USER_TIMEOUT` (Linux "
"2.6.37) constants. Patch written by Omar Sandoval."
msgstr ""
"`bpo-26273 <https://bugs.python.org/issue26273>`__: Add new :data:`socket."
"TCP_CONGESTION` (Linux 2.6.13) and :data:`socket.TCP_USER_TIMEOUT` (Linux "
"2.6.37) constants. Patch written by Omar Sandoval."

#: ../../../Misc/NEWS:825
msgid ""
"`bpo-24142 <https://bugs.python.org/issue24142>`__: Reading a corrupt config "
"file left configparser in an invalid state.  Original patch by Florian H√∂ch."
msgstr ""
"`bpo-24142 <https://bugs.python.org/issue24142>`__: Reading a corrupt config "
"file left configparser in an invalid state.  Original patch by Florian H√∂ch."

#: ../../../Misc/NEWS:828
msgid ""
"`bpo-28843 <https://bugs.python.org/issue28843>`__: Fix asyncio C Task to "
"handle exceptions __traceback__."
msgstr ""
"`bpo-28843 <https://bugs.python.org/issue28843>`__: Fix asyncio C Task to "
"handle exceptions __traceback__."

#: ../../../Misc/NEWS:833 ../../../Misc/NEWS:4474
msgid ""
"`bpo-28808 <https://bugs.python.org/issue28808>`__: "
"PyUnicode_CompareWithASCIIString() now never raises exceptions."
msgstr ""
"`bpo-28808 <https://bugs.python.org/issue28808>`__: "
"PyUnicode_CompareWithASCIIString() now never raises exceptions."

#: ../../../Misc/NEWS:838
msgid ""
"`bpo-23722 <https://bugs.python.org/issue23722>`__: The data model reference "
"and the porting section in the What's New guide now cover the additional "
"``__classcell__`` handling needed for custom metaclasses to fully support "
"PEP 487 and zero-argument ``super()``."
msgstr ""
"`bpo-23722 <https://bugs.python.org/issue23722>`__: The data model reference "
"and the porting section in the What's New guide now cover the additional "
"``__classcell__`` handling needed for custom metaclasses to fully support "
"PEP 487 and zero-argument ``super()``."

#: ../../../Misc/NEWS:845
msgid ""
"`bpo-28023 <https://bugs.python.org/issue28023>`__: Fix python-gdb.py didn't "
"support new dict implementation."
msgstr ""
"`bpo-28023 <https://bugs.python.org/issue28023>`__: Fix python-gdb.py didn't "
"support new dict implementation."

#: ../../../Misc/NEWS:849
msgid "Python 3.6.0 beta 4"
msgstr "Python 3.6.0 beta 4"

#: ../../../Misc/NEWS:851
msgid "*Release date: 2016-11-21*"
msgstr "*Date de sortie : 2016-11-21*"

#: ../../../Misc/NEWS:856
msgid ""
"`bpo-28532 <https://bugs.python.org/issue28532>`__: Show sys.version when -V "
"option is supplied twice."
msgstr ""
"`bpo-28532 <https://bugs.python.org/issue28532>`__: Show sys.version when -V "
"option is supplied twice."

#: ../../../Misc/NEWS:858
msgid ""
"`bpo-27100 <https://bugs.python.org/issue27100>`__: The with-statement now "
"checks for __enter__ before it checks for __exit__.  This gives less "
"confusing error messages when both methods are missing. Patch by Jonathan "
"Ellington."
msgstr ""
"`bpo-27100 <https://bugs.python.org/issue27100>`__: The with-statement now "
"checks for __enter__ before it checks for __exit__.  This gives less "
"confusing error messages when both methods are missing. Patch by Jonathan "
"Ellington."

#: ../../../Misc/NEWS:862
msgid ""
"`bpo-28746 <https://bugs.python.org/issue28746>`__: Fix the "
"set_inheritable() file descriptor method on platforms that do not have the "
"ioctl FIOCLEX and FIONCLEX commands."
msgstr ""
"`bpo-28746 <https://bugs.python.org/issue28746>`__: Fix the "
"set_inheritable() file descriptor method on platforms that do not have the "
"ioctl FIOCLEX and FIONCLEX commands."

#: ../../../Misc/NEWS:865
msgid ""
"`bpo-26920 <https://bugs.python.org/issue26920>`__: Fix not getting the "
"locale's charset upon initializing the interpreter, on platforms that do not "
"have langinfo."
msgstr ""
"`bpo-26920 <https://bugs.python.org/issue26920>`__: Fix not getting the "
"locale's charset upon initializing the interpreter, on platforms that do not "
"have langinfo."

#: ../../../Misc/NEWS:868 ../../../Misc/NEWS:3937
msgid ""
"`bpo-28648 <https://bugs.python.org/issue28648>`__: Fixed crash in "
"Py_DecodeLocale() in debug build on Mac OS X when decode astral characters.  "
"Patch by Xiang Zhang."
msgstr ""
"`bpo-28648 <https://bugs.python.org/issue28648>`__: Fixed crash in "
"Py_DecodeLocale() in debug build on Mac OS X when decode astral characters.  "
"Patch by Xiang Zhang."

#: ../../../Misc/NEWS:871 ../../../Misc/NEWS:3940
msgid ""
"`bpo-19398 <https://bugs.python.org/issue19398>`__: Extra slash no longer "
"added to sys.path components in case of empty compile-time PYTHONPATH "
"components."
msgstr ""
"`bpo-19398 <https://bugs.python.org/issue19398>`__: Extra slash no longer "
"added to sys.path components in case of empty compile-time PYTHONPATH "
"components."

#: ../../../Misc/NEWS:874
msgid ""
"`bpo-28665 <https://bugs.python.org/issue28665>`__:  Improve speed of the "
"STORE_DEREF opcode by 40%."
msgstr ""
"`bpo-28665 <https://bugs.python.org/issue28665>`__:  Improve speed of the "
"STORE_DEREF opcode by 40%."

#: ../../../Misc/NEWS:876
msgid ""
"`bpo-28583 <https://bugs.python.org/issue28583>`__: PyDict_SetDefault didn't "
"combine split table when needed. Patch by Xiang Zhang."
msgstr ""
"`bpo-28583 <https://bugs.python.org/issue28583>`__: PyDict_SetDefault didn't "
"combine split table when needed. Patch by Xiang Zhang."

#: ../../../Misc/NEWS:879
msgid ""
"`bpo-27243 <https://bugs.python.org/issue27243>`__: Change "
"PendingDeprecationWarning -> DeprecationWarning. As it was agreed in the "
"issue, __aiter__ returning an awaitable should result in "
"PendingDeprecationWarning in 3.5 and in DeprecationWarning in 3.6."
msgstr ""
"`bpo-27243 <https://bugs.python.org/issue27243>`__: Change "
"PendingDeprecationWarning -> DeprecationWarning. As it was agreed in the "
"issue, __aiter__ returning an awaitable should result in "
"PendingDeprecationWarning in 3.5 and in DeprecationWarning in 3.6."

#: ../../../Misc/NEWS:884
msgid ""
"`bpo-26182 <https://bugs.python.org/issue26182>`__: Fix a refleak in code "
"that raises DeprecationWarning."
msgstr ""
"`bpo-26182 <https://bugs.python.org/issue26182>`__: Fix a refleak in code "
"that raises DeprecationWarning."

#: ../../../Misc/NEWS:886
msgid ""
"`bpo-28721 <https://bugs.python.org/issue28721>`__: Fix asynchronous "
"generators aclose() and athrow() to handle StopAsyncIteration propagation "
"properly."
msgstr ""
"`bpo-28721 <https://bugs.python.org/issue28721>`__: Fix asynchronous "
"generators aclose() and athrow() to handle StopAsyncIteration propagation "
"properly."

#: ../../../Misc/NEWS:892
msgid ""
"`bpo-28752 <https://bugs.python.org/issue28752>`__: Restored the "
"__reduce__() methods of datetime objects."
msgstr ""
"`bpo-28752 <https://bugs.python.org/issue28752>`__: Restored the "
"__reduce__() methods of datetime objects."

#: ../../../Misc/NEWS:894
msgid ""
"`bpo-28727 <https://bugs.python.org/issue28727>`__: Regular expression "
"patterns, _sre.SRE_Pattern objects created by re.compile(), become "
"comparable (only x==y and x!=y operators). This change should fix the "
"`bpo-18383 <https://bugs.python.org/issue18383>`__: don't duplicate warning "
"filters when the warnings module is reloaded (thing usually only done in "
"unit tests)."
msgstr ""
"`bpo-28727 <https://bugs.python.org/issue28727>`__: Regular expression "
"patterns, _sre.SRE_Pattern objects created by re.compile(), become "
"comparable (only x==y and x!=y operators). This change should fix the "
"`bpo-18383 <https://bugs.python.org/issue18383>`__: don't duplicate warning "
"filters when the warnings module is reloaded (thing usually only done in "
"unit tests)."

#: ../../../Misc/NEWS:899
msgid ""
"`bpo-20572 <https://bugs.python.org/issue20572>`__: The subprocess.Popen."
"wait method's undocumented endtime parameter now raises a DeprecationWarning."
msgstr ""
"`bpo-20572 <https://bugs.python.org/issue20572>`__: The subprocess.Popen."
"wait method's undocumented endtime parameter now raises a DeprecationWarning."

#: ../../../Misc/NEWS:902 ../../../Misc/NEWS:4085
msgid ""
"`bpo-25659 <https://bugs.python.org/issue25659>`__: In ctypes, prevent a "
"crash calling the from_buffer() and from_buffer_copy() methods on abstract "
"classes like Array."
msgstr ""
"`bpo-25659 <https://bugs.python.org/issue25659>`__: In ctypes, prevent a "
"crash calling the from_buffer() and from_buffer_copy() methods on abstract "
"classes like Array."

#: ../../../Misc/NEWS:905
msgid ""
"`bpo-19717 <https://bugs.python.org/issue19717>`__: Makes Path.resolve() "
"succeed on paths that do not exist. Patch by Vajrasky Kok"
msgstr ""
"`bpo-19717 <https://bugs.python.org/issue19717>`__: Makes Path.resolve() "
"succeed on paths that do not exist. Patch by Vajrasky Kok"

#: ../../../Misc/NEWS:908
msgid ""
"`bpo-28563 <https://bugs.python.org/issue28563>`__: Fixed possible DoS and "
"arbitrary code execution when handle plural form selections in the gettext "
"module.  The expression parser now supports exact syntax supported by GNU "
"gettext."
msgstr ""
"`bpo-28563 <https://bugs.python.org/issue28563>`__: Fixed possible DoS and "
"arbitrary code execution when handle plural form selections in the gettext "
"module.  The expression parser now supports exact syntax supported by GNU "
"gettext."

#: ../../../Misc/NEWS:912 ../../../Misc/NEWS:4094
msgid ""
"`bpo-28387 <https://bugs.python.org/issue28387>`__: Fixed possible crash in "
"_io.TextIOWrapper deallocator when the garbage collector is invoked in other "
"thread.  Based on patch by Sebastian Cufre."
msgstr ""
"`bpo-28387 <https://bugs.python.org/issue28387>`__: Fixed possible crash in "
"_io.TextIOWrapper deallocator when the garbage collector is invoked in other "
"thread.  Based on patch by Sebastian Cufre."

#: ../../../Misc/NEWS:916
msgid ""
"`bpo-28600 <https://bugs.python.org/issue28600>`__: Optimize loop.call_soon."
msgstr ""
"`bpo-28600 <https://bugs.python.org/issue28600>`__: Optimize loop.call_soon."

#: ../../../Misc/NEWS:918 ../../../Misc/NEWS:4424
msgid ""
"`bpo-28613 <https://bugs.python.org/issue28613>`__: Fix get_event_loop() "
"return the current loop if called from coroutines/callbacks."
msgstr ""
"`bpo-28613 <https://bugs.python.org/issue28613>`__: Fix get_event_loop() "
"return the current loop if called from coroutines/callbacks."

#: ../../../Misc/NEWS:921
msgid ""
"`bpo-28634 <https://bugs.python.org/issue28634>`__: Fix asyncio.isfuture() "
"to support unittest.Mock."
msgstr ""
"`bpo-28634 <https://bugs.python.org/issue28634>`__: Fix asyncio.isfuture() "
"to support unittest.Mock."

#: ../../../Misc/NEWS:923
msgid ""
"`bpo-26081 <https://bugs.python.org/issue26081>`__: Fix refleak in _asyncio."
"Future.__iter__().throw."
msgstr ""
"`bpo-26081 <https://bugs.python.org/issue26081>`__: Fix refleak in _asyncio."
"Future.__iter__().throw."

#: ../../../Misc/NEWS:925 ../../../Misc/NEWS:4427
msgid ""
"`bpo-28639 <https://bugs.python.org/issue28639>`__: Fix inspect.isawaitable "
"to always return bool Patch by Justin Mayfield."
msgstr ""
"`bpo-28639 <https://bugs.python.org/issue28639>`__: Fix inspect.isawaitable "
"to always return bool Patch by Justin Mayfield."

#: ../../../Misc/NEWS:928 ../../../Misc/NEWS:4430
msgid ""
"`bpo-28652 <https://bugs.python.org/issue28652>`__: Make loop methods reject "
"socket kinds they do not support."
msgstr ""
"`bpo-28652 <https://bugs.python.org/issue28652>`__: Make loop methods reject "
"socket kinds they do not support."

#: ../../../Misc/NEWS:930 ../../../Misc/NEWS:4432
msgid ""
"`bpo-28653 <https://bugs.python.org/issue28653>`__: Fix a refleak in "
"functools.lru_cache."
msgstr ""
"`bpo-28653 <https://bugs.python.org/issue28653>`__: Fix a refleak in "
"functools.lru_cache."

#: ../../../Misc/NEWS:932 ../../../Misc/NEWS:4434
msgid ""
"`bpo-28703 <https://bugs.python.org/issue28703>`__: Fix asyncio."
"iscoroutinefunction to handle Mock objects."
msgstr ""
"`bpo-28703 <https://bugs.python.org/issue28703>`__: Fix asyncio."
"iscoroutinefunction to handle Mock objects."

#: ../../../Misc/NEWS:934
msgid ""
"`bpo-28704 <https://bugs.python.org/issue28704>`__: Fix create_unix_server "
"to support Path-like objects (PEP 519)."
msgstr ""
"`bpo-28704 <https://bugs.python.org/issue28704>`__: Fix create_unix_server "
"to support Path-like objects (PEP 519)."

#: ../../../Misc/NEWS:937
msgid ""
"`bpo-28720 <https://bugs.python.org/issue28720>`__: Add collections.abc."
"AsyncGenerator."
msgstr ""
"`bpo-28720 <https://bugs.python.org/issue28720>`__: Add collections.abc."
"AsyncGenerator."

#: ../../../Misc/NEWS:942 ../../../Misc/NEWS:4482
msgid ""
"`bpo-28513 <https://bugs.python.org/issue28513>`__: Documented command-line "
"interface of zipfile."
msgstr ""
"`bpo-28513 <https://bugs.python.org/issue28513>`__: Documented command-line "
"interface of zipfile."

#: ../../../Misc/NEWS:947 ../../../Misc/NEWS:4490
msgid ""
"`bpo-28666 <https://bugs.python.org/issue28666>`__: Now test.support.rmtree "
"is able to remove unwritable or unreadable directories."
msgstr ""
"`bpo-28666 <https://bugs.python.org/issue28666>`__: Now test.support.rmtree "
"is able to remove unwritable or unreadable directories."

#: ../../../Misc/NEWS:950 ../../../Misc/NEWS:4493
msgid ""
"`bpo-23839 <https://bugs.python.org/issue23839>`__: Various caches now are "
"cleared before running every test file."
msgstr ""
"`bpo-23839 <https://bugs.python.org/issue23839>`__: Various caches now are "
"cleared before running every test file."

#: ../../../Misc/NEWS:955 ../../../Misc/NEWS:4538
msgid ""
"`bpo-10656 <https://bugs.python.org/issue10656>`__: Fix out-of-tree building "
"on AIX.  Patch by Tristan Carel and Michael Haubenwallner."
msgstr ""
"`bpo-10656 <https://bugs.python.org/issue10656>`__: Fix out-of-tree building "
"on AIX.  Patch by Tristan Carel and Michael Haubenwallner."

#: ../../../Misc/NEWS:958 ../../../Misc/NEWS:4541
msgid ""
"`bpo-26359 <https://bugs.python.org/issue26359>`__: Rename --with-"
"optimiations to --enable-optimizations."
msgstr ""
"`bpo-26359 <https://bugs.python.org/issue26359>`__: Rename --with-"
"optimiations to --enable-optimizations."

#: ../../../Misc/NEWS:960 ../../../Misc/NEWS:4592
msgid ""
"`bpo-28676 <https://bugs.python.org/issue28676>`__: Prevent missing "
"'getentropy' declaration warning on macOS. Patch by Gareth Rees."
msgstr ""
"`bpo-28676 <https://bugs.python.org/issue28676>`__: Prevent missing "
"'getentropy' declaration warning on macOS. Patch by Gareth Rees."

#: ../../../Misc/NEWS:965
msgid "Python 3.6.0 beta 3"
msgstr "Python 3.6.0 beta 3"

#: ../../../Misc/NEWS:967
msgid "*Release date: 2016-10-31*"
msgstr "*Date de sortie : 2016-10-31*"

#: ../../../Misc/NEWS:972
msgid ""
"`bpo-28128 <https://bugs.python.org/issue28128>`__: Deprecation warning for "
"invalid str and byte escape sequences now prints better information about "
"where the error occurs. Patch by Serhiy Storchaka and Eric Smith."
msgstr ""
"`bpo-28128 <https://bugs.python.org/issue28128>`__: Deprecation warning for "
"invalid str and byte escape sequences now prints better information about "
"where the error occurs. Patch by Serhiy Storchaka and Eric Smith."

#: ../../../Misc/NEWS:976
msgid ""
"`bpo-28509 <https://bugs.python.org/issue28509>`__: dict.update() no longer "
"allocate unnecessary large memory."
msgstr ""
"`bpo-28509 <https://bugs.python.org/issue28509>`__: dict.update() no longer "
"allocate unnecessary large memory."

#: ../../../Misc/NEWS:978 ../../../Misc/NEWS:3943
msgid ""
"`bpo-28426 <https://bugs.python.org/issue28426>`__: Fixed potential crash in "
"PyUnicode_AsDecodedObject() in debug build."
msgstr ""
"`bpo-28426 <https://bugs.python.org/issue28426>`__: Fixed potential crash in "
"PyUnicode_AsDecodedObject() in debug build."

#: ../../../Misc/NEWS:981
msgid ""
"`bpo-28517 <https://bugs.python.org/issue28517>`__: Fixed of-by-one error in "
"the peephole optimizer that caused keeping unreachable code."
msgstr ""
"`bpo-28517 <https://bugs.python.org/issue28517>`__: Fixed of-by-one error in "
"the peephole optimizer that caused keeping unreachable code."

#: ../../../Misc/NEWS:984
msgid ""
"`bpo-28214 <https://bugs.python.org/issue28214>`__: Improved exception "
"reporting for problematic __set_name__ attributes."
msgstr ""
"`bpo-28214 <https://bugs.python.org/issue28214>`__: Improved exception "
"reporting for problematic __set_name__ attributes."

#: ../../../Misc/NEWS:987 ../../../Misc/NEWS:3946
msgid ""
"`bpo-23782 <https://bugs.python.org/issue23782>`__: Fixed possible memory "
"leak in _PyTraceback_Add() and exception loss in PyTraceBack_Here()."
msgstr ""
"`bpo-23782 <https://bugs.python.org/issue23782>`__: Fixed possible memory "
"leak in _PyTraceback_Add() and exception loss in PyTraceBack_Here()."

#: ../../../Misc/NEWS:990
msgid ""
"`bpo-28471 <https://bugs.python.org/issue28471>`__: Fix \"Python memory "
"allocator called without holding the GIL\" crash in socket.setblocking."
msgstr ""
"`bpo-28471 <https://bugs.python.org/issue28471>`__: Fix \"Python memory "
"allocator called without holding the GIL\" crash in socket.setblocking."

#: ../../../Misc/NEWS:996 ../../../Misc/NEWS:4098
msgid ""
"`bpo-27517 <https://bugs.python.org/issue27517>`__: LZMA compressor and "
"decompressor no longer raise exceptions if given empty data twice.  Patch by "
"Benjamin Fogle."
msgstr ""
"`bpo-27517 <https://bugs.python.org/issue27517>`__: LZMA compressor and "
"decompressor no longer raise exceptions if given empty data twice.  Patch by "
"Benjamin Fogle."

#: ../../../Misc/NEWS:999 ../../../Misc/NEWS:4101
msgid ""
"`bpo-28549 <https://bugs.python.org/issue28549>`__: Fixed segfault in "
"curses's addch() with ncurses6."
msgstr ""
"`bpo-28549 <https://bugs.python.org/issue28549>`__: Fixed segfault in "
"curses's addch() with ncurses6."

#: ../../../Misc/NEWS:1001 ../../../Misc/NEWS:4103
msgid ""
"`bpo-28449 <https://bugs.python.org/issue28449>`__: tarfile.open() with mode "
"\"r\" or \"r:\" now tries to open a tar file with compression before trying "
"to open it without compression.  Otherwise it had 50% chance failed with "
"ignore_zeros=True."
msgstr ""
"`bpo-28449 <https://bugs.python.org/issue28449>`__: tarfile.open() with mode "
"\"r\" or \"r:\" now tries to open a tar file with compression before trying "
"to open it without compression.  Otherwise it had 50% chance failed with "
"ignore_zeros=True."

#: ../../../Misc/NEWS:1005 ../../../Misc/NEWS:4107
msgid ""
"`bpo-23262 <https://bugs.python.org/issue23262>`__: The webbrowser module "
"now supports Firefox 36+ and derived browsers.  Based on patch by Oleg "
"Broytman."
msgstr ""
"`bpo-23262 <https://bugs.python.org/issue23262>`__: The webbrowser module "
"now supports Firefox 36+ and derived browsers.  Based on patch by Oleg "
"Broytman."

#: ../../../Misc/NEWS:1008 ../../../Misc/NEWS:4110
msgid ""
"`bpo-27939 <https://bugs.python.org/issue27939>`__: Fixed bugs in tkinter."
"ttk.LabeledScale and tkinter.Scale caused by representing the scale as float "
"value internally in Tk.  tkinter.IntVar now works if float value is set to "
"underlying Tk variable."
msgstr ""
"`bpo-27939 <https://bugs.python.org/issue27939>`__: Fixed bugs in tkinter."
"ttk.LabeledScale and tkinter.Scale caused by representing the scale as float "
"value internally in Tk.  tkinter.IntVar now works if float value is set to "
"underlying Tk variable."

#: ../../../Misc/NEWS:1012
msgid ""
"`bpo-18844 <https://bugs.python.org/issue18844>`__: The various ways of "
"specifying weights for random.choices() now produce the same result "
"sequences."
msgstr ""
"`bpo-18844 <https://bugs.python.org/issue18844>`__: The various ways of "
"specifying weights for random.choices() now produce the same result "
"sequences."

#: ../../../Misc/NEWS:1015 ../../../Misc/NEWS:4114
msgid ""
"`bpo-28255 <https://bugs.python.org/issue28255>`__: calendar.TextCalendar()."
"prmonth() no longer prints a space at the start of new line after printing a "
"month's calendar.  Patch by Xiang Zhang."
msgstr ""
"`bpo-28255 <https://bugs.python.org/issue28255>`__: calendar.TextCalendar()."
"prmonth() no longer prints a space at the start of new line after printing a "
"month's calendar.  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1019 ../../../Misc/NEWS:4118
msgid ""
"`bpo-20491 <https://bugs.python.org/issue20491>`__: The textwrap.TextWrapper "
"class now honors non-breaking spaces. Based on patch by Kaarle Ritvanen."
msgstr ""
"`bpo-20491 <https://bugs.python.org/issue20491>`__: The textwrap.TextWrapper "
"class now honors non-breaking spaces. Based on patch by Kaarle Ritvanen."

#: ../../../Misc/NEWS:1022 ../../../Misc/NEWS:4121
msgid ""
"`bpo-28353 <https://bugs.python.org/issue28353>`__: os.fwalk() no longer "
"fails on broken links."
msgstr ""
"`bpo-28353 <https://bugs.python.org/issue28353>`__: os.fwalk() no longer "
"fails on broken links."

#: ../../../Misc/NEWS:1024
msgid ""
"`bpo-28430 <https://bugs.python.org/issue28430>`__: Fix iterator of C "
"implemented asyncio.Future doesn't accept non-None value is passed to it."
"send(val)."
msgstr ""
"`bpo-28430 <https://bugs.python.org/issue28430>`__: Fix iterator of C "
"implemented asyncio.Future doesn't accept non-None value is passed to it."
"send(val)."

#: ../../../Misc/NEWS:1027
msgid ""
"`bpo-27025 <https://bugs.python.org/issue27025>`__: Generated names for "
"Tkinter widgets now start by the \"!\" prefix for readability."
msgstr ""
"`bpo-27025 <https://bugs.python.org/issue27025>`__: Generated names for "
"Tkinter widgets now start by the \"!\" prefix for readability."

#: ../../../Misc/NEWS:1030 ../../../Misc/NEWS:4123
msgid ""
"`bpo-25464 <https://bugs.python.org/issue25464>`__: Fixed HList."
"header_exists() in tkinter.tix module by addin a workaround to Tix library "
"bug."
msgstr ""
"`bpo-25464 <https://bugs.python.org/issue25464>`__: Fixed HList."
"header_exists() in tkinter.tix module by addin a workaround to Tix library "
"bug."

#: ../../../Misc/NEWS:1033
msgid ""
"`bpo-28488 <https://bugs.python.org/issue28488>`__: shutil.make_archive() no "
"longer adds entry \"./\" to ZIP archive."
msgstr ""
"`bpo-28488 <https://bugs.python.org/issue28488>`__: shutil.make_archive() no "
"longer adds entry \"./\" to ZIP archive."

#: ../../../Misc/NEWS:1035
msgid ""
"`bpo-25953 <https://bugs.python.org/issue25953>`__: re.sub() now raises an "
"error for invalid numerical group reference in replacement template even if "
"the pattern is not found in the string.  Error message for invalid group "
"reference now includes the group index and the position of the reference. "
"Based on patch by SilentGhost."
msgstr ""
"`bpo-25953 <https://bugs.python.org/issue25953>`__: re.sub() now raises an "
"error for invalid numerical group reference in replacement template even if "
"the pattern is not found in the string.  Error message for invalid group "
"reference now includes the group index and the position of the reference. "
"Based on patch by SilentGhost."

#: ../../../Misc/NEWS:1041
msgid ""
"`bpo-18219 <https://bugs.python.org/issue18219>`__: Optimize csv.DictWriter "
"for large number of columns. Patch by Mariatta Wijaya."
msgstr ""
"`bpo-18219 <https://bugs.python.org/issue18219>`__: Optimize csv.DictWriter "
"for large number of columns. Patch by Mariatta Wijaya."

#: ../../../Misc/NEWS:1044
msgid ""
"`bpo-28448 <https://bugs.python.org/issue28448>`__: Fix C implemented "
"asyncio.Future didn't work on Windows."
msgstr ""
"`bpo-28448 <https://bugs.python.org/issue28448>`__: Fix C implemented "
"asyncio.Future didn't work on Windows."

#: ../../../Misc/NEWS:1046
msgid ""
"`bpo-28480 <https://bugs.python.org/issue28480>`__: Fix error building "
"socket module when multithreading is disabled."
msgstr ""
"`bpo-28480 <https://bugs.python.org/issue28480>`__: Fix error building "
"socket module when multithreading is disabled."

#: ../../../Misc/NEWS:1049 ../../../Misc/NEWS:4128
msgid ""
"`bpo-24452 <https://bugs.python.org/issue24452>`__: Make webbrowser support "
"Chrome on Mac OS X."
msgstr ""
"`bpo-24452 <https://bugs.python.org/issue24452>`__: Make webbrowser support "
"Chrome on Mac OS X."

#: ../../../Misc/NEWS:1051 ../../../Misc/NEWS:4130
msgid ""
"`bpo-20766 <https://bugs.python.org/issue20766>`__: Fix references leaked by "
"pdb in the handling of SIGINT handlers."
msgstr ""
"`bpo-20766 <https://bugs.python.org/issue20766>`__: Fix references leaked by "
"pdb in the handling of SIGINT handlers."

#: ../../../Misc/NEWS:1054
msgid ""
"`bpo-28492 <https://bugs.python.org/issue28492>`__: Fix how StopIteration "
"exception is raised in _asyncio.Future."
msgstr ""
"`bpo-28492 <https://bugs.python.org/issue28492>`__: Fix how StopIteration "
"exception is raised in _asyncio.Future."

#: ../../../Misc/NEWS:1056
msgid ""
"`bpo-28500 <https://bugs.python.org/issue28500>`__: Fix asyncio to handle "
"async gens GC from another thread."
msgstr ""
"`bpo-28500 <https://bugs.python.org/issue28500>`__: Fix asyncio to handle "
"async gens GC from another thread."

#: ../../../Misc/NEWS:1058 ../../../Misc/NEWS:4414
msgid ""
"`bpo-26923 <https://bugs.python.org/issue26923>`__: Fix asyncio.Gather to "
"refuse being cancelled once all children are done. Patch by Johannes Ebke."
msgstr ""
"`bpo-26923 <https://bugs.python.org/issue26923>`__: Fix asyncio.Gather to "
"refuse being cancelled once all children are done. Patch by Johannes Ebke."

#: ../../../Misc/NEWS:1062 ../../../Misc/NEWS:4418
msgid ""
"`bpo-26796 <https://bugs.python.org/issue26796>`__: Don't configure the "
"number of workers for default threadpool executor. Initial patch by Hans "
"Lawrenz."
msgstr ""
"`bpo-26796 <https://bugs.python.org/issue26796>`__: Don't configure the "
"number of workers for default threadpool executor. Initial patch by Hans "
"Lawrenz."

#: ../../../Misc/NEWS:1066
msgid ""
"`bpo-28544 <https://bugs.python.org/issue28544>`__: Implement asyncio.Task "
"in C."
msgstr ""
"`bpo-28544 <https://bugs.python.org/issue28544>`__: Implement asyncio.Task "
"in C."

#: ../../../Misc/NEWS:1071
msgid ""
"`bpo-28522 <https://bugs.python.org/issue28522>`__: Fixes mishandled buffer "
"reallocation in getpathp.c"
msgstr ""
"`bpo-28522 <https://bugs.python.org/issue28522>`__: Fixes mishandled buffer "
"reallocation in getpathp.c"

#: ../../../Misc/NEWS:1076 ../../../Misc/NEWS:4543
msgid ""
"`bpo-28444 <https://bugs.python.org/issue28444>`__: Fix missing extensions "
"modules when cross compiling."
msgstr ""
"`bpo-28444 <https://bugs.python.org/issue28444>`__: Fix missing extensions "
"modules when cross compiling."

#: ../../../Misc/NEWS:1078
msgid ""
"`bpo-28208 <https://bugs.python.org/issue28208>`__: Update Windows build and "
"OS X installers to use SQLite 3.14.2."
msgstr ""
"`bpo-28208 <https://bugs.python.org/issue28208>`__: Update Windows build and "
"OS X installers to use SQLite 3.14.2."

#: ../../../Misc/NEWS:1080 ../../../Misc/NEWS:4545
msgid ""
"`bpo-28248 <https://bugs.python.org/issue28248>`__: Update Windows build and "
"OS X installers to use OpenSSL 1.0.2j."
msgstr ""
"`bpo-28248 <https://bugs.python.org/issue28248>`__: Update Windows build and "
"OS X installers to use OpenSSL 1.0.2j."

#: ../../../Misc/NEWS:1085
msgid ""
"`bpo-26944 <https://bugs.python.org/issue26944>`__: Fix test_posix for "
"Android where 'id -G' is entirely wrong or missing the effective gid."
msgstr ""
"`bpo-26944 <https://bugs.python.org/issue26944>`__: Fix test_posix for "
"Android where 'id -G' is entirely wrong or missing the effective gid."

#: ../../../Misc/NEWS:1088 ../../../Misc/NEWS:4495
msgid ""
"`bpo-28409 <https://bugs.python.org/issue28409>`__: regrtest: fix the parser "
"of command line arguments."
msgstr ""
"`bpo-28409 <https://bugs.python.org/issue28409>`__: regrtest: fix the parser "
"of command line arguments."

#: ../../../Misc/NEWS:1092
msgid "Python 3.6.0 beta 2"
msgstr "Python 3.6.0 beta 2"

#: ../../../Misc/NEWS:1094
msgid "*Release date: 2016-10-10*"
msgstr "*Date de sortie : 2016-10-10*"

#: ../../../Misc/NEWS:1099
msgid ""
"`bpo-28183 <https://bugs.python.org/issue28183>`__: Optimize and cleanup "
"dict iteration."
msgstr ""
"`bpo-28183 <https://bugs.python.org/issue28183>`__: Optimize and cleanup "
"dict iteration."

#: ../../../Misc/NEWS:1101
msgid ""
"`bpo-26081 <https://bugs.python.org/issue26081>`__: Added C implementation "
"of asyncio.Future. Original patch by Yury Selivanov."
msgstr ""
"`bpo-26081 <https://bugs.python.org/issue26081>`__: Added C implementation "
"of asyncio.Future. Original patch by Yury Selivanov."

#: ../../../Misc/NEWS:1104 ../../../Misc/NEWS:3949
msgid ""
"`bpo-28379 <https://bugs.python.org/issue28379>`__: Added sanity checks and "
"tests for PyUnicode_CopyCharacters(). Patch by Xiang Zhang."
msgstr ""
"`bpo-28379 <https://bugs.python.org/issue28379>`__: Added sanity checks and "
"tests for PyUnicode_CopyCharacters(). Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1107 ../../../Misc/NEWS:3952
msgid ""
"`bpo-28376 <https://bugs.python.org/issue28376>`__: The type of long range "
"iterator is now registered as Iterator. Patch by Oren Milman."
msgstr ""
"`bpo-28376 <https://bugs.python.org/issue28376>`__: The type of long range "
"iterator is now registered as Iterator. Patch by Oren Milman."

#: ../../../Misc/NEWS:1110
msgid ""
"`bpo-28376 <https://bugs.python.org/issue28376>`__: Creating instances of "
"range_iterator by calling range_iterator type now is deprecated.  Patch by "
"Oren Milman."
msgstr ""
"`bpo-28376 <https://bugs.python.org/issue28376>`__: Creating instances of "
"range_iterator by calling range_iterator type now is deprecated.  Patch by "
"Oren Milman."

#: ../../../Misc/NEWS:1113 ../../../Misc/NEWS:3955
msgid ""
"`bpo-28376 <https://bugs.python.org/issue28376>`__: The constructor of "
"range_iterator now checks that step is not 0. Patch by Oren Milman."
msgstr ""
"`bpo-28376 <https://bugs.python.org/issue28376>`__: The constructor of "
"range_iterator now checks that step is not 0. Patch by Oren Milman."

#: ../../../Misc/NEWS:1116 ../../../Misc/NEWS:3958
msgid ""
"`bpo-26906 <https://bugs.python.org/issue26906>`__: Resolving special "
"methods of uninitialized type now causes implicit initialization of the type "
"instead of a fail."
msgstr ""
"`bpo-26906 <https://bugs.python.org/issue26906>`__: Resolving special "
"methods of uninitialized type now causes implicit initialization of the type "
"instead of a fail."

#: ../../../Misc/NEWS:1119 ../../../Misc/NEWS:3961
msgid ""
"`bpo-18287 <https://bugs.python.org/issue18287>`__: PyType_Ready() now "
"checks that tp_name is not NULL. Original patch by Niklas Koep."
msgstr ""
"`bpo-18287 <https://bugs.python.org/issue18287>`__: PyType_Ready() now "
"checks that tp_name is not NULL. Original patch by Niklas Koep."

#: ../../../Misc/NEWS:1122 ../../../Misc/NEWS:3964
msgid ""
"`bpo-24098 <https://bugs.python.org/issue24098>`__: Fixed possible crash "
"when AST is changed in process of compiling it."
msgstr ""
"`bpo-24098 <https://bugs.python.org/issue24098>`__: Fixed possible crash "
"when AST is changed in process of compiling it."

#: ../../../Misc/NEWS:1125
msgid ""
"`bpo-28201 <https://bugs.python.org/issue28201>`__: Dict reduces possibility "
"of 2nd conflict in hash table when hashes have same lower bits."
msgstr ""
"`bpo-28201 <https://bugs.python.org/issue28201>`__: Dict reduces possibility "
"of 2nd conflict in hash table when hashes have same lower bits."

#: ../../../Misc/NEWS:1128 ../../../Misc/NEWS:3967
msgid ""
"`bpo-28350 <https://bugs.python.org/issue28350>`__: String constants with "
"null character no longer interned."
msgstr ""
"`bpo-28350 <https://bugs.python.org/issue28350>`__: String constants with "
"null character no longer interned."

#: ../../../Misc/NEWS:1130 ../../../Misc/NEWS:3969
msgid ""
"`bpo-26617 <https://bugs.python.org/issue26617>`__: Fix crash when GC runs "
"during weakref callbacks."
msgstr ""
"`bpo-26617 <https://bugs.python.org/issue26617>`__: Fix crash when GC runs "
"during weakref callbacks."

#: ../../../Misc/NEWS:1132 ../../../Misc/NEWS:3971
msgid ""
"`bpo-27942 <https://bugs.python.org/issue27942>`__: String constants now "
"interned recursively in tuples and frozensets."
msgstr ""
"`bpo-27942 <https://bugs.python.org/issue27942>`__: String constants now "
"interned recursively in tuples and frozensets."

#: ../../../Misc/NEWS:1134 ../../../Misc/NEWS:3973
msgid ""
"`bpo-21578 <https://bugs.python.org/issue21578>`__: Fixed misleading error "
"message when ImportError called with invalid keyword args."
msgstr ""
"`bpo-21578 <https://bugs.python.org/issue21578>`__: Fixed misleading error "
"message when ImportError called with invalid keyword args."

#: ../../../Misc/NEWS:1137
msgid ""
"`bpo-28203 <https://bugs.python.org/issue28203>`__: Fix incorrect type in "
"complex(1.0, {2:3}) error message. Patch by Soumya Sharma."
msgstr ""
"`bpo-28203 <https://bugs.python.org/issue28203>`__: Fix incorrect type in "
"complex(1.0, {2:3}) error message. Patch by Soumya Sharma."

#: ../../../Misc/NEWS:1140
msgid ""
"`bpo-28086 <https://bugs.python.org/issue28086>`__: Single var-positional "
"argument of tuple subtype was passed unscathed to the C-defined function.  "
"Now it is converted to exact tuple."
msgstr ""
"`bpo-28086 <https://bugs.python.org/issue28086>`__: Single var-positional "
"argument of tuple subtype was passed unscathed to the C-defined function.  "
"Now it is converted to exact tuple."

#: ../../../Misc/NEWS:1143
msgid ""
"`bpo-28214 <https://bugs.python.org/issue28214>`__: Now __set_name__ is "
"looked up on the class instead of the instance."
msgstr ""
"`bpo-28214 <https://bugs.python.org/issue28214>`__: Now __set_name__ is "
"looked up on the class instead of the instance."

#: ../../../Misc/NEWS:1146 ../../../Misc/NEWS:3979
msgid ""
"`bpo-27955 <https://bugs.python.org/issue27955>`__: Fallback on reading /dev/"
"urandom device when the getrandom() syscall fails with EPERM, for example "
"when blocked by SECCOMP."
msgstr ""
"`bpo-27955 <https://bugs.python.org/issue27955>`__: Fallback on reading /dev/"
"urandom device when the getrandom() syscall fails with EPERM, for example "
"when blocked by SECCOMP."

#: ../../../Misc/NEWS:1149
msgid ""
"`bpo-28192 <https://bugs.python.org/issue28192>`__: Don't import readline in "
"isolated mode."
msgstr ""
"`bpo-28192 <https://bugs.python.org/issue28192>`__: Don't import readline in "
"isolated mode."

#: ../../../Misc/NEWS:1151
msgid "Upgrade internal unicode databases to Unicode version 9.0.0."
msgstr ""

#: ../../../Misc/NEWS:1153 ../../../Misc/NEWS:3982
msgid ""
"`bpo-28131 <https://bugs.python.org/issue28131>`__: Fix a regression in "
"zipimport's compile_source().  zipimport should use the same optimization "
"level as the interpreter."
msgstr ""
"`bpo-28131 <https://bugs.python.org/issue28131>`__: Fix a regression in "
"zipimport's compile_source().  zipimport should use the same optimization "
"level as the interpreter."

#: ../../../Misc/NEWS:1156
msgid ""
"`bpo-28126 <https://bugs.python.org/issue28126>`__: Replace Py_MEMCPY with "
"memcpy(). Visual Studio can properly optimize memcpy()."
msgstr ""
"`bpo-28126 <https://bugs.python.org/issue28126>`__: Replace Py_MEMCPY with "
"memcpy(). Visual Studio can properly optimize memcpy()."

#: ../../../Misc/NEWS:1159
msgid ""
"`bpo-28120 <https://bugs.python.org/issue28120>`__: Fix dict.pop() for "
"splitted dictionary when trying to remove a \"pending key\" (Not yet "
"inserted in split-table). Patch by Xiang Zhang."
msgstr ""
"`bpo-28120 <https://bugs.python.org/issue28120>`__: Fix dict.pop() for "
"splitted dictionary when trying to remove a \"pending key\" (Not yet "
"inserted in split-table). Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1162
msgid ""
"`bpo-26182 <https://bugs.python.org/issue26182>`__: Raise DeprecationWarning "
"when async and await keywords are used as variable/attribute/class/function "
"name."
msgstr ""
"`bpo-26182 <https://bugs.python.org/issue26182>`__: Raise DeprecationWarning "
"when async and await keywords are used as variable/attribute/class/function "
"name."

#: ../../../Misc/NEWS:1168
msgid ""
"`bpo-27998 <https://bugs.python.org/issue27998>`__: Fixed bytes path support "
"in os.scandir() on Windows. Patch by Eryk Sun."
msgstr ""
"`bpo-27998 <https://bugs.python.org/issue27998>`__: Fixed bytes path support "
"in os.scandir() on Windows. Patch by Eryk Sun."

#: ../../../Misc/NEWS:1171
msgid ""
"`bpo-28317 <https://bugs.python.org/issue28317>`__: The disassembler now "
"decodes FORMAT_VALUE argument."
msgstr ""
"`bpo-28317 <https://bugs.python.org/issue28317>`__: The disassembler now "
"decodes FORMAT_VALUE argument."

#: ../../../Misc/NEWS:1173 ../../../Misc/NEWS:4133
msgid ""
"`bpo-26293 <https://bugs.python.org/issue26293>`__: Fixed writing ZIP files "
"that starts not from the start of the file.  Offsets in ZIP file now are "
"relative to the start of the archive in conforming to the specification."
msgstr ""
"`bpo-26293 <https://bugs.python.org/issue26293>`__: Fixed writing ZIP files "
"that starts not from the start of the file.  Offsets in ZIP file now are "
"relative to the start of the archive in conforming to the specification."

#: ../../../Misc/NEWS:1177
msgid ""
"`bpo-28380 <https://bugs.python.org/issue28380>`__: unittest.mock Mock "
"autospec functions now properly support assert_called, assert_not_called, "
"and assert_called_once."
msgstr ""
"`bpo-28380 <https://bugs.python.org/issue28380>`__: unittest.mock Mock "
"autospec functions now properly support assert_called, assert_not_called, "
"and assert_called_once."

#: ../../../Misc/NEWS:1180
msgid ""
"`bpo-27181 <https://bugs.python.org/issue27181>`__ remove statistics."
"geometric_mean and defer until 3.7."
msgstr ""
"`bpo-27181 <https://bugs.python.org/issue27181>`__ remove statistics."
"geometric_mean and defer until 3.7."

#: ../../../Misc/NEWS:1182
msgid ""
"`bpo-28229 <https://bugs.python.org/issue28229>`__: lzma module now supports "
"pathlib."
msgstr ""
"`bpo-28229 <https://bugs.python.org/issue28229>`__: lzma module now supports "
"pathlib."

#: ../../../Misc/NEWS:1184 ../../../Misc/NEWS:4137
msgid ""
"`bpo-28321 <https://bugs.python.org/issue28321>`__: Fixed writing non-BMP "
"characters with binary format in plistlib."
msgstr ""
"`bpo-28321 <https://bugs.python.org/issue28321>`__: Fixed writing non-BMP "
"characters with binary format in plistlib."

#: ../../../Misc/NEWS:1186
msgid ""
"`bpo-28225 <https://bugs.python.org/issue28225>`__: bz2 module now supports "
"pathlib.  Initial patch by Ethan Furman."
msgstr ""
"`bpo-28225 <https://bugs.python.org/issue28225>`__: bz2 module now supports "
"pathlib.  Initial patch by Ethan Furman."

#: ../../../Misc/NEWS:1188
msgid ""
"`bpo-28227 <https://bugs.python.org/issue28227>`__: gzip now supports "
"pathlib.  Patch by Ethan Furman."
msgstr ""
"`bpo-28227 <https://bugs.python.org/issue28227>`__: gzip now supports "
"pathlib.  Patch by Ethan Furman."

#: ../../../Misc/NEWS:1190
msgid ""
"`bpo-27358 <https://bugs.python.org/issue27358>`__: Optimized merging var-"
"keyword arguments and improved error message when passing a non-mapping as a "
"var-keyword argument."
msgstr ""
"`bpo-27358 <https://bugs.python.org/issue27358>`__: Optimized merging var-"
"keyword arguments and improved error message when passing a non-mapping as a "
"var-keyword argument."

#: ../../../Misc/NEWS:1193
msgid ""
"`bpo-28257 <https://bugs.python.org/issue28257>`__: Improved error message "
"when passing a non-iterable as a var-positional argument.  Added opcode "
"BUILD_TUPLE_UNPACK_WITH_CALL."
msgstr ""
"`bpo-28257 <https://bugs.python.org/issue28257>`__: Improved error message "
"when passing a non-iterable as a var-positional argument.  Added opcode "
"BUILD_TUPLE_UNPACK_WITH_CALL."

#: ../../../Misc/NEWS:1196 ../../../Misc/NEWS:4139
msgid ""
"`bpo-28322 <https://bugs.python.org/issue28322>`__: Fixed possible crashes "
"when unpickle itertools objects from incorrect pickle data.  Based on patch "
"by John Leitch."
msgstr ""
"`bpo-28322 <https://bugs.python.org/issue28322>`__: Fixed possible crashes "
"when unpickle itertools objects from incorrect pickle data.  Based on patch "
"by John Leitch."

#: ../../../Misc/NEWS:1199
msgid ""
"`bpo-28228 <https://bugs.python.org/issue28228>`__: imghdr now supports "
"pathlib."
msgstr ""
"`bpo-28228 <https://bugs.python.org/issue28228>`__: imghdr now supports "
"pathlib."

#: ../../../Misc/NEWS:1201
msgid ""
"`bpo-28226 <https://bugs.python.org/issue28226>`__: compileall now supports "
"pathlib."
msgstr ""
"`bpo-28226 <https://bugs.python.org/issue28226>`__: compileall now supports "
"pathlib."

#: ../../../Misc/NEWS:1203
msgid ""
"`bpo-28314 <https://bugs.python.org/issue28314>`__: Fix function declaration "
"(C flags) for the getiterator() method of xml.etree.ElementTree.Element."
msgstr ""
"`bpo-28314 <https://bugs.python.org/issue28314>`__: Fix function declaration "
"(C flags) for the getiterator() method of xml.etree.ElementTree.Element."

#: ../../../Misc/NEWS:1206
msgid ""
"`bpo-28148 <https://bugs.python.org/issue28148>`__: Stop using localtime() "
"and gmtime() in the time module."
msgstr ""
"`bpo-28148 <https://bugs.python.org/issue28148>`__: Stop using localtime() "
"and gmtime() in the time module."

#: ../../../Misc/NEWS:1209
msgid ""
"Introduced platform independent _PyTime_localtime API that is similar to "
"POSIX localtime_r, but available on all platforms.  Patch by Ed Schouten."
msgstr ""

#: ../../../Misc/NEWS:1213 ../../../Misc/NEWS:4148
msgid ""
"`bpo-28253 <https://bugs.python.org/issue28253>`__: Fixed calendar functions "
"for extreme months: 0001-01 and 9999-12."
msgstr ""
"`bpo-28253 <https://bugs.python.org/issue28253>`__: Fixed calendar functions "
"for extreme months: 0001-01 and 9999-12."

#: ../../../Misc/NEWS:1216 ../../../Misc/NEWS:4151
msgid ""
"Methods itermonthdays() and itermonthdays2() are reimplemented so that they "
"don't call itermonthdates() which can cause datetime.date under/overflow."
msgstr ""

#: ../../../Misc/NEWS:1220 ../../../Misc/NEWS:4155
msgid ""
"`bpo-28275 <https://bugs.python.org/issue28275>`__: Fixed possible use after "
"free in the decompress() methods of the LZMADecompressor and BZ2Decompressor "
"classes. Original patch by John Leitch."
msgstr ""
"`bpo-28275 <https://bugs.python.org/issue28275>`__: Fixed possible use after "
"free in the decompress() methods of the LZMADecompressor and BZ2Decompressor "
"classes. Original patch by John Leitch."

#: ../../../Misc/NEWS:1224 ../../../Misc/NEWS:4159
msgid ""
"`bpo-27897 <https://bugs.python.org/issue27897>`__: Fixed possible crash in "
"sqlite3.Connection.create_collation() if pass invalid string-like object as "
"a name.  Patch by Xiang Zhang."
msgstr ""
"`bpo-27897 <https://bugs.python.org/issue27897>`__: Fixed possible crash in "
"sqlite3.Connection.create_collation() if pass invalid string-like object as "
"a name.  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1227
msgid ""
"`bpo-18844 <https://bugs.python.org/issue18844>`__: random.choices() now has "
"k as a keyword-only argument to improve the readability of common cases and "
"come into line with the signature used in other languages."
msgstr ""
"`bpo-18844 <https://bugs.python.org/issue18844>`__: random.choices() now has "
"k as a keyword-only argument to improve the readability of common cases and "
"come into line with the signature used in other languages."

#: ../../../Misc/NEWS:1231 ../../../Misc/NEWS:4162
msgid ""
"`bpo-18893 <https://bugs.python.org/issue18893>`__: Fix invalid exception "
"handling in Lib/ctypes/macholib/dyld.py. Patch by Madison May."
msgstr ""
"`bpo-18893 <https://bugs.python.org/issue18893>`__: Fix invalid exception "
"handling in Lib/ctypes/macholib/dyld.py. Patch by Madison May."

#: ../../../Misc/NEWS:1234
msgid ""
"`bpo-27611 <https://bugs.python.org/issue27611>`__: Fixed support of default "
"root window in the tkinter.tix module. Added the master parameter in the "
"DisplayStyle constructor."
msgstr ""
"`bpo-27611 <https://bugs.python.org/issue27611>`__: Fixed support of default "
"root window in the tkinter.tix module. Added the master parameter in the "
"DisplayStyle constructor."

#: ../../../Misc/NEWS:1237 ../../../Misc/NEWS:4167
msgid ""
"`bpo-27348 <https://bugs.python.org/issue27348>`__: In the traceback module, "
"restore the formatting of exception messages like \"Exception: None\".  This "
"fixes a regression introduced in 3.5a2."
msgstr ""
"`bpo-27348 <https://bugs.python.org/issue27348>`__: In the traceback module, "
"restore the formatting of exception messages like \"Exception: None\".  This "
"fixes a regression introduced in 3.5a2."

#: ../../../Misc/NEWS:1241 ../../../Misc/NEWS:4171
msgid ""
"`bpo-25651 <https://bugs.python.org/issue25651>`__: Allow falsy values to be "
"used for msg parameter of subTest()."
msgstr ""
"`bpo-25651 <https://bugs.python.org/issue25651>`__: Allow falsy values to be "
"used for msg parameter of subTest()."

#: ../../../Misc/NEWS:1243
msgid ""
"`bpo-27778 <https://bugs.python.org/issue27778>`__: Fix a memory leak in os."
"getrandom() when the getrandom() is interrupted by a signal and a signal "
"handler raises a Python exception."
msgstr ""
"`bpo-27778 <https://bugs.python.org/issue27778>`__: Fix a memory leak in os."
"getrandom() when the getrandom() is interrupted by a signal and a signal "
"handler raises a Python exception."

#: ../../../Misc/NEWS:1246
msgid ""
"`bpo-28200 <https://bugs.python.org/issue28200>`__: Fix memory leak on "
"Windows in the os module (fix path_converter() function)."
msgstr ""
"`bpo-28200 <https://bugs.python.org/issue28200>`__: Fix memory leak on "
"Windows in the os module (fix path_converter() function)."

#: ../../../Misc/NEWS:1249
msgid ""
"`bpo-25400 <https://bugs.python.org/issue25400>`__: RobotFileParser now "
"correctly returns default values for crawl_delay and request_rate.  Initial "
"patch by Peter Wirtz."
msgstr ""
"`bpo-25400 <https://bugs.python.org/issue25400>`__: RobotFileParser now "
"correctly returns default values for crawl_delay and request_rate.  Initial "
"patch by Peter Wirtz."

#: ../../../Misc/NEWS:1252 ../../../Misc/NEWS:4173
msgid ""
"`bpo-27932 <https://bugs.python.org/issue27932>`__: Prevent memory leak in "
"win32_ver()."
msgstr ""
"`bpo-27932 <https://bugs.python.org/issue27932>`__: Prevent memory leak in "
"win32_ver()."

#: ../../../Misc/NEWS:1254 ../../../Misc/NEWS:4175
msgid "Fix UnboundLocalError in socket._sendfile_use_sendfile."
msgstr ""

#: ../../../Misc/NEWS:1256 ../../../Misc/NEWS:4177
msgid ""
"`bpo-28075 <https://bugs.python.org/issue28075>`__: Check for "
"ERROR_ACCESS_DENIED in Windows implementation of os.stat().  Patch by Eryk "
"Sun."
msgstr ""
"`bpo-28075 <https://bugs.python.org/issue28075>`__: Check for "
"ERROR_ACCESS_DENIED in Windows implementation of os.stat().  Patch by Eryk "
"Sun."

#: ../../../Misc/NEWS:1259
msgid ""
"`bpo-22493 <https://bugs.python.org/issue22493>`__: Warning message emitted "
"by using inline flags in the middle of regular expression now contains a "
"(truncated) regex pattern. Patch by Tim Graham."
msgstr ""
"`bpo-22493 <https://bugs.python.org/issue22493>`__: Warning message emitted "
"by using inline flags in the middle of regular expression now contains a "
"(truncated) regex pattern. Patch by Tim Graham."

#: ../../../Misc/NEWS:1263 ../../../Misc/NEWS:4180
msgid ""
"`bpo-25270 <https://bugs.python.org/issue25270>`__: Prevent codecs."
"escape_encode() from raising SystemError when an empty bytestring is passed."
msgstr ""
"`bpo-25270 <https://bugs.python.org/issue25270>`__: Prevent codecs."
"escape_encode() from raising SystemError when an empty bytestring is passed."

#: ../../../Misc/NEWS:1266 ../../../Misc/NEWS:4183
msgid ""
"`bpo-28181 <https://bugs.python.org/issue28181>`__: Get antigravity over "
"HTTPS. Patch by Kaartic Sivaraam."
msgstr ""
"`bpo-28181 <https://bugs.python.org/issue28181>`__: Get antigravity over "
"HTTPS. Patch by Kaartic Sivaraam."

#: ../../../Misc/NEWS:1268 ../../../Misc/NEWS:4185
msgid ""
"`bpo-25895 <https://bugs.python.org/issue25895>`__: Enable WebSocket URL "
"schemes in urllib.parse.urljoin. Patch by Gergely Imreh and Markus "
"Holtermann."
msgstr ""
"`bpo-25895 <https://bugs.python.org/issue25895>`__: Enable WebSocket URL "
"schemes in urllib.parse.urljoin. Patch by Gergely Imreh and Markus "
"Holtermann."

#: ../../../Misc/NEWS:1271
msgid ""
"`bpo-28114 <https://bugs.python.org/issue28114>`__: Fix a crash in "
"parse_envlist() when env contains byte strings. Patch by Eryk Sun."
msgstr ""
"`bpo-28114 <https://bugs.python.org/issue28114>`__: Fix a crash in "
"parse_envlist() when env contains byte strings. Patch by Eryk Sun."

#: ../../../Misc/NEWS:1274 ../../../Misc/NEWS:4188
msgid ""
"`bpo-27599 <https://bugs.python.org/issue27599>`__: Fixed buffer overrun in "
"binascii.b2a_qp() and binascii.a2b_qp()."
msgstr ""
"`bpo-27599 <https://bugs.python.org/issue27599>`__: Fixed buffer overrun in "
"binascii.b2a_qp() and binascii.a2b_qp()."

#: ../../../Misc/NEWS:1276 ../../../Misc/NEWS:4378
msgid ""
"`bpo-27906 <https://bugs.python.org/issue27906>`__: Fix socket accept "
"exhaustion during high TCP traffic. Patch by Kevin Conway."
msgstr ""
"`bpo-27906 <https://bugs.python.org/issue27906>`__: Fix socket accept "
"exhaustion during high TCP traffic. Patch by Kevin Conway."

#: ../../../Misc/NEWS:1279 ../../../Misc/NEWS:4381
msgid ""
"`bpo-28174 <https://bugs.python.org/issue28174>`__: Handle when SO_REUSEPORT "
"isn't properly supported. Patch by Seth Michael Larson."
msgstr ""
"`bpo-28174 <https://bugs.python.org/issue28174>`__: Handle when SO_REUSEPORT "
"isn't properly supported. Patch by Seth Michael Larson."

#: ../../../Misc/NEWS:1282 ../../../Misc/NEWS:4384
msgid ""
"`bpo-26654 <https://bugs.python.org/issue26654>`__: Inspect functools."
"partial in asyncio.Handle.__repr__. Patch by iceboy."
msgstr ""
"`bpo-26654 <https://bugs.python.org/issue26654>`__: Inspect functools."
"partial in asyncio.Handle.__repr__. Patch by iceboy."

#: ../../../Misc/NEWS:1285 ../../../Misc/NEWS:4387
msgid ""
"`bpo-26909 <https://bugs.python.org/issue26909>`__: Fix slow pipes IO in "
"asyncio. Patch by INADA Naoki."
msgstr ""
"`bpo-26909 <https://bugs.python.org/issue26909>`__: Fix slow pipes IO in "
"asyncio. Patch by INADA Naoki."

#: ../../../Misc/NEWS:1288 ../../../Misc/NEWS:4390
msgid ""
"`bpo-28176 <https://bugs.python.org/issue28176>`__: Fix callbacks race in "
"asyncio.SelectorLoop.sock_connect."
msgstr ""
"`bpo-28176 <https://bugs.python.org/issue28176>`__: Fix callbacks race in "
"asyncio.SelectorLoop.sock_connect."

#: ../../../Misc/NEWS:1290 ../../../Misc/NEWS:4392
msgid ""
"`bpo-27759 <https://bugs.python.org/issue27759>`__: Fix selectors "
"incorrectly retain invalid file descriptors. Patch by Mark Williams."
msgstr ""
"`bpo-27759 <https://bugs.python.org/issue27759>`__: Fix selectors "
"incorrectly retain invalid file descriptors. Patch by Mark Williams."

#: ../../../Misc/NEWS:1293 ../../../Misc/NEWS:4395
msgid ""
"`bpo-28368 <https://bugs.python.org/issue28368>`__: Refuse monitoring "
"processes if the child watcher has no loop attached. Patch by Vincent Michel."
msgstr ""
"`bpo-28368 <https://bugs.python.org/issue28368>`__: Refuse monitoring "
"processes if the child watcher has no loop attached. Patch by Vincent Michel."

#: ../../../Misc/NEWS:1297 ../../../Misc/NEWS:4399
msgid ""
"`bpo-28369 <https://bugs.python.org/issue28369>`__: Raise RuntimeError when "
"transport's FD is used with add_reader, add_writer, etc."
msgstr ""
"`bpo-28369 <https://bugs.python.org/issue28369>`__: Raise RuntimeError when "
"transport's FD is used with add_reader, add_writer, etc."

#: ../../../Misc/NEWS:1300 ../../../Misc/NEWS:4402
msgid ""
"`bpo-28370 <https://bugs.python.org/issue28370>`__: Speedup asyncio."
"StreamReader.readexactly. Patch by –ö–æ—Ä–µ–Ω–±–µ—Ä–≥ –ú–∞—Ä–∫."
msgstr ""
"`bpo-28370 <https://bugs.python.org/issue28370>`__: Speedup asyncio."
"StreamReader.readexactly. Patch by –ö–æ—Ä–µ–Ω–±–µ—Ä–≥ –ú–∞—Ä–∫."

#: ../../../Misc/NEWS:1303 ../../../Misc/NEWS:4405
msgid ""
"`bpo-28371 <https://bugs.python.org/issue28371>`__: Deprecate passing "
"asyncio.Handles to run_in_executor."
msgstr ""
"`bpo-28371 <https://bugs.python.org/issue28371>`__: Deprecate passing "
"asyncio.Handles to run_in_executor."

#: ../../../Misc/NEWS:1305 ../../../Misc/NEWS:4407
msgid ""
"`bpo-28372 <https://bugs.python.org/issue28372>`__: Fix asyncio to support "
"formatting of non-python coroutines."
msgstr ""
"`bpo-28372 <https://bugs.python.org/issue28372>`__: Fix asyncio to support "
"formatting of non-python coroutines."

#: ../../../Misc/NEWS:1307 ../../../Misc/NEWS:4409
msgid ""
"`bpo-28399 <https://bugs.python.org/issue28399>`__: Remove UNIX socket from "
"FS before binding. Patch by –ö–æ—Ä–µ–Ω–±–µ—Ä–≥ –ú–∞—Ä–∫."
msgstr ""
"`bpo-28399 <https://bugs.python.org/issue28399>`__: Remove UNIX socket from "
"FS before binding. Patch by –ö–æ—Ä–µ–Ω–±–µ—Ä–≥ –ú–∞—Ä–∫."

#: ../../../Misc/NEWS:1310 ../../../Misc/NEWS:4412
msgid ""
"`bpo-27972 <https://bugs.python.org/issue27972>`__: Prohibit Tasks to await "
"on themselves."
msgstr ""
"`bpo-27972 <https://bugs.python.org/issue27972>`__: Prohibit Tasks to await "
"on themselves."

#: ../../../Misc/NEWS:1315
msgid ""
"`bpo-28402 <https://bugs.python.org/issue28402>`__: Adds signed catalog "
"files for stdlib on Windows."
msgstr ""
"`bpo-28402 <https://bugs.python.org/issue28402>`__: Adds signed catalog "
"files for stdlib on Windows."

#: ../../../Misc/NEWS:1317
msgid ""
"`bpo-28333 <https://bugs.python.org/issue28333>`__: Enables Unicode for ps1/"
"ps2 and input() prompts. (Patch by Eryk Sun)"
msgstr ""
"`bpo-28333 <https://bugs.python.org/issue28333>`__: Enables Unicode for ps1/"
"ps2 and input() prompts. (Patch by Eryk Sun)"

#: ../../../Misc/NEWS:1320 ../../../Misc/NEWS:4518
msgid ""
"`bpo-28251 <https://bugs.python.org/issue28251>`__: Improvements to help "
"manuals on Windows."
msgstr ""
"`bpo-28251 <https://bugs.python.org/issue28251>`__: Improvements to help "
"manuals on Windows."

#: ../../../Misc/NEWS:1322 ../../../Misc/NEWS:4520
msgid ""
"`bpo-28110 <https://bugs.python.org/issue28110>`__: launcher.msi has "
"different product codes between 32-bit and 64-bit"
msgstr ""
"`bpo-28110 <https://bugs.python.org/issue28110>`__: launcher.msi has "
"different product codes between 32-bit and 64-bit"

#: ../../../Misc/NEWS:1325
msgid ""
"`bpo-28161 <https://bugs.python.org/issue28161>`__: Opening CON for write "
"access fails"
msgstr ""
"`bpo-28161 <https://bugs.python.org/issue28161>`__: Opening CON for write "
"access fails"

#: ../../../Misc/NEWS:1327
msgid ""
"`bpo-28162 <https://bugs.python.org/issue28162>`__: WindowsConsoleIO "
"readall() fails if first line starts with Ctrl+Z"
msgstr ""
"`bpo-28162 <https://bugs.python.org/issue28162>`__: WindowsConsoleIO "
"readall() fails if first line starts with Ctrl+Z"

#: ../../../Misc/NEWS:1330
msgid ""
"`bpo-28163 <https://bugs.python.org/issue28163>`__: WindowsConsoleIO "
"fileno() passes wrong flags to _open_osfhandle"
msgstr ""
"`bpo-28163 <https://bugs.python.org/issue28163>`__: WindowsConsoleIO "
"fileno() passes wrong flags to _open_osfhandle"

#: ../../../Misc/NEWS:1333
msgid ""
"`bpo-28164 <https://bugs.python.org/issue28164>`__: _PyIO_get_console_type "
"fails for various paths"
msgstr ""
"`bpo-28164 <https://bugs.python.org/issue28164>`__: _PyIO_get_console_type "
"fails for various paths"

#: ../../../Misc/NEWS:1335
msgid ""
"`bpo-28137 <https://bugs.python.org/issue28137>`__: Renames Windows path "
"file to ._pth"
msgstr ""
"`bpo-28137 <https://bugs.python.org/issue28137>`__: Renames Windows path "
"file to ._pth"

#: ../../../Misc/NEWS:1337
msgid ""
"`bpo-28138 <https://bugs.python.org/issue28138>`__: Windows ._pth file "
"should allow import site"
msgstr ""
"`bpo-28138 <https://bugs.python.org/issue28138>`__: Windows ._pth file "
"should allow import site"

#: ../../../Misc/NEWS:1342
msgid ""
"`bpo-28426 <https://bugs.python.org/issue28426>`__: Deprecated undocumented "
"functions PyUnicode_AsEncodedObject(), PyUnicode_AsDecodedObject(), "
"PyUnicode_AsDecodedUnicode() and PyUnicode_AsEncodedUnicode()."
msgstr ""
"`bpo-28426 <https://bugs.python.org/issue28426>`__: Deprecated undocumented "
"functions PyUnicode_AsEncodedObject(), PyUnicode_AsDecodedObject(), "
"PyUnicode_AsDecodedUnicode() and PyUnicode_AsEncodedUnicode()."

#: ../../../Misc/NEWS:1349 ../../../Misc/NEWS:4547
msgid ""
"`bpo-28258 <https://bugs.python.org/issue28258>`__: Fixed build with "
"Estonian locale (python-config and distclean targets in Makefile).  Patch by "
"Arfrever Frehtes Taifersar Arahesis."
msgstr ""
"`bpo-28258 <https://bugs.python.org/issue28258>`__: Fixed build with "
"Estonian locale (python-config and distclean targets in Makefile).  Patch by "
"Arfrever Frehtes Taifersar Arahesis."

#: ../../../Misc/NEWS:1352 ../../../Misc/NEWS:4550
msgid ""
"`bpo-26661 <https://bugs.python.org/issue26661>`__: setup.py now detects "
"system libffi with multiarch wrapper."
msgstr ""
"`bpo-26661 <https://bugs.python.org/issue26661>`__: setup.py now detects "
"system libffi with multiarch wrapper."

#: ../../../Misc/NEWS:1354 ../../../Misc/NEWS:4555
msgid ""
"`bpo-15819 <https://bugs.python.org/issue15819>`__: Remove redundant include "
"search directory option for building outside the source tree."
msgstr ""
"`bpo-15819 <https://bugs.python.org/issue15819>`__: Remove redundant include "
"search directory option for building outside the source tree."

#: ../../../Misc/NEWS:1360
msgid ""
"`bpo-28217 <https://bugs.python.org/issue28217>`__: Adds _testconsole module "
"to test console input."
msgstr ""
"`bpo-28217 <https://bugs.python.org/issue28217>`__: Adds _testconsole module "
"to test console input."

#: ../../../Misc/NEWS:1364
msgid "Python 3.6.0 beta 1"
msgstr "Python 3.6.0 beta 1"

#: ../../../Misc/NEWS:1366
msgid "*Release date: 2016-09-12*"
msgstr "*Date de sortie : 2016-09-12*"

#: ../../../Misc/NEWS:1371
msgid ""
"`bpo-23722 <https://bugs.python.org/issue23722>`__: The __class__ cell used "
"by zero-argument super() is now initialized from type.__new__ rather than "
"__build_class__, so class methods relying on that will now work correctly "
"when called from metaclass methods during class creation. Patch by Martin "
"Teichmann."
msgstr ""
"`bpo-23722 <https://bugs.python.org/issue23722>`__: The __class__ cell used "
"by zero-argument super() is now initialized from type.__new__ rather than "
"__build_class__, so class methods relying on that will now work correctly "
"when called from metaclass methods during class creation. Patch by Martin "
"Teichmann."

#: ../../../Misc/NEWS:1376 ../../../Misc/NEWS:3985
msgid ""
"`bpo-25221 <https://bugs.python.org/issue25221>`__: Fix corrupted result "
"from PyLong_FromLong(0) when Python is compiled with NSMALLPOSINTS = 0."
msgstr ""
"`bpo-25221 <https://bugs.python.org/issue25221>`__: Fix corrupted result "
"from PyLong_FromLong(0) when Python is compiled with NSMALLPOSINTS = 0."

#: ../../../Misc/NEWS:1379
msgid ""
"`bpo-27080 <https://bugs.python.org/issue27080>`__: Implement formatting "
"support for PEP 515.  Initial patch by Chris Angelico."
msgstr ""
"`bpo-27080 <https://bugs.python.org/issue27080>`__: Implement formatting "
"support for PEP 515.  Initial patch by Chris Angelico."

#: ../../../Misc/NEWS:1382
msgid ""
"`bpo-27199 <https://bugs.python.org/issue27199>`__: In tarfile, expose "
"copyfileobj bufsize to improve throughput. Patch by Jason Fried."
msgstr ""
"`bpo-27199 <https://bugs.python.org/issue27199>`__: In tarfile, expose "
"copyfileobj bufsize to improve throughput. Patch by Jason Fried."

#: ../../../Misc/NEWS:1385
msgid ""
"`bpo-27948 <https://bugs.python.org/issue27948>`__: In f-strings, only allow "
"backslashes inside the braces (where the expressions are).  This is a "
"breaking change from the 3.6 alpha releases, where backslashes are allowed "
"anywhere in an f-string.  Also, require that expressions inside f-strings be "
"enclosed within literal braces, and not escapes like ``f'\\x7b\"hi\"\\x7d'``."
msgstr ""
"`bpo-27948 <https://bugs.python.org/issue27948>`__: In f-strings, only allow "
"backslashes inside the braces (where the expressions are).  This is a "
"breaking change from the 3.6 alpha releases, where backslashes are allowed "
"anywhere in an f-string.  Also, require that expressions inside f-strings be "
"enclosed within literal braces, and not escapes like ``f'\\x7b\"hi\"\\x7d'``."

#: ../../../Misc/NEWS:1392
msgid ""
"`bpo-28046 <https://bugs.python.org/issue28046>`__: Remove platform-specific "
"directories from sys.path."
msgstr ""
"`bpo-28046 <https://bugs.python.org/issue28046>`__: Remove platform-specific "
"directories from sys.path."

#: ../../../Misc/NEWS:1394
msgid ""
"`bpo-28071 <https://bugs.python.org/issue28071>`__: Add early-out for "
"differencing from an empty set."
msgstr ""
"`bpo-28071 <https://bugs.python.org/issue28071>`__: Add early-out for "
"differencing from an empty set."

#: ../../../Misc/NEWS:1396 ../../../Misc/NEWS:3988
msgid ""
"`bpo-25758 <https://bugs.python.org/issue25758>`__: Prevents zipimport from "
"unnecessarily encoding a filename (patch by Eryk Sun)"
msgstr ""
"`bpo-25758 <https://bugs.python.org/issue25758>`__: Prevents zipimport from "
"unnecessarily encoding a filename (patch by Eryk Sun)"

#: ../../../Misc/NEWS:1399
msgid ""
"`bpo-25856 <https://bugs.python.org/issue25856>`__: The __module__ attribute "
"of extension classes and functions now is interned. This leads to more "
"compact pickle data with protocol 4."
msgstr ""
"`bpo-25856 <https://bugs.python.org/issue25856>`__: The __module__ attribute "
"of extension classes and functions now is interned. This leads to more "
"compact pickle data with protocol 4."

#: ../../../Misc/NEWS:1402
msgid ""
"`bpo-27213 <https://bugs.python.org/issue27213>`__: Rework CALL_FUNCTION* "
"opcodes to produce shorter and more efficient bytecode. Patch by Demur "
"Rumed, design by Serhiy Storchaka, reviewed by Serhiy Storchaka and Victor "
"Stinner."
msgstr ""
"`bpo-27213 <https://bugs.python.org/issue27213>`__: Rework CALL_FUNCTION* "
"opcodes to produce shorter and more efficient bytecode. Patch by Demur "
"Rumed, design by Serhiy Storchaka, reviewed by Serhiy Storchaka and Victor "
"Stinner."

#: ../../../Misc/NEWS:1406
msgid ""
"`bpo-26331 <https://bugs.python.org/issue26331>`__: Implement tokenizing "
"support for PEP 515. Patch by Georg Brandl."
msgstr ""
"`bpo-26331 <https://bugs.python.org/issue26331>`__: Implement tokenizing "
"support for PEP 515. Patch by Georg Brandl."

#: ../../../Misc/NEWS:1408
msgid ""
"`bpo-27999 <https://bugs.python.org/issue27999>`__: Make \"global after use"
"\" a SyntaxError, and ditto for nonlocal. Patch by Ivan Levkivskyi."
msgstr ""
"`bpo-27999 <https://bugs.python.org/issue27999>`__: Make \"global after use"
"\" a SyntaxError, and ditto for nonlocal. Patch by Ivan Levkivskyi."

#: ../../../Misc/NEWS:1411
msgid ""
"`bpo-28003 <https://bugs.python.org/issue28003>`__: Implement PEP 525 -- "
"Asynchronous Generators."
msgstr ""
"`bpo-28003 <https://bugs.python.org/issue28003>`__: Implement PEP 525 -- "
"Asynchronous Generators."

#: ../../../Misc/NEWS:1413
msgid ""
"`bpo-27985 <https://bugs.python.org/issue27985>`__: Implement PEP 526 -- "
"Syntax for Variable Annotations. Patch by Ivan Levkivskyi."
msgstr ""
"`bpo-27985 <https://bugs.python.org/issue27985>`__: Implement PEP 526 -- "
"Syntax for Variable Annotations. Patch by Ivan Levkivskyi."

#: ../../../Misc/NEWS:1416
msgid ""
"`bpo-26058 <https://bugs.python.org/issue26058>`__: Add a new private "
"version to the builtin dict type, incremented at each dictionary creation "
"and at each dictionary change. Implementation of the PEP 509."
msgstr ""
"`bpo-26058 <https://bugs.python.org/issue26058>`__: Add a new private "
"version to the builtin dict type, incremented at each dictionary creation "
"and at each dictionary change. Implementation of the PEP 509."

#: ../../../Misc/NEWS:1420
msgid ""
"`bpo-27364 <https://bugs.python.org/issue27364>`__: A backslash-character "
"pair that is not a valid escape sequence now generates a "
"DeprecationWarning.  Patch by Emanuel Barry."
msgstr ""
"`bpo-27364 <https://bugs.python.org/issue27364>`__: A backslash-character "
"pair that is not a valid escape sequence now generates a "
"DeprecationWarning.  Patch by Emanuel Barry."

#: ../../../Misc/NEWS:1423
msgid ""
"`bpo-27350 <https://bugs.python.org/issue27350>`__: `dict` implementation is "
"changed like PyPy. It is more compact and preserves insertion order. "
"(Concept developed by Raymond Hettinger and patch by Inada Naoki.)"
msgstr ""
"`bpo-27350 <https://bugs.python.org/issue27350>`__: `dict` implementation is "
"changed like PyPy. It is more compact and preserves insertion order. "
"(Concept developed by Raymond Hettinger and patch by Inada Naoki.)"

#: ../../../Misc/NEWS:1427
msgid ""
"`bpo-27911 <https://bugs.python.org/issue27911>`__: Remove unnecessary error "
"checks in ``exec_builtin_or_dynamic()``."
msgstr ""
"`bpo-27911 <https://bugs.python.org/issue27911>`__: Remove unnecessary error "
"checks in ``exec_builtin_or_dynamic()``."

#: ../../../Misc/NEWS:1430
msgid ""
"`bpo-27078 <https://bugs.python.org/issue27078>`__: Added BUILD_STRING "
"opcode.  Optimized f-strings evaluation."
msgstr ""
"`bpo-27078 <https://bugs.python.org/issue27078>`__: Added BUILD_STRING "
"opcode.  Optimized f-strings evaluation."

#: ../../../Misc/NEWS:1432
msgid ""
"`bpo-17884 <https://bugs.python.org/issue17884>`__: Python now requires "
"systems with inttypes.h and stdint.h"
msgstr ""
"`bpo-17884 <https://bugs.python.org/issue17884>`__: Python now requires "
"systems with inttypes.h and stdint.h"

#: ../../../Misc/NEWS:1434
msgid ""
"`bpo-27961 <https://bugs.python.org/issue27961>`__: Require platforms to "
"support ``long long``. Python hasn't compiled without ``long long`` for "
"years, so this is basically a formality."
msgstr ""
"`bpo-27961 <https://bugs.python.org/issue27961>`__: Require platforms to "
"support ``long long``. Python hasn't compiled without ``long long`` for "
"years, so this is basically a formality."

#: ../../../Misc/NEWS:1437
msgid ""
"`bpo-27355 <https://bugs.python.org/issue27355>`__: Removed support for "
"Windows CE.  It was never finished, and Windows CE is no longer a relevant "
"platform for Python."
msgstr ""
"`bpo-27355 <https://bugs.python.org/issue27355>`__: Removed support for "
"Windows CE.  It was never finished, and Windows CE is no longer a relevant "
"platform for Python."

#: ../../../Misc/NEWS:1440
msgid "Implement PEP 523."
msgstr ""

#: ../../../Misc/NEWS:1442
msgid ""
"`bpo-27870 <https://bugs.python.org/issue27870>`__: A left shift of zero by "
"a large integer no longer attempts to allocate large amounts of memory."
msgstr ""
"`bpo-27870 <https://bugs.python.org/issue27870>`__: A left shift of zero by "
"a large integer no longer attempts to allocate large amounts of memory."

#: ../../../Misc/NEWS:1445
msgid ""
"`bpo-25402 <https://bugs.python.org/issue25402>`__: In int-to-decimal-string "
"conversion, improve the estimate of the intermediate memory required, and "
"remove an unnecessarily strict overflow check. Patch by Serhiy Storchaka."
msgstr ""
"`bpo-25402 <https://bugs.python.org/issue25402>`__: In int-to-decimal-string "
"conversion, improve the estimate of the intermediate memory required, and "
"remove an unnecessarily strict overflow check. Patch by Serhiy Storchaka."

#: ../../../Misc/NEWS:1449
msgid ""
"`bpo-27214 <https://bugs.python.org/issue27214>`__: In long_invert, be more "
"careful about modifying object returned by long_add, and remove an "
"unnecessary check for small longs. Thanks Oren Milman for analysis and patch."
msgstr ""
"`bpo-27214 <https://bugs.python.org/issue27214>`__: In long_invert, be more "
"careful about modifying object returned by long_add, and remove an "
"unnecessary check for small longs. Thanks Oren Milman for analysis and patch."

#: ../../../Misc/NEWS:1453
msgid ""
"`bpo-27506 <https://bugs.python.org/issue27506>`__: Support passing the "
"bytes/bytearray.translate() \"delete\" argument by keyword."
msgstr ""
"`bpo-27506 <https://bugs.python.org/issue27506>`__: Support passing the "
"bytes/bytearray.translate() \"delete\" argument by keyword."

#: ../../../Misc/NEWS:1456 ../../../Misc/NEWS:3994
msgid ""
"`bpo-27812 <https://bugs.python.org/issue27812>`__: Properly clear out a "
"generator's frame's backreference to the generator to prevent crashes in "
"frame.clear()."
msgstr ""
"`bpo-27812 <https://bugs.python.org/issue27812>`__: Properly clear out a "
"generator's frame's backreference to the generator to prevent crashes in "
"frame.clear()."

#: ../../../Misc/NEWS:1459 ../../../Misc/NEWS:3997
msgid ""
"`bpo-27811 <https://bugs.python.org/issue27811>`__: Fix a crash when a "
"coroutine that has not been awaited is finalized with warnings-as-errors "
"enabled."
msgstr ""
"`bpo-27811 <https://bugs.python.org/issue27811>`__: Fix a crash when a "
"coroutine that has not been awaited is finalized with warnings-as-errors "
"enabled."

#: ../../../Misc/NEWS:1462 ../../../Misc/NEWS:4000
msgid ""
"`bpo-27587 <https://bugs.python.org/issue27587>`__: Fix another issue found "
"by PVS-Studio: Null pointer check after use of 'def' in "
"_PyState_AddModule(). Initial patch by Christian Heimes."
msgstr ""
"`bpo-27587 <https://bugs.python.org/issue27587>`__: Fix another issue found "
"by PVS-Studio: Null pointer check after use of 'def' in "
"_PyState_AddModule(). Initial patch by Christian Heimes."

#: ../../../Misc/NEWS:1466
msgid ""
"`bpo-27792 <https://bugs.python.org/issue27792>`__: The modulo operation "
"applied to ``bool`` and other ``int`` subclasses now always returns an "
"``int``. Previously the return type depended on the input values. Patch by "
"Xiang Zhang."
msgstr ""
"`bpo-27792 <https://bugs.python.org/issue27792>`__: The modulo operation "
"applied to ``bool`` and other ``int`` subclasses now always returns an "
"``int``. Previously the return type depended on the input values. Patch by "
"Xiang Zhang."

#: ../../../Misc/NEWS:1470
msgid ""
"`bpo-26984 <https://bugs.python.org/issue26984>`__: int() now always returns "
"an instance of exact int."
msgstr ""
"`bpo-26984 <https://bugs.python.org/issue26984>`__: int() now always returns "
"an instance of exact int."

#: ../../../Misc/NEWS:1472
msgid ""
"`bpo-25604 <https://bugs.python.org/issue25604>`__: Fix a minor bug in "
"integer true division; this bug could potentially have caused off-by-one-ulp "
"results on platforms with unreliable ldexp implementations."
msgstr ""
"`bpo-25604 <https://bugs.python.org/issue25604>`__: Fix a minor bug in "
"integer true division; this bug could potentially have caused off-by-one-ulp "
"results on platforms with unreliable ldexp implementations."

#: ../../../Misc/NEWS:1476
msgid ""
"`bpo-24254 <https://bugs.python.org/issue24254>`__: Make class definition "
"namespace ordered by default."
msgstr ""
"`bpo-24254 <https://bugs.python.org/issue24254>`__: Make class definition "
"namespace ordered by default."

#: ../../../Misc/NEWS:1478
msgid ""
"`bpo-27662 <https://bugs.python.org/issue27662>`__: Fix an overflow check in "
"``List_New``: the original code was checking against ``Py_SIZE_MAX`` instead "
"of the correct upper bound of ``Py_SSIZE_T_MAX``. Patch by Xiang Zhang."
msgstr ""
"`bpo-27662 <https://bugs.python.org/issue27662>`__: Fix an overflow check in "
"``List_New``: the original code was checking against ``Py_SIZE_MAX`` instead "
"of the correct upper bound of ``Py_SSIZE_T_MAX``. Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1482 ../../../Misc/NEWS:4006
msgid ""
"`bpo-27782 <https://bugs.python.org/issue27782>`__: Multi-phase extension "
"module import now correctly allows the ``m_methods`` field to be used to add "
"module level functions to instances of non-module types returned from "
"``Py_create_mod``. Patch by Xiang Zhang."
msgstr ""
"`bpo-27782 <https://bugs.python.org/issue27782>`__: Multi-phase extension "
"module import now correctly allows the ``m_methods`` field to be used to add "
"module level functions to instances of non-module types returned from "
"``Py_create_mod``. Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1486 ../../../Misc/NEWS:4010
msgid ""
"`bpo-27936 <https://bugs.python.org/issue27936>`__: The round() function "
"accepted a second None argument for some types but not for others.  Fixed "
"the inconsistency by accepting None for all numeric types."
msgstr ""
"`bpo-27936 <https://bugs.python.org/issue27936>`__: The round() function "
"accepted a second None argument for some types but not for others.  Fixed "
"the inconsistency by accepting None for all numeric types."

#: ../../../Misc/NEWS:1490 ../../../Misc/NEWS:4014
msgid ""
"`bpo-27487 <https://bugs.python.org/issue27487>`__: Warn if a submodule "
"argument to \"python -m\" or runpy.run_module() is found in sys.modules "
"after parent packages are imported, but before the submodule is executed."
msgstr ""
"`bpo-27487 <https://bugs.python.org/issue27487>`__: Warn if a submodule "
"argument to \"python -m\" or runpy.run_module() is found in sys.modules "
"after parent packages are imported, but before the submodule is executed."

#: ../../../Misc/NEWS:1494
msgid ""
"`bpo-27157 <https://bugs.python.org/issue27157>`__: Make only type() itself "
"accept the one-argument form. Patch by Eryk Sun and Emanuel Barry."
msgstr ""
"`bpo-27157 <https://bugs.python.org/issue27157>`__: Make only type() itself "
"accept the one-argument form. Patch by Eryk Sun and Emanuel Barry."

#: ../../../Misc/NEWS:1497 ../../../Misc/NEWS:4018
msgid ""
"`bpo-27558 <https://bugs.python.org/issue27558>`__: Fix a SystemError in the "
"implementation of \"raise\" statement. In a brand new thread, raise a "
"RuntimeError since there is no active exception to reraise. Patch written by "
"Xiang Zhang."
msgstr ""
"`bpo-27558 <https://bugs.python.org/issue27558>`__: Fix a SystemError in the "
"implementation of \"raise\" statement. In a brand new thread, raise a "
"RuntimeError since there is no active exception to reraise. Patch written by "
"Xiang Zhang."

#: ../../../Misc/NEWS:1501
msgid ""
"`bpo-28008 <https://bugs.python.org/issue28008>`__: Implement PEP 530 -- "
"asynchronous comprehensions."
msgstr ""
"`bpo-28008 <https://bugs.python.org/issue28008>`__: Implement PEP 530 -- "
"asynchronous comprehensions."

#: ../../../Misc/NEWS:1503 ../../../Misc/NEWS:4043
msgid ""
"`bpo-27942 <https://bugs.python.org/issue27942>`__: Fix memory leak in "
"codeobject.c"
msgstr ""
"`bpo-27942 <https://bugs.python.org/issue27942>`__: Fix memory leak in "
"codeobject.c"

#: ../../../Misc/NEWS:1508 ../../../Misc/NEWS:4088
msgid ""
"`bpo-28732 <https://bugs.python.org/issue28732>`__: Fix crash in os.spawnv() "
"with no elements in args"
msgstr ""
"`bpo-28732 <https://bugs.python.org/issue28732>`__: Fix crash in os.spawnv() "
"with no elements in args"

#: ../../../Misc/NEWS:1510 ../../../Misc/NEWS:4090
msgid ""
"`bpo-28485 <https://bugs.python.org/issue28485>`__: Always raise ValueError "
"for negative compileall.compile_dir(workers=...) parameter, even when "
"multithreading is unavailable."
msgstr ""
"`bpo-28485 <https://bugs.python.org/issue28485>`__: Always raise ValueError "
"for negative compileall.compile_dir(workers=...) parameter, even when "
"multithreading is unavailable."

#: ../../../Misc/NEWS:1514
msgid ""
"`bpo-28037 <https://bugs.python.org/issue28037>`__: Use "
"sqlite3_get_autocommit() instead of setting Connection->inTransaction "
"manually."
msgstr ""
"`bpo-28037 <https://bugs.python.org/issue28037>`__: Use "
"sqlite3_get_autocommit() instead of setting Connection->inTransaction "
"manually."

#: ../../../Misc/NEWS:1517
msgid ""
"`bpo-25283 <https://bugs.python.org/issue25283>`__: Attributes tm_gmtoff and "
"tm_zone are now available on all platforms in the return values of time."
"localtime() and time.gmtime()."
msgstr ""
"`bpo-25283 <https://bugs.python.org/issue25283>`__: Attributes tm_gmtoff and "
"tm_zone are now available on all platforms in the return values of time."
"localtime() and time.gmtime()."

#: ../../../Misc/NEWS:1521
msgid ""
"`bpo-24454 <https://bugs.python.org/issue24454>`__: Regular expression match "
"object groups are now accessible using __getitem__.  \"mo[x]\" is equivalent "
"to \"mo.group(x)\"."
msgstr ""
"`bpo-24454 <https://bugs.python.org/issue24454>`__: Regular expression match "
"object groups are now accessible using __getitem__.  \"mo[x]\" is equivalent "
"to \"mo.group(x)\"."

#: ../../../Misc/NEWS:1525
msgid ""
"`bpo-10740 <https://bugs.python.org/issue10740>`__: sqlite3 no longer "
"implicitly commit an open transaction before DDL statements."
msgstr ""
"`bpo-10740 <https://bugs.python.org/issue10740>`__: sqlite3 no longer "
"implicitly commit an open transaction before DDL statements."

#: ../../../Misc/NEWS:1528
msgid ""
"`bpo-17941 <https://bugs.python.org/issue17941>`__: Add a *module* parameter "
"to collections.namedtuple()."
msgstr ""
"`bpo-17941 <https://bugs.python.org/issue17941>`__: Add a *module* parameter "
"to collections.namedtuple()."

#: ../../../Misc/NEWS:1530
msgid ""
"`bpo-22493 <https://bugs.python.org/issue22493>`__: Inline flags now should "
"be used only at the start of the regular expression.  Deprecation warning is "
"emitted if uses them in the middle of the regular expression."
msgstr ""
"`bpo-22493 <https://bugs.python.org/issue22493>`__: Inline flags now should "
"be used only at the start of the regular expression.  Deprecation warning is "
"emitted if uses them in the middle of the regular expression."

#: ../../../Misc/NEWS:1534
msgid ""
"`bpo-26885 <https://bugs.python.org/issue26885>`__: xmlrpc now supports "
"unmarshalling additional data types used by Apache XML-RPC implementation "
"for numerics and None."
msgstr ""
"`bpo-26885 <https://bugs.python.org/issue26885>`__: xmlrpc now supports "
"unmarshalling additional data types used by Apache XML-RPC implementation "
"for numerics and None."

#: ../../../Misc/NEWS:1537
msgid ""
"`bpo-28070 <https://bugs.python.org/issue28070>`__: Fixed parsing inline "
"verbose flag in regular expressions."
msgstr ""
"`bpo-28070 <https://bugs.python.org/issue28070>`__: Fixed parsing inline "
"verbose flag in regular expressions."

#: ../../../Misc/NEWS:1539
msgid ""
"`bpo-19500 <https://bugs.python.org/issue19500>`__: Add client-side SSL "
"session resumption to the ssl module."
msgstr ""
"`bpo-19500 <https://bugs.python.org/issue19500>`__: Add client-side SSL "
"session resumption to the ssl module."

#: ../../../Misc/NEWS:1541
msgid ""
"`bpo-28022 <https://bugs.python.org/issue28022>`__: Deprecate ssl-related "
"arguments in favor of SSLContext. The deprecation include manual creation of "
"SSLSocket and certfile/keyfile (or similar) in ftplib, httplib, imaplib, "
"smtplib, poplib and urllib."
msgstr ""
"`bpo-28022 <https://bugs.python.org/issue28022>`__: Deprecate ssl-related "
"arguments in favor of SSLContext. The deprecation include manual creation of "
"SSLSocket and certfile/keyfile (or similar) in ftplib, httplib, imaplib, "
"smtplib, poplib and urllib."

#: ../../../Misc/NEWS:1545
msgid ""
"`bpo-28043 <https://bugs.python.org/issue28043>`__: SSLContext has improved "
"default settings: OP_NO_SSLv2, OP_NO_SSLv3, OP_NO_COMPRESSION, "
"OP_CIPHER_SERVER_PREFERENCE, OP_SINGLE_DH_USE, OP_SINGLE_ECDH_USE and HIGH "
"ciphers without MD5."
msgstr ""
"`bpo-28043 <https://bugs.python.org/issue28043>`__: SSLContext has improved "
"default settings: OP_NO_SSLv2, OP_NO_SSLv3, OP_NO_COMPRESSION, "
"OP_CIPHER_SERVER_PREFERENCE, OP_SINGLE_DH_USE, OP_SINGLE_ECDH_USE and HIGH "
"ciphers without MD5."

#: ../../../Misc/NEWS:1549
msgid ""
"`bpo-24693 <https://bugs.python.org/issue24693>`__: Changed some "
"RuntimeError's in the zipfile module to more appropriate types. Improved "
"some error messages and debugging output."
msgstr ""
"`bpo-24693 <https://bugs.python.org/issue24693>`__: Changed some "
"RuntimeError's in the zipfile module to more appropriate types. Improved "
"some error messages and debugging output."

#: ../../../Misc/NEWS:1552
msgid ""
"`bpo-17909 <https://bugs.python.org/issue17909>`__: ``json.load`` and ``json."
"loads`` now support binary input encoded as UTF-8, UTF-16 or UTF-32. Patch "
"by Serhiy Storchaka."
msgstr ""
"`bpo-17909 <https://bugs.python.org/issue17909>`__: ``json.load`` and ``json."
"loads`` now support binary input encoded as UTF-8, UTF-16 or UTF-32. Patch "
"by Serhiy Storchaka."

#: ../../../Misc/NEWS:1555
msgid ""
"`bpo-27137 <https://bugs.python.org/issue27137>`__: the pure Python fallback "
"implementation of ``functools.partial`` now matches the behaviour of its "
"accelerated C counterpart for subclassing, pickling and text representation "
"purposes. Patch by Emanuel Barry and Serhiy Storchaka."
msgstr ""
"`bpo-27137 <https://bugs.python.org/issue27137>`__: the pure Python fallback "
"implementation of ``functools.partial`` now matches the behaviour of its "
"accelerated C counterpart for subclassing, pickling and text representation "
"purposes. Patch by Emanuel Barry and Serhiy Storchaka."

#: ../../../Misc/NEWS:1560 ../../../Misc/NEWS:4142
msgid ""
"Fix possible integer overflows and crashes in the mmap module with unusual "
"usage patterns."
msgstr ""

#: ../../../Misc/NEWS:1563 ../../../Misc/NEWS:4145
msgid ""
"`bpo-1703178 <https://bugs.python.org/issue1703178>`__: Fix the ability to "
"pass the --link-objects option to the distutils build_ext command."
msgstr ""
"`bpo-1703178 <https://bugs.python.org/issue1703178>`__: Fix the ability to "
"pass the --link-objects option to the distutils build_ext command."

#: ../../../Misc/NEWS:1566 ../../../Misc/NEWS:4193
msgid ""
"`bpo-28019 <https://bugs.python.org/issue28019>`__: itertools.count() no "
"longer rounds non-integer step in range between 1.0 and 2.0 to 1."
msgstr ""
"`bpo-28019 <https://bugs.python.org/issue28019>`__: itertools.count() no "
"longer rounds non-integer step in range between 1.0 and 2.0 to 1."

#: ../../../Misc/NEWS:1569
msgid ""
"`bpo-18401 <https://bugs.python.org/issue18401>`__: Pdb now supports the "
"'readrc' keyword argument to control whether .pdbrc files should be read.  "
"Patch by Martin Matusiak and Sam Kimbrel."
msgstr ""
"`bpo-18401 <https://bugs.python.org/issue18401>`__: Pdb now supports the "
"'readrc' keyword argument to control whether .pdbrc files should be read.  "
"Patch by Martin Matusiak and Sam Kimbrel."

#: ../../../Misc/NEWS:1573 ../../../Misc/NEWS:4196
msgid ""
"`bpo-25969 <https://bugs.python.org/issue25969>`__: Update the lib2to3 "
"grammar to handle the unpacking generalizations added in 3.5."
msgstr ""
"`bpo-25969 <https://bugs.python.org/issue25969>`__: Update the lib2to3 "
"grammar to handle the unpacking generalizations added in 3.5."

#: ../../../Misc/NEWS:1576 ../../../Misc/NEWS:4199
msgid ""
"`bpo-14977 <https://bugs.python.org/issue14977>`__: mailcap now respects the "
"order of the lines in the mailcap files (\"first match\"), as required by "
"RFC 1542.  Patch by Michael Lazar."
msgstr ""
"`bpo-14977 <https://bugs.python.org/issue14977>`__: mailcap now respects the "
"order of the lines in the mailcap files (\"first match\"), as required by "
"RFC 1542.  Patch by Michael Lazar."

#: ../../../Misc/NEWS:1579
msgid ""
"`bpo-28082 <https://bugs.python.org/issue28082>`__: Convert re flag "
"constants to IntFlag."
msgstr ""
"`bpo-28082 <https://bugs.python.org/issue28082>`__: Convert re flag "
"constants to IntFlag."

#: ../../../Misc/NEWS:1581
msgid ""
"`bpo-28025 <https://bugs.python.org/issue28025>`__: Convert all ssl module "
"constants to IntEnum and IntFlags. SSLContext properties now return flags "
"and enums."
msgstr ""
"`bpo-28025 <https://bugs.python.org/issue28025>`__: Convert all ssl module "
"constants to IntEnum and IntFlags. SSLContext properties now return flags "
"and enums."

#: ../../../Misc/NEWS:1584
msgid ""
"`bpo-23591 <https://bugs.python.org/issue23591>`__: Add Flag, IntFlag, and "
"auto() to enum module."
msgstr ""
"`bpo-23591 <https://bugs.python.org/issue23591>`__: Add Flag, IntFlag, and "
"auto() to enum module."

#: ../../../Misc/NEWS:1586
msgid ""
"`bpo-433028 <https://bugs.python.org/issue433028>`__: Added support of "
"modifier spans in regular expressions."
msgstr ""
"`bpo-433028 <https://bugs.python.org/issue433028>`__: Added support of "
"modifier spans in regular expressions."

#: ../../../Misc/NEWS:1588 ../../../Misc/NEWS:4202
msgid ""
"`bpo-24594 <https://bugs.python.org/issue24594>`__: Validates persist "
"parameter when opening MSI database"
msgstr ""
"`bpo-24594 <https://bugs.python.org/issue24594>`__: Validates persist "
"parameter when opening MSI database"

#: ../../../Misc/NEWS:1590 ../../../Misc/NEWS:4204
msgid ""
"`bpo-17582 <https://bugs.python.org/issue17582>`__: xml.etree.ElementTree "
"nows preserves whitespaces in attributes (Patch by Duane Griffin.  Reviewed "
"and approved by Stefan Behnel.)"
msgstr ""
"`bpo-17582 <https://bugs.python.org/issue17582>`__: xml.etree.ElementTree "
"nows preserves whitespaces in attributes (Patch by Duane Griffin.  Reviewed "
"and approved by Stefan Behnel.)"

#: ../../../Misc/NEWS:1593 ../../../Misc/NEWS:4207
msgid ""
"`bpo-28047 <https://bugs.python.org/issue28047>`__: Fixed calculation of "
"line length used for the base64 CTE in the new email policies."
msgstr ""
"`bpo-28047 <https://bugs.python.org/issue28047>`__: Fixed calculation of "
"line length used for the base64 CTE in the new email policies."

#: ../../../Misc/NEWS:1596
msgid ""
"`bpo-27576 <https://bugs.python.org/issue27576>`__: Fix call order in "
"OrderedDict.__init__()."
msgstr ""
"`bpo-27576 <https://bugs.python.org/issue27576>`__: Fix call order in "
"OrderedDict.__init__()."

#: ../../../Misc/NEWS:1598
msgid "email.generator.DecodedGenerator now supports the policy keyword."
msgstr ""

#: ../../../Misc/NEWS:1600
msgid ""
"`bpo-28027 <https://bugs.python.org/issue28027>`__: Remove undocumented "
"modules from ``Lib/plat-*``: IN, CDROM, DLFCN, TYPES, CDIO, and STROPTS."
msgstr ""
"`bpo-28027 <https://bugs.python.org/issue28027>`__: Remove undocumented "
"modules from ``Lib/plat-*``: IN, CDROM, DLFCN, TYPES, CDIO, and STROPTS."

#: ../../../Misc/NEWS:1603 ../../../Misc/NEWS:4210
msgid ""
"`bpo-27445 <https://bugs.python.org/issue27445>`__: Don't pass str(_charset) "
"to MIMEText.set_payload(). Patch by Claude Paroz."
msgstr ""
"`bpo-27445 <https://bugs.python.org/issue27445>`__: Don't pass str(_charset) "
"to MIMEText.set_payload(). Patch by Claude Paroz."

#: ../../../Misc/NEWS:1606
msgid ""
"`bpo-24277 <https://bugs.python.org/issue24277>`__: The new email API is no "
"longer provisional, and the docs have been reorganized and rewritten to "
"emphasize the new API."
msgstr ""
"`bpo-24277 <https://bugs.python.org/issue24277>`__: The new email API is no "
"longer provisional, and the docs have been reorganized and rewritten to "
"emphasize the new API."

#: ../../../Misc/NEWS:1609 ../../../Misc/NEWS:4213
msgid ""
"`bpo-22450 <https://bugs.python.org/issue22450>`__: urllib now includes an "
"``Accept: */*`` header among the default headers.  This makes the results of "
"REST API requests more consistent and predictable especially when proxy "
"servers are involved."
msgstr ""
"`bpo-22450 <https://bugs.python.org/issue22450>`__: urllib now includes an "
"``Accept: */*`` header among the default headers.  This makes the results of "
"REST API requests more consistent and predictable especially when proxy "
"servers are involved."

#: ../../../Misc/NEWS:1613 ../../../Misc/NEWS:4217
msgid ""
"lib2to3.pgen3.driver.load_grammar() now creates a stable cache file between "
"runs given the same Grammar.txt input regardless of the hash randomization "
"setting."
msgstr ""

#: ../../../Misc/NEWS:1617
msgid ""
"`bpo-28005 <https://bugs.python.org/issue28005>`__: Allow ImportErrors in "
"encoding implementation to propagate."
msgstr ""
"`bpo-28005 <https://bugs.python.org/issue28005>`__: Allow ImportErrors in "
"encoding implementation to propagate."

#: ../../../Misc/NEWS:1619
msgid ""
"`bpo-26667 <https://bugs.python.org/issue26667>`__: Support path-like "
"objects in importlib.util."
msgstr ""
"`bpo-26667 <https://bugs.python.org/issue26667>`__: Support path-like "
"objects in importlib.util."

#: ../../../Misc/NEWS:1621 ../../../Misc/NEWS:4221
msgid ""
"`bpo-27570 <https://bugs.python.org/issue27570>`__: Avoid zero-length "
"memcpy() etc calls with null source pointers in the \"ctypes\" and \"array\" "
"modules."
msgstr ""
"`bpo-27570 <https://bugs.python.org/issue27570>`__: Avoid zero-length "
"memcpy() etc calls with null source pointers in the \"ctypes\" and \"array\" "
"modules."

#: ../../../Misc/NEWS:1624 ../../../Misc/NEWS:4224
msgid ""
"`bpo-22233 <https://bugs.python.org/issue22233>`__: Break email header lines "
"*only* on the RFC specified CR and LF characters, not on arbitrary unicode "
"line breaks.  This also fixes a bug in HTTP header parsing."
msgstr ""
"`bpo-22233 <https://bugs.python.org/issue22233>`__: Break email header lines "
"*only* on the RFC specified CR and LF characters, not on arbitrary unicode "
"line breaks.  This also fixes a bug in HTTP header parsing."

#: ../../../Misc/NEWS:1628
msgid ""
"`bpo-27331 <https://bugs.python.org/issue27331>`__: The email.mime classes "
"now all accept an optional policy keyword."
msgstr ""
"`bpo-27331 <https://bugs.python.org/issue27331>`__: The email.mime classes "
"now all accept an optional policy keyword."

#: ../../../Misc/NEWS:1630 ../../../Misc/NEWS:4228
msgid ""
"`bpo-27988 <https://bugs.python.org/issue27988>`__: Fix email "
"iter_attachments incorrect mutation of payload list."
msgstr ""
"`bpo-27988 <https://bugs.python.org/issue27988>`__: Fix email "
"iter_attachments incorrect mutation of payload list."

#: ../../../Misc/NEWS:1632
msgid ""
"`bpo-16113 <https://bugs.python.org/issue16113>`__: Add SHA-3 and SHAKE "
"support to hashlib module."
msgstr ""
"`bpo-16113 <https://bugs.python.org/issue16113>`__: Add SHA-3 and SHAKE "
"support to hashlib module."

#: ../../../Misc/NEWS:1634
msgid "Eliminate a tautological-pointer-compare warning in _scproxy.c."
msgstr ""

#: ../../../Misc/NEWS:1636
msgid ""
"`bpo-27776 <https://bugs.python.org/issue27776>`__: The :func:`os.urandom` "
"function does now block on Linux 3.17 and newer until the system urandom "
"entropy pool is initialized to increase the security. This change is part of "
"the :pep:`524`."
msgstr ""
"`bpo-27776 <https://bugs.python.org/issue27776>`__: The :func:`os.urandom` "
"function does now block on Linux 3.17 and newer until the system urandom "
"entropy pool is initialized to increase the security. This change is part of "
"the :pep:`524`."

#: ../../../Misc/NEWS:1640
msgid ""
"`bpo-27778 <https://bugs.python.org/issue27778>`__: Expose the Linux "
"``getrandom()`` syscall as a new :func:`os.getrandom` function. This change "
"is part of the :pep:`524`."
msgstr ""
"`bpo-27778 <https://bugs.python.org/issue27778>`__: Expose the Linux "
"``getrandom()`` syscall as a new :func:`os.getrandom` function. This change "
"is part of the :pep:`524`."

#: ../../../Misc/NEWS:1643 ../../../Misc/NEWS:4230
msgid ""
"`bpo-27691 <https://bugs.python.org/issue27691>`__: Fix ssl module's parsing "
"of GEN_RID subject alternative name fields in X.509 certs."
msgstr ""
"`bpo-27691 <https://bugs.python.org/issue27691>`__: Fix ssl module's parsing "
"of GEN_RID subject alternative name fields in X.509 certs."

#: ../../../Misc/NEWS:1646
msgid ""
"`bpo-18844 <https://bugs.python.org/issue18844>`__: Add random.choices()."
msgstr ""
"`bpo-18844 <https://bugs.python.org/issue18844>`__: Add random.choices()."

#: ../../../Misc/NEWS:1648
msgid ""
"`bpo-25761 <https://bugs.python.org/issue25761>`__: Improved error reporting "
"about truncated pickle data in C implementation of unpickler.  "
"UnpicklingError is now raised instead of AttributeError and ValueError in "
"some cases."
msgstr ""
"`bpo-25761 <https://bugs.python.org/issue25761>`__: Improved error reporting "
"about truncated pickle data in C implementation of unpickler.  "
"UnpicklingError is now raised instead of AttributeError and ValueError in "
"some cases."

#: ../../../Misc/NEWS:1652
msgid ""
"`bpo-26798 <https://bugs.python.org/issue26798>`__: Add BLAKE2 (blake2b and "
"blake2s) to hashlib."
msgstr ""
"`bpo-26798 <https://bugs.python.org/issue26798>`__: Add BLAKE2 (blake2b and "
"blake2s) to hashlib."

#: ../../../Misc/NEWS:1654
msgid ""
"`bpo-26032 <https://bugs.python.org/issue26032>`__: Optimized globbing in "
"pathlib by using os.scandir(); it is now about 1.5--4 times faster."
msgstr ""
"`bpo-26032 <https://bugs.python.org/issue26032>`__: Optimized globbing in "
"pathlib by using os.scandir(); it is now about 1.5--4 times faster."

#: ../../../Misc/NEWS:1657
msgid ""
"`bpo-25596 <https://bugs.python.org/issue25596>`__: Optimized glob() and "
"iglob() functions in the glob module; they are now about 3--6 times faster."
msgstr ""
"`bpo-25596 <https://bugs.python.org/issue25596>`__: Optimized glob() and "
"iglob() functions in the glob module; they are now about 3--6 times faster."

#: ../../../Misc/NEWS:1660
msgid ""
"`bpo-27928 <https://bugs.python.org/issue27928>`__: Add scrypt (password-"
"based key derivation function) to hashlib module (requires OpenSSL 1.1.0)."
msgstr ""
"`bpo-27928 <https://bugs.python.org/issue27928>`__: Add scrypt (password-"
"based key derivation function) to hashlib module (requires OpenSSL 1.1.0)."

#: ../../../Misc/NEWS:1663 ../../../Misc/NEWS:4233
msgid ""
"`bpo-27850 <https://bugs.python.org/issue27850>`__: Remove 3DES from ssl "
"module's default cipher list to counter measure sweet32 attack "
"(CVE-2016-2183)."
msgstr ""
"`bpo-27850 <https://bugs.python.org/issue27850>`__: Remove 3DES from ssl "
"module's default cipher list to counter measure sweet32 attack "
"(CVE-2016-2183)."

#: ../../../Misc/NEWS:1666 ../../../Misc/NEWS:4236
msgid ""
"`bpo-27766 <https://bugs.python.org/issue27766>`__: Add ChaCha20 Poly1305 to "
"ssl module's default ciper list. (Required OpenSSL 1.1.0 or LibreSSL)."
msgstr ""
"`bpo-27766 <https://bugs.python.org/issue27766>`__: Add ChaCha20 Poly1305 to "
"ssl module's default ciper list. (Required OpenSSL 1.1.0 or LibreSSL)."

#: ../../../Misc/NEWS:1669
msgid ""
"`bpo-25387 <https://bugs.python.org/issue25387>`__: Check return value of "
"winsound.MessageBeep."
msgstr ""
"`bpo-25387 <https://bugs.python.org/issue25387>`__: Check return value of "
"winsound.MessageBeep."

#: ../../../Misc/NEWS:1671
msgid ""
"`bpo-27866 <https://bugs.python.org/issue27866>`__: Add SSLContext."
"get_ciphers() method to get a list of all enabled ciphers."
msgstr ""
"`bpo-27866 <https://bugs.python.org/issue27866>`__: Add SSLContext."
"get_ciphers() method to get a list of all enabled ciphers."

#: ../../../Misc/NEWS:1674
msgid ""
"`bpo-27744 <https://bugs.python.org/issue27744>`__: Add AF_ALG (Linux Kernel "
"crypto) to socket module."
msgstr ""
"`bpo-27744 <https://bugs.python.org/issue27744>`__: Add AF_ALG (Linux Kernel "
"crypto) to socket module."

#: ../../../Misc/NEWS:1676 ../../../Misc/NEWS:4239
msgid ""
"`bpo-26470 <https://bugs.python.org/issue26470>`__: Port ssl and hashlib "
"module to OpenSSL 1.1.0."
msgstr ""
"`bpo-26470 <https://bugs.python.org/issue26470>`__: Port ssl and hashlib "
"module to OpenSSL 1.1.0."

#: ../../../Misc/NEWS:1678
msgid ""
"`bpo-11620 <https://bugs.python.org/issue11620>`__: Fix support for "
"SND_MEMORY in winsound.PlaySound.  Based on a patch by Tim Lesher."
msgstr ""
"`bpo-11620 <https://bugs.python.org/issue11620>`__: Fix support for "
"SND_MEMORY in winsound.PlaySound.  Based on a patch by Tim Lesher."

#: ../../../Misc/NEWS:1681
msgid ""
"`bpo-11734 <https://bugs.python.org/issue11734>`__: Add support for IEEE 754 "
"half-precision floats to the struct module. Based on a patch by Eli Stevens."
msgstr ""
"`bpo-11734 <https://bugs.python.org/issue11734>`__: Add support for IEEE 754 "
"half-precision floats to the struct module. Based on a patch by Eli Stevens."

#: ../../../Misc/NEWS:1684
msgid ""
"`bpo-27919 <https://bugs.python.org/issue27919>`__: Deprecated "
"``extra_path`` distribution option in distutils packaging."
msgstr ""
"`bpo-27919 <https://bugs.python.org/issue27919>`__: Deprecated "
"``extra_path`` distribution option in distutils packaging."

#: ../../../Misc/NEWS:1687
msgid ""
"`bpo-23229 <https://bugs.python.org/issue23229>`__: Add new ``cmath`` "
"constants: ``cmath.inf`` and ``cmath.nan`` to match ``math.inf`` and ``math."
"nan``, and also ``cmath.infj`` and ``cmath.nanj`` to match the format used "
"by complex repr."
msgstr ""
"`bpo-23229 <https://bugs.python.org/issue23229>`__: Add new ``cmath`` "
"constants: ``cmath.inf`` and ``cmath.nan`` to match ``math.inf`` and ``math."
"nan``, and also ``cmath.infj`` and ``cmath.nanj`` to match the format used "
"by complex repr."

#: ../../../Misc/NEWS:1691
msgid ""
"`bpo-27842 <https://bugs.python.org/issue27842>`__: The csv.DictReader now "
"returns rows of type OrderedDict. (Contributed by Steve Holden.)"
msgstr ""
"`bpo-27842 <https://bugs.python.org/issue27842>`__: The csv.DictReader now "
"returns rows of type OrderedDict. (Contributed by Steve Holden.)"

#: ../../../Misc/NEWS:1694 ../../../Misc/NEWS:4241
msgid ""
"Remove support for passing a file descriptor to os.access. It never worked "
"but previously didn't raise."
msgstr ""

#: ../../../Misc/NEWS:1697 ../../../Misc/NEWS:4244
msgid ""
"`bpo-12885 <https://bugs.python.org/issue12885>`__: Fix error when distutils "
"encounters symlink."
msgstr ""
"`bpo-12885 <https://bugs.python.org/issue12885>`__: Fix error when distutils "
"encounters symlink."

#: ../../../Misc/NEWS:1699 ../../../Misc/NEWS:4246
msgid ""
"`bpo-27881 <https://bugs.python.org/issue27881>`__: Fixed possible bugs when "
"setting sqlite3.Connection.isolation_level. Based on patch by Xiang Zhang."
msgstr ""
"`bpo-27881 <https://bugs.python.org/issue27881>`__: Fixed possible bugs when "
"setting sqlite3.Connection.isolation_level. Based on patch by Xiang Zhang."

#: ../../../Misc/NEWS:1702 ../../../Misc/NEWS:4249
msgid ""
"`bpo-27861 <https://bugs.python.org/issue27861>`__: Fixed a crash in sqlite3."
"Connection.cursor() when a factory creates not a cursor.  Patch by Xiang "
"Zhang."
msgstr ""
"`bpo-27861 <https://bugs.python.org/issue27861>`__: Fixed a crash in sqlite3."
"Connection.cursor() when a factory creates not a cursor.  Patch by Xiang "
"Zhang."

#: ../../../Misc/NEWS:1705 ../../../Misc/NEWS:4252
msgid ""
"`bpo-19884 <https://bugs.python.org/issue19884>`__: Avoid spurious output on "
"OS X with Gnu Readline."
msgstr ""
"`bpo-19884 <https://bugs.python.org/issue19884>`__: Avoid spurious output on "
"OS X with Gnu Readline."

#: ../../../Misc/NEWS:1707 ../../../Misc/NEWS:4254
msgid ""
"`bpo-27706 <https://bugs.python.org/issue27706>`__: Restore deterministic "
"behavior of random.Random().seed() for string seeds using seeding version "
"1.  Allows sequences of calls to random() to exactly match those obtained in "
"Python 2. Patch by Nofar Schnider."
msgstr ""
"`bpo-27706 <https://bugs.python.org/issue27706>`__: Restore deterministic "
"behavior of random.Random().seed() for string seeds using seeding version "
"1.  Allows sequences of calls to random() to exactly match those obtained in "
"Python 2. Patch by Nofar Schnider."

#: ../../../Misc/NEWS:1712 ../../../Misc/NEWS:4259
msgid ""
"`bpo-10513 <https://bugs.python.org/issue10513>`__: Fix a regression in "
"Connection.commit().  Statements should not be reset after a commit."
msgstr ""
"`bpo-10513 <https://bugs.python.org/issue10513>`__: Fix a regression in "
"Connection.commit().  Statements should not be reset after a commit."

#: ../../../Misc/NEWS:1715
msgid ""
"`bpo-12319 <https://bugs.python.org/issue12319>`__: Chunked transfer "
"encoding support added to http.client.HTTPConnection requests.  The urllib."
"request.AbstractHTTPHandler class does not enforce a Content-Length header "
"any more.  If a HTTP request has a file or iterable body, but no Content-"
"Length header, the library now falls back to use chunked transfer- encoding."
msgstr ""
"`bpo-12319 <https://bugs.python.org/issue12319>`__: Chunked transfer "
"encoding support added to http.client.HTTPConnection requests.  The urllib."
"request.AbstractHTTPHandler class does not enforce a Content-Length header "
"any more.  If a HTTP request has a file or iterable body, but no Content-"
"Length header, the library now falls back to use chunked transfer- encoding."

#: ../../../Misc/NEWS:1722 ../../../Misc/NEWS:4262
msgid ""
"A new version of typing.py from https://github.com/python/typing: - "
"Collection (only for 3.6) (`bpo-27598 <https://bugs.python.org/"
"issue27598>`__) - Add FrozenSet to __all__ (upstream #261) - fix crash in "
"_get_type_vars() (upstream #259) - Remove the dict constraint in ForwardRef."
"_eval_type (upstream #252)"
msgstr ""
"A new version of typing.py from https://github.com/python/typing: - "
"Collection (only for 3.6) (`bpo-27598 <https://bugs.python.org/"
"issue27598>`__) - Add FrozenSet to __all__ (upstream #261) - fix crash in "
"_get_type_vars() (upstream #259) - Remove the dict constraint in ForwardRef."
"_eval_type (upstream #252)"

#: ../../../Misc/NEWS:1728
msgid ""
"`bpo-27832 <https://bugs.python.org/issue27832>`__: Make ``_normalize`` "
"parameter to ``Fraction`` constuctor keyword-only, so that ``Fraction(2, 3, "
"4)`` now raises ``TypeError``."
msgstr ""
"`bpo-27832 <https://bugs.python.org/issue27832>`__: Make ``_normalize`` "
"parameter to ``Fraction`` constuctor keyword-only, so that ``Fraction(2, 3, "
"4)`` now raises ``TypeError``."

#: ../../../Misc/NEWS:1731 ../../../Misc/NEWS:4268
msgid ""
"`bpo-27539 <https://bugs.python.org/issue27539>`__: Fix unnormalised "
"``Fraction.__pow__`` result in the case of negative exponent and negative "
"base."
msgstr ""
"`bpo-27539 <https://bugs.python.org/issue27539>`__: Fix unnormalised "
"``Fraction.__pow__`` result in the case of negative exponent and negative "
"base."

#: ../../../Misc/NEWS:1734 ../../../Misc/NEWS:4271
msgid ""
"`bpo-21718 <https://bugs.python.org/issue21718>`__: cursor.description is "
"now available for queries using CTEs."
msgstr ""
"`bpo-21718 <https://bugs.python.org/issue21718>`__: cursor.description is "
"now available for queries using CTEs."

#: ../../../Misc/NEWS:1736
msgid ""
"`bpo-27819 <https://bugs.python.org/issue27819>`__: In distutils sdists, "
"simply produce the \"gztar\" (gzipped tar format) distributions on all "
"platforms unless \"formats\" is supplied."
msgstr ""
"`bpo-27819 <https://bugs.python.org/issue27819>`__: In distutils sdists, "
"simply produce the \"gztar\" (gzipped tar format) distributions on all "
"platforms unless \"formats\" is supplied."

#: ../../../Misc/NEWS:1739 ../../../Misc/NEWS:4273
msgid ""
"`bpo-2466 <https://bugs.python.org/issue2466>`__: posixpath.ismount now "
"correctly recognizes mount points which the user does not have permission to "
"access."
msgstr ""
"`bpo-2466 <https://bugs.python.org/issue2466>`__: posixpath.ismount now "
"correctly recognizes mount points which the user does not have permission to "
"access."

#: ../../../Misc/NEWS:1742
msgid ""
"`bpo-9998 <https://bugs.python.org/issue9998>`__: On Linux, ctypes.util."
"find_library now looks in LD_LIBRARY_PATH for shared libraries."
msgstr ""
"`bpo-9998 <https://bugs.python.org/issue9998>`__: On Linux, ctypes.util."
"find_library now looks in LD_LIBRARY_PATH for shared libraries."

#: ../../../Misc/NEWS:1745
msgid ""
"`bpo-27573 <https://bugs.python.org/issue27573>`__: exit message for code."
"interact is now configurable."
msgstr ""
"`bpo-27573 <https://bugs.python.org/issue27573>`__: exit message for code."
"interact is now configurable."

#: ../../../Misc/NEWS:1747 ../../../Misc/NEWS:4370
msgid ""
"`bpo-27930 <https://bugs.python.org/issue27930>`__: Improved behaviour of "
"logging.handlers.QueueListener. Thanks to Paulo Andrade and Petr Viktorin "
"for the analysis and patch."
msgstr ""
"`bpo-27930 <https://bugs.python.org/issue27930>`__: Improved behaviour of "
"logging.handlers.QueueListener. Thanks to Paulo Andrade and Petr Viktorin "
"for the analysis and patch."

#: ../../../Misc/NEWS:1750
msgid ""
"`bpo-6766 <https://bugs.python.org/issue6766>`__: Distributed reference "
"counting added to multiprocessing to support nesting of shared values / "
"proxy objects."
msgstr ""
"`bpo-6766 <https://bugs.python.org/issue6766>`__: Distributed reference "
"counting added to multiprocessing to support nesting of shared values / "
"proxy objects."

#: ../../../Misc/NEWS:1753 ../../../Misc/NEWS:4373
msgid ""
"`bpo-21201 <https://bugs.python.org/issue21201>`__: Improves readability of "
"multiprocessing error message.  Thanks to Wojciech Walczak for patch."
msgstr ""
"`bpo-21201 <https://bugs.python.org/issue21201>`__: Improves readability of "
"multiprocessing error message.  Thanks to Wojciech Walczak for patch."

#: ../../../Misc/NEWS:1756
msgid "asyncio: Add set_protocol / get_protocol to Transports."
msgstr ""

#: ../../../Misc/NEWS:1758 ../../../Misc/NEWS:4376
msgid ""
"`bpo-27456 <https://bugs.python.org/issue27456>`__: asyncio: Set TCP_NODELAY "
"by default."
msgstr ""
"`bpo-27456 <https://bugs.python.org/issue27456>`__: asyncio: Set TCP_NODELAY "
"by default."

#: ../../../Misc/NEWS:1763 ../../../Misc/NEWS:4446
msgid ""
"`bpo-15308 <https://bugs.python.org/issue15308>`__: Add 'interrupt "
"execution' (^C) to Shell menu. Patch by Roger Serwy, updated by Bayard "
"Randel."
msgstr ""
"`bpo-15308 <https://bugs.python.org/issue15308>`__: Add 'interrupt "
"execution' (^C) to Shell menu. Patch by Roger Serwy, updated by Bayard "
"Randel."

#: ../../../Misc/NEWS:1766 ../../../Misc/NEWS:4449
msgid ""
"`bpo-27922 <https://bugs.python.org/issue27922>`__: Stop IDLE tests from "
"'flashing' gui widgets on the screen."
msgstr ""
"`bpo-27922 <https://bugs.python.org/issue27922>`__: Stop IDLE tests from "
"'flashing' gui widgets on the screen."

#: ../../../Misc/NEWS:1768
msgid ""
"`bpo-27891 <https://bugs.python.org/issue27891>`__: Consistently group and "
"sort imports within idlelib modules."
msgstr ""
"`bpo-27891 <https://bugs.python.org/issue27891>`__: Consistently group and "
"sort imports within idlelib modules."

#: ../../../Misc/NEWS:1770
msgid ""
"`bpo-17642 <https://bugs.python.org/issue17642>`__: add larger font sizes "
"for classroom projection."
msgstr ""
"`bpo-17642 <https://bugs.python.org/issue17642>`__: add larger font sizes "
"for classroom projection."

#: ../../../Misc/NEWS:1772 ../../../Misc/NEWS:4451
msgid "Add version to title of IDLE help window."
msgstr ""

#: ../../../Misc/NEWS:1774 ../../../Misc/NEWS:4453
msgid ""
"`bpo-25564 <https://bugs.python.org/issue25564>`__: In section on IDLE -- "
"console differences, mention that using exec means that __builtins__ is "
"defined for each statement."
msgstr ""
"`bpo-25564 <https://bugs.python.org/issue25564>`__: In section on IDLE -- "
"console differences, mention that using exec means that __builtins__ is "
"defined for each statement."

#: ../../../Misc/NEWS:1777
msgid ""
"`bpo-27821 <https://bugs.python.org/issue27821>`__: Fix 3.6.0a3 regression "
"that prevented custom key sets from being selected when no custom theme was "
"defined."
msgstr ""
"`bpo-27821 <https://bugs.python.org/issue27821>`__: Fix 3.6.0a3 regression "
"that prevented custom key sets from being selected when no custom theme was "
"defined."

#: ../../../Misc/NEWS:1783
msgid ""
"`bpo-26900 <https://bugs.python.org/issue26900>`__: Excluded underscored "
"names and other private API from limited API."
msgstr ""
"`bpo-26900 <https://bugs.python.org/issue26900>`__: Excluded underscored "
"names and other private API from limited API."

#: ../../../Misc/NEWS:1785
msgid ""
"`bpo-26027 <https://bugs.python.org/issue26027>`__: Add support for path-"
"like objects in PyUnicode_FSConverter() & PyUnicode_FSDecoder()."
msgstr ""
"`bpo-26027 <https://bugs.python.org/issue26027>`__: Add support for path-"
"like objects in PyUnicode_FSConverter() & PyUnicode_FSDecoder()."

#: ../../../Misc/NEWS:1791
msgid ""
"`bpo-27427 <https://bugs.python.org/issue27427>`__: Additional tests for the "
"math module. Patch by Francisco Couzo."
msgstr ""
"`bpo-27427 <https://bugs.python.org/issue27427>`__: Additional tests for the "
"math module. Patch by Francisco Couzo."

#: ../../../Misc/NEWS:1793
msgid ""
"`bpo-27953 <https://bugs.python.org/issue27953>`__: Skip math and cmath "
"tests that fail on OS X 10.4 due to a poor libm implementation of tan."
msgstr ""
"`bpo-27953 <https://bugs.python.org/issue27953>`__: Skip math and cmath "
"tests that fail on OS X 10.4 due to a poor libm implementation of tan."

#: ../../../Misc/NEWS:1796
msgid ""
"`bpo-26040 <https://bugs.python.org/issue26040>`__: Improve test_math and "
"test_cmath coverage and rigour. Patch by Jeff Allen."
msgstr ""
"`bpo-26040 <https://bugs.python.org/issue26040>`__: Improve test_math and "
"test_cmath coverage and rigour. Patch by Jeff Allen."

#: ../../../Misc/NEWS:1799 ../../../Misc/NEWS:4497
msgid ""
"`bpo-27787 <https://bugs.python.org/issue27787>`__: Call gc.collect() before "
"checking each test for \"dangling threads\", since the dangling threads are "
"weak references."
msgstr ""
"`bpo-27787 <https://bugs.python.org/issue27787>`__: Call gc.collect() before "
"checking each test for \"dangling threads\", since the dangling threads are "
"weak references."

#: ../../../Misc/NEWS:1805 ../../../Misc/NEWS:4558
msgid ""
"`bpo-27566 <https://bugs.python.org/issue27566>`__: Fix clean target in "
"freeze makefile (patch by Lisa Roach)"
msgstr ""
"`bpo-27566 <https://bugs.python.org/issue27566>`__: Fix clean target in "
"freeze makefile (patch by Lisa Roach)"

#: ../../../Misc/NEWS:1807 ../../../Misc/NEWS:4560
msgid ""
"`bpo-27705 <https://bugs.python.org/issue27705>`__: Update message in "
"validate_ucrtbase.py"
msgstr ""
"`bpo-27705 <https://bugs.python.org/issue27705>`__: Update message in "
"validate_ucrtbase.py"

#: ../../../Misc/NEWS:1809
msgid ""
"`bpo-27976 <https://bugs.python.org/issue27976>`__: Deprecate building "
"_ctypes with the bundled copy of libffi on non-OSX UNIX platforms."
msgstr ""
"`bpo-27976 <https://bugs.python.org/issue27976>`__: Deprecate building "
"_ctypes with the bundled copy of libffi on non-OSX UNIX platforms."

#: ../../../Misc/NEWS:1812 ../../../Misc/NEWS:4562
msgid ""
"`bpo-27983 <https://bugs.python.org/issue27983>`__: Cause lack of llvm-"
"profdata tool when using clang as required for PGO linking to be a configure "
"time error rather than make time when --with-optimizations is enabled.  Also "
"improve our ability to find the llvm-profdata tool on MacOS and some Linuxes."
msgstr ""
"`bpo-27983 <https://bugs.python.org/issue27983>`__: Cause lack of llvm-"
"profdata tool when using clang as required for PGO linking to be a configure "
"time error rather than make time when --with-optimizations is enabled.  Also "
"improve our ability to find the llvm-profdata tool on MacOS and some Linuxes."

#: ../../../Misc/NEWS:1817
msgid ""
"`bpo-21590 <https://bugs.python.org/issue21590>`__: Support for DTrace and "
"SystemTap probes."
msgstr ""
"`bpo-21590 <https://bugs.python.org/issue21590>`__: Support for DTrace and "
"SystemTap probes."

#: ../../../Misc/NEWS:1819 ../../../Misc/NEWS:4567
msgid ""
"`bpo-26307 <https://bugs.python.org/issue26307>`__: The profile-opt build "
"now applies PGO to the built-in modules."
msgstr ""
"`bpo-26307 <https://bugs.python.org/issue26307>`__: The profile-opt build "
"now applies PGO to the built-in modules."

#: ../../../Misc/NEWS:1821
msgid ""
"`bpo-26359 <https://bugs.python.org/issue26359>`__: Add the --with-"
"optimizations flag to turn on LTO and PGO build support when available."
msgstr ""
"`bpo-26359 <https://bugs.python.org/issue26359>`__: Add the --with-"
"optimizations flag to turn on LTO and PGO build support when available."

#: ../../../Misc/NEWS:1824
msgid ""
"`bpo-27917 <https://bugs.python.org/issue27917>`__: Set platform triplets "
"for Android builds."
msgstr ""
"`bpo-27917 <https://bugs.python.org/issue27917>`__: Set platform triplets "
"for Android builds."

#: ../../../Misc/NEWS:1826
msgid ""
"`bpo-25825 <https://bugs.python.org/issue25825>`__: Update references to the "
"$(LIBPL) installation path on AIX. This path was changed in 3.2a4."
msgstr ""
"`bpo-25825 <https://bugs.python.org/issue25825>`__: Update references to the "
"$(LIBPL) installation path on AIX. This path was changed in 3.2a4."

#: ../../../Misc/NEWS:1829
msgid "Update OS X installer to use SQLite 3.14.1 and XZ 5.2.2."
msgstr ""

#: ../../../Misc/NEWS:1831
msgid ""
"`bpo-21122 <https://bugs.python.org/issue21122>`__: Fix LTO builds on OS X."
msgstr ""
"`bpo-21122 <https://bugs.python.org/issue21122>`__: Fix LTO builds on OS X."

#: ../../../Misc/NEWS:1833
msgid ""
"`bpo-17128 <https://bugs.python.org/issue17128>`__: Build OS X installer "
"with a private copy of OpenSSL. Also provide a sample Install Certificates "
"command script to install a set of root certificates from the third-party "
"certifi module."
msgstr ""
"`bpo-17128 <https://bugs.python.org/issue17128>`__: Build OS X installer "
"with a private copy of OpenSSL. Also provide a sample Install Certificates "
"command script to install a set of root certificates from the third-party "
"certifi module."

#: ../../../Misc/NEWS:1840 ../../../Misc/NEWS:4506
msgid ""
"`bpo-27952 <https://bugs.python.org/issue27952>`__: Get Tools/scripts/fixcid."
"py working with Python 3 and the current \"re\" module, avoid invalid Python "
"backslash escapes, and fix a bug parsing escaped C quote signs."
msgstr ""
"`bpo-27952 <https://bugs.python.org/issue27952>`__: Get Tools/scripts/fixcid."
"py working with Python 3 and the current \"re\" module, avoid invalid Python "
"backslash escapes, and fix a bug parsing escaped C quote signs."

#: ../../../Misc/NEWS:1847
msgid ""
"`bpo-28065 <https://bugs.python.org/issue28065>`__: Update xz dependency to "
"5.2.2 and build it from source."
msgstr ""
"`bpo-28065 <https://bugs.python.org/issue28065>`__: Update xz dependency to "
"5.2.2 and build it from source."

#: ../../../Misc/NEWS:1849 ../../../Misc/NEWS:4523
msgid ""
"`bpo-25144 <https://bugs.python.org/issue25144>`__: Ensures TargetDir is set "
"before continuing with custom install."
msgstr ""
"`bpo-25144 <https://bugs.python.org/issue25144>`__: Ensures TargetDir is set "
"before continuing with custom install."

#: ../../../Misc/NEWS:1852
msgid ""
"`bpo-1602 <https://bugs.python.org/issue1602>`__: Windows console doesn't "
"input or print Unicode (PEP 528)"
msgstr ""
"`bpo-1602 <https://bugs.python.org/issue1602>`__: Windows console doesn't "
"input or print Unicode (PEP 528)"

#: ../../../Misc/NEWS:1854
msgid ""
"`bpo-27781 <https://bugs.python.org/issue27781>`__: Change file system "
"encoding on Windows to UTF-8 (PEP 529)"
msgstr ""
"`bpo-27781 <https://bugs.python.org/issue27781>`__: Change file system "
"encoding on Windows to UTF-8 (PEP 529)"

#: ../../../Misc/NEWS:1856
msgid ""
"`bpo-27731 <https://bugs.python.org/issue27731>`__: Opt-out of MAX_PATH on "
"Windows 10"
msgstr ""
"`bpo-27731 <https://bugs.python.org/issue27731>`__: Opt-out of MAX_PATH on "
"Windows 10"

#: ../../../Misc/NEWS:1858
msgid ""
"`bpo-6135 <https://bugs.python.org/issue6135>`__: Adds encoding and errors "
"parameters to subprocess."
msgstr ""
"`bpo-6135 <https://bugs.python.org/issue6135>`__: Adds encoding and errors "
"parameters to subprocess."

#: ../../../Misc/NEWS:1860
msgid ""
"`bpo-27959 <https://bugs.python.org/issue27959>`__: Adds oem encoding, alias "
"ansi to mbcs, move aliasmbcs to codec lookup."
msgstr ""
"`bpo-27959 <https://bugs.python.org/issue27959>`__: Adds oem encoding, alias "
"ansi to mbcs, move aliasmbcs to codec lookup."

#: ../../../Misc/NEWS:1863
msgid ""
"`bpo-27982 <https://bugs.python.org/issue27982>`__: The functions of the "
"winsound module now accept keyword arguments."
msgstr ""
"`bpo-27982 <https://bugs.python.org/issue27982>`__: The functions of the "
"winsound module now accept keyword arguments."

#: ../../../Misc/NEWS:1866
msgid ""
"`bpo-20366 <https://bugs.python.org/issue20366>`__: Build full text search "
"support into SQLite on Windows."
msgstr ""
"`bpo-20366 <https://bugs.python.org/issue20366>`__: Build full text search "
"support into SQLite on Windows."

#: ../../../Misc/NEWS:1868
msgid ""
"`bpo-27756 <https://bugs.python.org/issue27756>`__: Adds new icons for "
"Python files and processes on Windows. Designs by Cherry Wang."
msgstr ""
"`bpo-27756 <https://bugs.python.org/issue27756>`__: Adds new icons for "
"Python files and processes on Windows. Designs by Cherry Wang."

#: ../../../Misc/NEWS:1871
msgid ""
"`bpo-27883 <https://bugs.python.org/issue27883>`__: Update sqlite to "
"3.14.1.0 on Windows."
msgstr ""
"`bpo-27883 <https://bugs.python.org/issue27883>`__: Update sqlite to "
"3.14.1.0 on Windows."

#: ../../../Misc/NEWS:1875
msgid "Python 3.6.0 alpha 4"
msgstr "Python 3.6.0 alpha 4"

#: ../../../Misc/NEWS:1877
msgid "*Release date: 2016-08-15*"
msgstr ""

#: ../../../Misc/NEWS:1882
msgid ""
"`bpo-27704 <https://bugs.python.org/issue27704>`__: Optimized creating bytes "
"and bytearray from byte-like objects and iterables.  Speed up to 3 times for "
"short objects.  Original patch by Naoki Inada."
msgstr ""
"`bpo-27704 <https://bugs.python.org/issue27704>`__: Optimized creating bytes "
"and bytearray from byte-like objects and iterables.  Speed up to 3 times for "
"short objects.  Original patch by Naoki Inada."

#: ../../../Misc/NEWS:1886
msgid ""
"`bpo-26823 <https://bugs.python.org/issue26823>`__: Large sections of "
"repeated lines in tracebacks are now abbreviated as \"[Previous line "
"repeated {count} more times]\" by the builtin traceback rendering. Patch by "
"Emanuel Barry."
msgstr ""
"`bpo-26823 <https://bugs.python.org/issue26823>`__: Large sections of "
"repeated lines in tracebacks are now abbreviated as \"[Previous line "
"repeated {count} more times]\" by the builtin traceback rendering. Patch by "
"Emanuel Barry."

#: ../../../Misc/NEWS:1890
msgid ""
"`bpo-27574 <https://bugs.python.org/issue27574>`__: Decreased an overhead of "
"parsing keyword arguments in functions implemented with using Argument "
"Clinic."
msgstr ""
"`bpo-27574 <https://bugs.python.org/issue27574>`__: Decreased an overhead of "
"parsing keyword arguments in functions implemented with using Argument "
"Clinic."

#: ../../../Misc/NEWS:1893
msgid ""
"`bpo-22557 <https://bugs.python.org/issue22557>`__: Now importing already "
"imported modules is up to 2.5 times faster."
msgstr ""
"`bpo-22557 <https://bugs.python.org/issue22557>`__: Now importing already "
"imported modules is up to 2.5 times faster."

#: ../../../Misc/NEWS:1896
msgid ""
"`bpo-17596 <https://bugs.python.org/issue17596>`__: Include <wincrypt.h> to "
"help with Min GW building."
msgstr ""
"`bpo-17596 <https://bugs.python.org/issue17596>`__: Include <wincrypt.h> to "
"help with Min GW building."

#: ../../../Misc/NEWS:1898
msgid ""
"`bpo-17599 <https://bugs.python.org/issue17599>`__: On Windows, rename the "
"privately defined REPARSE_DATA_BUFFER structure to avoid conflicting with "
"the definition from Min GW."
msgstr ""
"`bpo-17599 <https://bugs.python.org/issue17599>`__: On Windows, rename the "
"privately defined REPARSE_DATA_BUFFER structure to avoid conflicting with "
"the definition from Min GW."

#: ../../../Misc/NEWS:1901 ../../../Misc/NEWS:4034
msgid ""
"`bpo-27507 <https://bugs.python.org/issue27507>`__: Add integer overflow "
"check in bytearray.extend().  Patch by Xiang Zhang."
msgstr ""
"`bpo-27507 <https://bugs.python.org/issue27507>`__: Add integer overflow "
"check in bytearray.extend().  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1904 ../../../Misc/NEWS:4037
msgid ""
"`bpo-27581 <https://bugs.python.org/issue27581>`__: Don't rely on wrapping "
"for overflow check in PySequence_Tuple().  Patch by Xiang Zhang."
msgstr ""
"`bpo-27581 <https://bugs.python.org/issue27581>`__: Don't rely on wrapping "
"for overflow check in PySequence_Tuple().  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1907
msgid ""
"`bpo-1621 <https://bugs.python.org/issue1621>`__: Avoid signed integer "
"overflow in list and tuple operations. Patch by Xiang Zhang."
msgstr ""
"`bpo-1621 <https://bugs.python.org/issue1621>`__: Avoid signed integer "
"overflow in list and tuple operations. Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1910
msgid ""
"`bpo-27419 <https://bugs.python.org/issue27419>`__: Standard __import__() no "
"longer look up \"__import__\" in globals or builtins for importing "
"submodules or \"from import\".  Fixed a crash if raise a warning about "
"unabling to resolve package from __spec__ or __package__."
msgstr ""
"`bpo-27419 <https://bugs.python.org/issue27419>`__: Standard __import__() no "
"longer look up \"__import__\" in globals or builtins for importing "
"submodules or \"from import\".  Fixed a crash if raise a warning about "
"unabling to resolve package from __spec__ or __package__."

#: ../../../Misc/NEWS:1915 ../../../Misc/NEWS:4026
msgid ""
"`bpo-27083 <https://bugs.python.org/issue27083>`__: Respect the PYTHONCASEOK "
"environment variable under Windows."
msgstr ""
"`bpo-27083 <https://bugs.python.org/issue27083>`__: Respect the PYTHONCASEOK "
"environment variable under Windows."

#: ../../../Misc/NEWS:1917 ../../../Misc/NEWS:4028
msgid ""
"`bpo-27514 <https://bugs.python.org/issue27514>`__: Make having too many "
"statically nested blocks a SyntaxError instead of SystemError."
msgstr ""
"`bpo-27514 <https://bugs.python.org/issue27514>`__: Make having too many "
"statically nested blocks a SyntaxError instead of SystemError."

#: ../../../Misc/NEWS:1920
msgid ""
"`bpo-27366 <https://bugs.python.org/issue27366>`__: Implemented PEP 487 "
"(Simpler customization of class creation). Upon subclassing, the "
"__init_subclass__ classmethod is called on the base class. Descriptors are "
"initialized with __set_name__ after class creation."
msgstr ""
"`bpo-27366 <https://bugs.python.org/issue27366>`__: Implemented PEP 487 "
"(Simpler customization of class creation). Upon subclassing, the "
"__init_subclass__ classmethod is called on the base class. Descriptors are "
"initialized with __set_name__ after class creation."

#: ../../../Misc/NEWS:1927
msgid ""
"`bpo-26027 <https://bugs.python.org/issue26027>`__, #27524: Add PEP 519/"
"__fspath__() support to the os and os.path modules. Includes code from Jelle "
"Zijlstra."
msgstr ""
"`bpo-26027 <https://bugs.python.org/issue26027>`__, #27524: Add PEP 519/"
"__fspath__() support to the os and os.path modules. Includes code from Jelle "
"Zijlstra."

#: ../../../Misc/NEWS:1930
msgid ""
"`bpo-27598 <https://bugs.python.org/issue27598>`__: Add Collections to "
"collections.abc. Patch by Ivan Levkivskyi, docs by Neil Girdhar."
msgstr ""
"`bpo-27598 <https://bugs.python.org/issue27598>`__: Add Collections to "
"collections.abc. Patch by Ivan Levkivskyi, docs by Neil Girdhar."

#: ../../../Misc/NEWS:1933
msgid ""
"`bpo-25958 <https://bugs.python.org/issue25958>`__: Support \"anti-"
"registration\" of special methods from various ABCs, like __hash__, __iter__ "
"or __len__.  All these (and several more) can be set to None in an "
"implementation class and the behavior will be as if the method is not "
"defined at all. (Previously, this mechanism existed only for __hash__, to "
"make mutable classes unhashable.)  Code contributed by Andrew Barnert and "
"Ivan Levkivskyi."
msgstr ""
"`bpo-25958 <https://bugs.python.org/issue25958>`__: Support \"anti-"
"registration\" of special methods from various ABCs, like __hash__, __iter__ "
"or __len__.  All these (and several more) can be set to None in an "
"implementation class and the behavior will be as if the method is not "
"defined at all. (Previously, this mechanism existed only for __hash__, to "
"make mutable classes unhashable.)  Code contributed by Andrew Barnert and "
"Ivan Levkivskyi."

#: ../../../Misc/NEWS:1941
msgid ""
"`bpo-16764 <https://bugs.python.org/issue16764>`__: Support keyword "
"arguments to zlib.decompress().  Patch by Xiang Zhang."
msgstr ""
"`bpo-16764 <https://bugs.python.org/issue16764>`__: Support keyword "
"arguments to zlib.decompress().  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:1944
msgid ""
"`bpo-27736 <https://bugs.python.org/issue27736>`__: Prevent segfault after "
"interpreter re-initialization due to ref count problem introduced in code "
"for `bpo-27038 <https://bugs.python.org/issue27038>`__ in 3.6.0a3. Patch by "
"Xiang Zhang."
msgstr ""
"`bpo-27736 <https://bugs.python.org/issue27736>`__: Prevent segfault after "
"interpreter re-initialization due to ref count problem introduced in code "
"for `bpo-27038 <https://bugs.python.org/issue27038>`__ in 3.6.0a3. Patch by "
"Xiang Zhang."

#: ../../../Misc/NEWS:1948
msgid ""
"`bpo-25628 <https://bugs.python.org/issue25628>`__:  The *verbose* and "
"*rename* parameters for collections.namedtuple are now keyword-only."
msgstr ""
"`bpo-25628 <https://bugs.python.org/issue25628>`__:  The *verbose* and "
"*rename* parameters for collections.namedtuple are now keyword-only."

#: ../../../Misc/NEWS:1951
msgid ""
"`bpo-12345 <https://bugs.python.org/issue12345>`__: Add mathematical "
"constant tau to math and cmath. See also PEP 628."
msgstr ""
"`bpo-12345 <https://bugs.python.org/issue12345>`__: Add mathematical "
"constant tau to math and cmath. See also PEP 628."

#: ../../../Misc/NEWS:1954
msgid ""
"`bpo-26823 <https://bugs.python.org/issue26823>`__: traceback.StackSummary."
"format now abbreviates large sections of repeated lines as \"[Previous line "
"repeated {count} more times]\" (this change then further affects other "
"traceback display operations in the module). Patch by Emanuel Barry."
msgstr ""
"`bpo-26823 <https://bugs.python.org/issue26823>`__: traceback.StackSummary."
"format now abbreviates large sections of repeated lines as \"[Previous line "
"repeated {count} more times]\" (this change then further affects other "
"traceback display operations in the module). Patch by Emanuel Barry."

#: ../../../Misc/NEWS:1959
msgid ""
"`bpo-27664 <https://bugs.python.org/issue27664>`__: Add to concurrent."
"futures.thread.ThreadPoolExecutor() the ability to specify a thread name "
"prefix."
msgstr ""
"`bpo-27664 <https://bugs.python.org/issue27664>`__: Add to concurrent."
"futures.thread.ThreadPoolExecutor() the ability to specify a thread name "
"prefix."

#: ../../../Misc/NEWS:1962
msgid ""
"`bpo-27181 <https://bugs.python.org/issue27181>`__: Add geometric_mean and "
"harmonic_mean to statistics module."
msgstr ""
"`bpo-27181 <https://bugs.python.org/issue27181>`__: Add geometric_mean and "
"harmonic_mean to statistics module."

#: ../../../Misc/NEWS:1964
msgid ""
"`bpo-27573 <https://bugs.python.org/issue27573>`__: code.interact now prints "
"an message when exiting."
msgstr ""
"`bpo-27573 <https://bugs.python.org/issue27573>`__: code.interact now prints "
"an message when exiting."

#: ../../../Misc/NEWS:1966
msgid ""
"`bpo-6422 <https://bugs.python.org/issue6422>`__: Add autorange method to "
"timeit.Timer objects."
msgstr ""
"`bpo-6422 <https://bugs.python.org/issue6422>`__: Add autorange method to "
"timeit.Timer objects."

#: ../../../Misc/NEWS:1968 ../../../Misc/NEWS:4276
msgid ""
"`bpo-27773 <https://bugs.python.org/issue27773>`__: Correct some memory "
"management errors server_hostname in _ssl.wrap_socket()."
msgstr ""
"`bpo-27773 <https://bugs.python.org/issue27773>`__: Correct some memory "
"management errors server_hostname in _ssl.wrap_socket()."

#: ../../../Misc/NEWS:1971
msgid ""
"`bpo-26750 <https://bugs.python.org/issue26750>`__: unittest.mock."
"create_autospec() now works properly for subclasses of property() and other "
"data descriptors.  Removes the never publicly used, never documented "
"unittest.mock.DescriptorTypes tuple."
msgstr ""
"`bpo-26750 <https://bugs.python.org/issue26750>`__: unittest.mock."
"create_autospec() now works properly for subclasses of property() and other "
"data descriptors.  Removes the never publicly used, never documented "
"unittest.mock.DescriptorTypes tuple."

#: ../../../Misc/NEWS:1975
msgid ""
"`bpo-26754 <https://bugs.python.org/issue26754>`__: Undocumented support of "
"general bytes-like objects as path in compile() and similar functions is now "
"deprecated."
msgstr ""
"`bpo-26754 <https://bugs.python.org/issue26754>`__: Undocumented support of "
"general bytes-like objects as path in compile() and similar functions is now "
"deprecated."

#: ../../../Misc/NEWS:1978
msgid ""
"`bpo-26800 <https://bugs.python.org/issue26800>`__: Undocumented support of "
"general bytes-like objects as paths in os functions is now deprecated."
msgstr ""
"`bpo-26800 <https://bugs.python.org/issue26800>`__: Undocumented support of "
"general bytes-like objects as paths in os functions is now deprecated."

#: ../../../Misc/NEWS:1981
msgid ""
"`bpo-26981 <https://bugs.python.org/issue26981>`__: Add _order_ "
"compatibility shim to enum.Enum for Python 2/3 code bases."
msgstr ""
"`bpo-26981 <https://bugs.python.org/issue26981>`__: Add _order_ "
"compatibility shim to enum.Enum for Python 2/3 code bases."

#: ../../../Misc/NEWS:1984
msgid ""
"`bpo-27661 <https://bugs.python.org/issue27661>`__: Added tzinfo keyword "
"argument to datetime.combine."
msgstr ""
"`bpo-27661 <https://bugs.python.org/issue27661>`__: Added tzinfo keyword "
"argument to datetime.combine."

#: ../../../Misc/NEWS:1986 ../../../Misc/NEWS:4282
msgid ""
"In the curses module, raise an error if window.getstr() or window.instr() is "
"passed a negative value."
msgstr ""

#: ../../../Misc/NEWS:1989 ../../../Misc/NEWS:4285
msgid ""
"`bpo-27783 <https://bugs.python.org/issue27783>`__: Fix possible usage of "
"uninitialized memory in operator.methodcaller."
msgstr ""
"`bpo-27783 <https://bugs.python.org/issue27783>`__: Fix possible usage of "
"uninitialized memory in operator.methodcaller."

#: ../../../Misc/NEWS:1992 ../../../Misc/NEWS:4288
msgid ""
"`bpo-27774 <https://bugs.python.org/issue27774>`__: Fix possible Py_DECREF "
"on unowned object in _sre."
msgstr ""
"`bpo-27774 <https://bugs.python.org/issue27774>`__: Fix possible Py_DECREF "
"on unowned object in _sre."

#: ../../../Misc/NEWS:1994 ../../../Misc/NEWS:4290
msgid ""
"`bpo-27760 <https://bugs.python.org/issue27760>`__: Fix possible integer "
"overflow in binascii.b2a_qp."
msgstr ""
"`bpo-27760 <https://bugs.python.org/issue27760>`__: Fix possible integer "
"overflow in binascii.b2a_qp."

#: ../../../Misc/NEWS:1996 ../../../Misc/NEWS:4292
msgid ""
"`bpo-27758 <https://bugs.python.org/issue27758>`__: Fix possible integer "
"overflow in the _csv module for large record lengths."
msgstr ""
"`bpo-27758 <https://bugs.python.org/issue27758>`__: Fix possible integer "
"overflow in the _csv module for large record lengths."

#: ../../../Misc/NEWS:1999 ../../../Misc/NEWS:4295
msgid ""
"`bpo-27568 <https://bugs.python.org/issue27568>`__: Prevent HTTPoxy attack "
"(CVE-2016-1000110). Ignore the HTTP_PROXY variable when REQUEST_METHOD "
"environment is set, which indicates that the script is in CGI mode."
msgstr ""
"`bpo-27568 <https://bugs.python.org/issue27568>`__: Prevent HTTPoxy attack "
"(CVE-2016-1000110). Ignore the HTTP_PROXY variable when REQUEST_METHOD "
"environment is set, which indicates that the script is in CGI mode."

#: ../../../Misc/NEWS:2003
msgid ""
"`bpo-7063 <https://bugs.python.org/issue7063>`__: Remove dead code from the "
"\"array\" module's slice handling. Patch by Chuck."
msgstr ""
"`bpo-7063 <https://bugs.python.org/issue7063>`__: Remove dead code from the "
"\"array\" module's slice handling. Patch by Chuck."

#: ../../../Misc/NEWS:2006 ../../../Misc/NEWS:4299
msgid ""
"`bpo-27656 <https://bugs.python.org/issue27656>`__: Do not assume sched.h "
"defines any SCHED_* constants."
msgstr ""
"`bpo-27656 <https://bugs.python.org/issue27656>`__: Do not assume sched.h "
"defines any SCHED_* constants."

#: ../../../Misc/NEWS:2008 ../../../Misc/NEWS:4301
msgid ""
"`bpo-27130 <https://bugs.python.org/issue27130>`__: In the \"zlib\" module, "
"fix handling of large buffers (typically 4 GiB) when compressing and "
"decompressing.  Previously, inputs were limited to 4 GiB, and compression "
"and decompression operations did not properly handle results of 4 GiB."
msgstr ""
"`bpo-27130 <https://bugs.python.org/issue27130>`__: In the \"zlib\" module, "
"fix handling of large buffers (typically 4 GiB) when compressing and "
"decompressing.  Previously, inputs were limited to 4 GiB, and compression "
"and decompression operations did not properly handle results of 4 GiB."

#: ../../../Misc/NEWS:2013
msgid ""
"`bpo-24773 <https://bugs.python.org/issue24773>`__: Implemented PEP 495 "
"(Local Time Disambiguation)."
msgstr ""
"`bpo-24773 <https://bugs.python.org/issue24773>`__: Implemented PEP 495 "
"(Local Time Disambiguation)."

#: ../../../Misc/NEWS:2015
msgid ""
"Expose the EPOLLEXCLUSIVE constant (when it is defined) in the select module."
msgstr ""

#: ../../../Misc/NEWS:2017
msgid ""
"`bpo-27567 <https://bugs.python.org/issue27567>`__: Expose the EPOLLRDHUP "
"and POLLRDHUP constants in the select module."
msgstr ""
"`bpo-27567 <https://bugs.python.org/issue27567>`__: Expose the EPOLLRDHUP "
"and POLLRDHUP constants in the select module."

#: ../../../Misc/NEWS:2020
msgid ""
"`bpo-1621 <https://bugs.python.org/issue1621>`__: Avoid signed int negation "
"overflow in the \"audioop\" module."
msgstr ""
"`bpo-1621 <https://bugs.python.org/issue1621>`__: Avoid signed int negation "
"overflow in the \"audioop\" module."

#: ../../../Misc/NEWS:2022 ../../../Misc/NEWS:4306
msgid ""
"`bpo-27533 <https://bugs.python.org/issue27533>`__: Release GIL in nt._isdir"
msgstr ""
"`bpo-27533 <https://bugs.python.org/issue27533>`__: Release GIL in nt._isdir"

#: ../../../Misc/NEWS:2024 ../../../Misc/NEWS:4308
msgid ""
"`bpo-17711 <https://bugs.python.org/issue17711>`__: Fixed unpickling by the "
"persistent ID with protocol 0. Original patch by Alexandre Vassalotti."
msgstr ""
"`bpo-17711 <https://bugs.python.org/issue17711>`__: Fixed unpickling by the "
"persistent ID with protocol 0. Original patch by Alexandre Vassalotti."

#: ../../../Misc/NEWS:2027 ../../../Misc/NEWS:4311
msgid ""
"`bpo-27522 <https://bugs.python.org/issue27522>`__: Avoid an unintentional "
"reference cycle in email.feedparser."
msgstr ""
"`bpo-27522 <https://bugs.python.org/issue27522>`__: Avoid an unintentional "
"reference cycle in email.feedparser."

#: ../../../Misc/NEWS:2029
msgid ""
"`bpo-27512 <https://bugs.python.org/issue27512>`__: Fix a segfault when os."
"fspath() called an __fspath__() method that raised an exception. Patch by "
"Xiang Zhang."
msgstr ""
"`bpo-27512 <https://bugs.python.org/issue27512>`__: Fix a segfault when os."
"fspath() called an __fspath__() method that raised an exception. Patch by "
"Xiang Zhang."

#: ../../../Misc/NEWS:2035 ../../../Misc/NEWS:4456
msgid ""
"`bpo-27714 <https://bugs.python.org/issue27714>`__: text_textview and "
"test_autocomplete now pass when re-run in the same process.  This occurs "
"when test_idle fails when run with the -w option but without -jn.  Fix "
"warning from test_config."
msgstr ""
"`bpo-27714 <https://bugs.python.org/issue27714>`__: text_textview and "
"test_autocomplete now pass when re-run in the same process.  This occurs "
"when test_idle fails when run with the -w option but without -jn.  Fix "
"warning from test_config."

#: ../../../Misc/NEWS:2039
msgid ""
"`bpo-27621 <https://bugs.python.org/issue27621>`__: Put query response "
"validation error messages in the query box itself instead of in a separate "
"massagebox.  Redo tests to match. Add Mac OSX refinements.  Original patch "
"by Mark Roseman."
msgstr ""
"`bpo-27621 <https://bugs.python.org/issue27621>`__: Put query response "
"validation error messages in the query box itself instead of in a separate "
"massagebox.  Redo tests to match. Add Mac OSX refinements.  Original patch "
"by Mark Roseman."

#: ../../../Misc/NEWS:2043
msgid ""
"`bpo-27620 <https://bugs.python.org/issue27620>`__: Escape key now closes "
"Query box as cancelled."
msgstr ""
"`bpo-27620 <https://bugs.python.org/issue27620>`__: Escape key now closes "
"Query box as cancelled."

#: ../../../Misc/NEWS:2045
msgid ""
"`bpo-27609 <https://bugs.python.org/issue27609>`__: IDLE: tab after initial "
"whitespace should tab, not autocomplete. This fixes problem with writing "
"docstrings at least twice indented."
msgstr ""
"`bpo-27609 <https://bugs.python.org/issue27609>`__: IDLE: tab after initial "
"whitespace should tab, not autocomplete. This fixes problem with writing "
"docstrings at least twice indented."

#: ../../../Misc/NEWS:2049
msgid ""
"`bpo-27609 <https://bugs.python.org/issue27609>`__: Explicitly return None "
"when there are also non-None returns. In a few cases, reverse a condition "
"and eliminate a return."
msgstr ""
"`bpo-27609 <https://bugs.python.org/issue27609>`__: Explicitly return None "
"when there are also non-None returns. In a few cases, reverse a condition "
"and eliminate a return."

#: ../../../Misc/NEWS:2052 ../../../Misc/NEWS:4460
msgid ""
"`bpo-25507 <https://bugs.python.org/issue25507>`__: IDLE no longer runs "
"buggy code because of its tkinter imports. Users must include the same "
"imports required to run directly in Python."
msgstr ""
"`bpo-25507 <https://bugs.python.org/issue25507>`__: IDLE no longer runs "
"buggy code because of its tkinter imports. Users must include the same "
"imports required to run directly in Python."

#: ../../../Misc/NEWS:2055 ../../../Misc/NEWS:2236
msgid ""
"`bpo-27173 <https://bugs.python.org/issue27173>`__: Add 'IDLE Modern Unix' "
"to the built-in key sets. Make the default key set depend on the platform. "
"Add tests for the changes to the config module."
msgstr ""
"`bpo-27173 <https://bugs.python.org/issue27173>`__: Add 'IDLE Modern Unix' "
"to the built-in key sets. Make the default key set depend on the platform. "
"Add tests for the changes to the config module."

#: ../../../Misc/NEWS:2059 ../../../Misc/NEWS:2243 ../../../Misc/NEWS:4463
msgid ""
"`bpo-27452 <https://bugs.python.org/issue27452>`__: add line counter and crc "
"to IDLE configHandler test dump."
msgstr ""
"`bpo-27452 <https://bugs.python.org/issue27452>`__: add line counter and crc "
"to IDLE configHandler test dump."

#: ../../../Misc/NEWS:2064
msgid ""
"`bpo-25805 <https://bugs.python.org/issue25805>`__: Skip a test in "
"test_pkgutil as needed that doesn't work when ``__name__ == __main__``. "
"Patch by SilentGhost."
msgstr ""
"`bpo-25805 <https://bugs.python.org/issue25805>`__: Skip a test in "
"test_pkgutil as needed that doesn't work when ``__name__ == __main__``. "
"Patch by SilentGhost."

#: ../../../Misc/NEWS:2067
msgid ""
"`bpo-27472 <https://bugs.python.org/issue27472>`__: Add test.support."
"unix_shell as the path to the default shell."
msgstr ""
"`bpo-27472 <https://bugs.python.org/issue27472>`__: Add test.support."
"unix_shell as the path to the default shell."

#: ../../../Misc/NEWS:2069 ../../../Misc/NEWS:4500
msgid ""
"`bpo-27369 <https://bugs.python.org/issue27369>`__: In test_pyexpat, avoid "
"testing an error message detail that changed in Expat 2.2.0."
msgstr ""
"`bpo-27369 <https://bugs.python.org/issue27369>`__: In test_pyexpat, avoid "
"testing an error message detail that changed in Expat 2.2.0."

#: ../../../Misc/NEWS:2072
msgid ""
"`bpo-27594 <https://bugs.python.org/issue27594>`__: Prevent assertion error "
"when running test_ast with coverage enabled: ensure code object has a valid "
"first line number. Patch suggested by Ivan Levkivskyi."
msgstr ""
"`bpo-27594 <https://bugs.python.org/issue27594>`__: Prevent assertion error "
"when running test_ast with coverage enabled: ensure code object has a valid "
"first line number. Patch suggested by Ivan Levkivskyi."

#: ../../../Misc/NEWS:2079
msgid ""
"`bpo-27647 <https://bugs.python.org/issue27647>`__: Update bundled Tcl/Tk to "
"8.6.6."
msgstr ""
"`bpo-27647 <https://bugs.python.org/issue27647>`__: Update bundled Tcl/Tk to "
"8.6.6."

#: ../../../Misc/NEWS:2081
msgid ""
"`bpo-27610 <https://bugs.python.org/issue27610>`__: Adds PEP 514 metadata to "
"Windows installer"
msgstr ""
"`bpo-27610 <https://bugs.python.org/issue27610>`__: Adds PEP 514 metadata to "
"Windows installer"

#: ../../../Misc/NEWS:2083 ../../../Misc/NEWS:4526
msgid ""
"`bpo-27469 <https://bugs.python.org/issue27469>`__: Adds a shell extension "
"to the launcher so that drag and drop works correctly."
msgstr ""
"`bpo-27469 <https://bugs.python.org/issue27469>`__: Adds a shell extension "
"to the launcher so that drag and drop works correctly."

#: ../../../Misc/NEWS:2086
msgid ""
"`bpo-27309 <https://bugs.python.org/issue27309>`__: Enables proper Windows "
"styles in python[w].exe manifest."
msgstr ""
"`bpo-27309 <https://bugs.python.org/issue27309>`__: Enables proper Windows "
"styles in python[w].exe manifest."

#: ../../../Misc/NEWS:2091 ../../../Misc/NEWS:4571
msgid ""
"`bpo-27713 <https://bugs.python.org/issue27713>`__: Suppress spurious build "
"warnings when updating importlib's bootstrap files.  Patch by Xiang Zhang"
msgstr ""
"`bpo-27713 <https://bugs.python.org/issue27713>`__: Suppress spurious build "
"warnings when updating importlib's bootstrap files.  Patch by Xiang Zhang"

#: ../../../Misc/NEWS:2094
msgid ""
"`bpo-25825 <https://bugs.python.org/issue25825>`__: Correct the references "
"to Modules/python.exp, which is required on AIX.  The references were "
"accidentally changed in 3.5.0a1."
msgstr ""
"`bpo-25825 <https://bugs.python.org/issue25825>`__: Correct the references "
"to Modules/python.exp, which is required on AIX.  The references were "
"accidentally changed in 3.5.0a1."

#: ../../../Misc/NEWS:2097 ../../../Misc/NEWS:4579
msgid ""
"`bpo-27453 <https://bugs.python.org/issue27453>`__: CPP invocation in "
"configure must use CPPFLAGS. Patch by Chi Hsuan Yen."
msgstr ""
"`bpo-27453 <https://bugs.python.org/issue27453>`__: CPP invocation in "
"configure must use CPPFLAGS. Patch by Chi Hsuan Yen."

#: ../../../Misc/NEWS:2100 ../../../Misc/NEWS:4582
msgid ""
"`bpo-27641 <https://bugs.python.org/issue27641>`__: The configure script now "
"inserts comments into the makefile to prevent the pgen and _freeze_importlib "
"executables from being cross- compiled."
msgstr ""
"`bpo-27641 <https://bugs.python.org/issue27641>`__: The configure script now "
"inserts comments into the makefile to prevent the pgen and _freeze_importlib "
"executables from being cross- compiled."

#: ../../../Misc/NEWS:2104 ../../../Misc/NEWS:4586
msgid ""
"`bpo-26662 <https://bugs.python.org/issue26662>`__: Set PYTHON_FOR_GEN in "
"configure as the Python program to be used for file generation during the "
"build."
msgstr ""
"`bpo-26662 <https://bugs.python.org/issue26662>`__: Set PYTHON_FOR_GEN in "
"configure as the Python program to be used for file generation during the "
"build."

#: ../../../Misc/NEWS:2107 ../../../Misc/NEWS:4589
msgid ""
"`bpo-10910 <https://bugs.python.org/issue10910>`__: Avoid C++ compilation "
"errors on FreeBSD and OS X. Also update FreedBSD version checks for the "
"original ctype UTF-8 workaround."
msgstr ""
"`bpo-10910 <https://bugs.python.org/issue10910>`__: Avoid C++ compilation "
"errors on FreeBSD and OS X. Also update FreedBSD version checks for the "
"original ctype UTF-8 workaround."

#: ../../../Misc/NEWS:2112
msgid "Python 3.6.0 alpha 3"
msgstr "Python 3.6.0 alpha 3"

#: ../../../Misc/NEWS:2114
msgid "*Release date: 2016-07-11*"
msgstr ""

#: ../../../Misc/NEWS:2119 ../../../Misc/NEWS:4031
msgid ""
"`bpo-27473 <https://bugs.python.org/issue27473>`__: Fixed possible integer "
"overflow in bytes and bytearray concatenations.  Patch by Xiang Zhang."
msgstr ""
"`bpo-27473 <https://bugs.python.org/issue27473>`__: Fixed possible integer "
"overflow in bytes and bytearray concatenations.  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:2122
msgid ""
"`bpo-23034 <https://bugs.python.org/issue23034>`__: The output of a special "
"Python build with defined COUNT_ALLOCS, SHOW_ALLOC_COUNT or SHOW_TRACK_COUNT "
"macros is now off by  default.  It can be re-enabled using the \"-X "
"showalloccount\" option.  It now outputs to stderr instead of stdout."
msgstr ""
"`bpo-23034 <https://bugs.python.org/issue23034>`__: The output of a special "
"Python build with defined COUNT_ALLOCS, SHOW_ALLOC_COUNT or SHOW_TRACK_COUNT "
"macros is now off by  default.  It can be re-enabled using the \"-X "
"showalloccount\" option.  It now outputs to stderr instead of stdout."

#: ../../../Misc/NEWS:2127 ../../../Misc/NEWS:4040
msgid ""
"`bpo-27443 <https://bugs.python.org/issue27443>`__: __length_hint__() of "
"bytearray iterators no longer return a negative integer for a resized "
"bytearray."
msgstr ""
"`bpo-27443 <https://bugs.python.org/issue27443>`__: __length_hint__() of "
"bytearray iterators no longer return a negative integer for a resized "
"bytearray."

#: ../../../Misc/NEWS:2130
msgid ""
"`bpo-27007 <https://bugs.python.org/issue27007>`__: The fromhex() class "
"methods of bytes and bytearray subclasses now return an instance of "
"corresponding subclass."
msgstr ""
"`bpo-27007 <https://bugs.python.org/issue27007>`__: The fromhex() class "
"methods of bytes and bytearray subclasses now return an instance of "
"corresponding subclass."

#: ../../../Misc/NEWS:2136 ../../../Misc/NEWS:4313
msgid ""
"`bpo-26844 <https://bugs.python.org/issue26844>`__: Fix error message for "
"imp.find_module() to refer to 'path' instead of 'name'. Patch by Lev Maximov."
msgstr ""
"`bpo-26844 <https://bugs.python.org/issue26844>`__: Fix error message for "
"imp.find_module() to refer to 'path' instead of 'name'. Patch by Lev Maximov."

#: ../../../Misc/NEWS:2139 ../../../Misc/NEWS:4316
msgid ""
"`bpo-23804 <https://bugs.python.org/issue23804>`__: Fix SSL zero-length "
"recv() calls to not block and not raise an error about unclean EOF."
msgstr ""
"`bpo-23804 <https://bugs.python.org/issue23804>`__: Fix SSL zero-length "
"recv() calls to not block and not raise an error about unclean EOF."

#: ../../../Misc/NEWS:2142 ../../../Misc/NEWS:4319
msgid ""
"`bpo-27466 <https://bugs.python.org/issue27466>`__: Change time format "
"returned by http.cookie.time2netscape, confirming the netscape cookie format "
"and making it consistent with documentation."
msgstr ""
"`bpo-27466 <https://bugs.python.org/issue27466>`__: Change time format "
"returned by http.cookie.time2netscape, confirming the netscape cookie format "
"and making it consistent with documentation."

#: ../../../Misc/NEWS:2146
msgid ""
"`bpo-21708 <https://bugs.python.org/issue21708>`__: Deprecated dbm.dumb "
"behavior that differs from common dbm behavior: creating a database in 'r' "
"and 'w' modes and modifying a database in 'r' mode."
msgstr ""
"`bpo-21708 <https://bugs.python.org/issue21708>`__: Deprecated dbm.dumb "
"behavior that differs from common dbm behavior: creating a database in 'r' "
"and 'w' modes and modifying a database in 'r' mode."

#: ../../../Misc/NEWS:2150
msgid ""
"`bpo-26721 <https://bugs.python.org/issue26721>`__: Change the socketserver."
"StreamRequestHandler.wfile attribute to implement BufferedIOBase. In "
"particular, the write() method no longer does partial writes."
msgstr ""
"`bpo-26721 <https://bugs.python.org/issue26721>`__: Change the socketserver."
"StreamRequestHandler.wfile attribute to implement BufferedIOBase. In "
"particular, the write() method no longer does partial writes."

#: ../../../Misc/NEWS:2154
msgid ""
"`bpo-22115 <https://bugs.python.org/issue22115>`__: Added methods trace_add, "
"trace_remove and trace_info in the tkinter.Variable class.  They replace old "
"methods trace_variable, trace, trace_vdelete and trace_vinfo that use "
"obsolete Tcl commands and might not work in future versions of Tcl.  Fixed "
"old tracing methods: trace_vdelete() with wrong mode no longer break "
"tracing, trace_vinfo() now always returns a list of pairs of strings, "
"tracing in the \"u\" mode now works."
msgstr ""
"`bpo-22115 <https://bugs.python.org/issue22115>`__: Added methods trace_add, "
"trace_remove and trace_info in the tkinter.Variable class.  They replace old "
"methods trace_variable, trace, trace_vdelete and trace_vinfo that use "
"obsolete Tcl commands and might not work in future versions of Tcl.  Fixed "
"old tracing methods: trace_vdelete() with wrong mode no longer break "
"tracing, trace_vinfo() now always returns a list of pairs of strings, "
"tracing in the \"u\" mode now works."

#: ../../../Misc/NEWS:2161
msgid ""
"`bpo-26243 <https://bugs.python.org/issue26243>`__: Only the level argument "
"to zlib.compress() is keyword argument now.  The first argument is "
"positional-only."
msgstr ""
"`bpo-26243 <https://bugs.python.org/issue26243>`__: Only the level argument "
"to zlib.compress() is keyword argument now.  The first argument is "
"positional-only."

#: ../../../Misc/NEWS:2164
msgid ""
"`bpo-27038 <https://bugs.python.org/issue27038>`__: Expose the DirEntry type "
"as os.DirEntry. Code patch by Jelle Zijlstra."
msgstr ""
"`bpo-27038 <https://bugs.python.org/issue27038>`__: Expose the DirEntry type "
"as os.DirEntry. Code patch by Jelle Zijlstra."

#: ../../../Misc/NEWS:2167
msgid ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Update os.fspath()/"
"PyOS_FSPath() to check the return value of __fspath__() to be either str or "
"bytes."
msgstr ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Update os.fspath()/"
"PyOS_FSPath() to check the return value of __fspath__() to be either str or "
"bytes."

#: ../../../Misc/NEWS:2170
msgid ""
"`bpo-18726 <https://bugs.python.org/issue18726>`__: All optional parameters "
"of the dump(), dumps(), load() and loads() functions and JSONEncoder and "
"JSONDecoder class constructors in the json module are now keyword-only."
msgstr ""
"`bpo-18726 <https://bugs.python.org/issue18726>`__: All optional parameters "
"of the dump(), dumps(), load() and loads() functions and JSONEncoder and "
"JSONDecoder class constructors in the json module are now keyword-only."

#: ../../../Misc/NEWS:2174
msgid ""
"`bpo-27319 <https://bugs.python.org/issue27319>`__: Methods selection_set(), "
"selection_add(), selection_remove() and selection_toggle() of ttk.TreeView "
"now allow passing multiple items as multiple arguments instead of passing "
"them as a tuple.  Deprecated undocumented ability of calling the selection() "
"method with arguments."
msgstr ""
"`bpo-27319 <https://bugs.python.org/issue27319>`__: Methods selection_set(), "
"selection_add(), selection_remove() and selection_toggle() of ttk.TreeView "
"now allow passing multiple items as multiple arguments instead of passing "
"them as a tuple.  Deprecated undocumented ability of calling the selection() "
"method with arguments."

#: ../../../Misc/NEWS:2179 ../../../Misc/NEWS:4333
msgid ""
"`bpo-27079 <https://bugs.python.org/issue27079>`__: Fixed curses.ascii "
"functions isblank(), iscntrl() and ispunct()."
msgstr ""
"`bpo-27079 <https://bugs.python.org/issue27079>`__: Fixed curses.ascii "
"functions isblank(), iscntrl() and ispunct()."

#: ../../../Misc/NEWS:2181
msgid ""
"`bpo-27294 <https://bugs.python.org/issue27294>`__: Numerical state in the "
"repr for Tkinter event objects is now represented as a combination of known "
"flags."
msgstr ""
"`bpo-27294 <https://bugs.python.org/issue27294>`__: Numerical state in the "
"repr for Tkinter event objects is now represented as a combination of known "
"flags."

#: ../../../Misc/NEWS:2184
msgid ""
"`bpo-27177 <https://bugs.python.org/issue27177>`__: Match objects in the re "
"module now support index-like objects as group indices.  Based on patches by "
"Jeroen Demeyer and Xiang Zhang."
msgstr ""
"`bpo-27177 <https://bugs.python.org/issue27177>`__: Match objects in the re "
"module now support index-like objects as group indices.  Based on patches by "
"Jeroen Demeyer and Xiang Zhang."

#: ../../../Misc/NEWS:2187 ../../../Misc/NEWS:4335
msgid ""
"`bpo-26754 <https://bugs.python.org/issue26754>`__: Some functions "
"(compile() etc) accepted a filename argument encoded as an iterable of "
"integers. Now only strings and byte-like objects are accepted."
msgstr ""
"`bpo-26754 <https://bugs.python.org/issue26754>`__: Some functions "
"(compile() etc) accepted a filename argument encoded as an iterable of "
"integers. Now only strings and byte-like objects are accepted."

#: ../../../Misc/NEWS:2191
msgid ""
"`bpo-26536 <https://bugs.python.org/issue26536>`__: socket.ioctl now "
"supports SIO_LOOPBACK_FAST_PATH. Patch by Daniel Stokes."
msgstr ""
"`bpo-26536 <https://bugs.python.org/issue26536>`__: socket.ioctl now "
"supports SIO_LOOPBACK_FAST_PATH. Patch by Daniel Stokes."

#: ../../../Misc/NEWS:2194 ../../../Misc/NEWS:4339
msgid ""
"`bpo-27048 <https://bugs.python.org/issue27048>`__: Prevents distutils "
"failing on Windows when environment variables contain non-ASCII characters"
msgstr ""
"`bpo-27048 <https://bugs.python.org/issue27048>`__: Prevents distutils "
"failing on Windows when environment variables contain non-ASCII characters"

#: ../../../Misc/NEWS:2197 ../../../Misc/NEWS:4342
msgid ""
"`bpo-27330 <https://bugs.python.org/issue27330>`__: Fixed possible leaks in "
"the ctypes module."
msgstr ""
"`bpo-27330 <https://bugs.python.org/issue27330>`__: Fixed possible leaks in "
"the ctypes module."

#: ../../../Misc/NEWS:2199 ../../../Misc/NEWS:4344
msgid ""
"`bpo-27238 <https://bugs.python.org/issue27238>`__: Got rid of bare excepts "
"in the turtle module.  Original patch by Jelle Zijlstra."
msgstr ""
"`bpo-27238 <https://bugs.python.org/issue27238>`__: Got rid of bare excepts "
"in the turtle module.  Original patch by Jelle Zijlstra."

#: ../../../Misc/NEWS:2202 ../../../Misc/NEWS:4347
msgid ""
"`bpo-27122 <https://bugs.python.org/issue27122>`__: When an exception is "
"raised within the context being managed by a contextlib.ExitStack() and one "
"of the exit stack generators catches and raises it in a chain, do not re-"
"raise the original exception when exiting, let the new chained one through.  "
"This avoids the PEP 479 bug described in issue25782."
msgstr ""
"`bpo-27122 <https://bugs.python.org/issue27122>`__: When an exception is "
"raised within the context being managed by a contextlib.ExitStack() and one "
"of the exit stack generators catches and raises it in a chain, do not re-"
"raise the original exception when exiting, let the new chained one through.  "
"This avoids the PEP 479 bug described in issue25782."

#: ../../../Misc/NEWS:2208 ../../../Misc/NEWS:4353
msgid ""
"[Security] `bpo-27278 <https://bugs.python.org/issue27278>`__: Fix os."
"urandom() implementation using getrandom() on Linux.  Truncate size to "
"INT_MAX and loop until we collected enough random bytes, instead of casting "
"a directly Py_ssize_t to int."
msgstr ""
"[Security] `bpo-27278 <https://bugs.python.org/issue27278>`__: Fix os."
"urandom() implementation using getrandom() on Linux.  Truncate size to "
"INT_MAX and loop until we collected enough random bytes, instead of casting "
"a directly Py_ssize_t to int."

#: ../../../Misc/NEWS:2212
msgid ""
"`bpo-16864 <https://bugs.python.org/issue16864>`__: sqlite3.Cursor.lastrowid "
"now supports REPLACE statement. Initial patch by Alex LordThorsen."
msgstr ""
"`bpo-16864 <https://bugs.python.org/issue16864>`__: sqlite3.Cursor.lastrowid "
"now supports REPLACE statement. Initial patch by Alex LordThorsen."

#: ../../../Misc/NEWS:2215 ../../../Misc/NEWS:4357
msgid ""
"`bpo-26386 <https://bugs.python.org/issue26386>`__: Fixed ttk.TreeView "
"selection operations with item id's containing spaces."
msgstr ""
"`bpo-26386 <https://bugs.python.org/issue26386>`__: Fixed ttk.TreeView "
"selection operations with item id's containing spaces."

#: ../../../Misc/NEWS:2218
msgid ""
"`bpo-8637 <https://bugs.python.org/issue8637>`__: Honor a pager set by the "
"env var MANPAGER (in preference to one set by the env var PAGER)."
msgstr ""
"`bpo-8637 <https://bugs.python.org/issue8637>`__: Honor a pager set by the "
"env var MANPAGER (in preference to one set by the env var PAGER)."

#: ../../../Misc/NEWS:2221 ../../../Misc/NEWS:4360
msgid ""
"[Security] `bpo-22636 <https://bugs.python.org/issue22636>`__: Avoid shell "
"injection problems with ctypes.util.find_library()."
msgstr ""
"[Security] `bpo-22636 <https://bugs.python.org/issue22636>`__: Avoid shell "
"injection problems with ctypes.util.find_library()."

#: ../../../Misc/NEWS:2224 ../../../Misc/NEWS:4363
msgid ""
"`bpo-16182 <https://bugs.python.org/issue16182>`__: Fix various functions in "
"the \"readline\" module to use the locale encoding, and fix get_begidx() and "
"get_endidx() to return code point indexes."
msgstr ""
"`bpo-16182 <https://bugs.python.org/issue16182>`__: Fix various functions in "
"the \"readline\" module to use the locale encoding, and fix get_begidx() and "
"get_endidx() to return code point indexes."

#: ../../../Misc/NEWS:2228 ../../../Misc/NEWS:4367
msgid ""
"`bpo-27392 <https://bugs.python.org/issue27392>`__: Add loop."
"connect_accepted_socket(). Patch by Jim Fulton."
msgstr ""
"`bpo-27392 <https://bugs.python.org/issue27392>`__: Add loop."
"connect_accepted_socket(). Patch by Jim Fulton."

#: ../../../Misc/NEWS:2234
msgid ""
"`bpo-27477 <https://bugs.python.org/issue27477>`__: IDLE search dialogs now "
"use ttk widgets."
msgstr ""
"`bpo-27477 <https://bugs.python.org/issue27477>`__: IDLE search dialogs now "
"use ttk widgets."

#: ../../../Misc/NEWS:2240
msgid ""
"`bpo-27452 <https://bugs.python.org/issue27452>`__: make command line \"idle-"
"test> python test_help.py\" work. __file__ is relative when python is "
"started in the file's directory."
msgstr ""
"`bpo-27452 <https://bugs.python.org/issue27452>`__: make command line \"idle-"
"test> python test_help.py\" work. __file__ is relative when python is "
"started in the file's directory."

#: ../../../Misc/NEWS:2245
msgid ""
"`bpo-27380 <https://bugs.python.org/issue27380>`__: IDLE: add query.py with "
"base Query dialog and ttk widgets. Module had subclasses SectionName, "
"ModuleName, and HelpSource, which are used to get information from users by "
"configdialog and file =>Load Module. Each subclass has itw own validity "
"checks.  Using ModuleName allows users to edit bad module names instead of "
"starting over. Add tests and delete the two files combined into the new one."
msgstr ""
"`bpo-27380 <https://bugs.python.org/issue27380>`__: IDLE: add query.py with "
"base Query dialog and ttk widgets. Module had subclasses SectionName, "
"ModuleName, and HelpSource, which are used to get information from users by "
"configdialog and file =>Load Module. Each subclass has itw own validity "
"checks.  Using ModuleName allows users to edit bad module names instead of "
"starting over. Add tests and delete the two files combined into the new one."

#: ../../../Misc/NEWS:2252
msgid ""
"`bpo-27372 <https://bugs.python.org/issue27372>`__: Test_idle no longer "
"changes the locale."
msgstr ""
"`bpo-27372 <https://bugs.python.org/issue27372>`__: Test_idle no longer "
"changes the locale."

#: ../../../Misc/NEWS:2254 ../../../Misc/NEWS:4465
msgid ""
"`bpo-27365 <https://bugs.python.org/issue27365>`__: Allow non-ascii chars in "
"IDLE NEWS.txt, for contributor names."
msgstr ""
"`bpo-27365 <https://bugs.python.org/issue27365>`__: Allow non-ascii chars in "
"IDLE NEWS.txt, for contributor names."

#: ../../../Misc/NEWS:2256 ../../../Misc/NEWS:4467
msgid ""
"`bpo-27245 <https://bugs.python.org/issue27245>`__: IDLE: Cleanly delete "
"custom themes and key bindings. Previously, when IDLE was started from a "
"console or by import, a cascade of warnings was emitted.  Patch by Serhiy "
"Storchaka."
msgstr ""
"`bpo-27245 <https://bugs.python.org/issue27245>`__: IDLE: Cleanly delete "
"custom themes and key bindings. Previously, when IDLE was started from a "
"console or by import, a cascade of warnings was emitted.  Patch by Serhiy "
"Storchaka."

#: ../../../Misc/NEWS:2260
msgid ""
"`bpo-24137 <https://bugs.python.org/issue24137>`__: Run IDLE, test_idle, and "
"htest with tkinter default root disabled.  Fix code and tests that fail with "
"this restriction.  Fix htests to not create a second and redundant root and "
"mainloop."
msgstr ""
"`bpo-24137 <https://bugs.python.org/issue24137>`__: Run IDLE, test_idle, and "
"htest with tkinter default root disabled.  Fix code and tests that fail with "
"this restriction.  Fix htests to not create a second and redundant root and "
"mainloop."

#: ../../../Misc/NEWS:2264
msgid ""
"`bpo-27310 <https://bugs.python.org/issue27310>`__: Fix IDLE.app failure to "
"launch on OS X due to vestigial import."
msgstr ""
"`bpo-27310 <https://bugs.python.org/issue27310>`__: Fix IDLE.app failure to "
"launch on OS X due to vestigial import."

#: ../../../Misc/NEWS:2269
msgid ""
"`bpo-26754 <https://bugs.python.org/issue26754>`__: PyUnicode_FSDecoder() "
"accepted a filename argument encoded as an iterable of integers. Now only "
"strings and byte-like objects are accepted."
msgstr ""
"`bpo-26754 <https://bugs.python.org/issue26754>`__: PyUnicode_FSDecoder() "
"accepted a filename argument encoded as an iterable of integers. Now only "
"strings and byte-like objects are accepted."

#: ../../../Misc/NEWS:2275 ../../../Misc/NEWS:4552
msgid ""
"`bpo-28066 <https://bugs.python.org/issue28066>`__: Fix the logic that "
"searches build directories for generated include files when building outside "
"the source tree."
msgstr ""
"`bpo-28066 <https://bugs.python.org/issue28066>`__: Fix the logic that "
"searches build directories for generated include files when building outside "
"the source tree."

#: ../../../Misc/NEWS:2278
msgid ""
"`bpo-27442 <https://bugs.python.org/issue27442>`__: Expose the Android API "
"level that python was built against, in sysconfig.get_config_vars() as "
"'ANDROID_API_LEVEL'."
msgstr ""
"`bpo-27442 <https://bugs.python.org/issue27442>`__: Expose the Android API "
"level that python was built against, in sysconfig.get_config_vars() as "
"'ANDROID_API_LEVEL'."

#: ../../../Misc/NEWS:2281
msgid ""
"`bpo-27434 <https://bugs.python.org/issue27434>`__: The interpreter that "
"runs the cross-build, found in PATH, must now be of the same feature version "
"(e.g. 3.6) as the source being built."
msgstr ""
"`bpo-27434 <https://bugs.python.org/issue27434>`__: The interpreter that "
"runs the cross-build, found in PATH, must now be of the same feature version "
"(e.g. 3.6) as the source being built."

#: ../../../Misc/NEWS:2284 ../../../Misc/NEWS:4604
msgid ""
"`bpo-26930 <https://bugs.python.org/issue26930>`__: Update Windows builds to "
"use OpenSSL 1.0.2h."
msgstr ""
"`bpo-26930 <https://bugs.python.org/issue26930>`__: Update Windows builds to "
"use OpenSSL 1.0.2h."

#: ../../../Misc/NEWS:2286
msgid ""
"`bpo-23968 <https://bugs.python.org/issue23968>`__: Rename the platform "
"directory from plat-$(MACHDEP) to plat-$(PLATFORM_TRIPLET). Rename the "
"config directory (LIBPL) from config-$(LDVERSION) to config-$(LDVERSION)-"
"$(PLATFORM_TRIPLET). Install the platform specifc _sysconfigdata module into "
"the platform directory and rename it to include the ABIFLAGS."
msgstr ""
"`bpo-23968 <https://bugs.python.org/issue23968>`__: Rename the platform "
"directory from plat-$(MACHDEP) to plat-$(PLATFORM_TRIPLET). Rename the "
"config directory (LIBPL) from config-$(LDVERSION) to config-$(LDVERSION)-"
"$(PLATFORM_TRIPLET). Install the platform specifc _sysconfigdata module into "
"the platform directory and rename it to include the ABIFLAGS."

#: ../../../Misc/NEWS:2293
msgid "Don't use largefile support for GNU/Hurd."
msgstr ""

#: ../../../Misc/NEWS:2298 ../../../Misc/NEWS:4510
msgid ""
"`bpo-27332 <https://bugs.python.org/issue27332>`__: Fixed the type of the "
"first argument of module-level functions generated by Argument Clinic.  "
"Patch by Petr Viktorin."
msgstr ""
"`bpo-27332 <https://bugs.python.org/issue27332>`__: Fixed the type of the "
"first argument of module-level functions generated by Argument Clinic.  "
"Patch by Petr Viktorin."

#: ../../../Misc/NEWS:2301 ../../../Misc/NEWS:4513
msgid ""
"`bpo-27418 <https://bugs.python.org/issue27418>`__: Fixed Tools/importbench/"
"importbench.py."
msgstr ""
"`bpo-27418 <https://bugs.python.org/issue27418>`__: Fixed Tools/importbench/"
"importbench.py."

#: ../../../Misc/NEWS:2306 ../../../Misc/NEWS:5210
msgid ""
"`bpo-19489 <https://bugs.python.org/issue19489>`__: Moved the search box "
"from the sidebar to the header and footer of each page.  Patch by Ammar "
"Askar."
msgstr ""
"`bpo-19489 <https://bugs.python.org/issue19489>`__: Moved the search box "
"from the sidebar to the header and footer of each page.  Patch by Ammar "
"Askar."

#: ../../../Misc/NEWS:2309
msgid ""
"`bpo-27285 <https://bugs.python.org/issue27285>`__: Update documentation to "
"reflect the deprecation of ``pyvenv`` and normalize on the term \"virtual "
"environment\". Patch by Steve Piercy."
msgstr ""
"`bpo-27285 <https://bugs.python.org/issue27285>`__: Update documentation to "
"reflect the deprecation of ``pyvenv`` and normalize on the term \"virtual "
"environment\". Patch by Steve Piercy."

#: ../../../Misc/NEWS:2315
msgid ""
"`bpo-27027 <https://bugs.python.org/issue27027>`__: Added test.support."
"is_android that is True when this is an Android build."
msgstr ""
"`bpo-27027 <https://bugs.python.org/issue27027>`__: Added test.support."
"is_android that is True when this is an Android build."

#: ../../../Misc/NEWS:2320
msgid "Python 3.6.0 alpha 2"
msgstr "Python 3.6.0 alpha 2"

#: ../../../Misc/NEWS:2322
msgid "*Release date: 2016-06-13*"
msgstr ""

#: ../../../Misc/NEWS:2327
msgid ""
"`bpo-27095 <https://bugs.python.org/issue27095>`__: Simplified MAKE_FUNCTION "
"and removed MAKE_CLOSURE opcodes. Patch by Demur Rumed."
msgstr ""
"`bpo-27095 <https://bugs.python.org/issue27095>`__: Simplified MAKE_FUNCTION "
"and removed MAKE_CLOSURE opcodes. Patch by Demur Rumed."

#: ../../../Misc/NEWS:2330
msgid ""
"`bpo-27190 <https://bugs.python.org/issue27190>`__: Raise NotSupportedError "
"if sqlite3 is older than 3.3.1. Patch by Dave Sawyer."
msgstr ""
"`bpo-27190 <https://bugs.python.org/issue27190>`__: Raise NotSupportedError "
"if sqlite3 is older than 3.3.1. Patch by Dave Sawyer."

#: ../../../Misc/NEWS:2333
msgid ""
"`bpo-27286 <https://bugs.python.org/issue27286>`__: Fixed compiling "
"BUILD_MAP_UNPACK_WITH_CALL opcode.  Calling function with generalized "
"unpacking (PEP 448) and conflicting keyword names could cause undefined "
"behavior."
msgstr ""
"`bpo-27286 <https://bugs.python.org/issue27286>`__: Fixed compiling "
"BUILD_MAP_UNPACK_WITH_CALL opcode.  Calling function with generalized "
"unpacking (PEP 448) and conflicting keyword names could cause undefined "
"behavior."

#: ../../../Misc/NEWS:2337
msgid ""
"`bpo-27140 <https://bugs.python.org/issue27140>`__: Added "
"BUILD_CONST_KEY_MAP opcode."
msgstr ""
"`bpo-27140 <https://bugs.python.org/issue27140>`__: Added "
"BUILD_CONST_KEY_MAP opcode."

#: ../../../Misc/NEWS:2339
msgid ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Add support for os."
"PathLike objects to open() (part of PEP 519)."
msgstr ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Add support for os."
"PathLike objects to open() (part of PEP 519)."

#: ../../../Misc/NEWS:2341 ../../../Misc/NEWS:4625
msgid ""
"`bpo-27066 <https://bugs.python.org/issue27066>`__: Fixed SystemError if a "
"custom opener (for open()) returns a negative number without setting an "
"exception."
msgstr ""
"`bpo-27066 <https://bugs.python.org/issue27066>`__: Fixed SystemError if a "
"custom opener (for open()) returns a negative number without setting an "
"exception."

#: ../../../Misc/NEWS:2344
msgid ""
"`bpo-26983 <https://bugs.python.org/issue26983>`__: float() now always "
"return an instance of exact float. The deprecation warning is emitted if "
"__float__ returns an instance of a strict subclass of float.  In a future "
"versions of Python this can be an error."
msgstr ""
"`bpo-26983 <https://bugs.python.org/issue26983>`__: float() now always "
"return an instance of exact float. The deprecation warning is emitted if "
"__float__ returns an instance of a strict subclass of float.  In a future "
"versions of Python this can be an error."

#: ../../../Misc/NEWS:2349
msgid ""
"`bpo-27097 <https://bugs.python.org/issue27097>`__: Python interpreter is "
"now about 7% faster due to optimized instruction decoding.  Based on patch "
"by Demur Rumed."
msgstr ""
"`bpo-27097 <https://bugs.python.org/issue27097>`__: Python interpreter is "
"now about 7% faster due to optimized instruction decoding.  Based on patch "
"by Demur Rumed."

#: ../../../Misc/NEWS:2352
msgid ""
"`bpo-26647 <https://bugs.python.org/issue26647>`__: Python interpreter now "
"uses 16-bit wordcode instead of bytecode. Patch by Demur Rumed."
msgstr ""
"`bpo-26647 <https://bugs.python.org/issue26647>`__: Python interpreter now "
"uses 16-bit wordcode instead of bytecode. Patch by Demur Rumed."

#: ../../../Misc/NEWS:2355
msgid ""
"`bpo-23275 <https://bugs.python.org/issue23275>`__: Allow assigning to an "
"empty target list in round brackets: () = iterable."
msgstr ""
"`bpo-23275 <https://bugs.python.org/issue23275>`__: Allow assigning to an "
"empty target list in round brackets: () = iterable."

#: ../../../Misc/NEWS:2358 ../../../Misc/NEWS:4746
msgid ""
"`bpo-27243 <https://bugs.python.org/issue27243>`__: Update the __aiter__ "
"protocol: instead of returning an awaitable that resolves to an asynchronous "
"iterator, the asynchronous iterator should be returned directly.  Doing the "
"former will trigger a PendingDeprecationWarning."
msgstr ""
"`bpo-27243 <https://bugs.python.org/issue27243>`__: Update the __aiter__ "
"protocol: instead of returning an awaitable that resolves to an asynchronous "
"iterator, the asynchronous iterator should be returned directly.  Doing the "
"former will trigger a PendingDeprecationWarning."

#: ../../../Misc/NEWS:2367
msgid ""
"Comment out socket (SO_REUSEPORT) and posix (O_SHLOCK, O_EXLOCK) constants "
"exposed on the API which are not implemented on GNU/Hurd. They would not "
"work at runtime anyway."
msgstr ""

#: ../../../Misc/NEWS:2371
msgid ""
"`bpo-27025 <https://bugs.python.org/issue27025>`__: Generated names for "
"Tkinter widgets are now more meanful and recognizirable."
msgstr ""
"`bpo-27025 <https://bugs.python.org/issue27025>`__: Generated names for "
"Tkinter widgets are now more meanful and recognizirable."

#: ../../../Misc/NEWS:2374
msgid ""
"`bpo-25455 <https://bugs.python.org/issue25455>`__: Fixed crashes in repr of "
"recursive ElementTree.Element and functools.partial objects."
msgstr ""
"`bpo-25455 <https://bugs.python.org/issue25455>`__: Fixed crashes in repr of "
"recursive ElementTree.Element and functools.partial objects."

#: ../../../Misc/NEWS:2377
msgid ""
"`bpo-27294 <https://bugs.python.org/issue27294>`__: Improved repr for "
"Tkinter event objects."
msgstr ""
"`bpo-27294 <https://bugs.python.org/issue27294>`__: Improved repr for "
"Tkinter event objects."

#: ../../../Misc/NEWS:2379
msgid ""
"`bpo-20508 <https://bugs.python.org/issue20508>`__: Improve exception "
"message of IPv{4,6}Network.__getitem__. Patch by Gareth Rees."
msgstr ""
"`bpo-20508 <https://bugs.python.org/issue20508>`__: Improve exception "
"message of IPv{4,6}Network.__getitem__. Patch by Gareth Rees."

#: ../../../Misc/NEWS:2382 ../../../Misc/NEWS:4755
msgid ""
"[Security] `bpo-26556 <https://bugs.python.org/issue26556>`__: Update expat "
"to 2.1.1, fixes CVE-2015-1283."
msgstr ""
"[Security] `bpo-26556 <https://bugs.python.org/issue26556>`__: Update expat "
"to 2.1.1, fixes CVE-2015-1283."

#: ../../../Misc/NEWS:2384
msgid ""
"[Security] Fix TLS stripping vulnerability in smtplib, CVE-2016-0772. "
"Reported by Team Oststrom."
msgstr ""

#: ../../../Misc/NEWS:2387 ../../../Misc/NEWS:4760
msgid ""
"`bpo-21386 <https://bugs.python.org/issue21386>`__: Implement missing "
"IPv4Address.is_global property.  It was documented since 07a5610bae9d.  "
"Initial patch by Roger Luethi."
msgstr ""
"`bpo-21386 <https://bugs.python.org/issue21386>`__: Implement missing "
"IPv4Address.is_global property.  It was documented since 07a5610bae9d.  "
"Initial patch by Roger Luethi."

#: ../../../Misc/NEWS:2390
msgid ""
"`bpo-27029 <https://bugs.python.org/issue27029>`__: Removed deprecated "
"support of universal newlines mode from ZipFile.open()."
msgstr ""
"`bpo-27029 <https://bugs.python.org/issue27029>`__: Removed deprecated "
"support of universal newlines mode from ZipFile.open()."

#: ../../../Misc/NEWS:2393
msgid ""
"`bpo-27030 <https://bugs.python.org/issue27030>`__: Unknown escapes "
"consisting of ``'\\'`` and an ASCII letter in regular expressions now are "
"errors.  The re.LOCALE flag now can be used only with bytes patterns."
msgstr ""
"`bpo-27030 <https://bugs.python.org/issue27030>`__: Unknown escapes "
"consisting of ``'\\'`` and an ASCII letter in regular expressions now are "
"errors.  The re.LOCALE flag now can be used only with bytes patterns."

#: ../../../Misc/NEWS:2397
msgid ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Add os.PathLike support "
"to DirEntry (part of PEP 519). Initial patch by Jelle Zijlstra."
msgstr ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Add os.PathLike support "
"to DirEntry (part of PEP 519). Initial patch by Jelle Zijlstra."

#: ../../../Misc/NEWS:2400 ../../../Misc/NEWS:4763
msgid ""
"`bpo-20900 <https://bugs.python.org/issue20900>`__: distutils register "
"command now decodes HTTP responses correctly.  Initial patch by ingrid."
msgstr ""
"`bpo-20900 <https://bugs.python.org/issue20900>`__: distutils register "
"command now decodes HTTP responses correctly.  Initial patch by ingrid."

#: ../../../Misc/NEWS:2403
msgid ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Add os.PathLike support "
"to pathlib, removing its provisional status (part of PEP 519). Initial patch "
"by Dusty Phillips."
msgstr ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Add os.PathLike support "
"to pathlib, removing its provisional status (part of PEP 519). Initial patch "
"by Dusty Phillips."

#: ../../../Misc/NEWS:2406
msgid ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Add support for os."
"PathLike objects to os.fsencode() and os.fsdecode() (part of PEP 519)."
msgstr ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Add support for os."
"PathLike objects to os.fsencode() and os.fsdecode() (part of PEP 519)."

#: ../../../Misc/NEWS:2409
msgid ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Introduce os.PathLike "
"and os.fspath() (part of PEP 519)."
msgstr ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Introduce os.PathLike "
"and os.fspath() (part of PEP 519)."

#: ../../../Misc/NEWS:2411 ../../../Misc/NEWS:4766
msgid ""
"A new version of typing.py provides several new classes and features: "
"@overload outside stubs, Reversible, DefaultDict, Text, ContextManager, "
"Type[], NewType(), TYPE_CHECKING, and numerous bug fixes (note that some of "
"the new features are not yet implemented in mypy or other static "
"analyzers).  Also classes for PEP 492 (Awaitable, AsyncIterable, "
"AsyncIterator) have been added (in fact they made it into 3.5.1 but were "
"never mentioned)."
msgstr ""

#: ../../../Misc/NEWS:2419 ../../../Misc/NEWS:4774
msgid ""
"`bpo-25738 <https://bugs.python.org/issue25738>`__: Stop http.server."
"BaseHTTPRequestHandler.send_error() from sending a message body for 205 "
"Reset Content.  Also, don't send Content header fields in responses that "
"don't have a body.  Patch by Susumu Koshiba."
msgstr ""
"`bpo-25738 <https://bugs.python.org/issue25738>`__: Stop http.server."
"BaseHTTPRequestHandler.send_error() from sending a message body for 205 "
"Reset Content.  Also, don't send Content header fields in responses that "
"don't have a body.  Patch by Susumu Koshiba."

#: ../../../Misc/NEWS:2424 ../../../Misc/NEWS:4779
msgid ""
"`bpo-21313 <https://bugs.python.org/issue21313>`__: Fix the \"platform\" "
"module to tolerate when sys.version contains truncated build information."
msgstr ""
"`bpo-21313 <https://bugs.python.org/issue21313>`__: Fix the \"platform\" "
"module to tolerate when sys.version contains truncated build information."

#: ../../../Misc/NEWS:2427 ../../../Misc/NEWS:4782
msgid ""
"[Security] `bpo-26839 <https://bugs.python.org/issue26839>`__: On Linux, :"
"func:`os.urandom` now calls ``getrandom()`` with ``GRND_NONBLOCK`` to fall "
"back on reading ``/dev/urandom`` if the urandom entropy pool is not "
"initialized yet. Patch written by Colm Buckley."
msgstr ""
"[Security] `bpo-26839 <https://bugs.python.org/issue26839>`__: On Linux, :"
"func:`os.urandom` now calls ``getrandom()`` with ``GRND_NONBLOCK`` to fall "
"back on reading ``/dev/urandom`` if the urandom entropy pool is not "
"initialized yet. Patch written by Colm Buckley."

#: ../../../Misc/NEWS:2432
msgid ""
"`bpo-23883 <https://bugs.python.org/issue23883>`__: Added missing APIs to "
"__all__ to match the documented APIs for the following modules: cgi, "
"mailbox, mimetypes, plistlib and smtpd. Patches by Jacek Ko≈Çodziej."
msgstr ""
"`bpo-23883 <https://bugs.python.org/issue23883>`__: Added missing APIs to "
"__all__ to match the documented APIs for the following modules: cgi, "
"mailbox, mimetypes, plistlib and smtpd. Patches by Jacek Ko≈Çodziej."

#: ../../../Misc/NEWS:2436 ../../../Misc/NEWS:4787
msgid ""
"`bpo-27164 <https://bugs.python.org/issue27164>`__: In the zlib module, "
"allow decompressing raw Deflate streams with a predefined zdict.  Based on "
"patch by Xiang Zhang."
msgstr ""
"`bpo-27164 <https://bugs.python.org/issue27164>`__: In the zlib module, "
"allow decompressing raw Deflate streams with a predefined zdict.  Based on "
"patch by Xiang Zhang."

#: ../../../Misc/NEWS:2439 ../../../Misc/NEWS:4790
msgid ""
"`bpo-24291 <https://bugs.python.org/issue24291>`__: Fix wsgiref."
"simple_server.WSGIRequestHandler to completely write data to the client.  "
"Previously it could do partial writes and truncate data.  Also, wsgiref."
"handler.ServerHandler can now handle stdout doing partial writes, but this "
"is deprecated."
msgstr ""
"`bpo-24291 <https://bugs.python.org/issue24291>`__: Fix wsgiref."
"simple_server.WSGIRequestHandler to completely write data to the client.  "
"Previously it could do partial writes and truncate data.  Also, wsgiref."
"handler.ServerHandler can now handle stdout doing partial writes, but this "
"is deprecated."

#: ../../../Misc/NEWS:2444
msgid ""
"`bpo-21272 <https://bugs.python.org/issue21272>`__: Use _sysconfigdata.py to "
"initialize distutils.sysconfig."
msgstr ""
"`bpo-21272 <https://bugs.python.org/issue21272>`__: Use _sysconfigdata.py to "
"initialize distutils.sysconfig."

#: ../../../Misc/NEWS:2446
msgid ""
"`bpo-19611 <https://bugs.python.org/issue19611>`__: :mod:`inspect` now "
"reports the implicit ``.0`` parameters generated by the compiler for "
"comprehension and generator expression scopes as if they were positional-"
"only parameters called ``implicit0``. Patch by Jelle Zijlstra."
msgstr ""
"`bpo-19611 <https://bugs.python.org/issue19611>`__: :mod:`inspect` now "
"reports the implicit ``.0`` parameters generated by the compiler for "
"comprehension and generator expression scopes as if they were positional-"
"only parameters called ``implicit0``. Patch by Jelle Zijlstra."

#: ../../../Misc/NEWS:2451 ../../../Misc/NEWS:4795
msgid ""
"`bpo-26809 <https://bugs.python.org/issue26809>`__: Add ``__all__`` to :mod:"
"`string`.  Patch by Emanuel Barry."
msgstr ""
"`bpo-26809 <https://bugs.python.org/issue26809>`__: Add ``__all__`` to :mod:"
"`string`.  Patch by Emanuel Barry."

#: ../../../Misc/NEWS:2453 ../../../Misc/NEWS:4797
msgid ""
"`bpo-26373 <https://bugs.python.org/issue26373>`__: subprocess.Popen."
"communicate now correctly ignores BrokenPipeError when the child process "
"dies before .communicate() is called in more/all circumstances."
msgstr ""
"`bpo-26373 <https://bugs.python.org/issue26373>`__: subprocess.Popen."
"communicate now correctly ignores BrokenPipeError when the child process "
"dies before .communicate() is called in more/all circumstances."

#: ../../../Misc/NEWS:2457
msgid ""
"signal, socket, and ssl module IntEnum constant name lookups now return a "
"consistent name for values having multiple names.  Ex: signal.Signals(6) now "
"refers to itself as signal.SIGALRM rather than flipping between that and "
"signal.SIGIOT based on the interpreter's hash randomization seed."
msgstr ""

#: ../../../Misc/NEWS:2462
msgid ""
"`bpo-27167 <https://bugs.python.org/issue27167>`__: Clarify the subprocess."
"CalledProcessError error message text when the child process died due to a "
"signal."
msgstr ""
"`bpo-27167 <https://bugs.python.org/issue27167>`__: Clarify the subprocess."
"CalledProcessError error message text when the child process died due to a "
"signal."

#: ../../../Misc/NEWS:2465
msgid ""
"`bpo-25931 <https://bugs.python.org/issue25931>`__: Don't define "
"socketserver.Forking* names on platforms such as Windows that do not support "
"os.fork()."
msgstr ""
"`bpo-25931 <https://bugs.python.org/issue25931>`__: Don't define "
"socketserver.Forking* names on platforms such as Windows that do not support "
"os.fork()."

#: ../../../Misc/NEWS:2468 ../../../Misc/NEWS:4801
msgid ""
"`bpo-21776 <https://bugs.python.org/issue21776>`__: distutils.upload now "
"correctly handles HTTPError. Initial patch by Claudiu Popa."
msgstr ""
"`bpo-21776 <https://bugs.python.org/issue21776>`__: distutils.upload now "
"correctly handles HTTPError. Initial patch by Claudiu Popa."

#: ../../../Misc/NEWS:2471
msgid ""
"`bpo-26526 <https://bugs.python.org/issue26526>`__: Replace custom parse "
"tree validation in the parser module with a simple DFA validator."
msgstr ""
"`bpo-26526 <https://bugs.python.org/issue26526>`__: Replace custom parse "
"tree validation in the parser module with a simple DFA validator."

#: ../../../Misc/NEWS:2474 ../../../Misc/NEWS:4804
msgid ""
"`bpo-27114 <https://bugs.python.org/issue27114>`__: Fix SSLContext."
"_load_windows_store_certs fails with PermissionError"
msgstr ""
"`bpo-27114 <https://bugs.python.org/issue27114>`__: Fix SSLContext."
"_load_windows_store_certs fails with PermissionError"

#: ../../../Misc/NEWS:2477 ../../../Misc/NEWS:4807
msgid ""
"`bpo-18383 <https://bugs.python.org/issue18383>`__: Avoid creating duplicate "
"filters when using filterwarnings and simplefilter.  Based on patch by Alex "
"Shkop."
msgstr ""
"`bpo-18383 <https://bugs.python.org/issue18383>`__: Avoid creating duplicate "
"filters when using filterwarnings and simplefilter.  Based on patch by Alex "
"Shkop."

#: ../../../Misc/NEWS:2480
msgid ""
"`bpo-23026 <https://bugs.python.org/issue23026>`__: winreg.QueryValueEx() "
"now return an integer for REG_QWORD type."
msgstr ""
"`bpo-23026 <https://bugs.python.org/issue23026>`__: winreg.QueryValueEx() "
"now return an integer for REG_QWORD type."

#: ../../../Misc/NEWS:2482
msgid ""
"`bpo-26741 <https://bugs.python.org/issue26741>`__: subprocess.Popen "
"destructor now emits a ResourceWarning warning if the child process is still "
"running."
msgstr ""
"`bpo-26741 <https://bugs.python.org/issue26741>`__: subprocess.Popen "
"destructor now emits a ResourceWarning warning if the child process is still "
"running."

#: ../../../Misc/NEWS:2485
msgid ""
"`bpo-27056 <https://bugs.python.org/issue27056>`__: Optimize pickle.load() "
"and pickle.loads(), up to 10% faster to deserialize a lot of small objects."
msgstr ""
"`bpo-27056 <https://bugs.python.org/issue27056>`__: Optimize pickle.load() "
"and pickle.loads(), up to 10% faster to deserialize a lot of small objects."

#: ../../../Misc/NEWS:2488
msgid ""
"`bpo-21271 <https://bugs.python.org/issue21271>`__: New keyword only "
"parameters in reset_mock call."
msgstr ""
"`bpo-21271 <https://bugs.python.org/issue21271>`__: New keyword only "
"parameters in reset_mock call."

#: ../../../Misc/NEWS:2493 ../../../Misc/NEWS:5157
msgid ""
"`bpo-5124 <https://bugs.python.org/issue5124>`__: Paste with text selected "
"now replaces the selection on X11. This matches how paste works on Windows, "
"Mac, most modern Linux apps, and ttk widgets.  Original patch by Serhiy "
"Storchaka."
msgstr ""
"`bpo-5124 <https://bugs.python.org/issue5124>`__: Paste with text selected "
"now replaces the selection on X11. This matches how paste works on Windows, "
"Mac, most modern Linux apps, and ttk widgets.  Original patch by Serhiy "
"Storchaka."

#: ../../../Misc/NEWS:2497
msgid ""
"`bpo-24750 <https://bugs.python.org/issue24750>`__: Switch all scrollbars in "
"IDLE to ttk versions. Where needed, minimal tests are added to cover changes."
msgstr ""
"`bpo-24750 <https://bugs.python.org/issue24750>`__: Switch all scrollbars in "
"IDLE to ttk versions. Where needed, minimal tests are added to cover changes."

#: ../../../Misc/NEWS:2500
msgid ""
"`bpo-24759 <https://bugs.python.org/issue24759>`__: IDLE requires tk 8.5 and "
"availability ttk widgets. Delete now unneeded tk version tests and code for "
"older versions. Add test for IDLE syntax colorizoer."
msgstr ""
"`bpo-24759 <https://bugs.python.org/issue24759>`__: IDLE requires tk 8.5 and "
"availability ttk widgets. Delete now unneeded tk version tests and code for "
"older versions. Add test for IDLE syntax colorizoer."

#: ../../../Misc/NEWS:2504
msgid ""
"`bpo-27239 <https://bugs.python.org/issue27239>`__: idlelib.macosx.isXyzTk "
"functions initialize as needed."
msgstr ""
"`bpo-27239 <https://bugs.python.org/issue27239>`__: idlelib.macosx.isXyzTk "
"functions initialize as needed."

#: ../../../Misc/NEWS:2506
msgid ""
"`bpo-27262 <https://bugs.python.org/issue27262>`__: move Aqua unbinding "
"code, which enable context menus, to maxosx."
msgstr ""
"`bpo-27262 <https://bugs.python.org/issue27262>`__: move Aqua unbinding "
"code, which enable context menus, to maxosx."

#: ../../../Misc/NEWS:2508 ../../../Misc/NEWS:5161
msgid ""
"`bpo-24759 <https://bugs.python.org/issue24759>`__: Make clear in idlelib."
"idle_test.__init__ that the directory is a private implementation of test."
"test_idle and tool for maintainers."
msgstr ""
"`bpo-24759 <https://bugs.python.org/issue24759>`__: Make clear in idlelib."
"idle_test.__init__ that the directory is a private implementation of test."
"test_idle and tool for maintainers."

#: ../../../Misc/NEWS:2511 ../../../Misc/NEWS:5164
msgid ""
"`bpo-27196 <https://bugs.python.org/issue27196>`__: Stop 'ThemeChanged' "
"warnings when running IDLE tests. These persisted after other warnings were "
"suppressed in #20567. Apply Serhiy Storchaka's update_idletasks solution to "
"four test files. Record this additional advice in idle_test/README.txt"
msgstr ""
"`bpo-27196 <https://bugs.python.org/issue27196>`__: Stop 'ThemeChanged' "
"warnings when running IDLE tests. These persisted after other warnings were "
"suppressed in #20567. Apply Serhiy Storchaka's update_idletasks solution to "
"four test files. Record this additional advice in idle_test/README.txt"

#: ../../../Misc/NEWS:2516 ../../../Misc/NEWS:5169
msgid ""
"`bpo-20567 <https://bugs.python.org/issue20567>`__: Revise idle_test/README."
"txt with advice about avoiding tk warning messages from tests.  Apply advice "
"to several IDLE tests."
msgstr ""
"`bpo-20567 <https://bugs.python.org/issue20567>`__: Revise idle_test/README."
"txt with advice about avoiding tk warning messages from tests.  Apply advice "
"to several IDLE tests."

#: ../../../Misc/NEWS:2519
msgid ""
"`bpo-24225 <https://bugs.python.org/issue24225>`__: Update idlelib/README."
"txt with new file names and event handlers."
msgstr ""
"`bpo-24225 <https://bugs.python.org/issue24225>`__: Update idlelib/README."
"txt with new file names and event handlers."

#: ../../../Misc/NEWS:2522
msgid ""
"`bpo-27156 <https://bugs.python.org/issue27156>`__: Remove obsolete code not "
"used by IDLE.  Replacements: 1. help.txt, replaced by help.html, is out-of-"
"date and should not be used. Its dedicated viewer has be replaced by the "
"html viewer in help.py. 2. ``import idlever; I = idlever.IDLE_VERSION`` is "
"the same as ``import sys; I = version[:version.index(' ')]`` 3. After ``ob = "
"stackviewer.VariablesTreeItem(*args)``, ``ob.keys() == list(ob.object."
"keys)``. 4. In macosc, runningAsOSXAPP == isAquaTk; idCarbonAquaTk == "
"isCarbonTk"
msgstr ""
"`bpo-27156 <https://bugs.python.org/issue27156>`__: Remove obsolete code not "
"used by IDLE.  Replacements: 1. help.txt, replaced by help.html, is out-of-"
"date and should not be used. Its dedicated viewer has be replaced by the "
"html viewer in help.py. 2. ``import idlever; I = idlever.IDLE_VERSION`` is "
"the same as ``import sys; I = version[:version.index(' ')]`` 3. After ``ob = "
"stackviewer.VariablesTreeItem(*args)``, ``ob.keys() == list(ob.object."
"keys)``. 4. In macosc, runningAsOSXAPP == isAquaTk; idCarbonAquaTk == "
"isCarbonTk"

#: ../../../Misc/NEWS:2531 ../../../Misc/NEWS:5172
msgid ""
"`bpo-27117 <https://bugs.python.org/issue27117>`__: Make colorizer htest and "
"turtledemo work with dark themes. Move code for configuring text widget "
"colors to a new function."
msgstr ""
"`bpo-27117 <https://bugs.python.org/issue27117>`__: Make colorizer htest and "
"turtledemo work with dark themes. Move code for configuring text widget "
"colors to a new function."

#: ../../../Misc/NEWS:2534
msgid ""
"`bpo-24225 <https://bugs.python.org/issue24225>`__: Rename many `idlelib/*."
"py` and `idle_test/test_*.py` files. Edit files to replace old names with "
"new names when the old name referred to the module rather than the class it "
"contained. See the issue and IDLE section in What's New in 3.6 for more."
msgstr ""
"`bpo-24225 <https://bugs.python.org/issue24225>`__: Rename many `idlelib/*."
"py` and `idle_test/test_*.py` files. Edit files to replace old names with "
"new names when the old name referred to the module rather than the class it "
"contained. See the issue and IDLE section in What's New in 3.6 for more."

#: ../../../Misc/NEWS:2539 ../../../Misc/NEWS:5175
msgid ""
"`bpo-26673 <https://bugs.python.org/issue26673>`__: When tk reports font "
"size as 0, change to size 10. Such fonts on Linux prevented the "
"configuration dialog from opening."
msgstr ""
"`bpo-26673 <https://bugs.python.org/issue26673>`__: When tk reports font "
"size as 0, change to size 10. Such fonts on Linux prevented the "
"configuration dialog from opening."

#: ../../../Misc/NEWS:2542 ../../../Misc/NEWS:5178
msgid ""
"`bpo-21939 <https://bugs.python.org/issue21939>`__: Add test for IDLE's "
"percolator. Original patch by Saimadhav Heblikar."
msgstr ""
"`bpo-21939 <https://bugs.python.org/issue21939>`__: Add test for IDLE's "
"percolator. Original patch by Saimadhav Heblikar."

#: ../../../Misc/NEWS:2545 ../../../Misc/NEWS:5181
msgid ""
"`bpo-21676 <https://bugs.python.org/issue21676>`__: Add test for IDLE's "
"replace dialog. Original patch by Saimadhav Heblikar."
msgstr ""
"`bpo-21676 <https://bugs.python.org/issue21676>`__: Add test for IDLE's "
"replace dialog. Original patch by Saimadhav Heblikar."

#: ../../../Misc/NEWS:2548 ../../../Misc/NEWS:5184
msgid ""
"`bpo-18410 <https://bugs.python.org/issue18410>`__: Add test for IDLE's "
"search dialog. Original patch by Westley Mart√≠nez."
msgstr ""
"`bpo-18410 <https://bugs.python.org/issue18410>`__: Add test for IDLE's "
"search dialog. Original patch by Westley Mart√≠nez."

#: ../../../Misc/NEWS:2551
msgid ""
"`bpo-21703 <https://bugs.python.org/issue21703>`__: Add test for undo "
"delegator.  Patch mostly by Saimadhav Heblikar ."
msgstr ""
"`bpo-21703 <https://bugs.python.org/issue21703>`__: Add test for undo "
"delegator.  Patch mostly by Saimadhav Heblikar ."

#: ../../../Misc/NEWS:2554 ../../../Misc/NEWS:5190
msgid ""
"`bpo-27044 <https://bugs.python.org/issue27044>`__: Add ConfigDialog."
"remove_var_callbacks to stop memory leaks."
msgstr ""
"`bpo-27044 <https://bugs.python.org/issue27044>`__: Add ConfigDialog."
"remove_var_callbacks to stop memory leaks."

#: ../../../Misc/NEWS:2556 ../../../Misc/NEWS:5192
msgid ""
"`bpo-23977 <https://bugs.python.org/issue23977>`__: Add more asserts to "
"test_delegator."
msgstr ""
"`bpo-23977 <https://bugs.python.org/issue23977>`__: Add more asserts to "
"test_delegator."

#: ../../../Misc/NEWS:2561
msgid ""
"`bpo-16484 <https://bugs.python.org/issue16484>`__: Change the default "
"PYTHONDOCS URL to \"https:\", and fix the resulting links to use lowercase.  "
"Patch by Sean Rodman, test by Kaushik Nadikuditi."
msgstr ""
"`bpo-16484 <https://bugs.python.org/issue16484>`__: Change the default "
"PYTHONDOCS URL to \"https:\", and fix the resulting links to use lowercase.  "
"Patch by Sean Rodman, test by Kaushik Nadikuditi."

#: ../../../Misc/NEWS:2565 ../../../Misc/NEWS:5213
msgid ""
"`bpo-24136 <https://bugs.python.org/issue24136>`__: Document the new PEP 448 "
"unpacking syntax of 3.5."
msgstr ""
"`bpo-24136 <https://bugs.python.org/issue24136>`__: Document the new PEP 448 "
"unpacking syntax of 3.5."

#: ../../../Misc/NEWS:2567 ../../../Misc/NEWS:5771
msgid ""
"`bpo-22558 <https://bugs.python.org/issue22558>`__: Add remaining doc links "
"to source code for Python-coded modules. Patch by Yoni Lavi."
msgstr ""
"`bpo-22558 <https://bugs.python.org/issue22558>`__: Add remaining doc links "
"to source code for Python-coded modules. Patch by Yoni Lavi."

#: ../../../Misc/NEWS:2573
msgid ""
"`bpo-25285 <https://bugs.python.org/issue25285>`__: regrtest now uses "
"subprocesses when the -j1 command line option is used: each test file runs "
"in a fresh child process. Before, the -j1 option was ignored."
msgstr ""
"`bpo-25285 <https://bugs.python.org/issue25285>`__: regrtest now uses "
"subprocesses when the -j1 command line option is used: each test file runs "
"in a fresh child process. Before, the -j1 option was ignored."

#: ../../../Misc/NEWS:2577
msgid ""
"`bpo-25285 <https://bugs.python.org/issue25285>`__: Tools/buildbot/test.bat "
"script now uses -j1 by default to run each test file in fresh child process."
msgstr ""
"`bpo-25285 <https://bugs.python.org/issue25285>`__: Tools/buildbot/test.bat "
"script now uses -j1 by default to run each test file in fresh child process."

#: ../../../Misc/NEWS:2583
msgid ""
"`bpo-27064 <https://bugs.python.org/issue27064>`__: The py.exe launcher now "
"defaults to Python 3. The Windows launcher ``py.exe`` no longer prefers an "
"installed Python 2 version over Python 3 by default when used interactively."
msgstr ""
"`bpo-27064 <https://bugs.python.org/issue27064>`__: The py.exe launcher now "
"defaults to Python 3. The Windows launcher ``py.exe`` no longer prefers an "
"installed Python 2 version over Python 3 by default when used interactively."

#: ../../../Misc/NEWS:2590 ../../../Misc/NEWS:5264
msgid ""
"`bpo-27229 <https://bugs.python.org/issue27229>`__: Fix the cross-compiling "
"pgen rule for in-tree builds.  Patch by Xavier de Gaye."
msgstr ""
"`bpo-27229 <https://bugs.python.org/issue27229>`__: Fix the cross-compiling "
"pgen rule for in-tree builds.  Patch by Xavier de Gaye."

#: ../../../Misc/NEWS:2593 ../../../Misc/NEWS:5301
msgid ""
"`bpo-26930 <https://bugs.python.org/issue26930>`__: Update OS X 10.5+ 32-bit-"
"only installer to build and link with OpenSSL 1.0.2h."
msgstr ""
"`bpo-26930 <https://bugs.python.org/issue26930>`__: Update OS X 10.5+ 32-bit-"
"only installer to build and link with OpenSSL 1.0.2h."

#: ../../../Misc/NEWS:2597 ../../../Misc/NEWS:5346
msgid "Misc"
msgstr ""

#: ../../../Misc/NEWS:2599 ../../../Misc/NEWS:5348
msgid ""
"`bpo-17500 <https://bugs.python.org/issue17500>`__, and https://github.com/"
"python/pythondotorg/issues/945: Remove unused and outdated icons."
msgstr ""
"`bpo-17500 <https://bugs.python.org/issue17500>`__, and https://github.com/"
"python/pythondotorg/issues/945: Remove unused and outdated icons."

#: ../../../Misc/NEWS:2605
msgid ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Add the PyOS_FSPath() "
"function (part of PEP 519)."
msgstr ""
"`bpo-27186 <https://bugs.python.org/issue27186>`__: Add the PyOS_FSPath() "
"function (part of PEP 519)."

#: ../../../Misc/NEWS:2607
msgid ""
"`bpo-26282 <https://bugs.python.org/issue26282>`__: "
"PyArg_ParseTupleAndKeywords() now supports positional-only parameters."
msgstr ""
"`bpo-26282 <https://bugs.python.org/issue26282>`__: "
"PyArg_ParseTupleAndKeywords() now supports positional-only parameters."

#: ../../../Misc/NEWS:2613
msgid ""
"`bpo-26282 <https://bugs.python.org/issue26282>`__: Argument Clinic now "
"supports positional-only and keyword parameters in the same function."
msgstr ""
"`bpo-26282 <https://bugs.python.org/issue26282>`__: Argument Clinic now "
"supports positional-only and keyword parameters in the same function."

#: ../../../Misc/NEWS:2618
msgid "Python 3.6.0 alpha 1"
msgstr "Python 3.6.0 alpha 1"

#: ../../../Misc/NEWS:2620
msgid "Release date: 2016-05-16"
msgstr "Date de sortie : 2016-05-16"

#: ../../../Misc/NEWS:2625 ../../../Misc/NEWS:4628
msgid ""
"`bpo-20041 <https://bugs.python.org/issue20041>`__: Fixed TypeError when "
"frame.f_trace is set to None. Patch by Xavier de Gaye."
msgstr ""
"`bpo-20041 <https://bugs.python.org/issue20041>`__: Fixed TypeError when "
"frame.f_trace is set to None. Patch by Xavier de Gaye."

#: ../../../Misc/NEWS:2628 ../../../Misc/NEWS:4631
msgid ""
"`bpo-26168 <https://bugs.python.org/issue26168>`__: Fixed possible refleaks "
"in failing Py_BuildValue() with the \"N\" format unit."
msgstr ""
"`bpo-26168 <https://bugs.python.org/issue26168>`__: Fixed possible refleaks "
"in failing Py_BuildValue() with the \"N\" format unit."

#: ../../../Misc/NEWS:2631 ../../../Misc/NEWS:4634
msgid ""
"`bpo-26991 <https://bugs.python.org/issue26991>`__: Fix possible refleak "
"when creating a function with annotations."
msgstr ""
"`bpo-26991 <https://bugs.python.org/issue26991>`__: Fix possible refleak "
"when creating a function with annotations."

#: ../../../Misc/NEWS:2633
msgid ""
"`bpo-27039 <https://bugs.python.org/issue27039>`__: Fixed bytearray.remove() "
"for values greater than 127.  Based on patch by Joe Jevnik."
msgstr ""
"`bpo-27039 <https://bugs.python.org/issue27039>`__: Fixed bytearray.remove() "
"for values greater than 127.  Based on patch by Joe Jevnik."

#: ../../../Misc/NEWS:2636 ../../../Misc/NEWS:4639
msgid ""
"`bpo-23640 <https://bugs.python.org/issue23640>`__: int.from_bytes() no "
"longer bypasses constructors for subclasses."
msgstr ""
"`bpo-23640 <https://bugs.python.org/issue23640>`__: int.from_bytes() no "
"longer bypasses constructors for subclasses."

#: ../../../Misc/NEWS:2638
msgid ""
"`bpo-27005 <https://bugs.python.org/issue27005>`__: Optimized the float."
"fromhex() class method for exact float. It is now 2 times faster."
msgstr ""
"`bpo-27005 <https://bugs.python.org/issue27005>`__: Optimized the float."
"fromhex() class method for exact float. It is now 2 times faster."

#: ../../../Misc/NEWS:2641
msgid ""
"`bpo-18531 <https://bugs.python.org/issue18531>`__: Single var-keyword "
"argument of dict subtype was passed unscathed to the C-defined function.  "
"Now it is converted to exact dict."
msgstr ""
"`bpo-18531 <https://bugs.python.org/issue18531>`__: Single var-keyword "
"argument of dict subtype was passed unscathed to the C-defined function.  "
"Now it is converted to exact dict."

#: ../../../Misc/NEWS:2644 ../../../Misc/NEWS:4641
msgid ""
"`bpo-26811 <https://bugs.python.org/issue26811>`__: gc.get_objects() no "
"longer contains a broken tuple with NULL pointer."
msgstr ""
"`bpo-26811 <https://bugs.python.org/issue26811>`__: gc.get_objects() no "
"longer contains a broken tuple with NULL pointer."

#: ../../../Misc/NEWS:2647 ../../../Misc/NEWS:4644
msgid ""
"`bpo-20120 <https://bugs.python.org/issue20120>`__: Use RawConfigParser for ."
"pypirc parsing, removing support for interpolation unintentionally added "
"with move to Python 3. Behavior no longer does any interpolation in .pypirc "
"files, matching behavior in Python 2.7 and Setuptools 19.0."
msgstr ""
"`bpo-20120 <https://bugs.python.org/issue20120>`__: Use RawConfigParser for ."
"pypirc parsing, removing support for interpolation unintentionally added "
"with move to Python 3. Behavior no longer does any interpolation in .pypirc "
"files, matching behavior in Python 2.7 and Setuptools 19.0."

#: ../../../Misc/NEWS:2653
msgid ""
"`bpo-26249 <https://bugs.python.org/issue26249>`__: Memory functions of the :"
"c:func:`PyMem_Malloc` domain (:c:data:`PYMEM_DOMAIN_MEM`) now use the :ref:"
"`pymalloc allocator <pymalloc>` rather than system :c:func:`malloc`. "
"Applications calling :c:func:`PyMem_Malloc` without holding the GIL can now "
"crash: use ``PYTHONMALLOC=debug`` environment variable to validate the usage "
"of memory allocators in your application."
msgstr ""
"`bpo-26249 <https://bugs.python.org/issue26249>`__: Memory functions of the :"
"c:func:`PyMem_Malloc` domain (:c:data:`PYMEM_DOMAIN_MEM`) now use the :ref:"
"`pymalloc allocator <pymalloc>` rather than system :c:func:`malloc`. "
"Applications calling :c:func:`PyMem_Malloc` without holding the GIL can now "
"crash: use ``PYTHONMALLOC=debug`` environment variable to validate the usage "
"of memory allocators in your application."

#: ../../../Misc/NEWS:2660
msgid ""
"`bpo-26802 <https://bugs.python.org/issue26802>`__: Optimize function calls "
"only using unpacking like ``func(*tuple)`` (no other positional argument, no "
"keyword): avoid copying the tuple. Patch written by Joe Jevnik."
msgstr ""
"`bpo-26802 <https://bugs.python.org/issue26802>`__: Optimize function calls "
"only using unpacking like ``func(*tuple)`` (no other positional argument, no "
"keyword): avoid copying the tuple. Patch written by Joe Jevnik."

#: ../../../Misc/NEWS:2664 ../../../Misc/NEWS:4650
msgid ""
"`bpo-26659 <https://bugs.python.org/issue26659>`__: Make the builtin slice "
"type support cycle collection."
msgstr ""
"`bpo-26659 <https://bugs.python.org/issue26659>`__: Make the builtin slice "
"type support cycle collection."

#: ../../../Misc/NEWS:2666 ../../../Misc/NEWS:4652
msgid ""
"`bpo-26718 <https://bugs.python.org/issue26718>`__: super.__init__ no longer "
"leaks memory if called multiple times. NOTE: A direct call of super.__init__ "
"is not endorsed!"
msgstr ""
"`bpo-26718 <https://bugs.python.org/issue26718>`__: super.__init__ no longer "
"leaks memory if called multiple times. NOTE: A direct call of super.__init__ "
"is not endorsed!"

#: ../../../Misc/NEWS:2669 ../../../Misc/NEWS:4682
msgid ""
"`bpo-27138 <https://bugs.python.org/issue27138>`__: Fix the doc comment for "
"FileFinder.find_spec()."
msgstr ""
"`bpo-27138 <https://bugs.python.org/issue27138>`__: Fix the doc comment for "
"FileFinder.find_spec()."

#: ../../../Misc/NEWS:2671 ../../../Misc/NEWS:4726
msgid ""
"`bpo-27147 <https://bugs.python.org/issue27147>`__: Mention PEP 420 in the "
"importlib docs."
msgstr ""
"`bpo-27147 <https://bugs.python.org/issue27147>`__: Mention PEP 420 in the "
"importlib docs."

#: ../../../Misc/NEWS:2673 ../../../Misc/NEWS:4655
msgid ""
"`bpo-25339 <https://bugs.python.org/issue25339>`__: PYTHONIOENCODING now has "
"priority over locale in setting the error handler for stdin and stdout."
msgstr ""
"`bpo-25339 <https://bugs.python.org/issue25339>`__: PYTHONIOENCODING now has "
"priority over locale in setting the error handler for stdin and stdout."

#: ../../../Misc/NEWS:2676 ../../../Misc/NEWS:4658
msgid ""
"`bpo-26494 <https://bugs.python.org/issue26494>`__: Fixed crash on iterating "
"exhausting iterators. Affected classes are generic sequence iterators, "
"iterators of str, bytes, bytearray, list, tuple, set, frozenset, dict, "
"OrderedDict, corresponding views and os.scandir() iterator."
msgstr ""
"`bpo-26494 <https://bugs.python.org/issue26494>`__: Fixed crash on iterating "
"exhausting iterators. Affected classes are generic sequence iterators, "
"iterators of str, bytes, bytearray, list, tuple, set, frozenset, dict, "
"OrderedDict, corresponding views and os.scandir() iterator."

#: ../../../Misc/NEWS:2681
msgid ""
"`bpo-26574 <https://bugs.python.org/issue26574>`__: Optimize ``bytes."
"replace(b'', b'.')`` and ``bytearray.replace(b'', b'.')``. Patch written by "
"Josh Snider."
msgstr ""
"`bpo-26574 <https://bugs.python.org/issue26574>`__: Optimize ``bytes."
"replace(b'', b'.')`` and ``bytearray.replace(b'', b'.')``. Patch written by "
"Josh Snider."

#: ../../../Misc/NEWS:2684 ../../../Misc/NEWS:4663
msgid ""
"`bpo-26581 <https://bugs.python.org/issue26581>`__: If coding cookie is "
"specified multiple times on a line in Python source code file, only the "
"first one is taken to account."
msgstr ""
"`bpo-26581 <https://bugs.python.org/issue26581>`__: If coding cookie is "
"specified multiple times on a line in Python source code file, only the "
"first one is taken to account."

#: ../../../Misc/NEWS:2687
msgid ""
"`bpo-19711 <https://bugs.python.org/issue19711>`__: Add tests for reloading "
"namespace packages."
msgstr ""
"`bpo-19711 <https://bugs.python.org/issue19711>`__: Add tests for reloading "
"namespace packages."

#: ../../../Misc/NEWS:2689
msgid ""
"`bpo-21099 <https://bugs.python.org/issue21099>`__: Switch applicable "
"importlib tests to use PEP 451 API."
msgstr ""
"`bpo-21099 <https://bugs.python.org/issue21099>`__: Switch applicable "
"importlib tests to use PEP 451 API."

#: ../../../Misc/NEWS:2691
msgid ""
"`bpo-26563 <https://bugs.python.org/issue26563>`__: Debug hooks on Python "
"memory allocators now raise a fatal error if functions of the :c:func:"
"`PyMem_Malloc` family are called without holding the GIL."
msgstr ""
"`bpo-26563 <https://bugs.python.org/issue26563>`__: Debug hooks on Python "
"memory allocators now raise a fatal error if functions of the :c:func:"
"`PyMem_Malloc` family are called without holding the GIL."

#: ../../../Misc/NEWS:2695
msgid ""
"`bpo-26564 <https://bugs.python.org/issue26564>`__: On error, the debug "
"hooks on Python memory allocators now use the :mod:`tracemalloc` module to "
"get the traceback where a memory block was allocated."
msgstr ""
"`bpo-26564 <https://bugs.python.org/issue26564>`__: On error, the debug "
"hooks on Python memory allocators now use the :mod:`tracemalloc` module to "
"get the traceback where a memory block was allocated."

#: ../../../Misc/NEWS:2699
msgid ""
"`bpo-26558 <https://bugs.python.org/issue26558>`__: The debug hooks on "
"Python memory allocator :c:func:`PyObject_Malloc` now detect when functions "
"are called without holding the GIL."
msgstr ""
"`bpo-26558 <https://bugs.python.org/issue26558>`__: The debug hooks on "
"Python memory allocator :c:func:`PyObject_Malloc` now detect when functions "
"are called without holding the GIL."

#: ../../../Misc/NEWS:2703
msgid ""
"`bpo-26516 <https://bugs.python.org/issue26516>`__: Add :envvar:"
"`PYTHONMALLOC` environment variable to set the Python memory allocators and/"
"or install debug hooks."
msgstr ""
"`bpo-26516 <https://bugs.python.org/issue26516>`__: Add :envvar:"
"`PYTHONMALLOC` environment variable to set the Python memory allocators and/"
"or install debug hooks."

#: ../../../Misc/NEWS:2706
msgid ""
"`bpo-26516 <https://bugs.python.org/issue26516>`__: The :c:func:"
"`PyMem_SetupDebugHooks` function can now also be used on Python compiled in "
"release mode."
msgstr ""
"`bpo-26516 <https://bugs.python.org/issue26516>`__: The :c:func:"
"`PyMem_SetupDebugHooks` function can now also be used on Python compiled in "
"release mode."

#: ../../../Misc/NEWS:2709
msgid ""
"`bpo-26516 <https://bugs.python.org/issue26516>`__: The :envvar:"
"`PYTHONMALLOCSTATS` environment variable can now also be used on Python "
"compiled in release mode. It now has no effect if set to an empty string."
msgstr ""
"`bpo-26516 <https://bugs.python.org/issue26516>`__: The :envvar:"
"`PYTHONMALLOCSTATS` environment variable can now also be used on Python "
"compiled in release mode. It now has no effect if set to an empty string."

#: ../../../Misc/NEWS:2713
msgid ""
"`bpo-26516 <https://bugs.python.org/issue26516>`__: In debug mode, debug "
"hooks are now also installed on Python memory allocators when Python is "
"configured without pymalloc."
msgstr ""
"`bpo-26516 <https://bugs.python.org/issue26516>`__: In debug mode, debug "
"hooks are now also installed on Python memory allocators when Python is "
"configured without pymalloc."

#: ../../../Misc/NEWS:2716 ../../../Misc/NEWS:4666
msgid ""
"`bpo-26464 <https://bugs.python.org/issue26464>`__: Fix str.translate() when "
"string is ASCII and first replacements removes character, but next "
"replacement uses a non-ASCII character or a string longer than 1 character. "
"Regression introduced in Python 3.5.0."
msgstr ""
"`bpo-26464 <https://bugs.python.org/issue26464>`__: Fix str.translate() when "
"string is ASCII and first replacements removes character, but next "
"replacement uses a non-ASCII character or a string longer than 1 character. "
"Regression introduced in Python 3.5.0."

#: ../../../Misc/NEWS:2720 ../../../Misc/NEWS:4670
msgid ""
"`bpo-22836 <https://bugs.python.org/issue22836>`__: Ensure exception reports "
"from PyErr_Display() and PyErr_WriteUnraisable() are sensible even when "
"formatting them produces secondary errors.  This affects the reports "
"produced by sys.__excepthook__() and when __del__() raises an exception."
msgstr ""
"`bpo-22836 <https://bugs.python.org/issue22836>`__: Ensure exception reports "
"from PyErr_Display() and PyErr_WriteUnraisable() are sensible even when "
"formatting them produces secondary errors.  This affects the reports "
"produced by sys.__excepthook__() and when __del__() raises an exception."

#: ../../../Misc/NEWS:2725 ../../../Misc/NEWS:4675
msgid ""
"`bpo-26302 <https://bugs.python.org/issue26302>`__: Correct behavior to "
"reject comma as a legal character for cookie names."
msgstr ""
"`bpo-26302 <https://bugs.python.org/issue26302>`__: Correct behavior to "
"reject comma as a legal character for cookie names."

#: ../../../Misc/NEWS:2728
msgid ""
"`bpo-26136 <https://bugs.python.org/issue26136>`__: Upgrade the warning when "
"a generator raises StopIteration from PendingDeprecationWarning to "
"DeprecationWarning.  Patch by Anish Shah."
msgstr ""
"`bpo-26136 <https://bugs.python.org/issue26136>`__: Upgrade the warning when "
"a generator raises StopIteration from PendingDeprecationWarning to "
"DeprecationWarning.  Patch by Anish Shah."

#: ../../../Misc/NEWS:2732
msgid ""
"`bpo-26204 <https://bugs.python.org/issue26204>`__: The compiler now ignores "
"all constant statements: bytes, str, int, float, complex, name constants "
"(None, False, True), Ellipsis and ast.Constant; not only str and int. For "
"example, ``1.0`` is now ignored in ``def f(): 1.0``."
msgstr ""
"`bpo-26204 <https://bugs.python.org/issue26204>`__: The compiler now ignores "
"all constant statements: bytes, str, int, float, complex, name constants "
"(None, False, True), Ellipsis and ast.Constant; not only str and int. For "
"example, ``1.0`` is now ignored in ``def f(): 1.0``."

#: ../../../Misc/NEWS:2737 ../../../Misc/NEWS:4678
msgid ""
"`bpo-4806 <https://bugs.python.org/issue4806>`__: Avoid masking the original "
"TypeError exception when using star (``*``) unpacking in function calls.  "
"Based on patch by Hagen F√ºrstenau and Daniel Urban."
msgstr ""
"`bpo-4806 <https://bugs.python.org/issue4806>`__: Avoid masking the original "
"TypeError exception when using star (``*``) unpacking in function calls.  "
"Based on patch by Hagen F√ºrstenau and Daniel Urban."

#: ../../../Misc/NEWS:2741
msgid ""
"`bpo-26146 <https://bugs.python.org/issue26146>`__: Add a new kind of AST "
"node: ``ast.Constant``. It can be used by external AST optimizers, but the "
"compiler does not emit directly such node."
msgstr ""
"`bpo-26146 <https://bugs.python.org/issue26146>`__: Add a new kind of AST "
"node: ``ast.Constant``. It can be used by external AST optimizers, but the "
"compiler does not emit directly such node."

#: ../../../Misc/NEWS:2745
msgid ""
"`bpo-23601 <https://bugs.python.org/issue23601>`__:  Sped-up allocation of "
"dict key objects by using Python's small object allocator.  (Contributed by "
"Julian Taylor.)"
msgstr ""
"`bpo-23601 <https://bugs.python.org/issue23601>`__:  Sped-up allocation of "
"dict key objects by using Python's small object allocator.  (Contributed by "
"Julian Taylor.)"

#: ../../../Misc/NEWS:2748
msgid ""
"`bpo-18018 <https://bugs.python.org/issue18018>`__: Import raises "
"ImportError instead of SystemError if a relative import is attempted without "
"a known parent package."
msgstr ""
"`bpo-18018 <https://bugs.python.org/issue18018>`__: Import raises "
"ImportError instead of SystemError if a relative import is attempted without "
"a known parent package."

#: ../../../Misc/NEWS:2751
msgid ""
"`bpo-25843 <https://bugs.python.org/issue25843>`__: When compiling code, "
"don't merge constants if they are equal but have a different types. For "
"example, ``f1, f2 = lambda: 1, lambda: 1.0`` is now correctly compiled to "
"two different functions: ``f1()`` returns ``1`` (``int``) and ``f2()`` "
"returns ``1.0`` (``float``), even if ``1`` and ``1.0`` are equal."
msgstr ""
"`bpo-25843 <https://bugs.python.org/issue25843>`__: When compiling code, "
"don't merge constants if they are equal but have a different types. For "
"example, ``f1, f2 = lambda: 1, lambda: 1.0`` is now correctly compiled to "
"two different functions: ``f1()`` returns ``1`` (``int``) and ``f2()`` "
"returns ``1.0`` (``float``), even if ``1`` and ``1.0`` are equal."

#: ../../../Misc/NEWS:2757
msgid ""
"`bpo-26107 <https://bugs.python.org/issue26107>`__: The format of the "
"``co_lnotab`` attribute of code objects changes to support negative line "
"number delta."
msgstr ""
"`bpo-26107 <https://bugs.python.org/issue26107>`__: The format of the "
"``co_lnotab`` attribute of code objects changes to support negative line "
"number delta."

#: ../../../Misc/NEWS:2760 ../../../Misc/NEWS:4684
msgid ""
"`bpo-26154 <https://bugs.python.org/issue26154>`__: Add a new private "
"_PyThreadState_UncheckedGet() function to get the current Python thread "
"state, but don't issue a fatal error if it is NULL. This new function must "
"be used instead of accessing directly the _PyThreadState_Current variable.  "
"The variable is no more exposed since Python 3.5.1 to hide the exact "
"implementation of atomic C types, to avoid compiler issues."
msgstr ""
"`bpo-26154 <https://bugs.python.org/issue26154>`__: Add a new private "
"_PyThreadState_UncheckedGet() function to get the current Python thread "
"state, but don't issue a fatal error if it is NULL. This new function must "
"be used instead of accessing directly the _PyThreadState_Current variable.  "
"The variable is no more exposed since Python 3.5.1 to hide the exact "
"implementation of atomic C types, to avoid compiler issues."

#: ../../../Misc/NEWS:2767
msgid ""
"`bpo-25791 <https://bugs.python.org/issue25791>`__: If __package__ != "
"__spec__.parent or if neither __package__ or __spec__ are defined then "
"ImportWarning is raised."
msgstr ""
"`bpo-25791 <https://bugs.python.org/issue25791>`__: If __package__ != "
"__spec__.parent or if neither __package__ or __spec__ are defined then "
"ImportWarning is raised."

#: ../../../Misc/NEWS:2770 ../../../Misc/NEWS:4701
msgid ""
"`bpo-22995 <https://bugs.python.org/issue22995>`__: [UPDATE] Comment out the "
"one of the pickleability tests in _PyObject_GetState() due to regressions "
"observed in Cython-based projects."
msgstr ""
"`bpo-22995 <https://bugs.python.org/issue22995>`__: [UPDATE] Comment out the "
"one of the pickleability tests in _PyObject_GetState() due to regressions "
"observed in Cython-based projects."

#: ../../../Misc/NEWS:2773 ../../../Misc/NEWS:4704
msgid ""
"`bpo-25961 <https://bugs.python.org/issue25961>`__: Disallowed null "
"characters in the type name."
msgstr ""
"`bpo-25961 <https://bugs.python.org/issue25961>`__: Disallowed null "
"characters in the type name."

#: ../../../Misc/NEWS:2775 ../../../Misc/NEWS:4706
msgid ""
"`bpo-25973 <https://bugs.python.org/issue25973>`__: Fix segfault when an "
"invalid nonlocal statement binds a name starting with two underscores."
msgstr ""
"`bpo-25973 <https://bugs.python.org/issue25973>`__: Fix segfault when an "
"invalid nonlocal statement binds a name starting with two underscores."

#: ../../../Misc/NEWS:2778 ../../../Misc/NEWS:4709
msgid ""
"`bpo-22995 <https://bugs.python.org/issue22995>`__: Instances of extension "
"types with a state that aren't subclasses of list or dict and haven't "
"implemented any pickle-related methods (__reduce__, __reduce_ex__, "
"__getnewargs__, __getnewargs_ex__, or __getstate__), can no longer be "
"pickled.  Including memoryview."
msgstr ""
"`bpo-22995 <https://bugs.python.org/issue22995>`__: Instances of extension "
"types with a state that aren't subclasses of list or dict and haven't "
"implemented any pickle-related methods (__reduce__, __reduce_ex__, "
"__getnewargs__, __getnewargs_ex__, or __getstate__), can no longer be "
"pickled.  Including memoryview."

#: ../../../Misc/NEWS:2783 ../../../Misc/NEWS:4714
msgid ""
"`bpo-20440 <https://bugs.python.org/issue20440>`__: Massive replacing unsafe "
"attribute setting code with special macro Py_SETREF."
msgstr ""
"`bpo-20440 <https://bugs.python.org/issue20440>`__: Massive replacing unsafe "
"attribute setting code with special macro Py_SETREF."

#: ../../../Misc/NEWS:2786 ../../../Misc/NEWS:4717
msgid ""
"`bpo-25766 <https://bugs.python.org/issue25766>`__: Special method "
"__bytes__() now works in str subclasses."
msgstr ""
"`bpo-25766 <https://bugs.python.org/issue25766>`__: Special method "
"__bytes__() now works in str subclasses."

#: ../../../Misc/NEWS:2788 ../../../Misc/NEWS:4719
msgid ""
"`bpo-25421 <https://bugs.python.org/issue25421>`__: __sizeof__ methods of "
"builtin types now use dynamic basic size. This allows sys.getsize() to work "
"correctly with their subclasses with __slots__ defined."
msgstr ""
"`bpo-25421 <https://bugs.python.org/issue25421>`__: __sizeof__ methods of "
"builtin types now use dynamic basic size. This allows sys.getsize() to work "
"correctly with their subclasses with __slots__ defined."

#: ../../../Misc/NEWS:2792 ../../../Misc/NEWS:4723 ../../../Misc/NEWS:5360
msgid ""
"`bpo-25709 <https://bugs.python.org/issue25709>`__: Fixed problem with in-"
"place string concatenation and utf-8 cache."
msgstr ""
"`bpo-25709 <https://bugs.python.org/issue25709>`__: Fixed problem with in-"
"place string concatenation and utf-8 cache."

#: ../../../Misc/NEWS:2795
msgid ""
"`bpo-5319 <https://bugs.python.org/issue5319>`__: New Py_FinalizeEx() API "
"allowing Python to set an exit status of 120 on failure to flush buffered "
"streams."
msgstr ""
"`bpo-5319 <https://bugs.python.org/issue5319>`__: New Py_FinalizeEx() API "
"allowing Python to set an exit status of 120 on failure to flush buffered "
"streams."

#: ../../../Misc/NEWS:2798
msgid ""
"`bpo-25485 <https://bugs.python.org/issue25485>`__: telnetlib.Telnet is now "
"a context manager."
msgstr ""
"`bpo-25485 <https://bugs.python.org/issue25485>`__: telnetlib.Telnet is now "
"a context manager."

#: ../../../Misc/NEWS:2800 ../../../Misc/NEWS:4728
msgid ""
"`bpo-24097 <https://bugs.python.org/issue24097>`__: Fixed crash in object."
"__reduce__() if slot name is freed inside __getattr__."
msgstr ""
"`bpo-24097 <https://bugs.python.org/issue24097>`__: Fixed crash in object."
"__reduce__() if slot name is freed inside __getattr__."

#: ../../../Misc/NEWS:2803 ../../../Misc/NEWS:4731
msgid ""
"`bpo-24731 <https://bugs.python.org/issue24731>`__: Fixed crash on "
"converting objects with special methods __bytes__, __trunc__, and __float__ "
"returning instances of subclasses of bytes, int, and float to subclasses of "
"bytes, int, and float correspondingly."
msgstr ""
"`bpo-24731 <https://bugs.python.org/issue24731>`__: Fixed crash on "
"converting objects with special methods __bytes__, __trunc__, and __float__ "
"returning instances of subclasses of bytes, int, and float to subclasses of "
"bytes, int, and float correspondingly."

#: ../../../Misc/NEWS:2807 ../../../Misc/NEWS:5378
msgid ""
"`bpo-25630 <https://bugs.python.org/issue25630>`__: Fix a possible segfault "
"during argument parsing in functions that accept filesystem paths."
msgstr ""
"`bpo-25630 <https://bugs.python.org/issue25630>`__: Fix a possible segfault "
"during argument parsing in functions that accept filesystem paths."

#: ../../../Misc/NEWS:2810 ../../../Misc/NEWS:5381
msgid ""
"`bpo-23564 <https://bugs.python.org/issue23564>`__: Fixed a partially broken "
"sanity check in the _posixsubprocess internals regarding how fds_to_pass "
"were passed to the child.  The bug had no actual impact as subprocess.py "
"already avoided it."
msgstr ""
"`bpo-23564 <https://bugs.python.org/issue23564>`__: Fixed a partially broken "
"sanity check in the _posixsubprocess internals regarding how fds_to_pass "
"were passed to the child.  The bug had no actual impact as subprocess.py "
"already avoided it."

#: ../../../Misc/NEWS:2814 ../../../Misc/NEWS:5385
msgid ""
"`bpo-25388 <https://bugs.python.org/issue25388>`__: Fixed tokenizer crash "
"when processing undecodable source code with a null byte."
msgstr ""
"`bpo-25388 <https://bugs.python.org/issue25388>`__: Fixed tokenizer crash "
"when processing undecodable source code with a null byte."

#: ../../../Misc/NEWS:2817 ../../../Misc/NEWS:5388
msgid ""
"`bpo-25462 <https://bugs.python.org/issue25462>`__: The hash of the key now "
"is calculated only once in most operations in C implementation of "
"OrderedDict."
msgstr ""
"`bpo-25462 <https://bugs.python.org/issue25462>`__: The hash of the key now "
"is calculated only once in most operations in C implementation of "
"OrderedDict."

#: ../../../Misc/NEWS:2820 ../../../Misc/NEWS:5391
msgid ""
"`bpo-22995 <https://bugs.python.org/issue22995>`__: Default implementation "
"of __reduce__ and __reduce_ex__ now rejects builtin types with not defined "
"__new__."
msgstr ""
"`bpo-22995 <https://bugs.python.org/issue22995>`__: Default implementation "
"of __reduce__ and __reduce_ex__ now rejects builtin types with not defined "
"__new__."

#: ../../../Misc/NEWS:2823 ../../../Misc/NEWS:5397
msgid ""
"`bpo-24802 <https://bugs.python.org/issue24802>`__: Avoid buffer overreads "
"when int(), float(), compile(), exec() and eval() are passed bytes-like "
"objects.  These objects are not necessarily terminated by a null byte, but "
"the functions assumed they were."
msgstr ""
"`bpo-24802 <https://bugs.python.org/issue24802>`__: Avoid buffer overreads "
"when int(), float(), compile(), exec() and eval() are passed bytes-like "
"objects.  These objects are not necessarily terminated by a null byte, but "
"the functions assumed they were."

#: ../../../Misc/NEWS:2827 ../../../Misc/NEWS:5394
msgid ""
"`bpo-25555 <https://bugs.python.org/issue25555>`__: Fix parser and AST: fill "
"lineno and col_offset of \"arg\" node when compiling AST from Python objects."
msgstr ""
"`bpo-25555 <https://bugs.python.org/issue25555>`__: Fix parser and AST: fill "
"lineno and col_offset of \"arg\" node when compiling AST from Python objects."

#: ../../../Misc/NEWS:2830 ../../../Misc/NEWS:5401
msgid ""
"`bpo-24726 <https://bugs.python.org/issue24726>`__: Fixed a crash and "
"leaking NULL in repr() of OrderedDict that was mutated by direct calls of "
"dict methods."
msgstr ""
"`bpo-24726 <https://bugs.python.org/issue24726>`__: Fixed a crash and "
"leaking NULL in repr() of OrderedDict that was mutated by direct calls of "
"dict methods."

#: ../../../Misc/NEWS:2833 ../../../Misc/NEWS:5404
msgid ""
"`bpo-25449 <https://bugs.python.org/issue25449>`__: Iterating OrderedDict "
"with keys with unstable hash now raises KeyError in C implementations as "
"well as in Python implementation."
msgstr ""
"`bpo-25449 <https://bugs.python.org/issue25449>`__: Iterating OrderedDict "
"with keys with unstable hash now raises KeyError in C implementations as "
"well as in Python implementation."

#: ../../../Misc/NEWS:2836 ../../../Misc/NEWS:5407
msgid ""
"`bpo-25395 <https://bugs.python.org/issue25395>`__: Fixed crash when highly "
"nested OrderedDict structures were garbage collected."
msgstr ""
"`bpo-25395 <https://bugs.python.org/issue25395>`__: Fixed crash when highly "
"nested OrderedDict structures were garbage collected."

#: ../../../Misc/NEWS:2839
msgid ""
"`bpo-25401 <https://bugs.python.org/issue25401>`__: Optimize bytes.fromhex() "
"and bytearray.fromhex(): they are now between 2x and 3.5x faster."
msgstr ""
"`bpo-25401 <https://bugs.python.org/issue25401>`__: Optimize bytes.fromhex() "
"and bytearray.fromhex(): they are now between 2x and 3.5x faster."

#: ../../../Misc/NEWS:2842
msgid ""
"`bpo-25399 <https://bugs.python.org/issue25399>`__: Optimize bytearray % "
"args using the new private _PyBytesWriter API. Formatting is now between 2.5 "
"and 5 times faster."
msgstr ""
"`bpo-25399 <https://bugs.python.org/issue25399>`__: Optimize bytearray % "
"args using the new private _PyBytesWriter API. Formatting is now between 2.5 "
"and 5 times faster."

#: ../../../Misc/NEWS:2845 ../../../Misc/NEWS:5410
msgid ""
"`bpo-25274 <https://bugs.python.org/issue25274>`__: sys.setrecursionlimit() "
"now raises a RecursionError if the new recursion limit is too low depending "
"at the current recursion depth. Modify also the \"lower-water mark\" formula "
"to make it monotonic. This mark is used to decide when the overflowed flag "
"of the thread state is reset."
msgstr ""
"`bpo-25274 <https://bugs.python.org/issue25274>`__: sys.setrecursionlimit() "
"now raises a RecursionError if the new recursion limit is too low depending "
"at the current recursion depth. Modify also the \"lower-water mark\" formula "
"to make it monotonic. This mark is used to decide when the overflowed flag "
"of the thread state is reset."

#: ../../../Misc/NEWS:2850 ../../../Misc/NEWS:5415
msgid ""
"`bpo-24402 <https://bugs.python.org/issue24402>`__: Fix input() to prompt to "
"the redirected stdout when sys.stdout.fileno() fails."
msgstr ""
"`bpo-24402 <https://bugs.python.org/issue24402>`__: Fix input() to prompt to "
"the redirected stdout when sys.stdout.fileno() fails."

#: ../../../Misc/NEWS:2853
msgid ""
"`bpo-25349 <https://bugs.python.org/issue25349>`__: Optimize bytes % args "
"using the new private _PyBytesWriter API. Formatting is now up to 2 times "
"faster."
msgstr ""
"`bpo-25349 <https://bugs.python.org/issue25349>`__: Optimize bytes % args "
"using the new private _PyBytesWriter API. Formatting is now up to 2 times "
"faster."

#: ../../../Misc/NEWS:2856 ../../../Misc/NEWS:5418
msgid ""
"`bpo-24806 <https://bugs.python.org/issue24806>`__: Prevent builtin types "
"that are not allowed to be subclassed from being subclassed through multiple "
"inheritance."
msgstr ""
"`bpo-24806 <https://bugs.python.org/issue24806>`__: Prevent builtin types "
"that are not allowed to be subclassed from being subclassed through multiple "
"inheritance."

#: ../../../Misc/NEWS:2859
msgid ""
"`bpo-25301 <https://bugs.python.org/issue25301>`__: The UTF-8 decoder is now "
"up to 15 times as fast for error handlers: ``ignore``, ``replace`` and "
"``surrogateescape``."
msgstr ""
"`bpo-25301 <https://bugs.python.org/issue25301>`__: The UTF-8 decoder is now "
"up to 15 times as fast for error handlers: ``ignore``, ``replace`` and "
"``surrogateescape``."

#: ../../../Misc/NEWS:2862 ../../../Misc/NEWS:5421
msgid ""
"`bpo-24848 <https://bugs.python.org/issue24848>`__: Fixed a number of bugs "
"in UTF-7 decoding of misformed data."
msgstr ""
"`bpo-24848 <https://bugs.python.org/issue24848>`__: Fixed a number of bugs "
"in UTF-7 decoding of misformed data."

#: ../../../Misc/NEWS:2864
msgid ""
"`bpo-25267 <https://bugs.python.org/issue25267>`__: The UTF-8 encoder is now "
"up to 75 times as fast for error handlers: ``ignore``, ``replace``, "
"``surrogateescape``, ``surrogatepass``. Patch co-written with Serhiy "
"Storchaka."
msgstr ""
"`bpo-25267 <https://bugs.python.org/issue25267>`__: The UTF-8 encoder is now "
"up to 75 times as fast for error handlers: ``ignore``, ``replace``, "
"``surrogateescape``, ``surrogatepass``. Patch co-written with Serhiy "
"Storchaka."

#: ../../../Misc/NEWS:2868 ../../../Misc/NEWS:5423
msgid ""
"`bpo-25280 <https://bugs.python.org/issue25280>`__: Import trace messages "
"emitted in verbose (-v) mode are no longer formatted twice."
msgstr ""
"`bpo-25280 <https://bugs.python.org/issue25280>`__: Import trace messages "
"emitted in verbose (-v) mode are no longer formatted twice."

#: ../../../Misc/NEWS:2871
msgid ""
"`bpo-25227 <https://bugs.python.org/issue25227>`__: Optimize ASCII and "
"latin1 encoders with the ``surrogateescape`` error handler: the encoders are "
"now up to 3 times as fast. Initial patch written by Serhiy Storchaka."
msgstr ""
"`bpo-25227 <https://bugs.python.org/issue25227>`__: Optimize ASCII and "
"latin1 encoders with the ``surrogateescape`` error handler: the encoders are "
"now up to 3 times as fast. Initial patch written by Serhiy Storchaka."

#: ../../../Misc/NEWS:2875 ../../../Misc/NEWS:5426
msgid ""
"`bpo-25003 <https://bugs.python.org/issue25003>`__: On Solaris 11.3 or "
"newer, os.urandom() now uses the getrandom() function instead of the "
"getentropy() function. The getentropy() function is blocking to generate "
"very good quality entropy, os.urandom() doesn't need such high-quality "
"entropy."
msgstr ""
"`bpo-25003 <https://bugs.python.org/issue25003>`__: On Solaris 11.3 or "
"newer, os.urandom() now uses the getrandom() function instead of the "
"getentropy() function. The getentropy() function is blocking to generate "
"very good quality entropy, os.urandom() doesn't need such high-quality "
"entropy."

#: ../../../Misc/NEWS:2880
msgid ""
"`bpo-9232 <https://bugs.python.org/issue9232>`__: Modify Python's grammar to "
"allow trailing commas in the argument list of a function declaration.  For "
"example, \"def f(\\*, a = 3,): pass\" is now legal. Patch from Mark "
"Dickinson."
msgstr ""
"`bpo-9232 <https://bugs.python.org/issue9232>`__: Modify Python's grammar to "
"allow trailing commas in the argument list of a function declaration.  For "
"example, \"def f(\\*, a = 3,): pass\" is now legal. Patch from Mark "
"Dickinson."

#: ../../../Misc/NEWS:2884
msgid ""
"`bpo-24965 <https://bugs.python.org/issue24965>`__: Implement PEP 498 "
"\"Literal String Interpolation\". This allows you to embed expressions "
"inside f-strings, which are converted to normal strings at run time. Given "
"x=3, then f'value={x}' == 'value=3'. Patch by Eric V. Smith."
msgstr ""
"`bpo-24965 <https://bugs.python.org/issue24965>`__: Implement PEP 498 "
"\"Literal String Interpolation\". This allows you to embed expressions "
"inside f-strings, which are converted to normal strings at run time. Given "
"x=3, then f'value={x}' == 'value=3'. Patch by Eric V. Smith."

#: ../../../Misc/NEWS:2889 ../../../Misc/NEWS:4735
msgid ""
"`bpo-26478 <https://bugs.python.org/issue26478>`__: Fix semantic bugs when "
"using binary operators with dictionary views and tuples."
msgstr ""
"`bpo-26478 <https://bugs.python.org/issue26478>`__: Fix semantic bugs when "
"using binary operators with dictionary views and tuples."

#: ../../../Misc/NEWS:2892 ../../../Misc/NEWS:4738
msgid ""
"`bpo-26171 <https://bugs.python.org/issue26171>`__: Fix possible integer "
"overflow and heap corruption in zipimporter.get_data()."
msgstr ""
"`bpo-26171 <https://bugs.python.org/issue26171>`__: Fix possible integer "
"overflow and heap corruption in zipimporter.get_data()."

#: ../../../Misc/NEWS:2895 ../../../Misc/NEWS:4741
msgid ""
"`bpo-25660 <https://bugs.python.org/issue25660>`__: Fix TAB key behaviour in "
"REPL with readline."
msgstr ""
"`bpo-25660 <https://bugs.python.org/issue25660>`__: Fix TAB key behaviour in "
"REPL with readline."

#: ../../../Misc/NEWS:2897
msgid ""
"`bpo-26288 <https://bugs.python.org/issue26288>`__: Optimize PyLong_AsDouble."
msgstr ""
"`bpo-26288 <https://bugs.python.org/issue26288>`__: Optimize PyLong_AsDouble."

#: ../../../Misc/NEWS:2899
msgid ""
"Issues #26289 and #26315: Optimize floor and modulo division for single-"
"digit longs.  Microbenchmarks show 2-2.5x improvement.  Built-in 'divmod' "
"function is now also ~10% faster."
msgstr ""

#: ../../../Misc/NEWS:2903 ../../../Misc/NEWS:4743
msgid ""
"`bpo-25887 <https://bugs.python.org/issue25887>`__: Raise a RuntimeError "
"when a coroutine object is awaited more than once."
msgstr ""
"`bpo-25887 <https://bugs.python.org/issue25887>`__: Raise a RuntimeError "
"when a coroutine object is awaited more than once."

#: ../../../Misc/NEWS:2909 ../../../Misc/NEWS:4810
msgid ""
"`bpo-27057 <https://bugs.python.org/issue27057>`__: Fix os.set_inheritable() "
"on Android, ioctl() is blocked by SELinux and fails with EACCESS. The "
"function now falls back to fcntl(). Patch written by Micha≈Ç Bednarski."
msgstr ""
"`bpo-27057 <https://bugs.python.org/issue27057>`__: Fix os.set_inheritable() "
"on Android, ioctl() is blocked by SELinux and fails with EACCESS. The "
"function now falls back to fcntl(). Patch written by Micha≈Ç Bednarski."

#: ../../../Misc/NEWS:2913 ../../../Misc/NEWS:4814
msgid ""
"`bpo-27014 <https://bugs.python.org/issue27014>`__: Fix infinite recursion "
"using typing.py.  Thanks to Kalle Tuure!"
msgstr ""
"`bpo-27014 <https://bugs.python.org/issue27014>`__: Fix infinite recursion "
"using typing.py.  Thanks to Kalle Tuure!"

#: ../../../Misc/NEWS:2915
msgid ""
"`bpo-27031 <https://bugs.python.org/issue27031>`__: Removed dummy methods in "
"Tkinter widget classes: tk_menuBar() and tk_bindForTraversal()."
msgstr ""
"`bpo-27031 <https://bugs.python.org/issue27031>`__: Removed dummy methods in "
"Tkinter widget classes: tk_menuBar() and tk_bindForTraversal()."

#: ../../../Misc/NEWS:2918 ../../../Misc/NEWS:4816
msgid ""
"`bpo-14132 <https://bugs.python.org/issue14132>`__: Fix urllib.request "
"redirect handling when the target only has a query string.  Original fix by "
"J√°n Janech."
msgstr ""
"`bpo-14132 <https://bugs.python.org/issue14132>`__: Fix urllib.request "
"redirect handling when the target only has a query string.  Original fix by "
"J√°n Janech."

#: ../../../Misc/NEWS:2921 ../../../Misc/NEWS:4819
msgid ""
"`bpo-17214 <https://bugs.python.org/issue17214>`__: The \"urllib.request\" "
"module now percent-encodes non-ASCII bytes found in redirect target URLs.  "
"Some servers send Location header fields with non-ASCII bytes, but \"http."
"client\" requires the request target to be ASCII-encodable, otherwise a "
"UnicodeEncodeError is raised.  Based on patch by Christian Heimes."
msgstr ""
"`bpo-17214 <https://bugs.python.org/issue17214>`__: The \"urllib.request\" "
"module now percent-encodes non-ASCII bytes found in redirect target URLs.  "
"Some servers send Location header fields with non-ASCII bytes, but \"http."
"client\" requires the request target to be ASCII-encodable, otherwise a "
"UnicodeEncodeError is raised.  Based on patch by Christian Heimes."

#: ../../../Misc/NEWS:2927
msgid ""
"`bpo-27033 <https://bugs.python.org/issue27033>`__: The default value of the "
"decode_data parameter for smtpd.SMTPChannel and smtpd.SMTPServer "
"constructors is changed to False."
msgstr ""
"`bpo-27033 <https://bugs.python.org/issue27033>`__: The default value of the "
"decode_data parameter for smtpd.SMTPChannel and smtpd.SMTPServer "
"constructors is changed to False."

#: ../../../Misc/NEWS:2930
msgid ""
"`bpo-27034 <https://bugs.python.org/issue27034>`__: Removed deprecated class "
"asynchat.fifo."
msgstr ""
"`bpo-27034 <https://bugs.python.org/issue27034>`__: Removed deprecated class "
"asynchat.fifo."

#: ../../../Misc/NEWS:2932
msgid ""
"`bpo-26870 <https://bugs.python.org/issue26870>`__: Added readline."
"set_auto_history(), which can stop entries being automatically added to the "
"history list.  Based on patch by Tyler Crompton."
msgstr ""
"`bpo-26870 <https://bugs.python.org/issue26870>`__: Added readline."
"set_auto_history(), which can stop entries being automatically added to the "
"history list.  Based on patch by Tyler Crompton."

#: ../../../Misc/NEWS:2936
msgid ""
"`bpo-26039 <https://bugs.python.org/issue26039>`__: zipfile.ZipFile.open() "
"can now be used to write data into a ZIP file, as well as for extracting "
"data.  Patch by Thomas Kluyver."
msgstr ""
"`bpo-26039 <https://bugs.python.org/issue26039>`__: zipfile.ZipFile.open() "
"can now be used to write data into a ZIP file, as well as for extracting "
"data.  Patch by Thomas Kluyver."

#: ../../../Misc/NEWS:2939 ../../../Misc/NEWS:4825
msgid ""
"`bpo-26892 <https://bugs.python.org/issue26892>`__: Honor debuglevel flag in "
"urllib.request.HTTPHandler. Patch contributed by Chi Hsuan Yen."
msgstr ""
"`bpo-26892 <https://bugs.python.org/issue26892>`__: Honor debuglevel flag in "
"urllib.request.HTTPHandler. Patch contributed by Chi Hsuan Yen."

#: ../../../Misc/NEWS:2942 ../../../Misc/NEWS:4828
msgid ""
"`bpo-22274 <https://bugs.python.org/issue22274>`__: In the subprocess "
"module, allow stderr to be redirected to stdout even when stdout is not "
"redirected.  Patch by Akira Li."
msgstr ""
"`bpo-22274 <https://bugs.python.org/issue22274>`__: In the subprocess "
"module, allow stderr to be redirected to stdout even when stdout is not "
"redirected.  Patch by Akira Li."

#: ../../../Misc/NEWS:2945 ../../../Misc/NEWS:4831
msgid ""
"`bpo-26807 <https://bugs.python.org/issue26807>`__: mock_open 'files' no "
"longer error on readline at end of file. Patch from Yolanda Robla."
msgstr ""
"`bpo-26807 <https://bugs.python.org/issue26807>`__: mock_open 'files' no "
"longer error on readline at end of file. Patch from Yolanda Robla."

#: ../../../Misc/NEWS:2948 ../../../Misc/NEWS:4834
msgid ""
"`bpo-25745 <https://bugs.python.org/issue25745>`__: Fixed leaking a userptr "
"in curses panel destructor."
msgstr ""
"`bpo-25745 <https://bugs.python.org/issue25745>`__: Fixed leaking a userptr "
"in curses panel destructor."

#: ../../../Misc/NEWS:2950 ../../../Misc/NEWS:4836
msgid ""
"`bpo-26977 <https://bugs.python.org/issue26977>`__: Removed unnecessary, and "
"ignored, call to sum of squares helper in statistics.pvariance."
msgstr ""
"`bpo-26977 <https://bugs.python.org/issue26977>`__: Removed unnecessary, and "
"ignored, call to sum of squares helper in statistics.pvariance."

#: ../../../Misc/NEWS:2953
msgid ""
"`bpo-26002 <https://bugs.python.org/issue26002>`__: Use bisect in statistics."
"median instead of a linear search. Patch by Upendra Kuma."
msgstr ""
"`bpo-26002 <https://bugs.python.org/issue26002>`__: Use bisect in statistics."
"median instead of a linear search. Patch by Upendra Kuma."

#: ../../../Misc/NEWS:2956
msgid ""
"`bpo-25974 <https://bugs.python.org/issue25974>`__: Make use of new Decimal."
"as_integer_ratio() method in statistics module. Patch by Stefan Krah."
msgstr ""
"`bpo-25974 <https://bugs.python.org/issue25974>`__: Make use of new Decimal."
"as_integer_ratio() method in statistics module. Patch by Stefan Krah."

#: ../../../Misc/NEWS:2959
msgid ""
"`bpo-26996 <https://bugs.python.org/issue26996>`__: Add secrets module as "
"described in PEP 506."
msgstr ""
"`bpo-26996 <https://bugs.python.org/issue26996>`__: Add secrets module as "
"described in PEP 506."

#: ../../../Misc/NEWS:2961 ../../../Misc/NEWS:4839
msgid ""
"`bpo-26881 <https://bugs.python.org/issue26881>`__: The modulefinder module "
"now supports extended opcode arguments."
msgstr ""
"`bpo-26881 <https://bugs.python.org/issue26881>`__: The modulefinder module "
"now supports extended opcode arguments."

#: ../../../Misc/NEWS:2963 ../../../Misc/NEWS:4841
msgid ""
"`bpo-23815 <https://bugs.python.org/issue23815>`__: Fixed crashes related to "
"directly created instances of types in _tkinter and curses.panel modules."
msgstr ""
"`bpo-23815 <https://bugs.python.org/issue23815>`__: Fixed crashes related to "
"directly created instances of types in _tkinter and curses.panel modules."

#: ../../../Misc/NEWS:2966 ../../../Misc/NEWS:4844
msgid ""
"`bpo-17765 <https://bugs.python.org/issue17765>`__: weakref.ref() no longer "
"silently ignores keyword arguments. Patch by Georg Brandl."
msgstr ""
"`bpo-17765 <https://bugs.python.org/issue17765>`__: weakref.ref() no longer "
"silently ignores keyword arguments. Patch by Georg Brandl."

#: ../../../Misc/NEWS:2969 ../../../Misc/NEWS:4847
msgid ""
"`bpo-26873 <https://bugs.python.org/issue26873>`__: xmlrpc now raises "
"ResponseError on unsupported type tags instead of silently return incorrect "
"result."
msgstr ""
"`bpo-26873 <https://bugs.python.org/issue26873>`__: xmlrpc now raises "
"ResponseError on unsupported type tags instead of silently return incorrect "
"result."

#: ../../../Misc/NEWS:2972
msgid ""
"`bpo-26915 <https://bugs.python.org/issue26915>`__:  The __contains__ "
"methods in the collections ABCs now check for identity before checking "
"equality.  This better matches the behavior of the concrete classes, allows "
"sensible handling of NaNs, and makes it easier to reason about container "
"invariants."
msgstr ""
"`bpo-26915 <https://bugs.python.org/issue26915>`__:  The __contains__ "
"methods in the collections ABCs now check for identity before checking "
"equality.  This better matches the behavior of the concrete classes, allows "
"sensible handling of NaNs, and makes it easier to reason about container "
"invariants."

#: ../../../Misc/NEWS:2977 ../../../Misc/NEWS:4850
msgid ""
"`bpo-26711 <https://bugs.python.org/issue26711>`__: Fixed the comparison of "
"plistlib.Data with other types."
msgstr ""
"`bpo-26711 <https://bugs.python.org/issue26711>`__: Fixed the comparison of "
"plistlib.Data with other types."

#: ../../../Misc/NEWS:2979 ../../../Misc/NEWS:4852
msgid ""
"`bpo-24114 <https://bugs.python.org/issue24114>`__: Fix an uninitialized "
"variable in `ctypes.util`."
msgstr ""
"`bpo-24114 <https://bugs.python.org/issue24114>`__: Fix an uninitialized "
"variable in `ctypes.util`."

#: ../../../Misc/NEWS:2981 ../../../Misc/NEWS:4854
msgid ""
"The bug only occurs on SunOS when the ctypes implementation searches for the "
"`crle` program.  Patch by Xiang Zhang.  Tested on SunOS by Kees Bos."
msgstr ""

#: ../../../Misc/NEWS:2985 ../../../Misc/NEWS:4858
msgid ""
"`bpo-26864 <https://bugs.python.org/issue26864>`__: In urllib.request, "
"change the proxy bypass host checking against no_proxy to be case-"
"insensitive, and to not match unrelated host names that happen to have a "
"bypassed hostname as a suffix.  Patch by Xiang Zhang."
msgstr ""
"`bpo-26864 <https://bugs.python.org/issue26864>`__: In urllib.request, "
"change the proxy bypass host checking against no_proxy to be case-"
"insensitive, and to not match unrelated host names that happen to have a "
"bypassed hostname as a suffix.  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:2990
msgid ""
"`bpo-24902 <https://bugs.python.org/issue24902>`__: Print server URL on http."
"server startup.  Initial patch by Felix Kaiser."
msgstr ""
"`bpo-24902 <https://bugs.python.org/issue24902>`__: Print server URL on http."
"server startup.  Initial patch by Felix Kaiser."

#: ../../../Misc/NEWS:2993
msgid ""
"`bpo-25788 <https://bugs.python.org/issue25788>`__: fileinput.hook_encoded() "
"now supports an \"errors\" argument for passing to open.  Original patch by "
"Joseph Hackman."
msgstr ""
"`bpo-25788 <https://bugs.python.org/issue25788>`__: fileinput.hook_encoded() "
"now supports an \"errors\" argument for passing to open.  Original patch by "
"Joseph Hackman."

#: ../../../Misc/NEWS:2996 ../../../Misc/NEWS:4863
msgid ""
"`bpo-26634 <https://bugs.python.org/issue26634>`__: recursive_repr() now "
"sets __qualname__ of wrapper.  Patch by Xiang Zhang."
msgstr ""
"`bpo-26634 <https://bugs.python.org/issue26634>`__: recursive_repr() now "
"sets __qualname__ of wrapper.  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:2999 ../../../Misc/NEWS:4866
msgid ""
"`bpo-26804 <https://bugs.python.org/issue26804>`__: urllib.request will "
"prefer lower_case proxy environment variables over UPPER_CASE or Mixed_Case "
"ones. Patch contributed by Hans-Peter Jansen."
msgstr ""
"`bpo-26804 <https://bugs.python.org/issue26804>`__: urllib.request will "
"prefer lower_case proxy environment variables over UPPER_CASE or Mixed_Case "
"ones. Patch contributed by Hans-Peter Jansen."

#: ../../../Misc/NEWS:3003 ../../../Misc/NEWS:4870
msgid ""
"`bpo-26837 <https://bugs.python.org/issue26837>`__: assertSequenceEqual() "
"now correctly outputs non-stringified differing items (like bytes in the -b "
"mode).  This affects assertListEqual() and assertTupleEqual()."
msgstr ""
"`bpo-26837 <https://bugs.python.org/issue26837>`__: assertSequenceEqual() "
"now correctly outputs non-stringified differing items (like bytes in the -b "
"mode).  This affects assertListEqual() and assertTupleEqual()."

#: ../../../Misc/NEWS:3007 ../../../Misc/NEWS:4874
msgid ""
"`bpo-26041 <https://bugs.python.org/issue26041>`__: Remove \"will be removed "
"in Python 3.7\" from deprecation messages of platform.dist() and platform."
"linux_distribution(). Patch by Kumaripaba Miyurusara Athukorala."
msgstr ""
"`bpo-26041 <https://bugs.python.org/issue26041>`__: Remove \"will be removed "
"in Python 3.7\" from deprecation messages of platform.dist() and platform."
"linux_distribution(). Patch by Kumaripaba Miyurusara Athukorala."

#: ../../../Misc/NEWS:3011 ../../../Misc/NEWS:4878
msgid ""
"`bpo-26822 <https://bugs.python.org/issue26822>`__: itemgetter, attrgetter "
"and methodcaller objects no longer silently ignore keyword arguments."
msgstr ""
"`bpo-26822 <https://bugs.python.org/issue26822>`__: itemgetter, attrgetter "
"and methodcaller objects no longer silently ignore keyword arguments."

#: ../../../Misc/NEWS:3014 ../../../Misc/NEWS:4881
msgid ""
"`bpo-26733 <https://bugs.python.org/issue26733>`__: Disassembling a class "
"now disassembles class and static methods. Patch by Xiang Zhang."
msgstr ""
"`bpo-26733 <https://bugs.python.org/issue26733>`__: Disassembling a class "
"now disassembles class and static methods. Patch by Xiang Zhang."

#: ../../../Misc/NEWS:3017 ../../../Misc/NEWS:4884
msgid ""
"`bpo-26801 <https://bugs.python.org/issue26801>`__: Fix error handling in :"
"func:`shutil.get_terminal_size`, catch :exc:`AttributeError` instead of :exc:"
"`NameError`. Patch written by Emanuel Barry."
msgstr ""
"`bpo-26801 <https://bugs.python.org/issue26801>`__: Fix error handling in :"
"func:`shutil.get_terminal_size`, catch :exc:`AttributeError` instead of :exc:"
"`NameError`. Patch written by Emanuel Barry."

#: ../../../Misc/NEWS:3021 ../../../Misc/NEWS:4888
msgid ""
"`bpo-24838 <https://bugs.python.org/issue24838>`__: tarfile's ustar and gnu "
"formats now correctly calculate name and link field limits for multibyte "
"character encodings like utf-8."
msgstr ""
"`bpo-24838 <https://bugs.python.org/issue24838>`__: tarfile's ustar and gnu "
"formats now correctly calculate name and link field limits for multibyte "
"character encodings like utf-8."

#: ../../../Misc/NEWS:3024 ../../../Misc/NEWS:4891
msgid ""
"[Security] `bpo-26657 <https://bugs.python.org/issue26657>`__: Fix directory "
"traversal vulnerability with http.server on Windows.  This fixes a "
"regression that was introduced in 3.3.4rc1 and 3.4.0rc1.  Based on patch by "
"Philipp Hagemeister."
msgstr ""
"[Security] `bpo-26657 <https://bugs.python.org/issue26657>`__: Fix directory "
"traversal vulnerability with http.server on Windows.  This fixes a "
"regression that was introduced in 3.3.4rc1 and 3.4.0rc1.  Based on patch by "
"Philipp Hagemeister."

#: ../../../Misc/NEWS:3028 ../../../Misc/NEWS:4895
msgid ""
"`bpo-26717 <https://bugs.python.org/issue26717>`__: Stop encoding Latin-1-"
"ized WSGI paths with UTF-8.  Patch by Anthony Sottile."
msgstr ""
"`bpo-26717 <https://bugs.python.org/issue26717>`__: Stop encoding Latin-1-"
"ized WSGI paths with UTF-8.  Patch by Anthony Sottile."

#: ../../../Misc/NEWS:3031
msgid ""
"`bpo-26782 <https://bugs.python.org/issue26782>`__: Add STARTUPINFO to "
"subprocess.__all__ on Windows."
msgstr ""
"`bpo-26782 <https://bugs.python.org/issue26782>`__: Add STARTUPINFO to "
"subprocess.__all__ on Windows."

#: ../../../Misc/NEWS:3033
msgid ""
"`bpo-26404 <https://bugs.python.org/issue26404>`__: Add context manager to "
"socketserver.  Patch by Aviv Palivoda."
msgstr ""
"`bpo-26404 <https://bugs.python.org/issue26404>`__: Add context manager to "
"socketserver.  Patch by Aviv Palivoda."

#: ../../../Misc/NEWS:3035 ../../../Misc/NEWS:4898
msgid ""
"`bpo-26735 <https://bugs.python.org/issue26735>`__: Fix :func:`os.urandom` "
"on Solaris 11.3 and newer when reading more than 1,024 bytes: call "
"``getrandom()`` multiple times with a limit of 1024 bytes per call."
msgstr ""
"`bpo-26735 <https://bugs.python.org/issue26735>`__: Fix :func:`os.urandom` "
"on Solaris 11.3 and newer when reading more than 1,024 bytes: call "
"``getrandom()`` multiple times with a limit of 1024 bytes per call."

#: ../../../Misc/NEWS:3039
msgid ""
"`bpo-26585 <https://bugs.python.org/issue26585>`__: Eliminate http.server."
"_quote_html() and use html.escape(quote=False).  Patch by Xiang Zhang."
msgstr ""
"`bpo-26585 <https://bugs.python.org/issue26585>`__: Eliminate http.server."
"_quote_html() and use html.escape(quote=False).  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:3042
msgid ""
"`bpo-26685 <https://bugs.python.org/issue26685>`__: Raise OSError if closing "
"a socket fails."
msgstr ""
"`bpo-26685 <https://bugs.python.org/issue26685>`__: Raise OSError if closing "
"a socket fails."

#: ../../../Misc/NEWS:3044 ../../../Misc/NEWS:4902
msgid ""
"`bpo-16329 <https://bugs.python.org/issue16329>`__: Add .webm to mimetypes."
"types_map.  Patch by Giampaolo Rodola'."
msgstr ""
"`bpo-16329 <https://bugs.python.org/issue16329>`__: Add .webm to mimetypes."
"types_map.  Patch by Giampaolo Rodola'."

#: ../../../Misc/NEWS:3046 ../../../Misc/NEWS:4904
msgid ""
"`bpo-13952 <https://bugs.python.org/issue13952>`__: Add .csv to mimetypes."
"types_map.  Patch by Geoff Wilson."
msgstr ""
"`bpo-13952 <https://bugs.python.org/issue13952>`__: Add .csv to mimetypes."
"types_map.  Patch by Geoff Wilson."

#: ../../../Misc/NEWS:3048
msgid ""
"`bpo-26587 <https://bugs.python.org/issue26587>`__: the site module now "
"allows .pth files to specify files to be added to sys.path (e.g. zip files)."
msgstr ""
"`bpo-26587 <https://bugs.python.org/issue26587>`__: the site module now "
"allows .pth files to specify files to be added to sys.path (e.g. zip files)."

#: ../../../Misc/NEWS:3051
msgid ""
"`bpo-25609 <https://bugs.python.org/issue25609>`__: Introduce contextlib."
"AbstractContextManager and typing.ContextManager."
msgstr ""
"`bpo-25609 <https://bugs.python.org/issue25609>`__: Introduce contextlib."
"AbstractContextManager and typing.ContextManager."

#: ../../../Misc/NEWS:3054 ../../../Misc/NEWS:4906
msgid ""
"`bpo-26709 <https://bugs.python.org/issue26709>`__: Fixed Y2038 problem in "
"loading binary PLists."
msgstr ""
"`bpo-26709 <https://bugs.python.org/issue26709>`__: Fixed Y2038 problem in "
"loading binary PLists."

#: ../../../Misc/NEWS:3056 ../../../Misc/NEWS:4908
msgid ""
"`bpo-23735 <https://bugs.python.org/issue23735>`__: Handle terminal resizing "
"with Readline 6.3+ by installing our own SIGWINCH handler.  Patch by Eric "
"Price."
msgstr ""
"`bpo-23735 <https://bugs.python.org/issue23735>`__: Handle terminal resizing "
"with Readline 6.3+ by installing our own SIGWINCH handler.  Patch by Eric "
"Price."

#: ../../../Misc/NEWS:3059
msgid ""
"`bpo-25951 <https://bugs.python.org/issue25951>`__: Change SSLSocket."
"sendall() to return None, as explicitly documented for plain socket "
"objects.  Patch by Aviv Palivoda."
msgstr ""
"`bpo-25951 <https://bugs.python.org/issue25951>`__: Change SSLSocket."
"sendall() to return None, as explicitly documented for plain socket "
"objects.  Patch by Aviv Palivoda."

#: ../../../Misc/NEWS:3062 ../../../Misc/NEWS:4911
msgid ""
"`bpo-26586 <https://bugs.python.org/issue26586>`__: In http.server, respond "
"with \"413 Request header fields too large\" if there are too many header "
"fields to parse, rather than killing the connection and raising an unhandled "
"exception.  Patch by Xiang Zhang."
msgstr ""
"`bpo-26586 <https://bugs.python.org/issue26586>`__: In http.server, respond "
"with \"413 Request header fields too large\" if there are too many header "
"fields to parse, rather than killing the connection and raising an unhandled "
"exception.  Patch by Xiang Zhang."

#: ../../../Misc/NEWS:3066
msgid ""
"`bpo-26676 <https://bugs.python.org/issue26676>`__: Added missing "
"XMLPullParser to ElementTree.__all__."
msgstr ""
"`bpo-26676 <https://bugs.python.org/issue26676>`__: Added missing "
"XMLPullParser to ElementTree.__all__."

#: ../../../Misc/NEWS:3068 ../../../Misc/NEWS:4915
msgid ""
"`bpo-22854 <https://bugs.python.org/issue22854>`__: Change BufferedReader."
"writable() and BufferedWriter.readable() to always return False."
msgstr ""
"`bpo-22854 <https://bugs.python.org/issue22854>`__: Change BufferedReader."
"writable() and BufferedWriter.readable() to always return False."

#: ../../../Misc/NEWS:3071
msgid ""
"`bpo-26492 <https://bugs.python.org/issue26492>`__: Exhausted iterator of "
"array.array now conforms with the behavior of iterators of other mutable "
"sequences: it lefts exhausted even if iterated array is extended."
msgstr ""
"`bpo-26492 <https://bugs.python.org/issue26492>`__: Exhausted iterator of "
"array.array now conforms with the behavior of iterators of other mutable "
"sequences: it lefts exhausted even if iterated array is extended."

#: ../../../Misc/NEWS:3075
msgid ""
"`bpo-26641 <https://bugs.python.org/issue26641>`__: doctest.DocFileTest and "
"doctest.testfile() now support packages (module splitted into multiple "
"directories) for the package parameter."
msgstr ""
"`bpo-26641 <https://bugs.python.org/issue26641>`__: doctest.DocFileTest and "
"doctest.testfile() now support packages (module splitted into multiple "
"directories) for the package parameter."

#: ../../../Misc/NEWS:3079 ../../../Misc/NEWS:4918
msgid ""
"`bpo-25195 <https://bugs.python.org/issue25195>`__: Fix a regression in mock."
"MagicMock. _Call is a subclass of tuple (changeset 3603bae63c13 only works "
"for classes) so we need to implement __ne__ ourselves.  Patch by Andrew "
"Plummer."
msgstr ""
"`bpo-25195 <https://bugs.python.org/issue25195>`__: Fix a regression in mock."
"MagicMock. _Call is a subclass of tuple (changeset 3603bae63c13 only works "
"for classes) so we need to implement __ne__ ourselves.  Patch by Andrew "
"Plummer."

#: ../../../Misc/NEWS:3083 ../../../Misc/NEWS:4922
msgid ""
"`bpo-26644 <https://bugs.python.org/issue26644>`__: Raise ValueError rather "
"than SystemError when a negative length is passed to SSLSocket.recv() or "
"read()."
msgstr ""
"`bpo-26644 <https://bugs.python.org/issue26644>`__: Raise ValueError rather "
"than SystemError when a negative length is passed to SSLSocket.recv() or "
"read()."

#: ../../../Misc/NEWS:3086 ../../../Misc/NEWS:4925
msgid ""
"`bpo-23804 <https://bugs.python.org/issue23804>`__: Fix SSL recv(0) and "
"read(0) methods to return zero bytes instead of up to 1024."
msgstr ""
"`bpo-23804 <https://bugs.python.org/issue23804>`__: Fix SSL recv(0) and "
"read(0) methods to return zero bytes instead of up to 1024."

#: ../../../Misc/NEWS:3089 ../../../Misc/NEWS:4928
msgid ""
"`bpo-26616 <https://bugs.python.org/issue26616>`__: Fixed a bug in datetime."
"astimezone() method."
msgstr ""
"`bpo-26616 <https://bugs.python.org/issue26616>`__: Fixed a bug in datetime."
"astimezone() method."

#: ../../../Misc/NEWS:3091
msgid ""
"`bpo-26637 <https://bugs.python.org/issue26637>`__: The :mod:`importlib` "
"module now emits an :exc:`ImportError` rather than a :exc:`TypeError` if :"
"func:`__import__` is tried during the Python shutdown process but :data:`sys."
"path` is already cleared (set to ``None``)."
msgstr ""
"`bpo-26637 <https://bugs.python.org/issue26637>`__: The :mod:`importlib` "
"module now emits an :exc:`ImportError` rather than a :exc:`TypeError` if :"
"func:`__import__` is tried during the Python shutdown process but :data:`sys."
"path` is already cleared (set to ``None``)."

#: ../../../Misc/NEWS:3096
msgid ""
"`bpo-21925 <https://bugs.python.org/issue21925>`__: :func:`warnings."
"formatwarning` now catches exceptions when calling :func:`linecache.getline` "
"and :func:`tracemalloc.get_object_traceback` to be able to log :exc:"
"`ResourceWarning` emitted late during the Python shutdown process."
msgstr ""
"`bpo-21925 <https://bugs.python.org/issue21925>`__: :func:`warnings."
"formatwarning` now catches exceptions when calling :func:`linecache.getline` "
"and :func:`tracemalloc.get_object_traceback` to be able to log :exc:"
"`ResourceWarning` emitted late during the Python shutdown process."

#: ../../../Misc/NEWS:3101
msgid ""
"`bpo-23848 <https://bugs.python.org/issue23848>`__: On Windows, faulthandler."
"enable() now also installs an exception handler to dump the traceback of all "
"Python threads on any Windows exception, not only on UNIX signals (SIGSEGV, "
"SIGFPE, SIGABRT)."
msgstr ""
"`bpo-23848 <https://bugs.python.org/issue23848>`__: On Windows, faulthandler."
"enable() now also installs an exception handler to dump the traceback of all "
"Python threads on any Windows exception, not only on UNIX signals (SIGSEGV, "
"SIGFPE, SIGABRT)."

#: ../../../Misc/NEWS:3105
msgid ""
"`bpo-26530 <https://bugs.python.org/issue26530>`__: Add C functions :c:func:"
"`_PyTraceMalloc_Track` and :c:func:`_PyTraceMalloc_Untrack` to track memory "
"blocks using the :mod:`tracemalloc` module. Add :c:func:"
"`_PyTraceMalloc_GetTraceback` to get the traceback of an object."
msgstr ""
"`bpo-26530 <https://bugs.python.org/issue26530>`__: Add C functions :c:func:"
"`_PyTraceMalloc_Track` and :c:func:`_PyTraceMalloc_Untrack` to track memory "
"blocks using the :mod:`tracemalloc` module. Add :c:func:"
"`_PyTraceMalloc_GetTraceback` to get the traceback of an object."

#: ../../../Misc/NEWS:3110
msgid ""
"`bpo-26588 <https://bugs.python.org/issue26588>`__: The _tracemalloc now "
"supports tracing memory allocations of multiple address spaces (domains)."
msgstr ""
"`bpo-26588 <https://bugs.python.org/issue26588>`__: The _tracemalloc now "
"supports tracing memory allocations of multiple address spaces (domains)."

#: ../../../Misc/NEWS:3113 ../../../Misc/NEWS:4934
msgid ""
"`bpo-24266 <https://bugs.python.org/issue24266>`__: Ctrl+C during Readline "
"history search now cancels the search mode when compiled with Readline 7."
msgstr ""
"`bpo-24266 <https://bugs.python.org/issue24266>`__: Ctrl+C during Readline "
"history search now cancels the search mode when compiled with Readline 7."

#: ../../../Misc/NEWS:3116
msgid ""
"`bpo-26590 <https://bugs.python.org/issue26590>`__: Implement a safe "
"finalizer for the _socket.socket type. It now releases the GIL to close the "
"socket."
msgstr ""
"`bpo-26590 <https://bugs.python.org/issue26590>`__: Implement a safe "
"finalizer for the _socket.socket type. It now releases the GIL to close the "
"socket."

#: ../../../Misc/NEWS:3119
msgid ""
"`bpo-18787 <https://bugs.python.org/issue18787>`__: spwd.getspnam() now "
"raises a PermissionError if the user doesn't have privileges."
msgstr ""
"`bpo-18787 <https://bugs.python.org/issue18787>`__: spwd.getspnam() now "
"raises a PermissionError if the user doesn't have privileges."

#: ../../../Misc/NEWS:3122 ../../../Misc/NEWS:4937
msgid ""
"`bpo-26560 <https://bugs.python.org/issue26560>`__: Avoid potential "
"ValueError in BaseHandler.start_response. Initial patch by Peter Inglesby."
msgstr ""
"`bpo-26560 <https://bugs.python.org/issue26560>`__: Avoid potential "
"ValueError in BaseHandler.start_response. Initial patch by Peter Inglesby."

#: ../../../Misc/NEWS:3125
msgid ""
"`bpo-26567 <https://bugs.python.org/issue26567>`__: Add a new function :c:"
"func:`PyErr_ResourceWarning` function to pass the destroyed object. Add a "
"*source* attribute to :class:`warnings.WarningMessage`. Add warnings."
"_showwarnmsg() which uses tracemalloc to get the traceback where source "
"object was allocated."
msgstr ""
"`bpo-26567 <https://bugs.python.org/issue26567>`__: Add a new function :c:"
"func:`PyErr_ResourceWarning` function to pass the destroyed object. Add a "
"*source* attribute to :class:`warnings.WarningMessage`. Add warnings."
"_showwarnmsg() which uses tracemalloc to get the traceback where source "
"object was allocated."

#: ../../../Misc/NEWS:3130 ../../../Misc/NEWS:4940
msgid ""
"[Security] `bpo-26313 <https://bugs.python.org/issue26313>`__: ssl.py "
"_load_windows_store_certs fails if windows cert store is empty. Patch by "
"Baji."
msgstr ""
"[Security] `bpo-26313 <https://bugs.python.org/issue26313>`__: ssl.py "
"_load_windows_store_certs fails if windows cert store is empty. Patch by "
"Baji."

#: ../../../Misc/NEWS:3133 ../../../Misc/NEWS:4943
msgid ""
"`bpo-26569 <https://bugs.python.org/issue26569>`__: Fix :func:`pyclbr."
"readmodule` and :func:`pyclbr.readmodule_ex` to support importing packages."
msgstr ""
"`bpo-26569 <https://bugs.python.org/issue26569>`__: Fix :func:`pyclbr."
"readmodule` and :func:`pyclbr.readmodule_ex` to support importing packages."

#: ../../../Misc/NEWS:3136 ../../../Misc/NEWS:4946
msgid ""
"`bpo-26499 <https://bugs.python.org/issue26499>`__: Account for remaining "
"Content-Length in HTTPResponse.readline() and read1().  Based on patch by "
"Silent Ghost. Also document that HTTPResponse now supports these methods."
msgstr ""
"`bpo-26499 <https://bugs.python.org/issue26499>`__: Account for remaining "
"Content-Length in HTTPResponse.readline() and read1().  Based on patch by "
"Silent Ghost. Also document that HTTPResponse now supports these methods."

#: ../../../Misc/NEWS:3140 ../../../Misc/NEWS:4950
msgid ""
"`bpo-25320 <https://bugs.python.org/issue25320>`__: Handle sockets in "
"directories unittest discovery is scanning. Patch from Victor van den Elzen."
msgstr ""
"`bpo-25320 <https://bugs.python.org/issue25320>`__: Handle sockets in "
"directories unittest discovery is scanning. Patch from Victor van den Elzen."

#: ../../../Misc/NEWS:3143 ../../../Misc/NEWS:4953
msgid ""
"`bpo-16181 <https://bugs.python.org/issue16181>`__: cookiejar.http2time() "
"now returns None if year is higher than datetime.MAXYEAR."
msgstr ""
"`bpo-16181 <https://bugs.python.org/issue16181>`__: cookiejar.http2time() "
"now returns None if year is higher than datetime.MAXYEAR."

#: ../../../Misc/NEWS:3146 ../../../Misc/NEWS:4956
msgid ""
"`bpo-26513 <https://bugs.python.org/issue26513>`__: Fixes platform module "
"detection of Windows Server"
msgstr ""
"`bpo-26513 <https://bugs.python.org/issue26513>`__: Fixes platform module "
"detection of Windows Server"

#: ../../../Misc/NEWS:3148 ../../../Misc/NEWS:4958
msgid ""
"`bpo-23718 <https://bugs.python.org/issue23718>`__: Fixed parsing time in "
"week 0 before Jan 1.  Original patch by Tam√°s Bence Gedai."
msgstr ""
"`bpo-23718 <https://bugs.python.org/issue23718>`__: Fixed parsing time in "
"week 0 before Jan 1.  Original patch by Tam√°s Bence Gedai."

#: ../../../Misc/NEWS:3151
msgid ""
"`bpo-26323 <https://bugs.python.org/issue26323>`__: Add Mock.assert_called() "
"and Mock.assert_called_once() methods to unittest.mock. Patch written by "
"Amit Saha."
msgstr ""
"`bpo-26323 <https://bugs.python.org/issue26323>`__: Add Mock.assert_called() "
"and Mock.assert_called_once() methods to unittest.mock. Patch written by "
"Amit Saha."

#: ../../../Misc/NEWS:3154 ../../../Misc/NEWS:4961
msgid ""
"`bpo-20589 <https://bugs.python.org/issue20589>`__: Invoking Path.owner() "
"and Path.group() on Windows now raise NotImplementedError instead of "
"ImportError."
msgstr ""
"`bpo-20589 <https://bugs.python.org/issue20589>`__: Invoking Path.owner() "
"and Path.group() on Windows now raise NotImplementedError instead of "
"ImportError."

#: ../../../Misc/NEWS:3157 ../../../Misc/NEWS:4964
msgid ""
"`bpo-26177 <https://bugs.python.org/issue26177>`__: Fixed the keys() method "
"for Canvas and Scrollbar widgets."
msgstr ""
"`bpo-26177 <https://bugs.python.org/issue26177>`__: Fixed the keys() method "
"for Canvas and Scrollbar widgets."

#: ../../../Misc/NEWS:3159
msgid ""
"`bpo-15068 <https://bugs.python.org/issue15068>`__: Got rid of excessive "
"buffering in fileinput. The bufsize parameter is now deprecated and ignored."
msgstr ""
"`bpo-15068 <https://bugs.python.org/issue15068>`__: Got rid of excessive "
"buffering in fileinput. The bufsize parameter is now deprecated and ignored."

#: ../../../Misc/NEWS:3162
msgid ""
"`bpo-19475 <https://bugs.python.org/issue19475>`__: Added an optional "
"argument timespec to the datetime isoformat() method to choose the precision "
"of the time component."
msgstr ""
"`bpo-19475 <https://bugs.python.org/issue19475>`__: Added an optional "
"argument timespec to the datetime isoformat() method to choose the precision "
"of the time component."

#: ../../../Misc/NEWS:3165 ../../../Misc/NEWS:4969
msgid ""
"`bpo-2202 <https://bugs.python.org/issue2202>`__: Fix UnboundLocalError in "
"AbstractDigestAuthHandler.get_algorithm_impls.  Initial patch by Mathieu "
"Dupuy."
msgstr ""
"`bpo-2202 <https://bugs.python.org/issue2202>`__: Fix UnboundLocalError in "
"AbstractDigestAuthHandler.get_algorithm_impls.  Initial patch by Mathieu "
"Dupuy."

#: ../../../Misc/NEWS:3169
msgid ""
"`bpo-26167 <https://bugs.python.org/issue26167>`__: Minimized overhead in "
"copy.copy() and copy.deepcopy(). Optimized copying and deepcopying "
"bytearrays, NotImplemented, slices, short lists, tuples, dicts, sets."
msgstr ""
"`bpo-26167 <https://bugs.python.org/issue26167>`__: Minimized overhead in "
"copy.copy() and copy.deepcopy(). Optimized copying and deepcopying "
"bytearrays, NotImplemented, slices, short lists, tuples, dicts, sets."

#: ../../../Misc/NEWS:3173 ../../../Misc/NEWS:4973
msgid ""
"`bpo-25718 <https://bugs.python.org/issue25718>`__: Fixed pickling and "
"copying the accumulate() iterator with total is None."
msgstr ""
"`bpo-25718 <https://bugs.python.org/issue25718>`__: Fixed pickling and "
"copying the accumulate() iterator with total is None."

#: ../../../Misc/NEWS:3176 ../../../Misc/NEWS:4976
msgid ""
"`bpo-26475 <https://bugs.python.org/issue26475>`__: Fixed debugging output "
"for regular expressions with the (?x) flag."
msgstr ""
"`bpo-26475 <https://bugs.python.org/issue26475>`__: Fixed debugging output "
"for regular expressions with the (?x) flag."

#: ../../../Misc/NEWS:3179
msgid ""
"`bpo-26482 <https://bugs.python.org/issue26482>`__: Allowed pickling "
"recursive dequeues."
msgstr ""
"`bpo-26482 <https://bugs.python.org/issue26482>`__: Allowed pickling "
"recursive dequeues."

#: ../../../Misc/NEWS:3181
msgid ""
"`bpo-26335 <https://bugs.python.org/issue26335>`__: Make mmap.write() return "
"the number of bytes written like other write methods.  Patch by Jakub "
"Stasiak."
msgstr ""
"`bpo-26335 <https://bugs.python.org/issue26335>`__: Make mmap.write() return "
"the number of bytes written like other write methods.  Patch by Jakub "
"Stasiak."

#: ../../../Misc/NEWS:3184 ../../../Misc/NEWS:4979
msgid ""
"`bpo-26457 <https://bugs.python.org/issue26457>`__: Fixed the subnets() "
"methods in IP network classes for the case when resulting prefix length is "
"equal to maximal prefix length. Based on patch by Xiang Zhang."
msgstr ""
"`bpo-26457 <https://bugs.python.org/issue26457>`__: Fixed the subnets() "
"methods in IP network classes for the case when resulting prefix length is "
"equal to maximal prefix length. Based on patch by Xiang Zhang."

#: ../../../Misc/NEWS:3188 ../../../Misc/NEWS:4983
msgid ""
"`bpo-26385 <https://bugs.python.org/issue26385>`__: Remove the file if the "
"internal open() call in NamedTemporaryFile() fails.  Patch by Silent Ghost."
msgstr ""
"`bpo-26385 <https://bugs.python.org/issue26385>`__: Remove the file if the "
"internal open() call in NamedTemporaryFile() fails.  Patch by Silent Ghost."

#: ../../../Misc/NEWS:3191 ../../../Misc/NEWS:4986
msgid ""
"`bpo-26402 <https://bugs.python.org/issue26402>`__: Fix XML-RPC client to "
"retry when the server shuts down a persistent connection.  This was a "
"regression related to the new http.client.RemoteDisconnected exception in "
"3.5.0a4."
msgstr ""
"`bpo-26402 <https://bugs.python.org/issue26402>`__: Fix XML-RPC client to "
"retry when the server shuts down a persistent connection.  This was a "
"regression related to the new http.client.RemoteDisconnected exception in "
"3.5.0a4."

#: ../../../Misc/NEWS:3195 ../../../Misc/NEWS:4990
msgid ""
"`bpo-25913 <https://bugs.python.org/issue25913>`__: Leading ``<~`` is "
"optional now in base64.a85decode() with adobe=True.  Patch by Swati Jaiswal."
msgstr ""
"`bpo-25913 <https://bugs.python.org/issue25913>`__: Leading ``<~`` is "
"optional now in base64.a85decode() with adobe=True.  Patch by Swati Jaiswal."

#: ../../../Misc/NEWS:3198 ../../../Misc/NEWS:4993
msgid ""
"`bpo-26186 <https://bugs.python.org/issue26186>`__: Remove an invalid type "
"check in importlib.util.LazyLoader."
msgstr ""
"`bpo-26186 <https://bugs.python.org/issue26186>`__: Remove an invalid type "
"check in importlib.util.LazyLoader."

#: ../../../Misc/NEWS:3200
msgid ""
"`bpo-26367 <https://bugs.python.org/issue26367>`__: importlib.__import__() "
"raises ImportError like builtins.__import__() when ``level`` is specified "
"but without an accompanying package specified."
msgstr ""
"`bpo-26367 <https://bugs.python.org/issue26367>`__: importlib.__import__() "
"raises ImportError like builtins.__import__() when ``level`` is specified "
"but without an accompanying package specified."

#: ../../../Misc/NEWS:3204 ../../../Misc/NEWS:4999
msgid ""
"`bpo-26309 <https://bugs.python.org/issue26309>`__: In the \"socketserver\" "
"module, shut down the request (closing the connected socket) when "
"verify_request() returns false.  Patch by Aviv Palivoda."
msgstr ""
"`bpo-26309 <https://bugs.python.org/issue26309>`__: In the \"socketserver\" "
"module, shut down the request (closing the connected socket) when "
"verify_request() returns false.  Patch by Aviv Palivoda."

#: ../../../Misc/NEWS:3208
msgid ""
"`bpo-23430 <https://bugs.python.org/issue23430>`__: Change the socketserver "
"module to only catch exceptions raised from a request handler that are "
"derived from Exception (instead of BaseException).  Therefore SystemExit and "
"KeyboardInterrupt no longer trigger the handle_error() method, and will now "
"to stop a single-threaded server."
msgstr ""
"`bpo-23430 <https://bugs.python.org/issue23430>`__: Change the socketserver "
"module to only catch exceptions raised from a request handler that are "
"derived from Exception (instead of BaseException).  Therefore SystemExit and "
"KeyboardInterrupt no longer trigger the handle_error() method, and will now "
"to stop a single-threaded server."

#: ../../../Misc/NEWS:3214 ../../../Misc/NEWS:5003
msgid ""
"[Security] `bpo-25939 <https://bugs.python.org/issue25939>`__: On Windows "
"open the cert store readonly in ssl.enum_certificates."
msgstr ""
"[Security] `bpo-25939 <https://bugs.python.org/issue25939>`__: On Windows "
"open the cert store readonly in ssl.enum_certificates."

#: ../../../Misc/NEWS:3217 ../../../Misc/NEWS:5006
msgid ""
"`bpo-25995 <https://bugs.python.org/issue25995>`__: os.walk() no longer uses "
"FDs proportional to the tree depth."
msgstr ""
"`bpo-25995 <https://bugs.python.org/issue25995>`__: os.walk() no longer uses "
"FDs proportional to the tree depth."

#: ../../../Misc/NEWS:3219
msgid ""
"`bpo-25994 <https://bugs.python.org/issue25994>`__: Added the close() method "
"and the support of the context manager protocol for the os.scandir() "
"iterator."
msgstr ""
"`bpo-25994 <https://bugs.python.org/issue25994>`__: Added the close() method "
"and the support of the context manager protocol for the os.scandir() "
"iterator."

#: ../../../Misc/NEWS:3222
msgid ""
"`bpo-23992 <https://bugs.python.org/issue23992>`__: multiprocessing: make "
"MapResult not fail-fast upon exception."
msgstr ""
"`bpo-23992 <https://bugs.python.org/issue23992>`__: multiprocessing: make "
"MapResult not fail-fast upon exception."

#: ../../../Misc/NEWS:3224
msgid ""
"`bpo-26243 <https://bugs.python.org/issue26243>`__: Support keyword "
"arguments to zlib.compress().  Patch by Aviv Palivoda."
msgstr ""
"`bpo-26243 <https://bugs.python.org/issue26243>`__: Support keyword "
"arguments to zlib.compress().  Patch by Aviv Palivoda."

#: ../../../Misc/NEWS:3227 ../../../Misc/NEWS:5008
msgid ""
"`bpo-26117 <https://bugs.python.org/issue26117>`__: The os.scandir() "
"iterator now closes file descriptor not only when the iteration is finished, "
"but when it was failed with error."
msgstr ""
"`bpo-26117 <https://bugs.python.org/issue26117>`__: The os.scandir() "
"iterator now closes file descriptor not only when the iteration is finished, "
"but when it was failed with error."

#: ../../../Misc/NEWS:3230
msgid ""
"`bpo-25949 <https://bugs.python.org/issue25949>`__: __dict__ for an "
"OrderedDict instance is now created only when needed."
msgstr ""
"`bpo-25949 <https://bugs.python.org/issue25949>`__: __dict__ for an "
"OrderedDict instance is now created only when needed."

#: ../../../Misc/NEWS:3233 ../../../Misc/NEWS:5011
msgid ""
"`bpo-25911 <https://bugs.python.org/issue25911>`__: Restored support of "
"bytes paths in os.walk() on Windows."
msgstr ""
"`bpo-25911 <https://bugs.python.org/issue25911>`__: Restored support of "
"bytes paths in os.walk() on Windows."

#: ../../../Misc/NEWS:3235 ../../../Misc/NEWS:5013
msgid ""
"`bpo-26045 <https://bugs.python.org/issue26045>`__: Add UTF-8 suggestion to "
"error message when posting a non-Latin-1 string with http.client."
msgstr ""
"`bpo-26045 <https://bugs.python.org/issue26045>`__: Add UTF-8 suggestion to "
"error message when posting a non-Latin-1 string with http.client."

#: ../../../Misc/NEWS:3238
msgid ""
"`bpo-26039 <https://bugs.python.org/issue26039>`__: Added zipfile.ZipInfo."
"from_file() and zipinfo.ZipInfo.is_dir(). Patch by Thomas Kluyver."
msgstr ""
"`bpo-26039 <https://bugs.python.org/issue26039>`__: Added zipfile.ZipInfo."
"from_file() and zipinfo.ZipInfo.is_dir(). Patch by Thomas Kluyver."

#: ../../../Misc/NEWS:3241 ../../../Misc/NEWS:5016
msgid ""
"`bpo-12923 <https://bugs.python.org/issue12923>`__: Reset FancyURLopener's "
"redirect counter even if there is an exception.  Based on patches by Brian "
"Brazil and Daniel Rocco."
msgstr ""
"`bpo-12923 <https://bugs.python.org/issue12923>`__: Reset FancyURLopener's "
"redirect counter even if there is an exception.  Based on patches by Brian "
"Brazil and Daniel Rocco."

#: ../../../Misc/NEWS:3244 ../../../Misc/NEWS:5019
msgid ""
"`bpo-25945 <https://bugs.python.org/issue25945>`__: Fixed a crash when "
"unpickle the functools.partial object with wrong state.  Fixed a leak in "
"failed functools.partial constructor. \"args\" and \"keywords\" attributes "
"of functools.partial have now always types tuple and dict correspondingly."
msgstr ""
"`bpo-25945 <https://bugs.python.org/issue25945>`__: Fixed a crash when "
"unpickle the functools.partial object with wrong state.  Fixed a leak in "
"failed functools.partial constructor. \"args\" and \"keywords\" attributes "
"of functools.partial have now always types tuple and dict correspondingly."

#: ../../../Misc/NEWS:3249 ../../../Misc/NEWS:5024
msgid ""
"`bpo-26202 <https://bugs.python.org/issue26202>`__: copy.deepcopy() now "
"correctly copies range() objects with non-atomic attributes."
msgstr ""
"`bpo-26202 <https://bugs.python.org/issue26202>`__: copy.deepcopy() now "
"correctly copies range() objects with non-atomic attributes."

#: ../../../Misc/NEWS:3252 ../../../Misc/NEWS:5027
msgid ""
"`bpo-23076 <https://bugs.python.org/issue23076>`__: Path.glob() now raises a "
"ValueError if it's called with an invalid pattern.  Patch by Thomas Nyberg."
msgstr ""
"`bpo-23076 <https://bugs.python.org/issue23076>`__: Path.glob() now raises a "
"ValueError if it's called with an invalid pattern.  Patch by Thomas Nyberg."

#: ../../../Misc/NEWS:3255 ../../../Misc/NEWS:5030
msgid ""
"`bpo-19883 <https://bugs.python.org/issue19883>`__: Fixed possible integer "
"overflows in zipimport."
msgstr ""
"`bpo-19883 <https://bugs.python.org/issue19883>`__: Fixed possible integer "
"overflows in zipimport."

#: ../../../Misc/NEWS:3257 ../../../Misc/NEWS:5032
msgid ""
"`bpo-26227 <https://bugs.python.org/issue26227>`__: On Windows, "
"getnameinfo(), gethostbyaddr() and gethostbyname_ex() functions of the "
"socket module now decode the hostname from the ANSI code page rather than "
"UTF-8."
msgstr ""
"`bpo-26227 <https://bugs.python.org/issue26227>`__: On Windows, "
"getnameinfo(), gethostbyaddr() and gethostbyname_ex() functions of the "
"socket module now decode the hostname from the ANSI code page rather than "
"UTF-8."

#: ../../../Misc/NEWS:3261
msgid ""
"`bpo-26099 <https://bugs.python.org/issue26099>`__: The site module now "
"writes an error into stderr if sitecustomize module can be imported but "
"executing the module raise an ImportError. Same change for usercustomize."
msgstr ""
"`bpo-26099 <https://bugs.python.org/issue26099>`__: The site module now "
"writes an error into stderr if sitecustomize module can be imported but "
"executing the module raise an ImportError. Same change for usercustomize."

#: ../../../Misc/NEWS:3265 ../../../Misc/NEWS:5036
msgid ""
"`bpo-26147 <https://bugs.python.org/issue26147>`__: xmlrpc now works with "
"strings not encodable with used non-UTF-8 encoding."
msgstr ""
"`bpo-26147 <https://bugs.python.org/issue26147>`__: xmlrpc now works with "
"strings not encodable with used non-UTF-8 encoding."

#: ../../../Misc/NEWS:3268 ../../../Misc/NEWS:5039
msgid ""
"`bpo-25935 <https://bugs.python.org/issue25935>`__: Garbage collector now "
"breaks reference loops with OrderedDict."
msgstr ""
"`bpo-25935 <https://bugs.python.org/issue25935>`__: Garbage collector now "
"breaks reference loops with OrderedDict."

#: ../../../Misc/NEWS:3270 ../../../Misc/NEWS:5041
msgid ""
"`bpo-16620 <https://bugs.python.org/issue16620>`__: Fixed AttributeError in "
"msilib.Directory.glob()."
msgstr ""
"`bpo-16620 <https://bugs.python.org/issue16620>`__: Fixed AttributeError in "
"msilib.Directory.glob()."

#: ../../../Misc/NEWS:3272 ../../../Misc/NEWS:5043
msgid ""
"`bpo-26013 <https://bugs.python.org/issue26013>`__: Added compatibility with "
"broken protocol 2 pickles created in old Python 3 versions (3.4.3 and lower)."
msgstr ""
"`bpo-26013 <https://bugs.python.org/issue26013>`__: Added compatibility with "
"broken protocol 2 pickles created in old Python 3 versions (3.4.3 and lower)."

#: ../../../Misc/NEWS:3275
msgid ""
"`bpo-26129 <https://bugs.python.org/issue26129>`__: Deprecated accepting non-"
"integers in grp.getgrgid()."
msgstr ""
"`bpo-26129 <https://bugs.python.org/issue26129>`__: Deprecated accepting non-"
"integers in grp.getgrgid()."

#: ../../../Misc/NEWS:3277 ../../../Misc/NEWS:5046
msgid ""
"`bpo-25850 <https://bugs.python.org/issue25850>`__: Use cross-compilation by "
"default for 64-bit Windows."
msgstr ""
"`bpo-25850 <https://bugs.python.org/issue25850>`__: Use cross-compilation by "
"default for 64-bit Windows."

#: ../../../Misc/NEWS:3279
msgid ""
"`bpo-25822 <https://bugs.python.org/issue25822>`__: Add docstrings to the "
"fields of urllib.parse results. Patch contributed by Swati Jaiswal."
msgstr ""
"`bpo-25822 <https://bugs.python.org/issue25822>`__: Add docstrings to the "
"fields of urllib.parse results. Patch contributed by Swati Jaiswal."

#: ../../../Misc/NEWS:3282
msgid ""
"`bpo-22642 <https://bugs.python.org/issue22642>`__: Convert trace module "
"option parsing mechanism to argparse. Patch contributed by SilentGhost."
msgstr ""
"`bpo-22642 <https://bugs.python.org/issue22642>`__: Convert trace module "
"option parsing mechanism to argparse. Patch contributed by SilentGhost."

#: ../../../Misc/NEWS:3285 ../../../Misc/NEWS:5050
msgid ""
"`bpo-24705 <https://bugs.python.org/issue24705>`__: Fix sysconfig."
"_parse_makefile not expanding ${} vars appearing before $() vars."
msgstr ""
"`bpo-24705 <https://bugs.python.org/issue24705>`__: Fix sysconfig."
"_parse_makefile not expanding ${} vars appearing before $() vars."

#: ../../../Misc/NEWS:3288
msgid ""
"`bpo-26069 <https://bugs.python.org/issue26069>`__: Remove the deprecated "
"apis in the trace module."
msgstr ""
"`bpo-26069 <https://bugs.python.org/issue26069>`__: Remove the deprecated "
"apis in the trace module."

#: ../../../Misc/NEWS:3290 ../../../Misc/NEWS:5053
msgid ""
"`bpo-22138 <https://bugs.python.org/issue22138>`__: Fix mock.patch behavior "
"when patching descriptors. Restore original values after patching. Patch "
"contributed by Sean McCully."
msgstr ""
"`bpo-22138 <https://bugs.python.org/issue22138>`__: Fix mock.patch behavior "
"when patching descriptors. Restore original values after patching. Patch "
"contributed by Sean McCully."

#: ../../../Misc/NEWS:3293 ../../../Misc/NEWS:5056
msgid ""
"`bpo-25672 <https://bugs.python.org/issue25672>`__: In the ssl module, "
"enable the SSL_MODE_RELEASE_BUFFERS mode option if it is safe to do so."
msgstr ""
"`bpo-25672 <https://bugs.python.org/issue25672>`__: In the ssl module, "
"enable the SSL_MODE_RELEASE_BUFFERS mode option if it is safe to do so."

#: ../../../Misc/NEWS:3296 ../../../Misc/NEWS:5059
msgid ""
"`bpo-26012 <https://bugs.python.org/issue26012>`__: Don't traverse into "
"symlinks for ``**`` pattern in pathlib.Path.[r]glob()."
msgstr ""
"`bpo-26012 <https://bugs.python.org/issue26012>`__: Don't traverse into "
"symlinks for ``**`` pattern in pathlib.Path.[r]glob()."

#: ../../../Misc/NEWS:3299 ../../../Misc/NEWS:5062
msgid ""
"`bpo-24120 <https://bugs.python.org/issue24120>`__: Ignore PermissionError "
"when traversing a tree with pathlib.Path.[r]glob().  Patch by Ulrich Petri."
msgstr ""
"`bpo-24120 <https://bugs.python.org/issue24120>`__: Ignore PermissionError "
"when traversing a tree with pathlib.Path.[r]glob().  Patch by Ulrich Petri."

#: ../../../Misc/NEWS:3302
msgid ""
"`bpo-21815 <https://bugs.python.org/issue21815>`__: Accept ] characters in "
"the data portion of imap responses, in order to handle the flags with square "
"brackets accepted and produced by servers such as gmail."
msgstr ""
"`bpo-21815 <https://bugs.python.org/issue21815>`__: Accept ] characters in "
"the data portion of imap responses, in order to handle the flags with square "
"brackets accepted and produced by servers such as gmail."

#: ../../../Misc/NEWS:3306 ../../../Misc/NEWS:5065
msgid ""
"`bpo-25447 <https://bugs.python.org/issue25447>`__: fileinput now uses sys."
"stdin as-is if it does not have a buffer attribute (restores backward "
"compatibility)."
msgstr ""
"`bpo-25447 <https://bugs.python.org/issue25447>`__: fileinput now uses sys."
"stdin as-is if it does not have a buffer attribute (restores backward "
"compatibility)."

#: ../../../Misc/NEWS:3309
msgid ""
"`bpo-25971 <https://bugs.python.org/issue25971>`__: Optimized creating "
"Fractions from floats by 2 times and from Decimals by 3 times."
msgstr ""
"`bpo-25971 <https://bugs.python.org/issue25971>`__: Optimized creating "
"Fractions from floats by 2 times and from Decimals by 3 times."

#: ../../../Misc/NEWS:3312
msgid ""
"`bpo-25802 <https://bugs.python.org/issue25802>`__: Document as deprecated "
"the remaining implementations of importlib.abc.Loader.load_module()."
msgstr ""
"`bpo-25802 <https://bugs.python.org/issue25802>`__: Document as deprecated "
"the remaining implementations of importlib.abc.Loader.load_module()."

#: ../../../Misc/NEWS:3315
msgid ""
"`bpo-25928 <https://bugs.python.org/issue25928>`__: Add Decimal."
"as_integer_ratio()."
msgstr ""
"`bpo-25928 <https://bugs.python.org/issue25928>`__: Add Decimal."
"as_integer_ratio()."

#: ../../../Misc/NEWS:3317
msgid ""
"`bpo-25447 <https://bugs.python.org/issue25447>`__: Copying the lru_cache() "
"wrapper object now always works, independently from the type of the wrapped "
"object (by returning the original object unchanged)."
msgstr ""
"`bpo-25447 <https://bugs.python.org/issue25447>`__: Copying the lru_cache() "
"wrapper object now always works, independently from the type of the wrapped "
"object (by returning the original object unchanged)."

#: ../../../Misc/NEWS:3321
msgid ""
"`bpo-25768 <https://bugs.python.org/issue25768>`__: Have the functions in "
"compileall return booleans instead of ints and add proper documentation and "
"tests for the return values."
msgstr ""
"`bpo-25768 <https://bugs.python.org/issue25768>`__: Have the functions in "
"compileall return booleans instead of ints and add proper documentation and "
"tests for the return values."

#: ../../../Misc/NEWS:3324 ../../../Misc/NEWS:5072
msgid ""
"`bpo-24103 <https://bugs.python.org/issue24103>`__: Fixed possible use after "
"free in ElementTree.XMLPullParser."
msgstr ""
"`bpo-24103 <https://bugs.python.org/issue24103>`__: Fixed possible use after "
"free in ElementTree.XMLPullParser."

#: ../../../Misc/NEWS:3326 ../../../Misc/NEWS:5074
msgid ""
"`bpo-25860 <https://bugs.python.org/issue25860>`__: os.fwalk() no longer "
"skips remaining directories when error occurs.  Original patch by Samson Lee."
msgstr ""
"`bpo-25860 <https://bugs.python.org/issue25860>`__: os.fwalk() no longer "
"skips remaining directories when error occurs.  Original patch by Samson Lee."

#: ../../../Misc/NEWS:3329 ../../../Misc/NEWS:5077
msgid ""
"`bpo-25914 <https://bugs.python.org/issue25914>`__: Fixed and simplified "
"OrderedDict.__sizeof__."
msgstr ""
"`bpo-25914 <https://bugs.python.org/issue25914>`__: Fixed and simplified "
"OrderedDict.__sizeof__."

#: ../../../Misc/NEWS:3331
msgid ""
"`bpo-25869 <https://bugs.python.org/issue25869>`__: Optimized deepcopying "
"ElementTree; it is now 20 times faster."
msgstr ""
"`bpo-25869 <https://bugs.python.org/issue25869>`__: Optimized deepcopying "
"ElementTree; it is now 20 times faster."

#: ../../../Misc/NEWS:3333
msgid ""
"`bpo-25873 <https://bugs.python.org/issue25873>`__: Optimized iterating "
"ElementTree.  Iterating elements Element.iter() is now 40% faster, iterating "
"text Element.itertext() is now up to 2.5 times faster."
msgstr ""
"`bpo-25873 <https://bugs.python.org/issue25873>`__: Optimized iterating "
"ElementTree.  Iterating elements Element.iter() is now 40% faster, iterating "
"text Element.itertext() is now up to 2.5 times faster."

#: ../../../Misc/NEWS:3337 ../../../Misc/NEWS:5079
msgid ""
"`bpo-25902 <https://bugs.python.org/issue25902>`__: Fixed various refcount "
"issues in ElementTree iteration."
msgstr ""
"`bpo-25902 <https://bugs.python.org/issue25902>`__: Fixed various refcount "
"issues in ElementTree iteration."

#: ../../../Misc/NEWS:3339
msgid ""
"`bpo-22227 <https://bugs.python.org/issue22227>`__: The TarFile iterator is "
"reimplemented using generator. This implementation is simpler that using "
"class."
msgstr ""
"`bpo-22227 <https://bugs.python.org/issue22227>`__: The TarFile iterator is "
"reimplemented using generator. This implementation is simpler that using "
"class."

#: ../../../Misc/NEWS:3342
msgid ""
"`bpo-25638 <https://bugs.python.org/issue25638>`__: Optimized ElementTree."
"iterparse(); it is now 2x faster. Optimized ElementTree parsing; it is now "
"10% faster."
msgstr ""
"`bpo-25638 <https://bugs.python.org/issue25638>`__: Optimized ElementTree."
"iterparse(); it is now 2x faster. Optimized ElementTree parsing; it is now "
"10% faster."

#: ../../../Misc/NEWS:3345
msgid ""
"`bpo-25761 <https://bugs.python.org/issue25761>`__: Improved detecting "
"errors in broken pickle data."
msgstr ""
"`bpo-25761 <https://bugs.python.org/issue25761>`__: Improved detecting "
"errors in broken pickle data."

#: ../../../Misc/NEWS:3347 ../../../Misc/NEWS:5081
msgid ""
"`bpo-25717 <https://bugs.python.org/issue25717>`__: Restore the previous "
"behaviour of tolerating most fstat() errors when opening files.  This was a "
"regression in 3.5a1, and stopped anonymous temporary files from working in "
"special cases."
msgstr ""
"`bpo-25717 <https://bugs.python.org/issue25717>`__: Restore the previous "
"behaviour of tolerating most fstat() errors when opening files.  This was a "
"regression in 3.5a1, and stopped anonymous temporary files from working in "
"special cases."

#: ../../../Misc/NEWS:3351 ../../../Misc/NEWS:5085
msgid ""
"`bpo-24903 <https://bugs.python.org/issue24903>`__: Fix regression in number "
"of arguments compileall accepts when '-d' is specified.  The check on the "
"number of arguments has been dropped completely as it never worked correctly "
"anyway."
msgstr ""
"`bpo-24903 <https://bugs.python.org/issue24903>`__: Fix regression in number "
"of arguments compileall accepts when '-d' is specified.  The check on the "
"number of arguments has been dropped completely as it never worked correctly "
"anyway."

#: ../../../Misc/NEWS:3355 ../../../Misc/NEWS:5089
msgid ""
"`bpo-25764 <https://bugs.python.org/issue25764>`__: In the subprocess "
"module, preserve any exception caused by fork() failure when preexec_fn is "
"used."
msgstr ""
"`bpo-25764 <https://bugs.python.org/issue25764>`__: In the subprocess "
"module, preserve any exception caused by fork() failure when preexec_fn is "
"used."

#: ../../../Misc/NEWS:3358
msgid ""
"`bpo-25771 <https://bugs.python.org/issue25771>`__: Tweak the exception "
"message for importlib.util.resolve_name() when 'package' isn't specified but "
"necessary."
msgstr ""
"`bpo-25771 <https://bugs.python.org/issue25771>`__: Tweak the exception "
"message for importlib.util.resolve_name() when 'package' isn't specified but "
"necessary."

#: ../../../Misc/NEWS:3361 ../../../Misc/NEWS:5092
msgid ""
"`bpo-6478 <https://bugs.python.org/issue6478>`__: _strptime's regexp cache "
"now is reset after changing timezone with time.tzset()."
msgstr ""
"`bpo-6478 <https://bugs.python.org/issue6478>`__: _strptime's regexp cache "
"now is reset after changing timezone with time.tzset()."

#: ../../../Misc/NEWS:3364 ../../../Misc/NEWS:5095
msgid ""
"`bpo-14285 <https://bugs.python.org/issue14285>`__: When executing a package "
"with the \"python -m package\" option, and package initialization fails, a "
"proper traceback is now reported.  The \"runpy\" module now lets exceptions "
"from package initialization pass back to the caller, rather than raising "
"ImportError."
msgstr ""
"`bpo-14285 <https://bugs.python.org/issue14285>`__: When executing a package "
"with the \"python -m package\" option, and package initialization fails, a "
"proper traceback is now reported.  The \"runpy\" module now lets exceptions "
"from package initialization pass back to the caller, rather than raising "
"ImportError."

#: ../../../Misc/NEWS:3369 ../../../Misc/NEWS:5100
msgid ""
"`bpo-19771 <https://bugs.python.org/issue19771>`__: Also in runpy and the \"-"
"m\" option, omit the irrelevant message \". . . is a package and cannot be "
"directly executed\" if the package could not even be initialized (e.g. due "
"to a bad ``*.pyc`` file)."
msgstr ""
"`bpo-19771 <https://bugs.python.org/issue19771>`__: Also in runpy and the \"-"
"m\" option, omit the irrelevant message \". . . is a package and cannot be "
"directly executed\" if the package could not even be initialized (e.g. due "
"to a bad ``*.pyc`` file)."

#: ../../../Misc/NEWS:3373 ../../../Misc/NEWS:5104
msgid ""
"`bpo-25177 <https://bugs.python.org/issue25177>`__: Fixed problem with the "
"mean of very small and very large numbers. As a side effect, statistics.mean "
"and statistics.variance should be significantly faster."
msgstr ""
"`bpo-25177 <https://bugs.python.org/issue25177>`__: Fixed problem with the "
"mean of very small and very large numbers. As a side effect, statistics.mean "
"and statistics.variance should be significantly faster."

#: ../../../Misc/NEWS:3377 ../../../Misc/NEWS:5108
msgid ""
"`bpo-25718 <https://bugs.python.org/issue25718>`__: Fixed copying object "
"with state with boolean value is false."
msgstr ""
"`bpo-25718 <https://bugs.python.org/issue25718>`__: Fixed copying object "
"with state with boolean value is false."

#: ../../../Misc/NEWS:3379 ../../../Misc/NEWS:5110
msgid ""
"`bpo-10131 <https://bugs.python.org/issue10131>`__: Fixed deep copying of "
"minidom documents.  Based on patch by Marian Ganisin."
msgstr ""
"`bpo-10131 <https://bugs.python.org/issue10131>`__: Fixed deep copying of "
"minidom documents.  Based on patch by Marian Ganisin."

#: ../../../Misc/NEWS:3382
msgid ""
"`bpo-7990 <https://bugs.python.org/issue7990>`__: dir() on ElementTree."
"Element now lists properties: \"tag\", \"text\", \"tail\" and \"attrib\".  "
"Original patch by Santoso Wijaya."
msgstr ""
"`bpo-7990 <https://bugs.python.org/issue7990>`__: dir() on ElementTree."
"Element now lists properties: \"tag\", \"text\", \"tail\" and \"attrib\".  "
"Original patch by Santoso Wijaya."

#: ../../../Misc/NEWS:3385 ../../../Misc/NEWS:5113
msgid ""
"`bpo-25725 <https://bugs.python.org/issue25725>`__: Fixed a reference leak "
"in pickle.loads() when unpickling invalid data including tuple instructions."
msgstr ""
"`bpo-25725 <https://bugs.python.org/issue25725>`__: Fixed a reference leak "
"in pickle.loads() when unpickling invalid data including tuple instructions."

#: ../../../Misc/NEWS:3388 ../../../Misc/NEWS:5116
msgid ""
"`bpo-25663 <https://bugs.python.org/issue25663>`__: In the Readline "
"completer, avoid listing duplicate global names, and search the global "
"namespace before searching builtins."
msgstr ""
"`bpo-25663 <https://bugs.python.org/issue25663>`__: In the Readline "
"completer, avoid listing duplicate global names, and search the global "
"namespace before searching builtins."

#: ../../../Misc/NEWS:3391 ../../../Misc/NEWS:5119
msgid ""
"`bpo-25688 <https://bugs.python.org/issue25688>`__: Fixed file leak in "
"ElementTree.iterparse() raising an error."
msgstr ""
"`bpo-25688 <https://bugs.python.org/issue25688>`__: Fixed file leak in "
"ElementTree.iterparse() raising an error."

#: ../../../Misc/NEWS:3393 ../../../Misc/NEWS:5121
msgid ""
"`bpo-23914 <https://bugs.python.org/issue23914>`__: Fixed SystemError raised "
"by unpickler on broken pickle data."
msgstr ""
"`bpo-23914 <https://bugs.python.org/issue23914>`__: Fixed SystemError raised "
"by unpickler on broken pickle data."

#: ../../../Misc/NEWS:3395 ../../../Misc/NEWS:5123
msgid ""
"`bpo-25691 <https://bugs.python.org/issue25691>`__: Fixed crash on deleting "
"ElementTree.Element attributes."
msgstr ""
"`bpo-25691 <https://bugs.python.org/issue25691>`__: Fixed crash on deleting "
"ElementTree.Element attributes."

#: ../../../Misc/NEWS:3397 ../../../Misc/NEWS:5125
msgid ""
"`bpo-25624 <https://bugs.python.org/issue25624>`__: ZipFile now always "
"writes a ZIP_STORED header for directory entries.  Patch by Dingyuan Wang."
msgstr ""
"`bpo-25624 <https://bugs.python.org/issue25624>`__: ZipFile now always "
"writes a ZIP_STORED header for directory entries.  Patch by Dingyuan Wang."

#: ../../../Misc/NEWS:3400 ../../../Misc/NEWS:5444
msgid ""
"`bpo-25626 <https://bugs.python.org/issue25626>`__: Change three zlib "
"functions to accept sizes that fit in Py_ssize_t, but internally cap those "
"sizes to UINT_MAX.  This resolves a regression in 3.5 where GzipFile.read() "
"failed to read chunks larger than 2 or 4 GiB.  The change affects the zlib."
"Decompress.decompress() max_length parameter, the zlib.decompress() bufsize "
"parameter, and the zlib.Decompress.flush() length parameter."
msgstr ""
"`bpo-25626 <https://bugs.python.org/issue25626>`__: Change three zlib "
"functions to accept sizes that fit in Py_ssize_t, but internally cap those "
"sizes to UINT_MAX.  This resolves a regression in 3.5 where GzipFile.read() "
"failed to read chunks larger than 2 or 4 GiB.  The change affects the zlib."
"Decompress.decompress() max_length parameter, the zlib.decompress() bufsize "
"parameter, and the zlib.Decompress.flush() length parameter."

#: ../../../Misc/NEWS:3407 ../../../Misc/NEWS:5451
msgid ""
"`bpo-25583 <https://bugs.python.org/issue25583>`__: Avoid incorrect errors "
"raised by os.makedirs(exist_ok=True) when the OS gives priority to errors "
"such as EACCES over EEXIST."
msgstr ""
"`bpo-25583 <https://bugs.python.org/issue25583>`__: Avoid incorrect errors "
"raised by os.makedirs(exist_ok=True) when the OS gives priority to errors "
"such as EACCES over EEXIST."

#: ../../../Misc/NEWS:3410 ../../../Misc/NEWS:5454
msgid ""
"`bpo-25593 <https://bugs.python.org/issue25593>`__: Change semantics of "
"EventLoop.stop() in asyncio."
msgstr ""
"`bpo-25593 <https://bugs.python.org/issue25593>`__: Change semantics of "
"EventLoop.stop() in asyncio."

#: ../../../Misc/NEWS:3412 ../../../Misc/NEWS:5456
msgid ""
"`bpo-6973 <https://bugs.python.org/issue6973>`__: When we know a subprocess."
"Popen process has died, do not allow the send_signal(), terminate(), or "
"kill() methods to do anything as they could potentially signal a different "
"process."
msgstr ""
"`bpo-6973 <https://bugs.python.org/issue6973>`__: When we know a subprocess."
"Popen process has died, do not allow the send_signal(), terminate(), or "
"kill() methods to do anything as they could potentially signal a different "
"process."

#: ../../../Misc/NEWS:3416
msgid ""
"`bpo-23883 <https://bugs.python.org/issue23883>`__: Added missing APIs to "
"__all__ to match the documented APIs for the following modules: calendar, "
"csv, enum, fileinput, ftplib, logging, optparse, tarfile, threading and "
"wave.  Also added a test.support.check__all__() helper.  Patches by Jacek "
"Ko≈Çodziej, Mauro S. M. Rodrigues and Joel Taddei."
msgstr ""
"`bpo-23883 <https://bugs.python.org/issue23883>`__: Added missing APIs to "
"__all__ to match the documented APIs for the following modules: calendar, "
"csv, enum, fileinput, ftplib, logging, optparse, tarfile, threading and "
"wave.  Also added a test.support.check__all__() helper.  Patches by Jacek "
"Ko≈Çodziej, Mauro S. M. Rodrigues and Joel Taddei."

#: ../../../Misc/NEWS:3422
msgid ""
"`bpo-25590 <https://bugs.python.org/issue25590>`__: In the Readline "
"completer, only call getattr() once per attribute.  Also complete names of "
"attributes such as properties and slots which are listed by dir() but not "
"yet created on an instance."
msgstr ""
"`bpo-25590 <https://bugs.python.org/issue25590>`__: In the Readline "
"completer, only call getattr() once per attribute.  Also complete names of "
"attributes such as properties and slots which are listed by dir() but not "
"yet created on an instance."

#: ../../../Misc/NEWS:3426 ../../../Misc/NEWS:5463
msgid ""
"`bpo-25498 <https://bugs.python.org/issue25498>`__: Fix a crash when garbage-"
"collecting ctypes objects created by wrapping a memoryview.  This was a "
"regression made in 3.5a1.  Based on patch by Eryksun."
msgstr ""
"`bpo-25498 <https://bugs.python.org/issue25498>`__: Fix a crash when garbage-"
"collecting ctypes objects created by wrapping a memoryview.  This was a "
"regression made in 3.5a1.  Based on patch by Eryksun."

#: ../../../Misc/NEWS:3430 ../../../Misc/NEWS:5467
msgid ""
"`bpo-25584 <https://bugs.python.org/issue25584>`__: Added \"escape\" to the "
"__all__ list in the glob module."
msgstr ""
"`bpo-25584 <https://bugs.python.org/issue25584>`__: Added \"escape\" to the "
"__all__ list in the glob module."

#: ../../../Misc/NEWS:3432 ../../../Misc/NEWS:5469
msgid ""
"`bpo-25584 <https://bugs.python.org/issue25584>`__: Fixed recursive glob() "
"with patterns starting with ``**``."
msgstr ""
"`bpo-25584 <https://bugs.python.org/issue25584>`__: Fixed recursive glob() "
"with patterns starting with ``**``."

#: ../../../Misc/NEWS:3434 ../../../Misc/NEWS:5471
msgid ""
"`bpo-25446 <https://bugs.python.org/issue25446>`__: Fix regression in "
"smtplib's AUTH LOGIN support."
msgstr ""
"`bpo-25446 <https://bugs.python.org/issue25446>`__: Fix regression in "
"smtplib's AUTH LOGIN support."

#: ../../../Misc/NEWS:3436 ../../../Misc/NEWS:5473
msgid ""
"`bpo-18010 <https://bugs.python.org/issue18010>`__: Fix the pydoc web "
"server's module search function to handle exceptions from importing packages."
msgstr ""
"`bpo-18010 <https://bugs.python.org/issue18010>`__: Fix the pydoc web "
"server's module search function to handle exceptions from importing packages."

#: ../../../Misc/NEWS:3439 ../../../Misc/NEWS:5476
msgid ""
"`bpo-25554 <https://bugs.python.org/issue25554>`__: Got rid of circular "
"references in regular expression parsing."
msgstr ""
"`bpo-25554 <https://bugs.python.org/issue25554>`__: Got rid of circular "
"references in regular expression parsing."

#: ../../../Misc/NEWS:3441
msgid ""
"`bpo-18973 <https://bugs.python.org/issue18973>`__: Command-line interface "
"of the calendar module now uses argparse instead of optparse."
msgstr ""
"`bpo-18973 <https://bugs.python.org/issue18973>`__: Command-line interface "
"of the calendar module now uses argparse instead of optparse."

#: ../../../Misc/NEWS:3444 ../../../Misc/NEWS:5478
msgid ""
"`bpo-25510 <https://bugs.python.org/issue25510>`__: fileinput.FileInput."
"readline() now returns b'' instead of '' at the end if the FileInput was "
"opened with binary mode. Patch by Ryosuke Ito."
msgstr ""
"`bpo-25510 <https://bugs.python.org/issue25510>`__: fileinput.FileInput."
"readline() now returns b'' instead of '' at the end if the FileInput was "
"opened with binary mode. Patch by Ryosuke Ito."

#: ../../../Misc/NEWS:3448 ../../../Misc/NEWS:5482
msgid ""
"`bpo-25503 <https://bugs.python.org/issue25503>`__: Fixed inspect.getdoc() "
"for inherited docstrings of properties. Original patch by John Mark "
"Vandenberg."
msgstr ""
"`bpo-25503 <https://bugs.python.org/issue25503>`__: Fixed inspect.getdoc() "
"for inherited docstrings of properties. Original patch by John Mark "
"Vandenberg."

#: ../../../Misc/NEWS:3451 ../../../Misc/NEWS:5485
msgid ""
"`bpo-25515 <https://bugs.python.org/issue25515>`__: Always use os.urandom as "
"a source of randomness in uuid.uuid4."
msgstr ""
"`bpo-25515 <https://bugs.python.org/issue25515>`__: Always use os.urandom as "
"a source of randomness in uuid.uuid4."

#: ../../../Misc/NEWS:3453 ../../../Misc/NEWS:5487
msgid ""
"`bpo-21827 <https://bugs.python.org/issue21827>`__: Fixed textwrap.dedent() "
"for the case when largest common whitespace is a substring of smallest "
"leading whitespace. Based on patch by Robert Li."
msgstr ""
"`bpo-21827 <https://bugs.python.org/issue21827>`__: Fixed textwrap.dedent() "
"for the case when largest common whitespace is a substring of smallest "
"leading whitespace. Based on patch by Robert Li."

#: ../../../Misc/NEWS:3457 ../../../Misc/NEWS:5491
msgid ""
"`bpo-25447 <https://bugs.python.org/issue25447>`__: The lru_cache() wrapper "
"objects now can be copied and pickled (by returning the original object "
"unchanged)."
msgstr ""
"`bpo-25447 <https://bugs.python.org/issue25447>`__: The lru_cache() wrapper "
"objects now can be copied and pickled (by returning the original object "
"unchanged)."

#: ../../../Misc/NEWS:3460 ../../../Misc/NEWS:5494
msgid ""
"`bpo-25390 <https://bugs.python.org/issue25390>`__: typing: Don't crash on "
"Union[str, Pattern]."
msgstr ""
"`bpo-25390 <https://bugs.python.org/issue25390>`__: typing: Don't crash on "
"Union[str, Pattern]."

#: ../../../Misc/NEWS:3462 ../../../Misc/NEWS:5496
msgid ""
"`bpo-25441 <https://bugs.python.org/issue25441>`__: asyncio: Raise error "
"from drain() when socket is closed."
msgstr ""
"`bpo-25441 <https://bugs.python.org/issue25441>`__: asyncio: Raise error "
"from drain() when socket is closed."

#: ../../../Misc/NEWS:3464 ../../../Misc/NEWS:5498
msgid ""
"`bpo-25410 <https://bugs.python.org/issue25410>`__: Cleaned up and fixed "
"minor bugs in C implementation of OrderedDict."
msgstr ""
"`bpo-25410 <https://bugs.python.org/issue25410>`__: Cleaned up and fixed "
"minor bugs in C implementation of OrderedDict."

#: ../../../Misc/NEWS:3467 ../../../Misc/NEWS:5501
msgid ""
"`bpo-25411 <https://bugs.python.org/issue25411>`__: Improved Unicode support "
"in SMTPHandler through better use of the email package. Thanks to user "
"simon04 for the patch."
msgstr ""
"`bpo-25411 <https://bugs.python.org/issue25411>`__: Improved Unicode support "
"in SMTPHandler through better use of the email package. Thanks to user "
"simon04 for the patch."

#: ../../../Misc/NEWS:3470
msgid ""
"Move the imp module from a PendingDeprecationWarning to DeprecationWarning."
msgstr ""

#: ../../../Misc/NEWS:3472 ../../../Misc/NEWS:5504
msgid ""
"`bpo-25407 <https://bugs.python.org/issue25407>`__: Remove mentions of the "
"formatter module being removed in Python 3.6."
msgstr ""
"`bpo-25407 <https://bugs.python.org/issue25407>`__: Remove mentions of the "
"formatter module being removed in Python 3.6."

#: ../../../Misc/NEWS:3475 ../../../Misc/NEWS:5507
msgid ""
"`bpo-25406 <https://bugs.python.org/issue25406>`__: Fixed a bug in C "
"implementation of OrderedDict.move_to_end() that caused segmentation fault "
"or hang in iterating after moving several items to the start of ordered dict."
msgstr ""
"`bpo-25406 <https://bugs.python.org/issue25406>`__: Fixed a bug in C "
"implementation of OrderedDict.move_to_end() that caused segmentation fault "
"or hang in iterating after moving several items to the start of ordered dict."

#: ../../../Misc/NEWS:3479
msgid ""
"`bpo-25382 <https://bugs.python.org/issue25382>`__: pickletools.dis() now "
"outputs implicit memo index for the MEMOIZE opcode."
msgstr ""
"`bpo-25382 <https://bugs.python.org/issue25382>`__: pickletools.dis() now "
"outputs implicit memo index for the MEMOIZE opcode."

#: ../../../Misc/NEWS:3482
msgid ""
"`bpo-25357 <https://bugs.python.org/issue25357>`__: Add an optional newline "
"paramer to binascii.b2a_base64(). base64.b64encode() uses it to avoid a "
"memory copy."
msgstr ""
"`bpo-25357 <https://bugs.python.org/issue25357>`__: Add an optional newline "
"paramer to binascii.b2a_base64(). base64.b64encode() uses it to avoid a "
"memory copy."

#: ../../../Misc/NEWS:3485
msgid ""
"`bpo-24164 <https://bugs.python.org/issue24164>`__: Objects that need "
"calling ``__new__`` with keyword arguments, can now be pickled using pickle "
"protocols older than protocol version 4."
msgstr ""
"`bpo-24164 <https://bugs.python.org/issue24164>`__: Objects that need "
"calling ``__new__`` with keyword arguments, can now be pickled using pickle "
"protocols older than protocol version 4."

#: ../../../Misc/NEWS:3488 ../../../Misc/NEWS:5511
msgid ""
"`bpo-25364 <https://bugs.python.org/issue25364>`__: zipfile now works in "
"threads disabled builds."
msgstr ""
"`bpo-25364 <https://bugs.python.org/issue25364>`__: zipfile now works in "
"threads disabled builds."

#: ../../../Misc/NEWS:3490 ../../../Misc/NEWS:5513
msgid ""
"`bpo-25328 <https://bugs.python.org/issue25328>`__: smtpd's SMTPChannel now "
"correctly raises a ValueError if both decode_data and enable_SMTPUTF8 are "
"set to true."
msgstr ""
"`bpo-25328 <https://bugs.python.org/issue25328>`__: smtpd's SMTPChannel now "
"correctly raises a ValueError if both decode_data and enable_SMTPUTF8 are "
"set to true."

#: ../../../Misc/NEWS:3493
msgid ""
"`bpo-16099 <https://bugs.python.org/issue16099>`__: RobotFileParser now "
"supports Crawl-delay and Request-rate extensions.  Patch by Nikolay "
"Bogoychev."
msgstr ""
"`bpo-16099 <https://bugs.python.org/issue16099>`__: RobotFileParser now "
"supports Crawl-delay and Request-rate extensions.  Patch by Nikolay "
"Bogoychev."

#: ../../../Misc/NEWS:3496 ../../../Misc/NEWS:5516
msgid ""
"`bpo-25316 <https://bugs.python.org/issue25316>`__: distutils raises OSError "
"instead of DistutilsPlatformError when MSVC is not installed."
msgstr ""
"`bpo-25316 <https://bugs.python.org/issue25316>`__: distutils raises OSError "
"instead of DistutilsPlatformError when MSVC is not installed."

#: ../../../Misc/NEWS:3499 ../../../Misc/NEWS:5519
msgid ""
"`bpo-25380 <https://bugs.python.org/issue25380>`__: Fixed protocol for the "
"STACK_GLOBAL opcode in pickletools.opcodes."
msgstr ""
"`bpo-25380 <https://bugs.python.org/issue25380>`__: Fixed protocol for the "
"STACK_GLOBAL opcode in pickletools.opcodes."

#: ../../../Misc/NEWS:3502 ../../../Misc/NEWS:5522
msgid ""
"`bpo-23972 <https://bugs.python.org/issue23972>`__: Updates asyncio datagram "
"create method allowing reuseport and reuseaddr socket options to be set "
"prior to binding the socket. Mirroring the existing asyncio create_server "
"method the reuseaddr option for datagram sockets defaults to True if the O/S "
"is 'posix' (except if the platform is Cygwin). Patch by Chris Laws."
msgstr ""
"`bpo-23972 <https://bugs.python.org/issue23972>`__: Updates asyncio datagram "
"create method allowing reuseport and reuseaddr socket options to be set "
"prior to binding the socket. Mirroring the existing asyncio create_server "
"method the reuseaddr option for datagram sockets defaults to True if the O/S "
"is 'posix' (except if the platform is Cygwin). Patch by Chris Laws."

#: ../../../Misc/NEWS:3508 ../../../Misc/NEWS:5528
msgid ""
"`bpo-25304 <https://bugs.python.org/issue25304>`__: Add asyncio."
"run_coroutine_threadsafe().  This lets you submit a coroutine to a loop from "
"another thread, returning a concurrent.futures.Future.  By Vincent Michel."
msgstr ""
"`bpo-25304 <https://bugs.python.org/issue25304>`__: Add asyncio."
"run_coroutine_threadsafe().  This lets you submit a coroutine to a loop from "
"another thread, returning a concurrent.futures.Future.  By Vincent Michel."

#: ../../../Misc/NEWS:3512 ../../../Misc/NEWS:5532
msgid ""
"`bpo-25232 <https://bugs.python.org/issue25232>`__: Fix CGIRequestHandler to "
"split the query from the URL at the first question mark (?) rather than the "
"last. Patch from Xiang Zhang."
msgstr ""
"`bpo-25232 <https://bugs.python.org/issue25232>`__: Fix CGIRequestHandler to "
"split the query from the URL at the first question mark (?) rather than the "
"last. Patch from Xiang Zhang."

#: ../../../Misc/NEWS:3515 ../../../Misc/NEWS:5535
msgid ""
"`bpo-24657 <https://bugs.python.org/issue24657>`__: Prevent "
"CGIRequestHandler from collapsing slashes in the query part of the URL as if "
"it were a path. Patch from Xiang Zhang."
msgstr ""
"`bpo-24657 <https://bugs.python.org/issue24657>`__: Prevent "
"CGIRequestHandler from collapsing slashes in the query part of the URL as if "
"it were a path. Patch from Xiang Zhang."

#: ../../../Misc/NEWS:3518
msgid ""
"`bpo-25287 <https://bugs.python.org/issue25287>`__: Don't add crypt."
"METHOD_CRYPT to crypt.methods if it's not supported. Check if it is "
"supported, it may not be supported on OpenBSD for example."
msgstr ""
"`bpo-25287 <https://bugs.python.org/issue25287>`__: Don't add crypt."
"METHOD_CRYPT to crypt.methods if it's not supported. Check if it is "
"supported, it may not be supported on OpenBSD for example."

#: ../../../Misc/NEWS:3522 ../../../Misc/NEWS:5562
msgid ""
"`bpo-23600 <https://bugs.python.org/issue23600>`__: Default implementation "
"of tzinfo.fromutc() was returning wrong results in some cases."
msgstr ""
"`bpo-23600 <https://bugs.python.org/issue23600>`__: Default implementation "
"of tzinfo.fromutc() was returning wrong results in some cases."

#: ../../../Misc/NEWS:3525 ../../../Misc/NEWS:5559
msgid ""
"`bpo-25203 <https://bugs.python.org/issue25203>`__: Failed readline."
"set_completer_delims() no longer left the module in inconsistent state."
msgstr ""
"`bpo-25203 <https://bugs.python.org/issue25203>`__: Failed readline."
"set_completer_delims() no longer left the module in inconsistent state."

#: ../../../Misc/NEWS:3528
msgid ""
"`bpo-25011 <https://bugs.python.org/issue25011>`__: rlcompleter now omits "
"private and special attribute names unless the prefix starts with "
"underscores."
msgstr ""
"`bpo-25011 <https://bugs.python.org/issue25011>`__: rlcompleter now omits "
"private and special attribute names unless the prefix starts with "
"underscores."

#: ../../../Misc/NEWS:3531
msgid ""
"`bpo-25209 <https://bugs.python.org/issue25209>`__: rlcompleter now can add "
"a space or a colon after completed keyword."
msgstr ""
"`bpo-25209 <https://bugs.python.org/issue25209>`__: rlcompleter now can add "
"a space or a colon after completed keyword."

#: ../../../Misc/NEWS:3534
msgid ""
"`bpo-22241 <https://bugs.python.org/issue22241>`__: timezone.utc name is now "
"plain 'UTC', not 'UTC-00:00'."
msgstr ""
"`bpo-22241 <https://bugs.python.org/issue22241>`__: timezone.utc name is now "
"plain 'UTC', not 'UTC-00:00'."

#: ../../../Misc/NEWS:3536
msgid ""
"`bpo-23517 <https://bugs.python.org/issue23517>`__: fromtimestamp() and "
"utcfromtimestamp() methods of datetime.datetime now round microseconds to "
"nearest with ties going to nearest even integer (ROUND_HALF_EVEN), as "
"round(float), instead of rounding towards -Infinity (ROUND_FLOOR)."
msgstr ""
"`bpo-23517 <https://bugs.python.org/issue23517>`__: fromtimestamp() and "
"utcfromtimestamp() methods of datetime.datetime now round microseconds to "
"nearest with ties going to nearest even integer (ROUND_HALF_EVEN), as "
"round(float), instead of rounding towards -Infinity (ROUND_FLOOR)."

#: ../../../Misc/NEWS:3541
msgid ""
"`bpo-23552 <https://bugs.python.org/issue23552>`__: Timeit now warns when "
"there is substantial (4x) variance between best and worst times. Patch from "
"Serhiy Storchaka."
msgstr ""
"`bpo-23552 <https://bugs.python.org/issue23552>`__: Timeit now warns when "
"there is substantial (4x) variance between best and worst times. Patch from "
"Serhiy Storchaka."

#: ../../../Misc/NEWS:3544
msgid ""
"`bpo-24633 <https://bugs.python.org/issue24633>`__: site-packages/README -> "
"README.txt."
msgstr ""
"`bpo-24633 <https://bugs.python.org/issue24633>`__: site-packages/README -> "
"README.txt."

#: ../../../Misc/NEWS:3546
msgid ""
"`bpo-24879 <https://bugs.python.org/issue24879>`__: help() and pydoc can now "
"list named tuple fields in the order they were defined rather than "
"alphabetically.  The ordering is determined by the _fields attribute if "
"present."
msgstr ""
"`bpo-24879 <https://bugs.python.org/issue24879>`__: help() and pydoc can now "
"list named tuple fields in the order they were defined rather than "
"alphabetically.  The ordering is determined by the _fields attribute if "
"present."

#: ../../../Misc/NEWS:3550
msgid ""
"`bpo-24874 <https://bugs.python.org/issue24874>`__: Improve speed of "
"itertools.cycle() and make its pickle more compact."
msgstr ""
"`bpo-24874 <https://bugs.python.org/issue24874>`__: Improve speed of "
"itertools.cycle() and make its pickle more compact."

#: ../../../Misc/NEWS:3553
msgid ""
"Fix crash in itertools.cycle.__setstate__() when the first argument wasn't a "
"list."
msgstr ""

#: ../../../Misc/NEWS:3556
msgid ""
"`bpo-20059 <https://bugs.python.org/issue20059>`__: urllib.parse raises "
"ValueError on all invalid ports. Patch by Martin Panter."
msgstr ""
"`bpo-20059 <https://bugs.python.org/issue20059>`__: urllib.parse raises "
"ValueError on all invalid ports. Patch by Martin Panter."

#: ../../../Misc/NEWS:3559
msgid ""
"`bpo-24360 <https://bugs.python.org/issue24360>`__: Improve __repr__ of "
"argparse.Namespace() for invalid identifiers.  Patch by Matthias Bussonnier."
msgstr ""
"`bpo-24360 <https://bugs.python.org/issue24360>`__: Improve __repr__ of "
"argparse.Namespace() for invalid identifiers.  Patch by Matthias Bussonnier."

#: ../../../Misc/NEWS:3562
msgid ""
"`bpo-23426 <https://bugs.python.org/issue23426>`__: run_setup was broken in "
"distutils. Patch from Alexander Belopolsky."
msgstr ""
"`bpo-23426 <https://bugs.python.org/issue23426>`__: run_setup was broken in "
"distutils. Patch from Alexander Belopolsky."

#: ../../../Misc/NEWS:3565
msgid ""
"`bpo-13938 <https://bugs.python.org/issue13938>`__: 2to3 converts "
"StringTypes to a tuple. Patch from Mark Hammond."
msgstr ""
"`bpo-13938 <https://bugs.python.org/issue13938>`__: 2to3 converts "
"StringTypes to a tuple. Patch from Mark Hammond."

#: ../../../Misc/NEWS:3567
msgid ""
"`bpo-2091 <https://bugs.python.org/issue2091>`__: open() accepted a 'U' mode "
"string containing '+', but 'U' can only be used with 'r'. Patch from Jeff "
"Balogh and John O'Connor."
msgstr ""
"`bpo-2091 <https://bugs.python.org/issue2091>`__: open() accepted a 'U' mode "
"string containing '+', but 'U' can only be used with 'r'. Patch from Jeff "
"Balogh and John O'Connor."

#: ../../../Misc/NEWS:3570
msgid ""
"`bpo-8585 <https://bugs.python.org/issue8585>`__: improved tests for "
"zipimporter2. Patch from Mark Lawrence."
msgstr ""
"`bpo-8585 <https://bugs.python.org/issue8585>`__: improved tests for "
"zipimporter2. Patch from Mark Lawrence."

#: ../../../Misc/NEWS:3572 ../../../Misc/NEWS:6103
msgid ""
"`bpo-18622 <https://bugs.python.org/issue18622>`__: unittest.mock."
"mock_open().reset_mock would recurse infinitely. Patch from Nicola Palumbo "
"and Laurent De Buyst."
msgstr ""
"`bpo-18622 <https://bugs.python.org/issue18622>`__: unittest.mock."
"mock_open().reset_mock would recurse infinitely. Patch from Nicola Palumbo "
"and Laurent De Buyst."

#: ../../../Misc/NEWS:3575
msgid ""
"`bpo-24426 <https://bugs.python.org/issue24426>`__: Fast searching "
"optimization in regular expressions now works for patterns that starts with "
"capturing groups.  Fast searching optimization now can't be disabled at "
"compile time."
msgstr ""
"`bpo-24426 <https://bugs.python.org/issue24426>`__: Fast searching "
"optimization in regular expressions now works for patterns that starts with "
"capturing groups.  Fast searching optimization now can't be disabled at "
"compile time."

#: ../../../Misc/NEWS:3579 ../../../Misc/NEWS:6106
msgid ""
"`bpo-23661 <https://bugs.python.org/issue23661>`__: unittest.mock "
"side_effects can now be exceptions again. This was a regression vs Python "
"3.4. Patch from Ignacio Rossi"
msgstr ""
"`bpo-23661 <https://bugs.python.org/issue23661>`__: unittest.mock "
"side_effects can now be exceptions again. This was a regression vs Python "
"3.4. Patch from Ignacio Rossi"

#: ../../../Misc/NEWS:3582
msgid ""
"`bpo-13248 <https://bugs.python.org/issue13248>`__: Remove deprecated "
"inspect.getmoduleinfo function."
msgstr ""
"`bpo-13248 <https://bugs.python.org/issue13248>`__: Remove deprecated "
"inspect.getmoduleinfo function."

#: ../../../Misc/NEWS:3584 ../../../Misc/NEWS:5635
msgid ""
"`bpo-25578 <https://bugs.python.org/issue25578>`__: Fix (another) memory "
"leak in SSLSocket.getpeercer()."
msgstr ""
"`bpo-25578 <https://bugs.python.org/issue25578>`__: Fix (another) memory "
"leak in SSLSocket.getpeercer()."

#: ../../../Misc/NEWS:3586 ../../../Misc/NEWS:5637
msgid ""
"`bpo-25530 <https://bugs.python.org/issue25530>`__: Disable the vulnerable "
"SSLv3 protocol by default when creating ssl.SSLContext."
msgstr ""
"`bpo-25530 <https://bugs.python.org/issue25530>`__: Disable the vulnerable "
"SSLv3 protocol by default when creating ssl.SSLContext."

#: ../../../Misc/NEWS:3589 ../../../Misc/NEWS:5640
msgid ""
"`bpo-25569 <https://bugs.python.org/issue25569>`__: Fix memory leak in "
"SSLSocket.getpeercert()."
msgstr ""
"`bpo-25569 <https://bugs.python.org/issue25569>`__: Fix memory leak in "
"SSLSocket.getpeercert()."

#: ../../../Misc/NEWS:3591 ../../../Misc/NEWS:5642
msgid ""
"`bpo-25471 <https://bugs.python.org/issue25471>`__: Sockets returned from "
"accept() shouldn't appear to be nonblocking."
msgstr ""
"`bpo-25471 <https://bugs.python.org/issue25471>`__: Sockets returned from "
"accept() shouldn't appear to be nonblocking."

#: ../../../Misc/NEWS:3594 ../../../Misc/NEWS:5645
msgid ""
"`bpo-25319 <https://bugs.python.org/issue25319>`__: When threading.Event is "
"reinitialized, the underlying condition should use a regular lock rather "
"than a recursive lock."
msgstr ""
"`bpo-25319 <https://bugs.python.org/issue25319>`__: When threading.Event is "
"reinitialized, the underlying condition should use a regular lock rather "
"than a recursive lock."

#: ../../../Misc/NEWS:3597 ../../../Misc/NEWS:5128
msgid ""
"Skip getaddrinfo if host is already resolved. Patch by A. Jesse Jiryu Davis."
msgstr ""

#: ../../../Misc/NEWS:3600 ../../../Misc/NEWS:5131
msgid ""
"`bpo-26050 <https://bugs.python.org/issue26050>`__: Add asyncio.StreamReader."
"readuntil() method. Patch by –ú–∞—Ä–∫ –ö–æ—Ä–µ–Ω–±–µ—Ä–≥."
msgstr ""
"`bpo-26050 <https://bugs.python.org/issue26050>`__: Add asyncio.StreamReader."
"readuntil() method. Patch by –ú–∞—Ä–∫ –ö–æ—Ä–µ–Ω–±–µ—Ä–≥."

#: ../../../Misc/NEWS:3603 ../../../Misc/NEWS:5134
msgid ""
"`bpo-25924 <https://bugs.python.org/issue25924>`__: Avoid unnecessary "
"serialization of getaddrinfo(3) calls on OS X versions 10.5 or higher.  "
"Original patch by A. Jesse Jiryu Davis."
msgstr ""
"`bpo-25924 <https://bugs.python.org/issue25924>`__: Avoid unnecessary "
"serialization of getaddrinfo(3) calls on OS X versions 10.5 or higher.  "
"Original patch by A. Jesse Jiryu Davis."

#: ../../../Misc/NEWS:3606 ../../../Misc/NEWS:5137
msgid ""
"`bpo-26406 <https://bugs.python.org/issue26406>`__: Avoid unnecessary "
"serialization of getaddrinfo(3) calls on current versions of OpenBSD and "
"NetBSD.  Patch by A. Jesse Jiryu Davis."
msgstr ""
"`bpo-26406 <https://bugs.python.org/issue26406>`__: Avoid unnecessary "
"serialization of getaddrinfo(3) calls on current versions of OpenBSD and "
"NetBSD.  Patch by A. Jesse Jiryu Davis."

#: ../../../Misc/NEWS:3609 ../../../Misc/NEWS:5140
msgid ""
"`bpo-26848 <https://bugs.python.org/issue26848>`__: Fix asyncio/subprocess."
"communicate() to handle empty input. Patch by Jack O'Connor."
msgstr ""
"`bpo-26848 <https://bugs.python.org/issue26848>`__: Fix asyncio/subprocess."
"communicate() to handle empty input. Patch by Jack O'Connor."

#: ../../../Misc/NEWS:3612 ../../../Misc/NEWS:5143
msgid ""
"`bpo-27040 <https://bugs.python.org/issue27040>`__: Add loop."
"get_exception_handler method"
msgstr ""
"`bpo-27040 <https://bugs.python.org/issue27040>`__: Add loop."
"get_exception_handler method"

#: ../../../Misc/NEWS:3614 ../../../Misc/NEWS:5145
msgid ""
"`bpo-27041 <https://bugs.python.org/issue27041>`__: asyncio: Add loop."
"create_future method"
msgstr ""
"`bpo-27041 <https://bugs.python.org/issue27041>`__: asyncio: Add loop."
"create_future method"

#: ../../../Misc/NEWS:3619 ../../../Misc/NEWS:5194
msgid ""
"`bpo-20640 <https://bugs.python.org/issue20640>`__: Add tests for idlelib."
"configHelpSourceEdit. Patch by Saimadhav Heblikar."
msgstr ""
"`bpo-20640 <https://bugs.python.org/issue20640>`__: Add tests for idlelib."
"configHelpSourceEdit. Patch by Saimadhav Heblikar."

#: ../../../Misc/NEWS:3622 ../../../Misc/NEWS:5197
msgid ""
"In the 'IDLE-console differences' section of the IDLE doc, clarify how "
"running with IDLE affects sys.modules and the standard streams."
msgstr ""

#: ../../../Misc/NEWS:3625 ../../../Misc/NEWS:5200
msgid ""
"`bpo-25507 <https://bugs.python.org/issue25507>`__: fix incorrect change in "
"IOBinding that prevented printing. Augment IOBinding htest to include all "
"major IOBinding functions."
msgstr ""
"`bpo-25507 <https://bugs.python.org/issue25507>`__: fix incorrect change in "
"IOBinding that prevented printing. Augment IOBinding htest to include all "
"major IOBinding functions."

#: ../../../Misc/NEWS:3628 ../../../Misc/NEWS:5203
msgid ""
"`bpo-25905 <https://bugs.python.org/issue25905>`__: Revert unwanted "
"conversion of ' to ‚Äô RIGHT SINGLE QUOTATION MARK in README.txt and open this "
"and NEWS.txt with 'ascii'. Re-encode CREDITS.txt to utf-8 and open it with "
"'utf-8'."
msgstr ""
"`bpo-25905 <https://bugs.python.org/issue25905>`__: Revert unwanted "
"conversion of ' to ‚Äô RIGHT SINGLE QUOTATION MARK in README.txt and open this "
"and NEWS.txt with 'ascii'. Re-encode CREDITS.txt to utf-8 and open it with "
"'utf-8'."

#: ../../../Misc/NEWS:3632 ../../../Misc/NEWS:5674
msgid ""
"`bpo-15348 <https://bugs.python.org/issue15348>`__: Stop the debugger engine "
"(normally in a user process) before closing the debugger window (running in "
"the IDLE process). This prevents the RuntimeErrors that were being caught "
"and ignored."
msgstr ""
"`bpo-15348 <https://bugs.python.org/issue15348>`__: Stop the debugger engine "
"(normally in a user process) before closing the debugger window (running in "
"the IDLE process). This prevents the RuntimeErrors that were being caught "
"and ignored."

#: ../../../Misc/NEWS:3636 ../../../Misc/NEWS:5678
msgid ""
"`bpo-24455 <https://bugs.python.org/issue24455>`__: Prevent IDLE from "
"hanging when a) closing the shell while the debugger is active (15347); b) "
"closing the debugger with the [X] button (15348); and c) activating the "
"debugger when already active (24455). The patch by Mark Roseman does this by "
"making two changes. 1. Suspend and resume the gui.interaction method with "
"the tcl vwait mechanism intended for this purpose (instead of root.mainloop "
"& .quit). 2. In gui.run, allow any existing interaction to terminate first."
msgstr ""
"`bpo-24455 <https://bugs.python.org/issue24455>`__: Prevent IDLE from "
"hanging when a) closing the shell while the debugger is active (15347); b) "
"closing the debugger with the [X] button (15348); and c) activating the "
"debugger when already active (24455). The patch by Mark Roseman does this by "
"making two changes. 1. Suspend and resume the gui.interaction method with "
"the tcl vwait mechanism intended for this purpose (instead of root.mainloop "
"& .quit). 2. In gui.run, allow any existing interaction to terminate first."

#: ../../../Misc/NEWS:3644 ../../../Misc/NEWS:5686
msgid ""
"Change 'The program' to 'Your program' in an IDLE 'kill program?' message to "
"make it clearer that the program referred to is the currently running user "
"program, not IDLE itself."
msgstr ""

#: ../../../Misc/NEWS:3648 ../../../Misc/NEWS:5690
msgid ""
"`bpo-24750 <https://bugs.python.org/issue24750>`__: Improve the appearance "
"of the IDLE editor window status bar. Patch by Mark Roseman."
msgstr ""
"`bpo-24750 <https://bugs.python.org/issue24750>`__: Improve the appearance "
"of the IDLE editor window status bar. Patch by Mark Roseman."

#: ../../../Misc/NEWS:3651 ../../../Misc/NEWS:5693
msgid ""
"`bpo-25313 <https://bugs.python.org/issue25313>`__: Change the handling of "
"new built-in text color themes to better address the compatibility problem "
"introduced by the addition of IDLE Dark. Consistently use the revised "
"idleConf.CurrentTheme everywhere in idlelib."
msgstr ""
"`bpo-25313 <https://bugs.python.org/issue25313>`__: Change the handling of "
"new built-in text color themes to better address the compatibility problem "
"introduced by the addition of IDLE Dark. Consistently use the revised "
"idleConf.CurrentTheme everywhere in idlelib."

#: ../../../Misc/NEWS:3655 ../../../Misc/NEWS:5697
msgid ""
"`bpo-24782 <https://bugs.python.org/issue24782>`__: Extension configuration "
"is now a tab in the IDLE Preferences dialog rather than a separate dialog.  "
"The former tabs are now a sorted list.  Patch by Mark Roseman."
msgstr ""
"`bpo-24782 <https://bugs.python.org/issue24782>`__: Extension configuration "
"is now a tab in the IDLE Preferences dialog rather than a separate dialog.  "
"The former tabs are now a sorted list.  Patch by Mark Roseman."

#: ../../../Misc/NEWS:3659 ../../../Misc/NEWS:5701
msgid ""
"`bpo-22726 <https://bugs.python.org/issue22726>`__: Re-activate the config "
"dialog help button with some content about the other buttons and the new "
"IDLE Dark theme."
msgstr ""
"`bpo-22726 <https://bugs.python.org/issue22726>`__: Re-activate the config "
"dialog help button with some content about the other buttons and the new "
"IDLE Dark theme."

#: ../../../Misc/NEWS:3662 ../../../Misc/NEWS:5704
msgid ""
"`bpo-24820 <https://bugs.python.org/issue24820>`__: IDLE now has an 'IDLE "
"Dark' built-in text color theme. It is more or less IDLE Classic inverted, "
"with a cobalt blue background. Strings, comments, keywords, ... are still "
"green, red, orange, ... . To use it with IDLEs released before November "
"2015, hit the 'Save as New Custom Theme' button and enter a new name, such "
"as 'Custom Dark'.  The custom theme will work with any IDLE release, and can "
"be modified."
msgstr ""
"`bpo-24820 <https://bugs.python.org/issue24820>`__: IDLE now has an 'IDLE "
"Dark' built-in text color theme. It is more or less IDLE Classic inverted, "
"with a cobalt blue background. Strings, comments, keywords, ... are still "
"green, red, orange, ... . To use it with IDLEs released before November "
"2015, hit the 'Save as New Custom Theme' button and enter a new name, such "
"as 'Custom Dark'.  The custom theme will work with any IDLE release, and can "
"be modified."

#: ../../../Misc/NEWS:3670 ../../../Misc/NEWS:5712
msgid ""
"`bpo-25224 <https://bugs.python.org/issue25224>`__: README.txt is now an "
"idlelib index for IDLE developers and curious users.  The previous user "
"content is now in the IDLE doc chapter. 'IDLE' now means 'Integrated "
"Development and Learning Environment'."
msgstr ""
"`bpo-25224 <https://bugs.python.org/issue25224>`__: README.txt is now an "
"idlelib index for IDLE developers and curious users.  The previous user "
"content is now in the IDLE doc chapter. 'IDLE' now means 'Integrated "
"Development and Learning Environment'."

#: ../../../Misc/NEWS:3674 ../../../Misc/NEWS:5716
msgid ""
"`bpo-24820 <https://bugs.python.org/issue24820>`__: Users can now set "
"breakpoint colors in Settings -> Custom Highlighting.  Original patch by "
"Mark Roseman."
msgstr ""
"`bpo-24820 <https://bugs.python.org/issue24820>`__: Users can now set "
"breakpoint colors in Settings -> Custom Highlighting.  Original patch by "
"Mark Roseman."

#: ../../../Misc/NEWS:3677 ../../../Misc/NEWS:5719
msgid ""
"`bpo-24972 <https://bugs.python.org/issue24972>`__: Inactive selection "
"background now matches active selection background, as configured by users, "
"on all systems.  Found items are now always highlighted on Windows.  Initial "
"patch by Mark Roseman."
msgstr ""
"`bpo-24972 <https://bugs.python.org/issue24972>`__: Inactive selection "
"background now matches active selection background, as configured by users, "
"on all systems.  Found items are now always highlighted on Windows.  Initial "
"patch by Mark Roseman."

#: ../../../Misc/NEWS:3681 ../../../Misc/NEWS:5723
msgid ""
"`bpo-24570 <https://bugs.python.org/issue24570>`__: Idle: make calltip and "
"completion boxes appear on Macs affected by a tk regression.  Initial patch "
"by Mark Roseman."
msgstr ""
"`bpo-24570 <https://bugs.python.org/issue24570>`__: Idle: make calltip and "
"completion boxes appear on Macs affected by a tk regression.  Initial patch "
"by Mark Roseman."

#: ../../../Misc/NEWS:3684 ../../../Misc/NEWS:5726
msgid ""
"`bpo-24988 <https://bugs.python.org/issue24988>`__: Idle ScrolledList "
"context menus (used in debugger) now work on Mac Aqua.  Patch by Mark "
"Roseman."
msgstr ""
"`bpo-24988 <https://bugs.python.org/issue24988>`__: Idle ScrolledList "
"context menus (used in debugger) now work on Mac Aqua.  Patch by Mark "
"Roseman."

#: ../../../Misc/NEWS:3687 ../../../Misc/NEWS:5729
msgid ""
"`bpo-24801 <https://bugs.python.org/issue24801>`__: Make right-click for "
"context menu work on Mac Aqua. Patch by Mark Roseman."
msgstr ""
"`bpo-24801 <https://bugs.python.org/issue24801>`__: Make right-click for "
"context menu work on Mac Aqua. Patch by Mark Roseman."

#: ../../../Misc/NEWS:3690 ../../../Misc/NEWS:5732
msgid ""
"`bpo-25173 <https://bugs.python.org/issue25173>`__: Associate tkinter "
"messageboxes with a specific widget. For Mac OSX, make them a 'sheet'.  "
"Patch by Mark Roseman."
msgstr ""
"`bpo-25173 <https://bugs.python.org/issue25173>`__: Associate tkinter "
"messageboxes with a specific widget. For Mac OSX, make them a 'sheet'.  "
"Patch by Mark Roseman."

#: ../../../Misc/NEWS:3693 ../../../Misc/NEWS:5735
msgid ""
"`bpo-25198 <https://bugs.python.org/issue25198>`__: Enhance the initial html "
"viewer now used for Idle Help. * Properly indent fixed-pitch text (patch by "
"Mark Roseman). * Give code snippet a very Sphinx-like light blueish-gray "
"background. * Re-use initial width and height set by users for shell and "
"editor. * When the Table of Contents (TOC) menu is used, put the section "
"header at the top of the screen."
msgstr ""
"`bpo-25198 <https://bugs.python.org/issue25198>`__: Enhance the initial html "
"viewer now used for Idle Help. * Properly indent fixed-pitch text (patch by "
"Mark Roseman). * Give code snippet a very Sphinx-like light blueish-gray "
"background. * Re-use initial width and height set by users for shell and "
"editor. * When the Table of Contents (TOC) menu is used, put the section "
"header at the top of the screen."

#: ../../../Misc/NEWS:3700 ../../../Misc/NEWS:5742
msgid ""
"`bpo-25225 <https://bugs.python.org/issue25225>`__: Condense and rewrite "
"Idle doc section on text colors."
msgstr ""
"`bpo-25225 <https://bugs.python.org/issue25225>`__: Condense and rewrite "
"Idle doc section on text colors."

#: ../../../Misc/NEWS:3702 ../../../Misc/NEWS:5744
msgid ""
"`bpo-21995 <https://bugs.python.org/issue21995>`__: Explain some differences "
"between IDLE and console Python."
msgstr ""
"`bpo-21995 <https://bugs.python.org/issue21995>`__: Explain some differences "
"between IDLE and console Python."

#: ../../../Misc/NEWS:3704 ../../../Misc/NEWS:5746
msgid ""
"`bpo-22820 <https://bugs.python.org/issue22820>`__: Explain need for *print* "
"when running file from Idle editor."
msgstr ""
"`bpo-22820 <https://bugs.python.org/issue22820>`__: Explain need for *print* "
"when running file from Idle editor."

#: ../../../Misc/NEWS:3706 ../../../Misc/NEWS:5748
msgid ""
"`bpo-25224 <https://bugs.python.org/issue25224>`__: Doc: augment Idle "
"feature list and no-subprocess section."
msgstr ""
"`bpo-25224 <https://bugs.python.org/issue25224>`__: Doc: augment Idle "
"feature list and no-subprocess section."

#: ../../../Misc/NEWS:3708 ../../../Misc/NEWS:5750
msgid ""
"`bpo-25219 <https://bugs.python.org/issue25219>`__: Update doc for Idle "
"command line options. Some were missing and notes were not correct."
msgstr ""
"`bpo-25219 <https://bugs.python.org/issue25219>`__: Update doc for Idle "
"command line options. Some were missing and notes were not correct."

#: ../../../Misc/NEWS:3711 ../../../Misc/NEWS:5753
msgid ""
"`bpo-24861 <https://bugs.python.org/issue24861>`__: Most of idlelib is "
"private and subject to change. Use idleib.idle.* to start Idle. See idlelib."
"__init__.__doc__."
msgstr ""
"`bpo-24861 <https://bugs.python.org/issue24861>`__: Most of idlelib is "
"private and subject to change. Use idleib.idle.* to start Idle. See idlelib."
"__init__.__doc__."

#: ../../../Misc/NEWS:3714 ../../../Misc/NEWS:5756
msgid ""
"`bpo-25199 <https://bugs.python.org/issue25199>`__: Idle: add "
"synchronization comments for future maintainers."
msgstr ""
"`bpo-25199 <https://bugs.python.org/issue25199>`__: Idle: add "
"synchronization comments for future maintainers."

#: ../../../Misc/NEWS:3716
msgid ""
"`bpo-16893 <https://bugs.python.org/issue16893>`__: Replace help.txt with "
"help.html for Idle doc display. The new idlelib/help.html is rstripped Doc/"
"build/html/library/idle.html. It looks better than help.txt and will better "
"document Idle as released. The tkinter html viewer that works for this file "
"was written by Rose Roseman. The now unused EditorWindow.HelpDialog class "
"and helt.txt file are deprecated."
msgstr ""
"`bpo-16893 <https://bugs.python.org/issue16893>`__: Replace help.txt with "
"help.html for Idle doc display. The new idlelib/help.html is rstripped Doc/"
"build/html/library/idle.html. It looks better than help.txt and will better "
"document Idle as released. The tkinter html viewer that works for this file "
"was written by Rose Roseman. The now unused EditorWindow.HelpDialog class "
"and helt.txt file are deprecated."

#: ../../../Misc/NEWS:3722 ../../../Misc/NEWS:5764
msgid ""
"`bpo-24199 <https://bugs.python.org/issue24199>`__: Deprecate unused idlelib."
"idlever with possible removal in 3.6."
msgstr ""
"`bpo-24199 <https://bugs.python.org/issue24199>`__: Deprecate unused idlelib."
"idlever with possible removal in 3.6."

#: ../../../Misc/NEWS:3724 ../../../Misc/NEWS:5766
msgid ""
"`bpo-24790 <https://bugs.python.org/issue24790>`__: Remove extraneous code "
"(which also create 2 & 3 conflicts)."
msgstr ""
"`bpo-24790 <https://bugs.python.org/issue24790>`__: Remove extraneous code "
"(which also create 2 & 3 conflicts)."

#: ../../../Misc/NEWS:3729 ../../../Misc/NEWS:5215
msgid ""
"`bpo-26736 <https://bugs.python.org/issue26736>`__: Used HTTPS for external "
"links in the documentation if possible."
msgstr ""
"`bpo-26736 <https://bugs.python.org/issue26736>`__: Used HTTPS for external "
"links in the documentation if possible."

#: ../../../Misc/NEWS:3731 ../../../Misc/NEWS:5217
msgid ""
"`bpo-6953 <https://bugs.python.org/issue6953>`__: Rework the Readline module "
"documentation to group related functions together, and add more details such "
"as what underlying Readline functions and variables are accessed."
msgstr ""
"`bpo-6953 <https://bugs.python.org/issue6953>`__: Rework the Readline module "
"documentation to group related functions together, and add more details such "
"as what underlying Readline functions and variables are accessed."

#: ../../../Misc/NEWS:3735 ../../../Misc/NEWS:5221
msgid ""
"`bpo-23606 <https://bugs.python.org/issue23606>`__: Adds note to ctypes "
"documentation regarding cdll.msvcrt."
msgstr ""
"`bpo-23606 <https://bugs.python.org/issue23606>`__: Adds note to ctypes "
"documentation regarding cdll.msvcrt."

#: ../../../Misc/NEWS:3737 ../../../Misc/NEWS:5781
msgid ""
"`bpo-24952 <https://bugs.python.org/issue24952>`__: Clarify the default size "
"argument of stack_size() in the \"threading\" and \"_thread\" modules. Patch "
"from Mattip."
msgstr ""
"`bpo-24952 <https://bugs.python.org/issue24952>`__: Clarify the default size "
"argument of stack_size() in the \"threading\" and \"_thread\" modules. Patch "
"from Mattip."

#: ../../../Misc/NEWS:3740 ../../../Misc/NEWS:5226
msgid ""
"`bpo-26014 <https://bugs.python.org/issue26014>`__: Update 3.x packaging "
"documentation: * \"See also\" links to the new docs are now provided in the "
"legacy pages * links to setuptools documentation have been updated"
msgstr ""
"`bpo-26014 <https://bugs.python.org/issue26014>`__: Update 3.x packaging "
"documentation: * \"See also\" links to the new docs are now provided in the "
"legacy pages * links to setuptools documentation have been updated"

#: ../../../Misc/NEWS:3747 ../../../Misc/NEWS:5233
msgid ""
"`bpo-21916 <https://bugs.python.org/issue21916>`__: Added tests for the "
"turtle module.  Patch by ingrid, Gregory Loyse and Jelle Zijlstra."
msgstr ""
"`bpo-21916 <https://bugs.python.org/issue21916>`__: Added tests for the "
"turtle module.  Patch by ingrid, Gregory Loyse and Jelle Zijlstra."

#: ../../../Misc/NEWS:3750
msgid ""
"`bpo-26295 <https://bugs.python.org/issue26295>`__: When using \"python3 -m "
"test --testdir=TESTDIR\", regrtest doesn't add \"test.\" prefix to test "
"module names."
msgstr ""
"`bpo-26295 <https://bugs.python.org/issue26295>`__: When using \"python3 -m "
"test --testdir=TESTDIR\", regrtest doesn't add \"test.\" prefix to test "
"module names."

#: ../../../Misc/NEWS:3753 ../../../Misc/NEWS:5236
msgid ""
"`bpo-26523 <https://bugs.python.org/issue26523>`__: The multiprocessing "
"thread pool (multiprocessing.dummy.Pool) was untested."
msgstr ""
"`bpo-26523 <https://bugs.python.org/issue26523>`__: The multiprocessing "
"thread pool (multiprocessing.dummy.Pool) was untested."

#: ../../../Misc/NEWS:3756 ../../../Misc/NEWS:5239
msgid ""
"`bpo-26015 <https://bugs.python.org/issue26015>`__: Added new tests for "
"pickling iterators of mutable sequences."
msgstr ""
"`bpo-26015 <https://bugs.python.org/issue26015>`__: Added new tests for "
"pickling iterators of mutable sequences."

#: ../../../Misc/NEWS:3758 ../../../Misc/NEWS:5241
msgid ""
"`bpo-26325 <https://bugs.python.org/issue26325>`__: Added test.support."
"check_no_resource_warning() to check that no ResourceWarning is emitted."
msgstr ""
"`bpo-26325 <https://bugs.python.org/issue26325>`__: Added test.support."
"check_no_resource_warning() to check that no ResourceWarning is emitted."

#: ../../../Misc/NEWS:3761
msgid ""
"`bpo-25940 <https://bugs.python.org/issue25940>`__: Changed test_ssl to use "
"its internal local server more.  This avoids relying on svn.python.org, "
"which recently changed root certificate."
msgstr ""
"`bpo-25940 <https://bugs.python.org/issue25940>`__: Changed test_ssl to use "
"its internal local server more.  This avoids relying on svn.python.org, "
"which recently changed root certificate."

#: ../../../Misc/NEWS:3764 ../../../Misc/NEWS:5247
msgid ""
"`bpo-25616 <https://bugs.python.org/issue25616>`__: Tests for OrderedDict "
"are extracted from test_collections into separate file test_ordered_dict."
msgstr ""
"`bpo-25616 <https://bugs.python.org/issue25616>`__: Tests for OrderedDict "
"are extracted from test_collections into separate file test_ordered_dict."

#: ../../../Misc/NEWS:3767 ../../../Misc/NEWS:5796
msgid ""
"`bpo-25449 <https://bugs.python.org/issue25449>`__: Added tests for "
"OrderedDict subclasses."
msgstr ""
"`bpo-25449 <https://bugs.python.org/issue25449>`__: Added tests for "
"OrderedDict subclasses."

#: ../../../Misc/NEWS:3769
msgid ""
"`bpo-25188 <https://bugs.python.org/issue25188>`__: Add -P/--pgo to test."
"regrtest to suppress error output when running the test suite for the "
"purposes of a PGO build. Initial patch by Alecsandru Patrascu."
msgstr ""
"`bpo-25188 <https://bugs.python.org/issue25188>`__: Add -P/--pgo to test."
"regrtest to suppress error output when running the test suite for the "
"purposes of a PGO build. Initial patch by Alecsandru Patrascu."

#: ../../../Misc/NEWS:3773
msgid ""
"`bpo-22806 <https://bugs.python.org/issue22806>`__: Add ``python -m test --"
"list-tests`` command to list tests."
msgstr ""
"`bpo-22806 <https://bugs.python.org/issue22806>`__: Add ``python -m test --"
"list-tests`` command to list tests."

#: ../../../Misc/NEWS:3775
msgid ""
"`bpo-18174 <https://bugs.python.org/issue18174>`__: ``python -m test --"
"huntrleaks ...`` now also checks for leak of file descriptors. Patch written "
"by Richard Oudkerk."
msgstr ""
"`bpo-18174 <https://bugs.python.org/issue18174>`__: ``python -m test --"
"huntrleaks ...`` now also checks for leak of file descriptors. Patch written "
"by Richard Oudkerk."

#: ../../../Misc/NEWS:3778
msgid ""
"`bpo-25260 <https://bugs.python.org/issue25260>`__: Fix ``python -m test --"
"coverage`` on Windows. Remove the list of ignored directories."
msgstr ""
"`bpo-25260 <https://bugs.python.org/issue25260>`__: Fix ``python -m test --"
"coverage`` on Windows. Remove the list of ignored directories."

#: ../../../Misc/NEWS:3781 ../../../Misc/NEWS:5803
msgid ""
"``PCbuild\\rt.bat`` now accepts an unlimited number of arguments to pass "
"along to regrtest.py.  Previously there was a limit of 9."
msgstr ""

#: ../../../Misc/NEWS:3784 ../../../Misc/NEWS:5250
msgid ""
"`bpo-26583 <https://bugs.python.org/issue26583>`__: Skip "
"test_timestamp_overflow in test_import if bytecode files cannot be written."
msgstr ""
"`bpo-26583 <https://bugs.python.org/issue26583>`__: Skip "
"test_timestamp_overflow in test_import if bytecode files cannot be written."

#: ../../../Misc/NEWS:3790
msgid ""
"`bpo-21277 <https://bugs.python.org/issue21277>`__: Don't try to link "
"_ctypes with a ffi_convenience library."
msgstr ""
"`bpo-21277 <https://bugs.python.org/issue21277>`__: Don't try to link "
"_ctypes with a ffi_convenience library."

#: ../../../Misc/NEWS:3792 ../../../Misc/NEWS:5256
msgid ""
"`bpo-26884 <https://bugs.python.org/issue26884>`__: Fix linking extension "
"modules for cross builds. Patch by Xavier de Gaye."
msgstr ""
"`bpo-26884 <https://bugs.python.org/issue26884>`__: Fix linking extension "
"modules for cross builds. Patch by Xavier de Gaye."

#: ../../../Misc/NEWS:3795
msgid ""
"`bpo-26932 <https://bugs.python.org/issue26932>`__: Fixed support of RTLD_* "
"constants defined as enum values, not via macros (in particular on "
"Android).  Patch by Chi Hsuan Yen."
msgstr ""
"`bpo-26932 <https://bugs.python.org/issue26932>`__: Fixed support of RTLD_* "
"constants defined as enum values, not via macros (in particular on "
"Android).  Patch by Chi Hsuan Yen."

#: ../../../Misc/NEWS:3798 ../../../Misc/NEWS:5259
msgid ""
"`bpo-22359 <https://bugs.python.org/issue22359>`__: Disable the rules for "
"running _freeze_importlib and pgen when cross-compiling.  The output of "
"these programs is normally saved with the source code anyway, and is still "
"regenerated when doing a native build. Patch by Xavier de Gaye."
msgstr ""
"`bpo-22359 <https://bugs.python.org/issue22359>`__: Disable the rules for "
"running _freeze_importlib and pgen when cross-compiling.  The output of "
"these programs is normally saved with the source code anyway, and is still "
"regenerated when doing a native build. Patch by Xavier de Gaye."

#: ../../../Misc/NEWS:3803
msgid ""
"`bpo-21668 <https://bugs.python.org/issue21668>`__: Link audioop, _datetime, "
"_ctypes_test modules to libm, except on Mac OS X. Patch written by Chi Hsuan "
"Yen."
msgstr ""
"`bpo-21668 <https://bugs.python.org/issue21668>`__: Link audioop, _datetime, "
"_ctypes_test modules to libm, except on Mac OS X. Patch written by Chi Hsuan "
"Yen."

#: ../../../Misc/NEWS:3806 ../../../Misc/NEWS:5270
msgid ""
"`bpo-25702 <https://bugs.python.org/issue25702>`__: A --with-lto configure "
"option has been added that will enable link time optimizations at build time "
"during a make profile-opt. Some compilers and toolchains are known to not "
"produce stable code when using LTO, be sure to test things thoroughly before "
"relying on it. It can provide a few % speed up over profile-opt alone."
msgstr ""
"`bpo-25702 <https://bugs.python.org/issue25702>`__: A --with-lto configure "
"option has been added that will enable link time optimizations at build time "
"during a make profile-opt. Some compilers and toolchains are known to not "
"produce stable code when using LTO, be sure to test things thoroughly before "
"relying on it. It can provide a few % speed up over profile-opt alone."

#: ../../../Misc/NEWS:3812 ../../../Misc/NEWS:5276
msgid ""
"`bpo-26624 <https://bugs.python.org/issue26624>`__: Adds validation of "
"ucrtbase[d].dll version with warning for old versions."
msgstr ""
"`bpo-26624 <https://bugs.python.org/issue26624>`__: Adds validation of "
"ucrtbase[d].dll version with warning for old versions."

#: ../../../Misc/NEWS:3815 ../../../Misc/NEWS:5279
msgid ""
"`bpo-17603 <https://bugs.python.org/issue17603>`__: Avoid error about "
"nonexistant fileblocks.o file by using a lower-level check for st_blocks in "
"struct stat."
msgstr ""
"`bpo-17603 <https://bugs.python.org/issue17603>`__: Avoid error about "
"nonexistant fileblocks.o file by using a lower-level check for st_blocks in "
"struct stat."

#: ../../../Misc/NEWS:3818 ../../../Misc/NEWS:5282
msgid ""
"`bpo-26079 <https://bugs.python.org/issue26079>`__: Fixing the build output "
"folder for tix-8.4.3.6. Patch by Bjoern Thiel."
msgstr ""
"`bpo-26079 <https://bugs.python.org/issue26079>`__: Fixing the build output "
"folder for tix-8.4.3.6. Patch by Bjoern Thiel."

#: ../../../Misc/NEWS:3821 ../../../Misc/NEWS:5285
msgid ""
"`bpo-26465 <https://bugs.python.org/issue26465>`__: Update Windows builds to "
"use OpenSSL 1.0.2g."
msgstr ""
"`bpo-26465 <https://bugs.python.org/issue26465>`__: Update Windows builds to "
"use OpenSSL 1.0.2g."

#: ../../../Misc/NEWS:3823
msgid ""
"`bpo-25348 <https://bugs.python.org/issue25348>`__: Added ``--pgo`` and ``--"
"pgo-job`` arguments to ``PCbuild\\build.bat`` for building with Profile-"
"Guided Optimization.  The old ``PCbuild\\build_pgo.bat`` script is removed."
msgstr ""
"`bpo-25348 <https://bugs.python.org/issue25348>`__: Added ``--pgo`` and ``--"
"pgo-job`` arguments to ``PCbuild\\build.bat`` for building with Profile-"
"Guided Optimization.  The old ``PCbuild\\build_pgo.bat`` script is removed."

#: ../../../Misc/NEWS:3827 ../../../Misc/NEWS:5296
msgid ""
"`bpo-25827 <https://bugs.python.org/issue25827>`__: Add support for building "
"with ICC to ``configure``, including a new ``--with-icc`` flag."
msgstr ""
"`bpo-25827 <https://bugs.python.org/issue25827>`__: Add support for building "
"with ICC to ``configure``, including a new ``--with-icc`` flag."

#: ../../../Misc/NEWS:3830 ../../../Misc/NEWS:5299
msgid ""
"`bpo-25696 <https://bugs.python.org/issue25696>`__: Fix installation of "
"Python on UNIX with make -j9."
msgstr ""
"`bpo-25696 <https://bugs.python.org/issue25696>`__: Fix installation of "
"Python on UNIX with make -j9."

#: ../../../Misc/NEWS:3832 ../../../Misc/NEWS:5814
msgid ""
"`bpo-24986 <https://bugs.python.org/issue24986>`__: It is now possible to "
"build Python on Windows without errors when external libraries are not "
"available."
msgstr ""
"`bpo-24986 <https://bugs.python.org/issue24986>`__: It is now possible to "
"build Python on Windows without errors when external libraries are not "
"available."

#: ../../../Misc/NEWS:3835 ../../../Misc/NEWS:5287
msgid ""
"`bpo-24421 <https://bugs.python.org/issue24421>`__: Compile Modules/_math.c "
"once, before building extensions. Previously it could fail to compile "
"properly if the math and cmath builds were concurrent."
msgstr ""
"`bpo-24421 <https://bugs.python.org/issue24421>`__: Compile Modules/_math.c "
"once, before building extensions. Previously it could fail to compile "
"properly if the math and cmath builds were concurrent."

#: ../../../Misc/NEWS:3839
msgid ""
"`bpo-26465 <https://bugs.python.org/issue26465>`__: Update OS X 10.5+ 32-bit-"
"only installer to build and link with OpenSSL 1.0.2g."
msgstr ""
"`bpo-26465 <https://bugs.python.org/issue26465>`__: Update OS X 10.5+ 32-bit-"
"only installer to build and link with OpenSSL 1.0.2g."

#: ../../../Misc/NEWS:3842 ../../../Misc/NEWS:5304
msgid ""
"`bpo-26268 <https://bugs.python.org/issue26268>`__: Update Windows builds to "
"use OpenSSL 1.0.2f."
msgstr ""
"`bpo-26268 <https://bugs.python.org/issue26268>`__: Update Windows builds to "
"use OpenSSL 1.0.2f."

#: ../../../Misc/NEWS:3844 ../../../Misc/NEWS:5306
msgid ""
"`bpo-25136 <https://bugs.python.org/issue25136>`__: Support Apple Xcode 7's "
"new textual SDK stub libraries."
msgstr ""
"`bpo-25136 <https://bugs.python.org/issue25136>`__: Support Apple Xcode 7's "
"new textual SDK stub libraries."

#: ../../../Misc/NEWS:3846 ../../../Misc/NEWS:5308
msgid ""
"`bpo-24324 <https://bugs.python.org/issue24324>`__: Do not enable "
"unreachable code warnings when using gcc as the option does not work "
"correctly in older versions of gcc and has been silently removed as of "
"gcc-4.5."
msgstr ""
"`bpo-24324 <https://bugs.python.org/issue24324>`__: Do not enable "
"unreachable code warnings when using gcc as the option does not work "
"correctly in older versions of gcc and has been silently removed as of "
"gcc-4.5."

#: ../../../Misc/NEWS:3853 ../../../Misc/NEWS:5315
msgid ""
"`bpo-27053 <https://bugs.python.org/issue27053>`__: Updates make_zip.py to "
"correctly generate library ZIP file."
msgstr ""
"`bpo-27053 <https://bugs.python.org/issue27053>`__: Updates make_zip.py to "
"correctly generate library ZIP file."

#: ../../../Misc/NEWS:3855 ../../../Misc/NEWS:5317
msgid ""
"`bpo-26268 <https://bugs.python.org/issue26268>`__: Update the prepare_ssl."
"py script to handle OpenSSL releases that don't include the contents of the "
"include directory (that is, 1.0.2e and later)."
msgstr ""
"`bpo-26268 <https://bugs.python.org/issue26268>`__: Update the prepare_ssl."
"py script to handle OpenSSL releases that don't include the contents of the "
"include directory (that is, 1.0.2e and later)."

#: ../../../Misc/NEWS:3859 ../../../Misc/NEWS:5321
msgid ""
"`bpo-26071 <https://bugs.python.org/issue26071>`__: bdist_wininst created "
"binaries fail to start and find 32bit Python"
msgstr ""
"`bpo-26071 <https://bugs.python.org/issue26071>`__: bdist_wininst created "
"binaries fail to start and find 32bit Python"

#: ../../../Misc/NEWS:3862 ../../../Misc/NEWS:5324
msgid ""
"`bpo-26073 <https://bugs.python.org/issue26073>`__: Update the list of magic "
"numbers in launcher"
msgstr ""
"`bpo-26073 <https://bugs.python.org/issue26073>`__: Update the list of magic "
"numbers in launcher"

#: ../../../Misc/NEWS:3864 ../../../Misc/NEWS:5326
msgid ""
"`bpo-26065 <https://bugs.python.org/issue26065>`__: Excludes venv from "
"library when generating embeddable distro."
msgstr ""
"`bpo-26065 <https://bugs.python.org/issue26065>`__: Excludes venv from "
"library when generating embeddable distro."

#: ../../../Misc/NEWS:3867 ../../../Misc/NEWS:5853
msgid ""
"`bpo-25022 <https://bugs.python.org/issue25022>`__: Removed very outdated PC/"
"example_nt/ directory."
msgstr ""
"`bpo-25022 <https://bugs.python.org/issue25022>`__: Removed very outdated PC/"
"example_nt/ directory."

#: ../../../Misc/NEWS:3872 ../../../Misc/NEWS:5332
msgid ""
"`bpo-26799 <https://bugs.python.org/issue26799>`__: Fix python-gdb.py: don't "
"get C types once when the Python code is loaded, but get C types on demand. "
"The C types can change if python-gdb.py is loaded before the Python "
"executable. Patch written by Thomas Ilsche."
msgstr ""
"`bpo-26799 <https://bugs.python.org/issue26799>`__: Fix python-gdb.py: don't "
"get C types once when the Python code is loaded, but get C types on demand. "
"The C types can change if python-gdb.py is loaded before the Python "
"executable. Patch written by Thomas Ilsche."

#: ../../../Misc/NEWS:3877 ../../../Misc/NEWS:5337
msgid ""
"`bpo-26271 <https://bugs.python.org/issue26271>`__: Fix the Freeze tool to "
"properly use flags passed through configure. Patch by Daniel Shaulov."
msgstr ""
"`bpo-26271 <https://bugs.python.org/issue26271>`__: Fix the Freeze tool to "
"properly use flags passed through configure. Patch by Daniel Shaulov."

#: ../../../Misc/NEWS:3880 ../../../Misc/NEWS:5340
msgid ""
"`bpo-26489 <https://bugs.python.org/issue26489>`__: Add dictionary unpacking "
"support to Tools/parser/unparse.py. Patch by Guo Ci Teo."
msgstr ""
"`bpo-26489 <https://bugs.python.org/issue26489>`__: Add dictionary unpacking "
"support to Tools/parser/unparse.py. Patch by Guo Ci Teo."

#: ../../../Misc/NEWS:3883 ../../../Misc/NEWS:5343
msgid ""
"`bpo-26316 <https://bugs.python.org/issue26316>`__: Fix variable name typo "
"in Argument Clinic."
msgstr ""
"`bpo-26316 <https://bugs.python.org/issue26316>`__: Fix variable name typo "
"in Argument Clinic."

#: ../../../Misc/NEWS:3885 ../../../Misc/NEWS:5858
msgid ""
"`bpo-25440 <https://bugs.python.org/issue25440>`__: Fix output of python-"
"config --extension-suffix."
msgstr ""
"`bpo-25440 <https://bugs.python.org/issue25440>`__: Fix output of python-"
"config --extension-suffix."

#: ../../../Misc/NEWS:3887
msgid ""
"`bpo-25154 <https://bugs.python.org/issue25154>`__: The pyvenv script has "
"been deprecated in favour of `python3 -m venv`."
msgstr ""
"`bpo-25154 <https://bugs.python.org/issue25154>`__: The pyvenv script has "
"been deprecated in favour of `python3 -m venv`."

#: ../../../Misc/NEWS:3893
msgid ""
"`bpo-26312 <https://bugs.python.org/issue26312>`__: SystemError is now "
"raised in all programming bugs with using PyArg_ParseTupleAndKeywords().  "
"RuntimeError did raised before in some programming bugs."
msgstr ""
"`bpo-26312 <https://bugs.python.org/issue26312>`__: SystemError is now "
"raised in all programming bugs with using PyArg_ParseTupleAndKeywords().  "
"RuntimeError did raised before in some programming bugs."

#: ../../../Misc/NEWS:3897
msgid ""
"`bpo-26198 <https://bugs.python.org/issue26198>`__: ValueError is now raised "
"instead of TypeError on buffer overflow in parsing \"es#\" and \"et#\" "
"format units.  SystemError is now raised instead of TypeError on "
"programmical error in parsing format string."
msgstr ""
"`bpo-26198 <https://bugs.python.org/issue26198>`__: ValueError is now raised "
"instead of TypeError on buffer overflow in parsing \"es#\" and \"et#\" "
"format units.  SystemError is now raised instead of TypeError on "
"programmical error in parsing format string."

#: ../../../Misc/NEWS:3903
msgid "Python 3.5.3"
msgstr "Python 3.5.3"

#: ../../../Misc/NEWS:3905
msgid "Release date: 2017-01-17"
msgstr "Date de sortie¬†: 2014-01-26"

#: ../../../Misc/NEWS:3907
msgid "There were no code changes between 3.5.3rc1 and 3.5.3 final."
msgstr ""

#: ../../../Misc/NEWS:3911
msgid "Python 3.5.3 release candidate 1"
msgstr "Python 3.5.3 release candidate 1"

#: ../../../Misc/NEWS:3913
msgid "Release date: 2017-01-02"
msgstr "Date de sortie¬†: 05-01-2014"

#: ../../../Misc/NEWS:3918
msgid ""
"`bpo-29073 <https://bugs.python.org/issue29073>`__: bytearray formatting no "
"longer truncates on first null byte."
msgstr ""
"`bpo-29073 <https://bugs.python.org/issue29073>`__: bytearray formatting no "
"longer truncates on first null byte."

#: ../../../Misc/NEWS:3922
msgid ""
"`bpo-28147 <https://bugs.python.org/issue28147>`__: Fix a memory leak in "
"split-table dictionaries: setattr() must not convert combined table into "
"split table."
msgstr ""
"`bpo-28147 <https://bugs.python.org/issue28147>`__: Fix a memory leak in "
"split-table dictionaries: setattr() must not convert combined table into "
"split table."

#: ../../../Misc/NEWS:3934
msgid ""
"`bpo-28991 <https://bugs.python.org/issue28991>`__:  functools.lru_cache() "
"was susceptible to an obscure reentrancy bug caused by a monkey-patched "
"len() function."
msgstr ""
"`bpo-28991 <https://bugs.python.org/issue28991>`__:  functools.lru_cache() "
"was susceptible to an obscure reentrancy bug caused by a monkey-patched "
"len() function."

#: ../../../Misc/NEWS:3976
msgid ""
"`bpo-28203 <https://bugs.python.org/issue28203>`__: Fix incorrect type in "
"error message from ``complex(1.0, {2:3})``. Patch by Soumya Sharma."
msgstr ""
"`bpo-28203 <https://bugs.python.org/issue28203>`__: Fix incorrect type in "
"error message from ``complex(1.0, {2:3})``. Patch by Soumya Sharma."

#: ../../../Misc/NEWS:3991
msgid ""
"`bpo-28189 <https://bugs.python.org/issue28189>`__: dictitems_contains no "
"longer swallows compare errors. (Patch by Xiang Zhang)"
msgstr ""
"`bpo-28189 <https://bugs.python.org/issue28189>`__: dictitems_contains no "
"longer swallows compare errors. (Patch by Xiang Zhang)"

#: ../../../Misc/NEWS:4004
msgid ""
"`bpo-26020 <https://bugs.python.org/issue26020>`__: set literal evaluation "
"order did not match documented behaviour."
msgstr ""
"`bpo-26020 <https://bugs.python.org/issue26020>`__: set literal evaluation "
"order did not match documented behaviour."

#: ../../../Misc/NEWS:4022
msgid ""
"`bpo-27419 <https://bugs.python.org/issue27419>`__: Standard __import__() no "
"longer look up \"__import__\" in globals or builtins for importing "
"submodules or \"from import\".  Fixed handling an error of non-string "
"package name."
msgstr ""
"`bpo-27419 <https://bugs.python.org/issue27419>`__: Standard __import__() no "
"longer look up \"__import__\" in globals or builtins for importing "
"submodules or \"from import\".  Fixed handling an error of non-string "
"package name."

#: ../../../Misc/NEWS:4075
msgid ""
"`bpo-20191 <https://bugs.python.org/issue20191>`__: Fixed a crash in "
"resource.prlimit() when pass a sequence that doesn't own its elements as "
"limits."
msgstr ""
"`bpo-20191 <https://bugs.python.org/issue20191>`__: Fixed a crash in "
"resource.prlimit() when pass a sequence that doesn't own its elements as "
"limits."

#: ../../../Misc/NEWS:4126
msgid ""
"`bpo-28488 <https://bugs.python.org/issue28488>`__: shutil.make_archive() no "
"longer add entry \"./\" to ZIP archive."
msgstr ""
"`bpo-28488 <https://bugs.python.org/issue28488>`__: shutil.make_archive() no "
"longer add entry \"./\" to ZIP archive."

#: ../../../Misc/NEWS:4165
msgid ""
"`bpo-27611 <https://bugs.python.org/issue27611>`__: Fixed support of default "
"root window in the tkinter.tix module."
msgstr ""
"`bpo-27611 <https://bugs.python.org/issue27611>`__: Fixed support of default "
"root window in the tkinter.tix module."

#: ../../../Misc/NEWS:4190
msgid ""
"`bpo-19003 <https://bugs.python.org/issue19003>`__:m email.generator now "
"replaces only ``\\r`` and/or ``\\n`` line endings, per the RFC, instead of "
"all unicode line endings."
msgstr ""
"`bpo-19003 <https://bugs.python.org/issue19003>`__:m email.generator now "
"replaces only ``\\r`` and/or ``\\n`` line endings, per the RFC, instead of "
"all unicode line endings."

#: ../../../Misc/NEWS:4279
msgid ""
"`bpo-26750 <https://bugs.python.org/issue26750>`__: unittest.mock."
"create_autospec() now works properly for subclasses of property() and other "
"data descriptors."
msgstr ""
"`bpo-26750 <https://bugs.python.org/issue26750>`__: unittest.mock."
"create_autospec() now works properly for subclasses of property() and other "
"data descriptors."

#: ../../../Misc/NEWS:4323
msgid ""
"`bpo-26664 <https://bugs.python.org/issue26664>`__: Fix activate.fish by "
"removing mis-use of ``$``."
msgstr ""
"`bpo-26664 <https://bugs.python.org/issue26664>`__: Fix activate.fish by "
"removing mis-use of ``$``."

#: ../../../Misc/NEWS:4325
msgid ""
"`bpo-22115 <https://bugs.python.org/issue22115>`__: Fixed tracing Tkinter "
"variables: trace_vdelete() with wrong mode no longer break tracing, "
"trace_vinfo() now always returns a list of pairs of strings, tracing in the "
"\"u\" mode now works."
msgstr ""
"`bpo-22115 <https://bugs.python.org/issue22115>`__: Fixed tracing Tkinter "
"variables: trace_vdelete() with wrong mode no longer break tracing, "
"trace_vinfo() now always returns a list of pairs of strings, tracing in the "
"\"u\" mode now works."

#: ../../../Misc/NEWS:4329
msgid ""
"Fix a scoping issue in importlib.util.LazyLoader which triggered an "
"UnboundLocalError when lazy-loading a module that was already put into sys."
"modules."
msgstr ""

#: ../../../Misc/NEWS:4422
msgid ""
"`bpo-28600 <https://bugs.python.org/issue28600>`__: Optimize loop."
"call_soon()."
msgstr ""
"`bpo-28600 <https://bugs.python.org/issue28600>`__: Optimize loop."
"call_soon()."

#: ../../../Misc/NEWS:4436
msgid ""
"`bpo-24142 <https://bugs.python.org/issue24142>`__: Reading a corrupt config "
"file left the parser in an invalid state.  Original patch by Florian H√∂ch."
msgstr ""
"`bpo-24142 <https://bugs.python.org/issue24142>`__: Reading a corrupt config "
"file left the parser in an invalid state.  Original patch by Florian H√∂ch."

#: ../../../Misc/NEWS:4439
msgid ""
"`bpo-28990 <https://bugs.python.org/issue28990>`__: Fix SSL hanging if "
"connection is closed before handshake completed. (Patch by HoHo-Ho)"
msgstr ""
"`bpo-28990 <https://bugs.python.org/issue28990>`__: Fix SSL hanging if "
"connection is closed before handshake completed. (Patch by HoHo-Ho)"

#: ../../../Misc/NEWS:4476
msgid ""
"`bpo-26754 <https://bugs.python.org/issue26754>`__: PyUnicode_FSDecoder() "
"accepted a filename argument encoded as an iterable of integers. Now only "
"strings and bytes-like objects are accepted."
msgstr ""
"`bpo-26754 <https://bugs.python.org/issue26754>`__: PyUnicode_FSDecoder() "
"accepted a filename argument encoded as an iterable of integers. Now only "
"strings and bytes-like objects are accepted."

#: ../../../Misc/NEWS:4487
msgid ""
"`bpo-28950 <https://bugs.python.org/issue28950>`__: Disallow -j0 to be "
"combined with -T/-l/-M in regrtest command line arguments."
msgstr ""
"`bpo-28950 <https://bugs.python.org/issue28950>`__: Disallow -j0 to be "
"combined with -T/-l/-M in regrtest command line arguments."

#: ../../../Misc/NEWS:4529
msgid ""
"`bpo-27309 <https://bugs.python.org/issue27309>`__: Enabled proper Windows "
"styles in python[w].exe manifest."
msgstr ""
"`bpo-27309 <https://bugs.python.org/issue27309>`__: Enabled proper Windows "
"styles in python[w].exe manifest."

#: ../../../Misc/NEWS:4569
msgid ""
"`bpo-26359 <https://bugs.python.org/issue26359>`__: Add the --with-"
"optimizations configure flag."
msgstr ""
"`bpo-26359 <https://bugs.python.org/issue26359>`__: Add the --with-"
"optimizations configure flag."

#: ../../../Misc/NEWS:4574
msgid ""
"`bpo-25825 <https://bugs.python.org/issue25825>`__: Correct the references "
"to Modules/python.exp and ld_so_aix, which are required on AIX.  This "
"updates references to an installation path that was changed in 3.2a4, and "
"undoes changed references to the build tree that were made in 3.5.0a1."
msgstr ""
"`bpo-25825 <https://bugs.python.org/issue25825>`__: Correct the references "
"to Modules/python.exp and ld_so_aix, which are required on AIX.  This "
"updates references to an installation path that was changed in 3.2a4, and "
"undoes changed references to the build tree that were made in 3.5.0a1."

#: ../../../Misc/NEWS:4597
msgid "Python 3.5.2"
msgstr "Python 3.5.2"

#: ../../../Misc/NEWS:4599
msgid "Release date: 2016-06-26"
msgstr "Date de sortie : 2016-06-26"

#: ../../../Misc/NEWS:4609
msgid ""
"`bpo-26867 <https://bugs.python.org/issue26867>`__: Ubuntu's openssl "
"OP_NO_SSLv3 is forced on by default; fix test."
msgstr ""
"`bpo-26867 <https://bugs.python.org/issue26867>`__: Ubuntu's openssl "
"OP_NO_SSLv3 is forced on by default; fix test."

#: ../../../Misc/NEWS:4614
msgid ""
"`bpo-27365 <https://bugs.python.org/issue27365>`__: Allow non-ascii in "
"idlelib/NEWS.txt - minimal part for 3.5.2."
msgstr ""
"`bpo-27365 <https://bugs.python.org/issue27365>`__: Allow non-ascii in "
"idlelib/NEWS.txt - minimal part for 3.5.2."

#: ../../../Misc/NEWS:4618
msgid "Python 3.5.2 release candidate 1"
msgstr "Python 3.5.2 release candidate 1"

#: ../../../Misc/NEWS:4620
msgid "Release date: 2016-06-12"
msgstr "Date de sortie : 2016-06-12"

#: ../../../Misc/NEWS:4636
msgid ""
"`bpo-27039 <https://bugs.python.org/issue27039>`__: Fixed bytearray.remove() "
"for values greater than 127.  Patch by Joe Jevnik."
msgstr ""
"`bpo-27039 <https://bugs.python.org/issue27039>`__: Fixed bytearray.remove() "
"for values greater than 127.  Patch by Joe Jevnik."

#: ../../../Misc/NEWS:4691
msgid ""
"`bpo-26194 <https://bugs.python.org/issue26194>`__:  Deque.insert() gave odd "
"results for bounded deques that had reached their maximum size.  Now an "
"IndexError will be raised when attempting to insert into a full deque."
msgstr ""
"`bpo-26194 <https://bugs.python.org/issue26194>`__:  Deque.insert() gave odd "
"results for bounded deques that had reached their maximum size.  Now an "
"IndexError will be raised when attempting to insert into a full deque."

#: ../../../Misc/NEWS:4695
msgid ""
"`bpo-25843 <https://bugs.python.org/issue25843>`__: When compiling code, "
"don't merge constants if they are equal but have a different types. For "
"example, ``f1, f2 = lambda: 1, lambda: 1.0`` is now correctly compiled to "
"two different functions: ``f1()`` returns ``1`` (``int``) and ``f2()`` "
"returns ``1.0`` (``int``), even if ``1`` and ``1.0`` are equal."
msgstr ""
"`bpo-25843 <https://bugs.python.org/issue25843>`__: When compiling code, "
"don't merge constants if they are equal but have a different types. For "
"example, ``f1, f2 = lambda: 1, lambda: 1.0`` is now correctly compiled to "
"two different functions: ``f1()`` returns ``1`` (``int``) and ``f2()`` "
"returns ``1.0`` (``int``), even if ``1`` and ``1.0`` are equal."

#: ../../../Misc/NEWS:4757
msgid ""
"[Security] Fix TLS stripping vulnerability in smtplib, CVE-2016-0772. "
"Reported by Team Oststrom"
msgstr ""

#: ../../../Misc/NEWS:4930
msgid ""
"`bpo-21925 <https://bugs.python.org/issue21925>`__: :func:`warnings."
"formatwarning` now catches exceptions on ``linecache.getline(...)`` to be "
"able to log :exc:`ResourceWarning` emitted late during the Python shutdown "
"process."
msgstr ""
"`bpo-21925 <https://bugs.python.org/issue21925>`__: :func:`warnings."
"formatwarning` now catches exceptions on ``linecache.getline(...)`` to be "
"able to log :exc:`ResourceWarning` emitted late during the Python shutdown "
"process."

#: ../../../Misc/NEWS:4966
msgid ""
"`bpo-15068 <https://bugs.python.org/issue15068>`__: Got rid of excessive "
"buffering in the fileinput module. The bufsize parameter is no longer used."
msgstr ""
"`bpo-15068 <https://bugs.python.org/issue15068>`__: Got rid of excessive "
"buffering in the fileinput module. The bufsize parameter is no longer used."

#: ../../../Misc/NEWS:4995
msgid ""
"`bpo-26367 <https://bugs.python.org/issue26367>`__: importlib.__import__() "
"raises SystemError like builtins.__import__() when ``level`` is specified "
"but without an accompanying package specified."
msgstr ""
"`bpo-26367 <https://bugs.python.org/issue26367>`__: importlib.__import__() "
"raises SystemError like builtins.__import__() when ``level`` is specified "
"but without an accompanying package specified."

#: ../../../Misc/NEWS:5048
msgid ""
"`bpo-17633 <https://bugs.python.org/issue17633>`__: Improve zipimport's "
"support for namespace packages."
msgstr ""
"`bpo-17633 <https://bugs.python.org/issue17633>`__: Improve zipimport's "
"support for namespace packages."

#: ../../../Misc/NEWS:5068
msgid ""
"`bpo-25447 <https://bugs.python.org/issue25447>`__: Copying the lru_cache() "
"wrapper object now always works, independedly from the type of the wrapped "
"object (by returning the original object unchanged)."
msgstr ""
"`bpo-25447 <https://bugs.python.org/issue25447>`__: Copying the lru_cache() "
"wrapper object now always works, independedly from the type of the wrapped "
"object (by returning the original object unchanged)."

#: ../../../Misc/NEWS:5147
msgid ""
"`bpo-27223 <https://bugs.python.org/issue27223>`__: asyncio: Fix _read_ready "
"and _write_ready to respect _conn_lost. Patch by ≈Åukasz Langa."
msgstr ""
"`bpo-27223 <https://bugs.python.org/issue27223>`__: asyncio: Fix _read_ready "
"and _write_ready to respect _conn_lost. Patch by ≈Åukasz Langa."

#: ../../../Misc/NEWS:5151
msgid ""
"`bpo-22970 <https://bugs.python.org/issue22970>`__: asyncio: Fix "
"inconsistency cancelling Condition.wait. Patch by David Coles."
msgstr ""
"`bpo-22970 <https://bugs.python.org/issue22970>`__: asyncio: Fix "
"inconsistency cancelling Condition.wait. Patch by David Coles."

#: ../../../Misc/NEWS:5187
msgid ""
"`bpo-21703 <https://bugs.python.org/issue21703>`__: Add test for IDLE's undo "
"delegator. Original patch by Saimadhav Heblikar ."
msgstr ""
"`bpo-21703 <https://bugs.python.org/issue21703>`__: Add test for IDLE's undo "
"delegator. Original patch by Saimadhav Heblikar ."

#: ../../../Misc/NEWS:5223
msgid ""
"`bpo-25500 <https://bugs.python.org/issue25500>`__: Fix documentation to not "
"claim that __import__ is searched for in the global scope."
msgstr ""
"`bpo-25500 <https://bugs.python.org/issue25500>`__: Fix documentation to not "
"claim that __import__ is searched for in the global scope."

#: ../../../Misc/NEWS:5244
msgid ""
"`bpo-25940 <https://bugs.python.org/issue25940>`__: Changed test_ssl to use "
"self-signed.pythontest.net.  This avoids relying on svn.python.org, which "
"recently changed root certificate."
msgstr ""
"`bpo-25940 <https://bugs.python.org/issue25940>`__: Changed test_ssl to use "
"self-signed.pythontest.net.  This avoids relying on svn.python.org, which "
"recently changed root certificate."

#: ../../../Misc/NEWS:5267
msgid ""
"`bpo-21668 <https://bugs.python.org/issue21668>`__: Link audioop, _datetime, "
"_ctypes_test modules to libm, except on Mac OS X. Patch written by Xavier de "
"Gaye."
msgstr ""
"`bpo-21668 <https://bugs.python.org/issue21668>`__: Link audioop, _datetime, "
"_ctypes_test modules to libm, except on Mac OS X. Patch written by Xavier de "
"Gaye."

#: ../../../Misc/NEWS:5291
msgid ""
"`bpo-25348 <https://bugs.python.org/issue25348>`__: Added ``--pgo`` and ``--"
"pgo-job`` arguments to ``PCbuild\\build.bat`` for building with Profile-"
"Guided Optimization.  The old ``PCbuild\\build_pgo.bat`` script is now "
"deprecated, and simply calls ``PCbuild\\build.bat --pgo %*``."
msgstr ""
"`bpo-25348 <https://bugs.python.org/issue25348>`__: Added ``--pgo`` and ``--"
"pgo-job`` arguments to ``PCbuild\\build.bat`` for building with Profile-"
"Guided Optimization.  The old ``PCbuild\\build_pgo.bat`` script is now "
"deprecated, and simply calls ``PCbuild\\build.bat --pgo %*``."

#: ../../../Misc/NEWS:5353
msgid "Python 3.5.1 final"
msgstr "Python 3.5.1 final"

#: ../../../Misc/NEWS:5355
msgid "Release date: 2015-12-06"
msgstr "Date de sortie : 2015-12-06"

#: ../../../Misc/NEWS:5366
msgid ""
"`bpo-25715 <https://bugs.python.org/issue25715>`__: Python 3.5.1 installer "
"shows wrong upgrade path and incorrect logic for launcher detection."
msgstr ""
"`bpo-25715 <https://bugs.python.org/issue25715>`__: Python 3.5.1 installer "
"shows wrong upgrade path and incorrect logic for launcher detection."

#: ../../../Misc/NEWS:5371
msgid "Python 3.5.1 release candidate 1"
msgstr "Python 3.5.1 release candidate 1"

#: ../../../Misc/NEWS:5373
msgid "Release date: 2015-11-22"
msgstr "Date de sortie : 2015-11-22"

#: ../../../Misc/NEWS:5431
msgid ""
"`bpo-25182 <https://bugs.python.org/issue25182>`__: The stdprinter (used as "
"sys.stderr before the io module is imported at startup) now uses the "
"backslashreplace error handler."
msgstr ""
"`bpo-25182 <https://bugs.python.org/issue25182>`__: The stdprinter (used as "
"sys.stderr before the io module is imported at startup) now uses the "
"backslashreplace error handler."

#: ../../../Misc/NEWS:5434
msgid ""
"`bpo-25131 <https://bugs.python.org/issue25131>`__: Make the line number and "
"column offset of set/dict literals and comprehensions correspond to the "
"opening brace."
msgstr ""
"`bpo-25131 <https://bugs.python.org/issue25131>`__: Make the line number and "
"column offset of set/dict literals and comprehensions correspond to the "
"opening brace."

#: ../../../Misc/NEWS:5437
msgid ""
"`bpo-25150 <https://bugs.python.org/issue25150>`__: Hide the private "
"_Py_atomic_xxx symbols from the public Python.h header to fix a compilation "
"error with OpenMP. PyThreadState_GET() becomes an alias to "
"PyThreadState_Get() to avoid ABI incompatibilies."
msgstr ""
"`bpo-25150 <https://bugs.python.org/issue25150>`__: Hide the private "
"_Py_atomic_xxx symbols from the public Python.h header to fix a compilation "
"error with OpenMP. PyThreadState_GET() becomes an alias to "
"PyThreadState_Get() to avoid ABI incompatibilies."

#: ../../../Misc/NEWS:5460
msgid ""
"`bpo-25590 <https://bugs.python.org/issue25590>`__: In the Readline "
"completer, only call getattr() once per attribute."
msgstr ""
"`bpo-25590 <https://bugs.python.org/issue25590>`__: In the Readline "
"completer, only call getattr() once per attribute."

#: ../../../Misc/NEWS:5538
msgid ""
"`bpo-24483 <https://bugs.python.org/issue24483>`__: C implementation of "
"functools.lru_cache() now calculates key's hash only once."
msgstr ""
"`bpo-24483 <https://bugs.python.org/issue24483>`__: C implementation of "
"functools.lru_cache() now calculates key's hash only once."

#: ../../../Misc/NEWS:5541
msgid ""
"`bpo-22958 <https://bugs.python.org/issue22958>`__: Constructor and update "
"method of weakref.WeakValueDictionary now accept the self and the dict "
"keyword arguments."
msgstr ""
"`bpo-22958 <https://bugs.python.org/issue22958>`__: Constructor and update "
"method of weakref.WeakValueDictionary now accept the self and the dict "
"keyword arguments."

#: ../../../Misc/NEWS:5544
msgid ""
"`bpo-22609 <https://bugs.python.org/issue22609>`__: Constructor of "
"collections.UserDict now accepts the self keyword argument."
msgstr ""
"`bpo-22609 <https://bugs.python.org/issue22609>`__: Constructor of "
"collections.UserDict now accepts the self keyword argument."

#: ../../../Misc/NEWS:5547
msgid ""
"`bpo-25111 <https://bugs.python.org/issue25111>`__: Fixed comparison of "
"traceback.FrameSummary."
msgstr ""
"`bpo-25111 <https://bugs.python.org/issue25111>`__: Fixed comparison of "
"traceback.FrameSummary."

#: ../../../Misc/NEWS:5549
msgid ""
"`bpo-25262 <https://bugs.python.org/issue25262>`__: Added support for "
"BINBYTES8 opcode in Python implementation of unpickler.  Highest 32 bits of "
"64-bit size for BINUNICODE8 and BINBYTES8 opcodes no longer silently ignored "
"on 32-bit platforms in C implementation."
msgstr ""
"`bpo-25262 <https://bugs.python.org/issue25262>`__: Added support for "
"BINBYTES8 opcode in Python implementation of unpickler.  Highest 32 bits of "
"64-bit size for BINUNICODE8 and BINBYTES8 opcodes no longer silently ignored "
"on 32-bit platforms in C implementation."

#: ../../../Misc/NEWS:5553
msgid ""
"`bpo-25034 <https://bugs.python.org/issue25034>`__: Fix string.Formatter "
"problem with auto-numbering and nested format_specs. Patch by Anthon van der "
"Neut."
msgstr ""
"`bpo-25034 <https://bugs.python.org/issue25034>`__: Fix string.Formatter "
"problem with auto-numbering and nested format_specs. Patch by Anthon van der "
"Neut."

#: ../../../Misc/NEWS:5556
msgid ""
"`bpo-25233 <https://bugs.python.org/issue25233>`__: Rewrite the guts of "
"asyncio.Queue and asyncio.Semaphore to be more understandable and correct."
msgstr ""
"`bpo-25233 <https://bugs.python.org/issue25233>`__: Rewrite the guts of "
"asyncio.Queue and asyncio.Semaphore to be more understandable and correct."

#: ../../../Misc/NEWS:5565
msgid ""
"`bpo-23329 <https://bugs.python.org/issue23329>`__: Allow the ssl module to "
"be built with older versions of LibreSSL."
msgstr ""
"`bpo-23329 <https://bugs.python.org/issue23329>`__: Allow the ssl module to "
"be built with older versions of LibreSSL."

#: ../../../Misc/NEWS:5568
msgid "Prevent overflow in _Unpickler_Read."
msgstr ""

#: ../../../Misc/NEWS:5570
msgid ""
"`bpo-25047 <https://bugs.python.org/issue25047>`__: The XML encoding "
"declaration written by Element Tree now respects the letter case given by "
"the user. This restores the ability to write encoding names in uppercase "
"like \"UTF-8\", which worked in Python 2."
msgstr ""
"`bpo-25047 <https://bugs.python.org/issue25047>`__: The XML encoding "
"declaration written by Element Tree now respects the letter case given by "
"the user. This restores the ability to write encoding names in uppercase "
"like \"UTF-8\", which worked in Python 2."

#: ../../../Misc/NEWS:5574
msgid ""
"`bpo-25135 <https://bugs.python.org/issue25135>`__: Make deque_clear() safer "
"by emptying the deque before clearing. This helps avoid possible reentrancy "
"issues."
msgstr ""
"`bpo-25135 <https://bugs.python.org/issue25135>`__: Make deque_clear() safer "
"by emptying the deque before clearing. This helps avoid possible reentrancy "
"issues."

#: ../../../Misc/NEWS:5577
msgid ""
"`bpo-19143 <https://bugs.python.org/issue19143>`__: platform module now "
"reads Windows version from kernel32.dll to avoid compatibility shims."
msgstr ""
"`bpo-19143 <https://bugs.python.org/issue19143>`__: platform module now "
"reads Windows version from kernel32.dll to avoid compatibility shims."

#: ../../../Misc/NEWS:5580
msgid ""
"`bpo-25092 <https://bugs.python.org/issue25092>`__: Fix datetime.strftime() "
"failure when errno was already set to EINVAL."
msgstr ""
"`bpo-25092 <https://bugs.python.org/issue25092>`__: Fix datetime.strftime() "
"failure when errno was already set to EINVAL."

#: ../../../Misc/NEWS:5583
msgid ""
"`bpo-23517 <https://bugs.python.org/issue23517>`__: Fix rounding in "
"fromtimestamp() and utcfromtimestamp() methods of datetime.datetime: "
"microseconds are now rounded to nearest with ties going to nearest even "
"integer (ROUND_HALF_EVEN), instead of being rounding towards minus infinity "
"(ROUND_FLOOR). It's important that these methods use the same rounding mode "
"than datetime.timedelta to keep the property: (datetime(1970,1,1) + "
"timedelta(seconds=t)) == datetime.utcfromtimestamp(t). It also the rounding "
"mode used by round(float) for example."
msgstr ""
"`bpo-23517 <https://bugs.python.org/issue23517>`__: Fix rounding in "
"fromtimestamp() and utcfromtimestamp() methods of datetime.datetime: "
"microseconds are now rounded to nearest with ties going to nearest even "
"integer (ROUND_HALF_EVEN), instead of being rounding towards minus infinity "
"(ROUND_FLOOR). It's important that these methods use the same rounding mode "
"than datetime.timedelta to keep the property: (datetime(1970,1,1) + "
"timedelta(seconds=t)) == datetime.utcfromtimestamp(t). It also the rounding "
"mode used by round(float) for example."

#: ../../../Misc/NEWS:5591
msgid ""
"`bpo-25155 <https://bugs.python.org/issue25155>`__: Fix datetime.datetime."
"now() and datetime.datetime.utcnow() on Windows to support date after year "
"2038. It was a regression introduced in Python 3.5.0."
msgstr ""
"`bpo-25155 <https://bugs.python.org/issue25155>`__: Fix datetime.datetime."
"now() and datetime.datetime.utcnow() on Windows to support date after year "
"2038. It was a regression introduced in Python 3.5.0."

#: ../../../Misc/NEWS:5595
msgid ""
"`bpo-25108 <https://bugs.python.org/issue25108>`__: Omitted internal frames "
"in traceback functions print_stack(), format_stack(), and extract_stack() "
"called without arguments."
msgstr ""
"`bpo-25108 <https://bugs.python.org/issue25108>`__: Omitted internal frames "
"in traceback functions print_stack(), format_stack(), and extract_stack() "
"called without arguments."

#: ../../../Misc/NEWS:5598
msgid ""
"`bpo-25118 <https://bugs.python.org/issue25118>`__: Fix a regression of "
"Python 3.5.0 in os.waitpid() on Windows."
msgstr ""
"`bpo-25118 <https://bugs.python.org/issue25118>`__: Fix a regression of "
"Python 3.5.0 in os.waitpid() on Windows."

#: ../../../Misc/NEWS:5600
msgid ""
"`bpo-24684 <https://bugs.python.org/issue24684>`__: socket.socket."
"getaddrinfo() now calls PyUnicode_AsEncodedString() instead of calling the "
"encode() method of the host, to handle correctly custom string with an "
"encode() method which doesn't return a byte string. The encoder of the IDNA "
"codec is now called directly instead of calling the encode() method of the "
"string."
msgstr ""
"`bpo-24684 <https://bugs.python.org/issue24684>`__: socket.socket."
"getaddrinfo() now calls PyUnicode_AsEncodedString() instead of calling the "
"encode() method of the host, to handle correctly custom string with an "
"encode() method which doesn't return a byte string. The encoder of the IDNA "
"codec is now called directly instead of calling the encode() method of the "
"string."

#: ../../../Misc/NEWS:5606
msgid ""
"`bpo-25060 <https://bugs.python.org/issue25060>`__: Correctly compute stack "
"usage of the BUILD_MAP opcode."
msgstr ""
"`bpo-25060 <https://bugs.python.org/issue25060>`__: Correctly compute stack "
"usage of the BUILD_MAP opcode."

#: ../../../Misc/NEWS:5608
msgid ""
"`bpo-24857 <https://bugs.python.org/issue24857>`__: Comparing call_args to a "
"long sequence now correctly returns a boolean result instead of raising an "
"exception.  Patch by A Kaptur."
msgstr ""
"`bpo-24857 <https://bugs.python.org/issue24857>`__: Comparing call_args to a "
"long sequence now correctly returns a boolean result instead of raising an "
"exception.  Patch by A Kaptur."

#: ../../../Misc/NEWS:5611
msgid ""
"`bpo-23144 <https://bugs.python.org/issue23144>`__: Make sure that "
"HTMLParser.feed() returns all the data, even when convert_charrefs is True."
msgstr ""
"`bpo-23144 <https://bugs.python.org/issue23144>`__: Make sure that "
"HTMLParser.feed() returns all the data, even when convert_charrefs is True."

#: ../../../Misc/NEWS:5614
msgid ""
"`bpo-24982 <https://bugs.python.org/issue24982>`__: shutil.make_archive() "
"with the \"zip\" format now adds entries for directories (including empty "
"directories) in ZIP file."
msgstr ""
"`bpo-24982 <https://bugs.python.org/issue24982>`__: shutil.make_archive() "
"with the \"zip\" format now adds entries for directories (including empty "
"directories) in ZIP file."

#: ../../../Misc/NEWS:5617
msgid ""
"`bpo-25019 <https://bugs.python.org/issue25019>`__: Fixed a crash caused by "
"setting non-string key of expat parser. Based on patch by John Leitch."
msgstr ""
"`bpo-25019 <https://bugs.python.org/issue25019>`__: Fixed a crash caused by "
"setting non-string key of expat parser. Based on patch by John Leitch."

#: ../../../Misc/NEWS:5620
msgid ""
"`bpo-16180 <https://bugs.python.org/issue16180>`__: Exit pdb if file has "
"syntax error, instead of trapping user in an infinite loop.  Patch by Xavier "
"de Gaye."
msgstr ""
"`bpo-16180 <https://bugs.python.org/issue16180>`__: Exit pdb if file has "
"syntax error, instead of trapping user in an infinite loop.  Patch by Xavier "
"de Gaye."

#: ../../../Misc/NEWS:5623
msgid ""
"`bpo-24891 <https://bugs.python.org/issue24891>`__: Fix a race condition at "
"Python startup if the file descriptor of stdin (0), stdout (1) or stderr (2) "
"is closed while Python is creating sys.stdin, sys.stdout and sys.stderr "
"objects. These attributes are now set to None if the creation of the object "
"failed, instead of raising an OSError exception. Initial patch written by "
"Marco Paolini."
msgstr ""
"`bpo-24891 <https://bugs.python.org/issue24891>`__: Fix a race condition at "
"Python startup if the file descriptor of stdin (0), stdout (1) or stderr (2) "
"is closed while Python is creating sys.stdin, sys.stdout and sys.stderr "
"objects. These attributes are now set to None if the creation of the object "
"failed, instead of raising an OSError exception. Initial patch written by "
"Marco Paolini."

#: ../../../Misc/NEWS:5629
msgid ""
"`bpo-24992 <https://bugs.python.org/issue24992>`__: Fix error handling and a "
"race condition (related to garbage collection) in collections.OrderedDict "
"constructor."
msgstr ""
"`bpo-24992 <https://bugs.python.org/issue24992>`__: Fix error handling and a "
"race condition (related to garbage collection) in collections.OrderedDict "
"constructor."

#: ../../../Misc/NEWS:5632
msgid ""
"`bpo-24881 <https://bugs.python.org/issue24881>`__: Fixed setting binary "
"mode in Python implementation of FileIO on Windows and Cygwin.  Patch from "
"Akira Li."
msgstr ""
"`bpo-24881 <https://bugs.python.org/issue24881>`__: Fixed setting binary "
"mode in Python implementation of FileIO on Windows and Cygwin.  Patch from "
"Akira Li."

#: ../../../Misc/NEWS:5648
msgid ""
"`bpo-21112 <https://bugs.python.org/issue21112>`__: Fix regression in "
"unittest.expectedFailure on subclasses. Patch from Berker Peksag."
msgstr ""
"`bpo-21112 <https://bugs.python.org/issue21112>`__: Fix regression in "
"unittest.expectedFailure on subclasses. Patch from Berker Peksag."

#: ../../../Misc/NEWS:5651
msgid ""
"`bpo-24764 <https://bugs.python.org/issue24764>`__: cgi.FieldStorage."
"read_multi() now ignores the Content-Length header in part headers. Patch "
"written by Peter Landry and reviewed by Pierre Quentel."
msgstr ""
"`bpo-24764 <https://bugs.python.org/issue24764>`__: cgi.FieldStorage."
"read_multi() now ignores the Content-Length header in part headers. Patch "
"written by Peter Landry and reviewed by Pierre Quentel."

#: ../../../Misc/NEWS:5655 ../../../Misc/NEWS:5921
msgid ""
"`bpo-24913 <https://bugs.python.org/issue24913>`__: Fix overrun error in "
"deque.index(). Found by John Leitch and Bryce Darling."
msgstr ""
"`bpo-24913 <https://bugs.python.org/issue24913>`__: Fix overrun error in "
"deque.index(). Found by John Leitch and Bryce Darling."

#: ../../../Misc/NEWS:5658
msgid ""
"`bpo-24774 <https://bugs.python.org/issue24774>`__: Fix docstring in http."
"server.test. Patch from Chiu-Hsiang Hsu."
msgstr ""
"`bpo-24774 <https://bugs.python.org/issue24774>`__: Fix docstring in http."
"server.test. Patch from Chiu-Hsiang Hsu."

#: ../../../Misc/NEWS:5660
msgid ""
"`bpo-21159 <https://bugs.python.org/issue21159>`__: Improve message in "
"configparser.InterpolationMissingOptionError. Patch from ≈Åukasz Langa."
msgstr ""
"`bpo-21159 <https://bugs.python.org/issue21159>`__: Improve message in "
"configparser.InterpolationMissingOptionError. Patch from ≈Åukasz Langa."

#: ../../../Misc/NEWS:5663
msgid ""
"`bpo-20362 <https://bugs.python.org/issue20362>`__: Honour TestCase."
"longMessage correctly in assertRegex. Patch from Ilia Kurenkov."
msgstr ""
"`bpo-20362 <https://bugs.python.org/issue20362>`__: Honour TestCase."
"longMessage correctly in assertRegex. Patch from Ilia Kurenkov."

#: ../../../Misc/NEWS:5666
msgid ""
"`bpo-23572 <https://bugs.python.org/issue23572>`__: Fixed functools."
"singledispatch on classes with falsy metaclasses.  Patch by Ethan Furman."
msgstr ""
"`bpo-23572 <https://bugs.python.org/issue23572>`__: Fixed functools."
"singledispatch on classes with falsy metaclasses.  Patch by Ethan Furman."

#: ../../../Misc/NEWS:5669
msgid "asyncio: ensure_future() now accepts awaitable objects."
msgstr ""

#: ../../../Misc/NEWS:5758
msgid ""
"`bpo-16893 <https://bugs.python.org/issue16893>`__: Replace help.txt with "
"help.html for Idle doc display. The new idlelib/help.html is rstripped Doc/"
"build/html/library/idle.html. It looks better than help.txt and will better "
"document Idle as released. The tkinter html viewer that works for this file "
"was written by Mark Roseman. The now unused EditorWindow.HelpDialog class "
"and helt.txt file are deprecated."
msgstr ""
"`bpo-16893 <https://bugs.python.org/issue16893>`__: Replace help.txt with "
"help.html for Idle doc display. The new idlelib/help.html is rstripped Doc/"
"build/html/library/idle.html. It looks better than help.txt and will better "
"document Idle as released. The tkinter html viewer that works for this file "
"was written by Mark Roseman. The now unused EditorWindow.HelpDialog class "
"and helt.txt file are deprecated."

#: ../../../Misc/NEWS:5774
msgid ""
"`bpo-12067 <https://bugs.python.org/issue12067>`__: Rewrite Comparisons "
"section in the Expressions chapter of the language reference. Some of the "
"details of comparing mixed types were incorrect or ambiguous. NotImplemented "
"is only relevant at a lower level than the Expressions chapter. Added "
"details of comparing range() objects, and default behaviour and consistency "
"suggestions for user-defined classes. Patch from Andy Maier."
msgstr ""
"`bpo-12067 <https://bugs.python.org/issue12067>`__: Rewrite Comparisons "
"section in the Expressions chapter of the language reference. Some of the "
"details of comparing mixed types were incorrect or ambiguous. NotImplemented "
"is only relevant at a lower level than the Expressions chapter. Added "
"details of comparing range() objects, and default behaviour and consistency "
"suggestions for user-defined classes. Patch from Andy Maier."

#: ../../../Misc/NEWS:5784
msgid ""
"`bpo-23725 <https://bugs.python.org/issue23725>`__: Overhaul tempfile docs. "
"Note deprecated status of mktemp. Patch from Zbigniew Jƒôdrzejewski-Szmek."
msgstr ""
"`bpo-23725 <https://bugs.python.org/issue23725>`__: Overhaul tempfile docs. "
"Note deprecated status of mktemp. Patch from Zbigniew Jƒôdrzejewski-Szmek."

#: ../../../Misc/NEWS:5787
msgid ""
"`bpo-24808 <https://bugs.python.org/issue24808>`__: Update the types of some "
"PyTypeObject fields.  Patch by Joseph Weston."
msgstr ""
"`bpo-24808 <https://bugs.python.org/issue24808>`__: Update the types of some "
"PyTypeObject fields.  Patch by Joseph Weston."

#: ../../../Misc/NEWS:5790
msgid ""
"`bpo-22812 <https://bugs.python.org/issue22812>`__: Fix unittest discovery "
"examples. Patch from Pam McA'Nulty."
msgstr ""
"`bpo-22812 <https://bugs.python.org/issue22812>`__: Fix unittest discovery "
"examples. Patch from Pam McA'Nulty."

#: ../../../Misc/NEWS:5798
msgid ""
"`bpo-25099 <https://bugs.python.org/issue25099>`__: Make test_compileall not "
"fail when an entry on sys.path cannot be written to (commonly seen in "
"administrative installs on Windows)."
msgstr ""
"`bpo-25099 <https://bugs.python.org/issue25099>`__: Make test_compileall not "
"fail when an entry on sys.path cannot be written to (commonly seen in "
"administrative installs on Windows)."

#: ../../../Misc/NEWS:5801
msgid ""
"`bpo-23919 <https://bugs.python.org/issue23919>`__: Prevents assert dialogs "
"appearing in the test suite."
msgstr ""
"`bpo-23919 <https://bugs.python.org/issue23919>`__: Prevents assert dialogs "
"appearing in the test suite."

#: ../../../Misc/NEWS:5809
msgid ""
"`bpo-24915 <https://bugs.python.org/issue24915>`__: Add LLVM support for PGO "
"builds and use the test suite to generate the profile data. Initial patch by "
"Alecsandru Patrascu of Intel."
msgstr ""
"`bpo-24915 <https://bugs.python.org/issue24915>`__: Add LLVM support for PGO "
"builds and use the test suite to generate the profile data. Initial patch by "
"Alecsandru Patrascu of Intel."

#: ../../../Misc/NEWS:5812
msgid ""
"`bpo-24910 <https://bugs.python.org/issue24910>`__: Windows MSIs now have "
"unique display names."
msgstr ""
"`bpo-24910 <https://bugs.python.org/issue24910>`__: Windows MSIs now have "
"unique display names."

#: ../../../Misc/NEWS:5820
msgid ""
"`bpo-25450 <https://bugs.python.org/issue25450>`__: Updates shortcuts to "
"start Python in installation directory."
msgstr ""
"`bpo-25450 <https://bugs.python.org/issue25450>`__: Updates shortcuts to "
"start Python in installation directory."

#: ../../../Misc/NEWS:5822
msgid ""
"`bpo-25164 <https://bugs.python.org/issue25164>`__: Changes default all-"
"users install directory to match per-user directory."
msgstr ""
"`bpo-25164 <https://bugs.python.org/issue25164>`__: Changes default all-"
"users install directory to match per-user directory."

#: ../../../Misc/NEWS:5825
msgid ""
"`bpo-25143 <https://bugs.python.org/issue25143>`__: Improves installer error "
"messages for unsupported platforms."
msgstr ""
"`bpo-25143 <https://bugs.python.org/issue25143>`__: Improves installer error "
"messages for unsupported platforms."

#: ../../../Misc/NEWS:5827
msgid ""
"`bpo-25163 <https://bugs.python.org/issue25163>`__: Display correct "
"directory in installer when using non-default settings."
msgstr ""
"`bpo-25163 <https://bugs.python.org/issue25163>`__: Display correct "
"directory in installer when using non-default settings."

#: ../../../Misc/NEWS:5830
msgid ""
"`bpo-25361 <https://bugs.python.org/issue25361>`__: Disables use of SSE2 "
"instructions in Windows 32-bit build"
msgstr ""
"`bpo-25361 <https://bugs.python.org/issue25361>`__: Disables use of SSE2 "
"instructions in Windows 32-bit build"

#: ../../../Misc/NEWS:5832
msgid ""
"`bpo-25089 <https://bugs.python.org/issue25089>`__: Adds logging to "
"installer for case where launcher is not selected on upgrade."
msgstr ""
"`bpo-25089 <https://bugs.python.org/issue25089>`__: Adds logging to "
"installer for case where launcher is not selected on upgrade."

#: ../../../Misc/NEWS:5835
msgid ""
"`bpo-25165 <https://bugs.python.org/issue25165>`__: Windows uninstallation "
"should not remove launcher if other versions remain"
msgstr ""
"`bpo-25165 <https://bugs.python.org/issue25165>`__: Windows uninstallation "
"should not remove launcher if other versions remain"

#: ../../../Misc/NEWS:5838
msgid ""
"`bpo-25112 <https://bugs.python.org/issue25112>`__: py.exe launcher is "
"missing icons"
msgstr ""
"`bpo-25112 <https://bugs.python.org/issue25112>`__: py.exe launcher is "
"missing icons"

#: ../../../Misc/NEWS:5840
msgid ""
"`bpo-25102 <https://bugs.python.org/issue25102>`__: Windows installer does "
"not precompile for -O or -OO."
msgstr ""
"`bpo-25102 <https://bugs.python.org/issue25102>`__: Windows installer does "
"not precompile for -O or -OO."

#: ../../../Misc/NEWS:5842
msgid ""
"`bpo-25081 <https://bugs.python.org/issue25081>`__: Makes Back button in "
"installer go back to upgrade page when upgrading."
msgstr ""
"`bpo-25081 <https://bugs.python.org/issue25081>`__: Makes Back button in "
"installer go back to upgrade page when upgrading."

#: ../../../Misc/NEWS:5845
msgid ""
"`bpo-25091 <https://bugs.python.org/issue25091>`__: Increases font size of "
"the installer."
msgstr ""
"`bpo-25091 <https://bugs.python.org/issue25091>`__: Increases font size of "
"the installer."

#: ../../../Misc/NEWS:5847
msgid ""
"`bpo-25126 <https://bugs.python.org/issue25126>`__: Clarifies that the non-"
"web installer will download some components."
msgstr ""
"`bpo-25126 <https://bugs.python.org/issue25126>`__: Clarifies that the non-"
"web installer will download some components."

#: ../../../Misc/NEWS:5850
msgid ""
"`bpo-25213 <https://bugs.python.org/issue25213>`__: Restores "
"requestedExecutionLevel to manifest to disable UAC virtualization."
msgstr ""
"`bpo-25213 <https://bugs.python.org/issue25213>`__: Restores "
"requestedExecutionLevel to manifest to disable UAC virtualization."

#: ../../../Misc/NEWS:5862
msgid "Python 3.5.0 final"
msgstr "Python 3.5.0 final"

#: ../../../Misc/NEWS:5864
msgid "Release date: 2015-09-13"
msgstr "Date de sortie : 2015-09-13"

#: ../../../Misc/NEWS:5869
msgid ""
"`bpo-25071 <https://bugs.python.org/issue25071>`__: Windows installer should "
"not require TargetDir parameter when installing quietly."
msgstr ""
"`bpo-25071 <https://bugs.python.org/issue25071>`__: Windows installer should "
"not require TargetDir parameter when installing quietly."

#: ../../../Misc/NEWS:5874
msgid "Python 3.5.0 release candidate 4"
msgstr "Python 3.5.0 release candidate 4"

#: ../../../Misc/NEWS:5876
msgid "Release date: 2015-09-09"
msgstr "Date de sortie¬†: 2015-09-09"

#: ../../../Misc/NEWS:5881
msgid ""
"`bpo-25029 <https://bugs.python.org/issue25029>`__: Fixes MemoryError in "
"test_strptime."
msgstr ""
"`bpo-25029 <https://bugs.python.org/issue25029>`__: Fixes MemoryError in "
"test_strptime."

#: ../../../Misc/NEWS:5886
msgid ""
"`bpo-25027 <https://bugs.python.org/issue25027>`__: Reverts partial-static "
"build options and adds vcruntime140.dll to Windows installation."
msgstr ""
"`bpo-25027 <https://bugs.python.org/issue25027>`__: Reverts partial-static "
"build options and adds vcruntime140.dll to Windows installation."

#: ../../../Misc/NEWS:5891
msgid "Python 3.5.0 release candidate 3"
msgstr "Python 3.5.0 release candidate 3"

#: ../../../Misc/NEWS:5893
msgid "Release date: 2015-09-07"
msgstr "Date de sortie¬†: 2015-09-07"

#: ../../../Misc/NEWS:5898
msgid ""
"`bpo-24305 <https://bugs.python.org/issue24305>`__: Prevent import subsystem "
"stack frames from being counted by the warnings.warn(stacklevel=) parameter."
msgstr ""
"`bpo-24305 <https://bugs.python.org/issue24305>`__: Prevent import subsystem "
"stack frames from being counted by the warnings.warn(stacklevel=) parameter."

#: ../../../Misc/NEWS:5901
msgid ""
"`bpo-24912 <https://bugs.python.org/issue24912>`__: Prevent __class__ "
"assignment to immutable built-in objects."
msgstr ""
"`bpo-24912 <https://bugs.python.org/issue24912>`__: Prevent __class__ "
"assignment to immutable built-in objects."

#: ../../../Misc/NEWS:5903
msgid ""
"`bpo-24975 <https://bugs.python.org/issue24975>`__: Fix AST compilation for "
"PEP 448 syntax."
msgstr ""
"`bpo-24975 <https://bugs.python.org/issue24975>`__: Fix AST compilation for "
"PEP 448 syntax."

#: ../../../Misc/NEWS:5908
msgid ""
"`bpo-24917 <https://bugs.python.org/issue24917>`__: time_strftime() buffer "
"over-read."
msgstr ""
"`bpo-24917 <https://bugs.python.org/issue24917>`__: time_strftime() buffer "
"over-read."

#: ../../../Misc/NEWS:5910
msgid ""
"`bpo-24748 <https://bugs.python.org/issue24748>`__: To resolve a "
"compatibility problem found with py2exe and pywin32, imp.load_dynamic() once "
"again ignores previously loaded modules to support Python modules replacing "
"themselves with extension modules. Patch by Petr Viktorin."
msgstr ""
"`bpo-24748 <https://bugs.python.org/issue24748>`__: To resolve a "
"compatibility problem found with py2exe and pywin32, imp.load_dynamic() once "
"again ignores previously loaded modules to support Python modules replacing "
"themselves with extension modules. Patch by Petr Viktorin."

#: ../../../Misc/NEWS:5915
msgid ""
"`bpo-24635 <https://bugs.python.org/issue24635>`__: Fixed a bug in typing.py "
"where isinstance([], typing.Iterable) would return True once, then False on "
"subsequent calls."
msgstr ""
"`bpo-24635 <https://bugs.python.org/issue24635>`__: Fixed a bug in typing.py "
"where isinstance([], typing.Iterable) would return True once, then False on "
"subsequent calls."

#: ../../../Misc/NEWS:5918
msgid ""
"`bpo-24989 <https://bugs.python.org/issue24989>`__: Fixed buffer overread in "
"BytesIO.readline() if a position is set beyond size.  Based on patch by John "
"Leitch."
msgstr ""
"`bpo-24989 <https://bugs.python.org/issue24989>`__: Fixed buffer overread in "
"BytesIO.readline() if a position is set beyond size.  Based on patch by John "
"Leitch."

#: ../../../Misc/NEWS:5926
msgid "Python 3.5.0 release candidate 2"
msgstr "Python 3.5.0 release candidate 2"

#: ../../../Misc/NEWS:5928
msgid "Release date: 2015-08-25"
msgstr "Date de sortie : 2015-08-25"

#: ../../../Misc/NEWS:5933
msgid ""
"`bpo-24769 <https://bugs.python.org/issue24769>`__: Interpreter now starts "
"properly when dynamic loading is disabled.  Patch by Petr Viktorin."
msgstr ""
"`bpo-24769 <https://bugs.python.org/issue24769>`__: Interpreter now starts "
"properly when dynamic loading is disabled.  Patch by Petr Viktorin."

#: ../../../Misc/NEWS:5936
msgid ""
"`bpo-21167 <https://bugs.python.org/issue21167>`__: NAN operations are now "
"handled correctly when python is compiled with ICC even if -fp-model strict "
"is not specified."
msgstr ""
"`bpo-21167 <https://bugs.python.org/issue21167>`__: NAN operations are now "
"handled correctly when python is compiled with ICC even if -fp-model strict "
"is not specified."

#: ../../../Misc/NEWS:5939
msgid ""
"`bpo-24492 <https://bugs.python.org/issue24492>`__: A \"package\" lacking a "
"__name__ attribute when trying to perform a ``from .. import ...`` statement "
"will trigger an ImportError instead of an AttributeError."
msgstr ""
"`bpo-24492 <https://bugs.python.org/issue24492>`__: A \"package\" lacking a "
"__name__ attribute when trying to perform a ``from .. import ...`` statement "
"will trigger an ImportError instead of an AttributeError."

#: ../../../Misc/NEWS:5946
msgid ""
"`bpo-24847 <https://bugs.python.org/issue24847>`__: Removes vcruntime140.dll "
"dependency from Tcl/Tk."
msgstr ""
"`bpo-24847 <https://bugs.python.org/issue24847>`__: Removes vcruntime140.dll "
"dependency from Tcl/Tk."

#: ../../../Misc/NEWS:5948
msgid ""
"`bpo-24839 <https://bugs.python.org/issue24839>`__: platform._syscmd_ver "
"raises DeprecationWarning"
msgstr ""
"`bpo-24839 <https://bugs.python.org/issue24839>`__: platform._syscmd_ver "
"raises DeprecationWarning"

#: ../../../Misc/NEWS:5950
msgid ""
"`bpo-24867 <https://bugs.python.org/issue24867>`__: Fix Task.get_stack() for "
"'async def' coroutines"
msgstr ""
"`bpo-24867 <https://bugs.python.org/issue24867>`__: Fix Task.get_stack() for "
"'async def' coroutines"

#: ../../../Misc/NEWS:5954
msgid "Python 3.5.0 release candidate 1"
msgstr "Python 3.5.0 release candidate 1"

#: ../../../Misc/NEWS:5956
msgid "Release date: 2015-08-09"
msgstr "Date de sortie : 2015-08-09"

#: ../../../Misc/NEWS:5961
msgid ""
"`bpo-24667 <https://bugs.python.org/issue24667>`__: Resize odict in all "
"cases that the underlying dict resizes."
msgstr ""
"`bpo-24667 <https://bugs.python.org/issue24667>`__: Resize odict in all "
"cases that the underlying dict resizes."

#: ../../../Misc/NEWS:5966
msgid ""
"`bpo-24824 <https://bugs.python.org/issue24824>`__: Signatures of codecs."
"encode() and codecs.decode() now are compatible with pydoc."
msgstr ""
"`bpo-24824 <https://bugs.python.org/issue24824>`__: Signatures of codecs."
"encode() and codecs.decode() now are compatible with pydoc."

#: ../../../Misc/NEWS:5969
msgid ""
"`bpo-24634 <https://bugs.python.org/issue24634>`__: Importing uuid should "
"not try to load libc on Windows"
msgstr ""
"`bpo-24634 <https://bugs.python.org/issue24634>`__: Importing uuid should "
"not try to load libc on Windows"

#: ../../../Misc/NEWS:5971
msgid ""
"`bpo-24798 <https://bugs.python.org/issue24798>`__: _msvccompiler.py doesn't "
"properly support manifests"
msgstr ""
"`bpo-24798 <https://bugs.python.org/issue24798>`__: _msvccompiler.py doesn't "
"properly support manifests"

#: ../../../Misc/NEWS:5973
msgid ""
"`bpo-4395 <https://bugs.python.org/issue4395>`__: Better testing and "
"documentation of binary operators. Patch by Martin Panter."
msgstr ""
"`bpo-4395 <https://bugs.python.org/issue4395>`__: Better testing and "
"documentation of binary operators. Patch by Martin Panter."

#: ../../../Misc/NEWS:5976
msgid ""
"`bpo-23973 <https://bugs.python.org/issue23973>`__: Update typing.py from "
"GitHub repo."
msgstr ""
"`bpo-23973 <https://bugs.python.org/issue23973>`__: Update typing.py from "
"GitHub repo."

#: ../../../Misc/NEWS:5978
msgid ""
"`bpo-23004 <https://bugs.python.org/issue23004>`__: mock_open() now reads "
"binary data correctly when the type of read_data is bytes.  Initial patch by "
"Aaron Hill."
msgstr ""
"`bpo-23004 <https://bugs.python.org/issue23004>`__: mock_open() now reads "
"binary data correctly when the type of read_data is bytes.  Initial patch by "
"Aaron Hill."

#: ../../../Misc/NEWS:5981
msgid ""
"`bpo-23888 <https://bugs.python.org/issue23888>`__: Handle fractional time "
"in cookie expiry. Patch by ssh."
msgstr ""
"`bpo-23888 <https://bugs.python.org/issue23888>`__: Handle fractional time "
"in cookie expiry. Patch by ssh."

#: ../../../Misc/NEWS:5983
msgid ""
"`bpo-23652 <https://bugs.python.org/issue23652>`__: Make it possible to "
"compile the select module against the libc headers from the Linux Standard "
"Base, which do not include some EPOLL macros.  Patch by Matt Frank."
msgstr ""
"`bpo-23652 <https://bugs.python.org/issue23652>`__: Make it possible to "
"compile the select module against the libc headers from the Linux Standard "
"Base, which do not include some EPOLL macros.  Patch by Matt Frank."

#: ../../../Misc/NEWS:5987
msgid ""
"`bpo-22932 <https://bugs.python.org/issue22932>`__: Fix timezones in email."
"utils.formatdate. Patch from Dmitry Shachnev."
msgstr ""
"`bpo-22932 <https://bugs.python.org/issue22932>`__: Fix timezones in email."
"utils.formatdate. Patch from Dmitry Shachnev."

#: ../../../Misc/NEWS:5990
msgid ""
"`bpo-23779 <https://bugs.python.org/issue23779>`__: imaplib raises TypeError "
"if authenticator tries to abort. Patch from Craig Holmquist."
msgstr ""
"`bpo-23779 <https://bugs.python.org/issue23779>`__: imaplib raises TypeError "
"if authenticator tries to abort. Patch from Craig Holmquist."

#: ../../../Misc/NEWS:5993
msgid ""
"`bpo-23319 <https://bugs.python.org/issue23319>`__: Fix ctypes."
"BigEndianStructure, swap correctly bytes. Patch written by Matthieu Gautier."
msgstr ""
"`bpo-23319 <https://bugs.python.org/issue23319>`__: Fix ctypes."
"BigEndianStructure, swap correctly bytes. Patch written by Matthieu Gautier."

#: ../../../Misc/NEWS:5996
msgid ""
"`bpo-23254 <https://bugs.python.org/issue23254>`__: Document how to close "
"the TCPServer listening socket. Patch from Martin Panter."
msgstr ""
"`bpo-23254 <https://bugs.python.org/issue23254>`__: Document how to close "
"the TCPServer listening socket. Patch from Martin Panter."

#: ../../../Misc/NEWS:5999
msgid ""
"`bpo-19450 <https://bugs.python.org/issue19450>`__: Update Windows and OS X "
"installer builds to use SQLite 3.8.11."
msgstr ""
"`bpo-19450 <https://bugs.python.org/issue19450>`__: Update Windows and OS X "
"installer builds to use SQLite 3.8.11."

#: ../../../Misc/NEWS:6001
msgid ""
"`bpo-17527 <https://bugs.python.org/issue17527>`__: Add PATCH to wsgiref."
"validator. Patch from Luca Sbardella."
msgstr ""
"`bpo-17527 <https://bugs.python.org/issue17527>`__: Add PATCH to wsgiref."
"validator. Patch from Luca Sbardella."

#: ../../../Misc/NEWS:6003
msgid ""
"`bpo-24791 <https://bugs.python.org/issue24791>`__: Fix grammar regression "
"for call syntax: 'g(\\*a or b)'."
msgstr ""
"`bpo-24791 <https://bugs.python.org/issue24791>`__: Fix grammar regression "
"for call syntax: 'g(\\*a or b)'."

#: ../../../Misc/NEWS:6008
msgid ""
"`bpo-23672 <https://bugs.python.org/issue23672>`__: Allow Idle to edit and "
"run files with astral chars in name. Patch by Mohd Sanad Zaki Rizvi."
msgstr ""
"`bpo-23672 <https://bugs.python.org/issue23672>`__: Allow Idle to edit and "
"run files with astral chars in name. Patch by Mohd Sanad Zaki Rizvi."

#: ../../../Misc/NEWS:6011
msgid ""
"`bpo-24745 <https://bugs.python.org/issue24745>`__: Idle editor default "
"font. Switch from Courier to platform-sensitive TkFixedFont.  This should "
"not affect current customized font selections.  If there is a problem, edit "
"$HOME/.idlerc/config-main.cfg and remove 'fontxxx' entries from [Editor "
"Window].  Patch by Mark Roseman."
msgstr ""
"`bpo-24745 <https://bugs.python.org/issue24745>`__: Idle editor default "
"font. Switch from Courier to platform-sensitive TkFixedFont.  This should "
"not affect current customized font selections.  If there is a problem, edit "
"$HOME/.idlerc/config-main.cfg and remove 'fontxxx' entries from [Editor "
"Window].  Patch by Mark Roseman."

#: ../../../Misc/NEWS:6016
msgid ""
"`bpo-21192 <https://bugs.python.org/issue21192>`__: Idle editor. When a file "
"is run, put its name in the restart bar. Do not print false prompts. "
"Original patch by Adnan Umer."
msgstr ""
"`bpo-21192 <https://bugs.python.org/issue21192>`__: Idle editor. When a file "
"is run, put its name in the restart bar. Do not print false prompts. "
"Original patch by Adnan Umer."

#: ../../../Misc/NEWS:6019
msgid ""
"`bpo-13884 <https://bugs.python.org/issue13884>`__: Idle menus. Remove "
"tearoff lines. Patch by Roger Serwy."
msgstr ""
"`bpo-13884 <https://bugs.python.org/issue13884>`__: Idle menus. Remove "
"tearoff lines. Patch by Roger Serwy."

#: ../../../Misc/NEWS:6024
msgid ""
"`bpo-24129 <https://bugs.python.org/issue24129>`__: Clarify the reference "
"documentation for name resolution. This includes removing the assumption "
"that readers will be familiar with the name resolution scheme Python used "
"prior to the introduction of lexical scoping for function namespaces. Patch "
"by Ivan Levkivskyi."
msgstr ""
"`bpo-24129 <https://bugs.python.org/issue24129>`__: Clarify the reference "
"documentation for name resolution. This includes removing the assumption "
"that readers will be familiar with the name resolution scheme Python used "
"prior to the introduction of lexical scoping for function namespaces. Patch "
"by Ivan Levkivskyi."

#: ../../../Misc/NEWS:6029
msgid ""
"`bpo-20769 <https://bugs.python.org/issue20769>`__: Improve reload() docs. "
"Patch by Dorian Pula."
msgstr ""
"`bpo-20769 <https://bugs.python.org/issue20769>`__: Improve reload() docs. "
"Patch by Dorian Pula."

#: ../../../Misc/NEWS:6031
msgid ""
"`bpo-23589 <https://bugs.python.org/issue23589>`__: Remove duplicate "
"sentence from the FAQ.  Patch by Yongzhi Pan."
msgstr ""
"`bpo-23589 <https://bugs.python.org/issue23589>`__: Remove duplicate "
"sentence from the FAQ.  Patch by Yongzhi Pan."

#: ../../../Misc/NEWS:6033
msgid ""
"`bpo-24729 <https://bugs.python.org/issue24729>`__: Correct IO tutorial to "
"match implementation regarding encoding parameter to open function."
msgstr ""
"`bpo-24729 <https://bugs.python.org/issue24729>`__: Correct IO tutorial to "
"match implementation regarding encoding parameter to open function."

#: ../../../Misc/NEWS:6039
msgid ""
"`bpo-24751 <https://bugs.python.org/issue24751>`__: When running regrtest "
"with the ``-w`` command line option, a test run is no longer marked as a "
"failure if all tests succeed when re-run."
msgstr ""
"`bpo-24751 <https://bugs.python.org/issue24751>`__: When running regrtest "
"with the ``-w`` command line option, a test run is no longer marked as a "
"failure if all tests succeed when re-run."

#: ../../../Misc/NEWS:6045
msgid "Python 3.5.0 beta 4"
msgstr "Python 3.5.0 beta 4"

#: ../../../Misc/NEWS:6047
msgid "Release date: 2015-07-26"
msgstr "Date de sortie : 2015-07-26"

#: ../../../Misc/NEWS:6052
msgid ""
"`bpo-23573 <https://bugs.python.org/issue23573>`__: Restored optimization of "
"bytes.rfind() and bytearray.rfind() for single-byte argument on Linux."
msgstr ""
"`bpo-23573 <https://bugs.python.org/issue23573>`__: Restored optimization of "
"bytes.rfind() and bytearray.rfind() for single-byte argument on Linux."

#: ../../../Misc/NEWS:6055
msgid ""
"`bpo-24569 <https://bugs.python.org/issue24569>`__: Make PEP 448 dictionary "
"evaluation more consistent."
msgstr ""
"`bpo-24569 <https://bugs.python.org/issue24569>`__: Make PEP 448 dictionary "
"evaluation more consistent."

#: ../../../Misc/NEWS:6057
msgid ""
"`bpo-24583 <https://bugs.python.org/issue24583>`__: Fix crash when set is "
"mutated while being updated."
msgstr ""
"`bpo-24583 <https://bugs.python.org/issue24583>`__: Fix crash when set is "
"mutated while being updated."

#: ../../../Misc/NEWS:6059
msgid ""
"`bpo-24407 <https://bugs.python.org/issue24407>`__: Fix crash when dict is "
"mutated while being updated."
msgstr ""
"`bpo-24407 <https://bugs.python.org/issue24407>`__: Fix crash when dict is "
"mutated while being updated."

#: ../../../Misc/NEWS:6061
msgid ""
"`bpo-24619 <https://bugs.python.org/issue24619>`__: New approach for "
"tokenizing async/await. As a consequence, it is now possible to have one-"
"line 'async def foo(): await ..' functions."
msgstr ""
"`bpo-24619 <https://bugs.python.org/issue24619>`__: New approach for "
"tokenizing async/await. As a consequence, it is now possible to have one-"
"line 'async def foo(): await ..' functions."

#: ../../../Misc/NEWS:6064
msgid ""
"`bpo-24687 <https://bugs.python.org/issue24687>`__: Plug refleak on "
"SyntaxError in function parameters annotations."
msgstr ""
"`bpo-24687 <https://bugs.python.org/issue24687>`__: Plug refleak on "
"SyntaxError in function parameters annotations."

#: ../../../Misc/NEWS:6067
msgid ""
"`bpo-15944 <https://bugs.python.org/issue15944>`__: memoryview: Allow "
"arbitrary formats when casting to bytes. Patch by Martin Panter."
msgstr ""
"`bpo-15944 <https://bugs.python.org/issue15944>`__: memoryview: Allow "
"arbitrary formats when casting to bytes. Patch by Martin Panter."

#: ../../../Misc/NEWS:6073
msgid ""
"`bpo-23441 <https://bugs.python.org/issue23441>`__: rcompleter now prints a "
"tab character instead of displaying possible completions for an empty word.  "
"Initial patch by Martin Sekera."
msgstr ""
"`bpo-23441 <https://bugs.python.org/issue23441>`__: rcompleter now prints a "
"tab character instead of displaying possible completions for an empty word.  "
"Initial patch by Martin Sekera."

#: ../../../Misc/NEWS:6076
msgid ""
"`bpo-24683 <https://bugs.python.org/issue24683>`__: Fixed crashes in _json "
"functions called with arguments of inappropriate type."
msgstr ""
"`bpo-24683 <https://bugs.python.org/issue24683>`__: Fixed crashes in _json "
"functions called with arguments of inappropriate type."

#: ../../../Misc/NEWS:6079
msgid ""
"`bpo-21697 <https://bugs.python.org/issue21697>`__: shutil.copytree() now "
"correctly handles symbolic links that point to directories.  Patch by "
"Eduardo Seabra and Thomas Kluyver."
msgstr ""
"`bpo-21697 <https://bugs.python.org/issue21697>`__: shutil.copytree() now "
"correctly handles symbolic links that point to directories.  Patch by "
"Eduardo Seabra and Thomas Kluyver."

#: ../../../Misc/NEWS:6082
msgid ""
"`bpo-14373 <https://bugs.python.org/issue14373>`__: Fixed segmentation fault "
"when gc.collect() is called during constructing lru_cache (C implementation)."
msgstr ""
"`bpo-14373 <https://bugs.python.org/issue14373>`__: Fixed segmentation fault "
"when gc.collect() is called during constructing lru_cache (C implementation)."

#: ../../../Misc/NEWS:6085
msgid ""
"`bpo-24695 <https://bugs.python.org/issue24695>`__: Fix a regression in "
"traceback.print_exception().  If exc_traceback is None we shouldn't print a "
"traceback header like described in the documentation."
msgstr ""
"`bpo-24695 <https://bugs.python.org/issue24695>`__: Fix a regression in "
"traceback.print_exception().  If exc_traceback is None we shouldn't print a "
"traceback header like described in the documentation."

#: ../../../Misc/NEWS:6089
msgid ""
"`bpo-24620 <https://bugs.python.org/issue24620>`__: Random.setstate() now "
"validates the value of state last element."
msgstr ""
"`bpo-24620 <https://bugs.python.org/issue24620>`__: Random.setstate() now "
"validates the value of state last element."

#: ../../../Misc/NEWS:6091
msgid ""
"`bpo-22485 <https://bugs.python.org/issue22485>`__: Fixed an issue that "
"caused `inspect.getsource` to return incorrect results on nested functions."
msgstr ""
"`bpo-22485 <https://bugs.python.org/issue22485>`__: Fixed an issue that "
"caused `inspect.getsource` to return incorrect results on nested functions."

#: ../../../Misc/NEWS:6094
msgid ""
"`bpo-22153 <https://bugs.python.org/issue22153>`__: Improve unittest docs. "
"Patch from Martin Panter and evilzero."
msgstr ""
"`bpo-22153 <https://bugs.python.org/issue22153>`__: Improve unittest docs. "
"Patch from Martin Panter and evilzero."

#: ../../../Misc/NEWS:6096
msgid ""
"`bpo-24580 <https://bugs.python.org/issue24580>`__: Symbolic group "
"references to open group in re patterns now are explicitly forbidden as well "
"as numeric group references."
msgstr ""
"`bpo-24580 <https://bugs.python.org/issue24580>`__: Symbolic group "
"references to open group in re patterns now are explicitly forbidden as well "
"as numeric group references."

#: ../../../Misc/NEWS:6099
msgid ""
"`bpo-24206 <https://bugs.python.org/issue24206>`__: Fixed __eq__ and __ne__ "
"methods of inspect classes."
msgstr ""
"`bpo-24206 <https://bugs.python.org/issue24206>`__: Fixed __eq__ and __ne__ "
"methods of inspect classes."

#: ../../../Misc/NEWS:6101
msgid ""
"`bpo-24631 <https://bugs.python.org/issue24631>`__: Fixed regression in the "
"timeit module with multiline setup."
msgstr ""
"`bpo-24631 <https://bugs.python.org/issue24631>`__: Fixed regression in the "
"timeit module with multiline setup."

#: ../../../Misc/NEWS:6109
msgid ""
"`bpo-24608 <https://bugs.python.org/issue24608>`__: chunk.Chunk.read() now "
"always returns bytes, not str."
msgstr ""
"`bpo-24608 <https://bugs.python.org/issue24608>`__: chunk.Chunk.read() now "
"always returns bytes, not str."

#: ../../../Misc/NEWS:6111
msgid ""
"`bpo-18684 <https://bugs.python.org/issue18684>`__: Fixed reading out of the "
"buffer in the re module."
msgstr ""
"`bpo-18684 <https://bugs.python.org/issue18684>`__: Fixed reading out of the "
"buffer in the re module."

#: ../../../Misc/NEWS:6113
msgid ""
"`bpo-24259 <https://bugs.python.org/issue24259>`__: tarfile now raises a "
"ReadError if an archive is truncated inside a data segment."
msgstr ""
"`bpo-24259 <https://bugs.python.org/issue24259>`__: tarfile now raises a "
"ReadError if an archive is truncated inside a data segment."

#: ../../../Misc/NEWS:6116
msgid ""
"`bpo-15014 <https://bugs.python.org/issue15014>`__: SMTP.auth() and SMTP."
"login() now support RFC 4954's optional initial-response argument to the "
"SMTP AUTH command."
msgstr ""
"`bpo-15014 <https://bugs.python.org/issue15014>`__: SMTP.auth() and SMTP."
"login() now support RFC 4954's optional initial-response argument to the "
"SMTP AUTH command."

#: ../../../Misc/NEWS:6119
msgid ""
"`bpo-24669 <https://bugs.python.org/issue24669>`__: Fix inspect.getsource() "
"for 'async def' functions. Patch by Kai Groner."
msgstr ""
"`bpo-24669 <https://bugs.python.org/issue24669>`__: Fix inspect.getsource() "
"for 'async def' functions. Patch by Kai Groner."

#: ../../../Misc/NEWS:6122
msgid ""
"`bpo-24688 <https://bugs.python.org/issue24688>`__: ast.get_docstring() for "
"'async def' functions."
msgstr ""
"`bpo-24688 <https://bugs.python.org/issue24688>`__: ast.get_docstring() for "
"'async def' functions."

#: ../../../Misc/NEWS:6127
msgid ""
"`bpo-24603 <https://bugs.python.org/issue24603>`__: Update Windows builds "
"and OS X 10.5 installer to use OpenSSL 1.0.2d."
msgstr ""
"`bpo-24603 <https://bugs.python.org/issue24603>`__: Update Windows builds "
"and OS X 10.5 installer to use OpenSSL 1.0.2d."

#: ../../../Misc/NEWS:6132
msgid "Python 3.5.0 beta 3"
msgstr "Python 3.5.0 beta 3"

#: ../../../Misc/NEWS:6134
msgid "Release date: 2015-07-05"
msgstr "Date de sortie¬†: 2015-07-05"

#: ../../../Misc/NEWS:6139
msgid ""
"`bpo-24467 <https://bugs.python.org/issue24467>`__: Fixed possible buffer "
"over-read in bytearray. The bytearray object now always allocates place for "
"trailing null byte and it's buffer now is always null-terminated."
msgstr ""
"`bpo-24467 <https://bugs.python.org/issue24467>`__: Fixed possible buffer "
"over-read in bytearray. The bytearray object now always allocates place for "
"trailing null byte and it's buffer now is always null-terminated."

#: ../../../Misc/NEWS:6143
msgid "Upgrade to Unicode 8.0.0."
msgstr "Upgrade to Unicode 8.0.0."

#: ../../../Misc/NEWS:6145
msgid ""
"`bpo-24345 <https://bugs.python.org/issue24345>`__: Add Py_tp_finalize slot "
"for the stable ABI."
msgstr ""
"`bpo-24345 <https://bugs.python.org/issue24345>`__: Add Py_tp_finalize slot "
"for the stable ABI."

#: ../../../Misc/NEWS:6147
msgid ""
"`bpo-24400 <https://bugs.python.org/issue24400>`__: Introduce a distinct "
"type for PEP 492 coroutines; add types.CoroutineType, inspect."
"getcoroutinestate, inspect.getcoroutinelocals; coroutines no longer use "
"CO_GENERATOR flag; sys.set_coroutine_wrapper works only for 'async def' "
"coroutines; inspect.iscoroutine no longer uses collections.abc.Coroutine, "
"it's intended to test for pure 'async def' coroutines only; add new opcode: "
"GET_YIELD_FROM_ITER; fix generators wrapper used in types.coroutine to be "
"instance of collections.abc.Generator; collections.abc.Awaitable and "
"collections.abc.Coroutine can no longer be used to detect generator-based "
"coroutines--use inspect.isawaitable instead."
msgstr ""
"`bpo-24400 <https://bugs.python.org/issue24400>`__: Introduce a distinct "
"type for PEP 492 coroutines; add types.CoroutineType, inspect."
"getcoroutinestate, inspect.getcoroutinelocals; coroutines no longer use "
"CO_GENERATOR flag; sys.set_coroutine_wrapper works only for 'async def' "
"coroutines; inspect.iscoroutine no longer uses collections.abc.Coroutine, "
"it's intended to test for pure 'async def' coroutines only; add new opcode: "
"GET_YIELD_FROM_ITER; fix generators wrapper used in types.coroutine to be "
"instance of collections.abc.Generator; collections.abc.Awaitable and "
"collections.abc.Coroutine can no longer be used to detect generator-based "
"coroutines--use inspect.isawaitable instead."

#: ../../../Misc/NEWS:6158
msgid ""
"`bpo-24450 <https://bugs.python.org/issue24450>`__: Add gi_yieldfrom to "
"generators and cr_await to coroutines. Contributed by Benno Leslie and Yury "
"Selivanov."
msgstr ""
"`bpo-24450 <https://bugs.python.org/issue24450>`__: Add gi_yieldfrom to "
"generators and cr_await to coroutines. Contributed by Benno Leslie and Yury "
"Selivanov."

#: ../../../Misc/NEWS:6161
msgid ""
"`bpo-19235 <https://bugs.python.org/issue19235>`__: Add new RecursionError "
"exception. Patch by Georg Brandl."
msgstr ""
"`bpo-19235 <https://bugs.python.org/issue19235>`__: Add new RecursionError "
"exception. Patch by Georg Brandl."

#: ../../../Misc/NEWS:6166
msgid ""
"`bpo-21750 <https://bugs.python.org/issue21750>`__: mock_open.read_data can "
"now be read from each instance, as it could in Python 3.3."
msgstr ""
"`bpo-21750 <https://bugs.python.org/issue21750>`__: mock_open.read_data can "
"now be read from each instance, as it could in Python 3.3."

#: ../../../Misc/NEWS:6169
msgid ""
"`bpo-24552 <https://bugs.python.org/issue24552>`__: Fix use after free in an "
"error case of the _pickle module."
msgstr ""
"`bpo-24552 <https://bugs.python.org/issue24552>`__: Fix use after free in an "
"error case of the _pickle module."

#: ../../../Misc/NEWS:6171
msgid ""
"`bpo-24514 <https://bugs.python.org/issue24514>`__: tarfile now tolerates "
"number fields consisting of only whitespace."
msgstr ""
"`bpo-24514 <https://bugs.python.org/issue24514>`__: tarfile now tolerates "
"number fields consisting of only whitespace."

#: ../../../Misc/NEWS:6174
msgid ""
"`bpo-19176 <https://bugs.python.org/issue19176>`__: Fixed doctype() related "
"bugs in C implementation of ElementTree. A deprecation warning no longer "
"issued by XMLParser subclass with default doctype() method.  Direct call of "
"doctype() now issues a warning.  Parser's doctype() now is not called if "
"target's doctype() is called.  Based on patch by Martin Panter."
msgstr ""
"`bpo-19176 <https://bugs.python.org/issue19176>`__: Fixed doctype() related "
"bugs in C implementation of ElementTree. A deprecation warning no longer "
"issued by XMLParser subclass with default doctype() method.  Direct call of "
"doctype() now issues a warning.  Parser's doctype() now is not called if "
"target's doctype() is called.  Based on patch by Martin Panter."

#: ../../../Misc/NEWS:6180
msgid ""
"`bpo-20387 <https://bugs.python.org/issue20387>`__: Restore semantic round-"
"trip correctness in tokenize/untokenize for tab-indented blocks."
msgstr ""
"`bpo-20387 <https://bugs.python.org/issue20387>`__: Restore semantic round-"
"trip correctness in tokenize/untokenize for tab-indented blocks."

#: ../../../Misc/NEWS:6183
msgid ""
"`bpo-24456 <https://bugs.python.org/issue24456>`__: Fixed possible buffer "
"over-read in adpcm2lin() and lin2adpcm() functions of the audioop module."
msgstr ""
"`bpo-24456 <https://bugs.python.org/issue24456>`__: Fixed possible buffer "
"over-read in adpcm2lin() and lin2adpcm() functions of the audioop module."

#: ../../../Misc/NEWS:6186
msgid ""
"`bpo-24336 <https://bugs.python.org/issue24336>`__: The contextmanager "
"decorator now works with functions with keyword arguments called \"func\" "
"and \"self\".  Patch by Martin Panter."
msgstr ""
"`bpo-24336 <https://bugs.python.org/issue24336>`__: The contextmanager "
"decorator now works with functions with keyword arguments called \"func\" "
"and \"self\".  Patch by Martin Panter."

#: ../../../Misc/NEWS:6189
msgid ""
"`bpo-24522 <https://bugs.python.org/issue24522>`__: Fix possible integer "
"overflow in json accelerator module."
msgstr ""
"`bpo-24522 <https://bugs.python.org/issue24522>`__: Fix possible integer "
"overflow in json accelerator module."

#: ../../../Misc/NEWS:6191
msgid ""
"`bpo-24489 <https://bugs.python.org/issue24489>`__: ensure a previously set "
"C errno doesn't disturb cmath.polar()."
msgstr ""
"`bpo-24489 <https://bugs.python.org/issue24489>`__: ensure a previously set "
"C errno doesn't disturb cmath.polar()."

#: ../../../Misc/NEWS:6193
msgid ""
"`bpo-24408 <https://bugs.python.org/issue24408>`__: Fixed AttributeError in "
"measure() and metrics() methods of tkinter.Font."
msgstr ""
"`bpo-24408 <https://bugs.python.org/issue24408>`__: Fixed AttributeError in "
"measure() and metrics() methods of tkinter.Font."

#: ../../../Misc/NEWS:6196
msgid ""
"`bpo-14373 <https://bugs.python.org/issue14373>`__: C implementation of "
"functools.lru_cache() now can be used with methods."
msgstr ""
"`bpo-14373 <https://bugs.python.org/issue14373>`__: C implementation of "
"functools.lru_cache() now can be used with methods."

#: ../../../Misc/NEWS:6199
msgid ""
"`bpo-24347 <https://bugs.python.org/issue24347>`__: Set KeyError if "
"PyDict_GetItemWithError returns NULL."
msgstr ""
"`bpo-24347 <https://bugs.python.org/issue24347>`__: Set KeyError if "
"PyDict_GetItemWithError returns NULL."

#: ../../../Misc/NEWS:6201
msgid ""
"`bpo-24348 <https://bugs.python.org/issue24348>`__: Drop superfluous incref/"
"decref."
msgstr ""
"`bpo-24348 <https://bugs.python.org/issue24348>`__: Drop superfluous incref/"
"decref."

#: ../../../Misc/NEWS:6203
msgid ""
"`bpo-24359 <https://bugs.python.org/issue24359>`__: Check for changed "
"OrderedDict size during iteration."
msgstr ""
"`bpo-24359 <https://bugs.python.org/issue24359>`__: Check for changed "
"OrderedDict size during iteration."

#: ../../../Misc/NEWS:6205
msgid ""
"`bpo-24368 <https://bugs.python.org/issue24368>`__: Support keyword "
"arguments in OrderedDict methods."
msgstr ""
"`bpo-24368 <https://bugs.python.org/issue24368>`__: Support keyword "
"arguments in OrderedDict methods."

#: ../../../Misc/NEWS:6207
msgid ""
"`bpo-24362 <https://bugs.python.org/issue24362>`__: Simplify the C "
"OrderedDict fast nodes resize logic."
msgstr ""
"`bpo-24362 <https://bugs.python.org/issue24362>`__: Simplify the C "
"OrderedDict fast nodes resize logic."

#: ../../../Misc/NEWS:6209
msgid ""
"`bpo-24377 <https://bugs.python.org/issue24377>`__: Fix a ref leak in "
"OrderedDict.__repr__."
msgstr ""
"`bpo-24377 <https://bugs.python.org/issue24377>`__: Fix a ref leak in "
"OrderedDict.__repr__."

#: ../../../Misc/NEWS:6211
msgid ""
"`bpo-24369 <https://bugs.python.org/issue24369>`__: Defend against key-"
"changes during iteration."
msgstr ""
"`bpo-24369 <https://bugs.python.org/issue24369>`__: Defend against key-"
"changes during iteration."

#: ../../../Misc/NEWS:6216
msgid ""
"`bpo-24373 <https://bugs.python.org/issue24373>`__: _testmultiphase and "
"xxlimited now use tp_traverse and tp_finalize to avoid reference leaks "
"encountered when combining tp_dealloc with PyType_FromSpec (see `bpo-16690 "
"<https://bugs.python.org/issue16690>`__ for details)"
msgstr ""
"`bpo-24373 <https://bugs.python.org/issue24373>`__: _testmultiphase and "
"xxlimited now use tp_traverse and tp_finalize to avoid reference leaks "
"encountered when combining tp_dealloc with PyType_FromSpec (see `bpo-16690 "
"<https://bugs.python.org/issue16690>`__ for details)"

#: ../../../Misc/NEWS:6223
msgid ""
"`bpo-24458 <https://bugs.python.org/issue24458>`__: Update documentation to "
"cover multi-phase initialization for extension modules (PEP 489). Patch by "
"Petr Viktorin."
msgstr ""
"`bpo-24458 <https://bugs.python.org/issue24458>`__: Update documentation to "
"cover multi-phase initialization for extension modules (PEP 489). Patch by "
"Petr Viktorin."

#: ../../../Misc/NEWS:6226
msgid ""
"`bpo-24351 <https://bugs.python.org/issue24351>`__: Clarify what is meant by "
"\"identifier\" in the context of string.Template instances."
msgstr ""
"`bpo-24351 <https://bugs.python.org/issue24351>`__: Clarify what is meant by "
"\"identifier\" in the context of string.Template instances."

#: ../../../Misc/NEWS:6232
msgid ""
"`bpo-24432 <https://bugs.python.org/issue24432>`__: Update Windows builds "
"and OS X 10.5 installer to use OpenSSL 1.0.2c."
msgstr ""
"`bpo-24432 <https://bugs.python.org/issue24432>`__: Update Windows builds "
"and OS X 10.5 installer to use OpenSSL 1.0.2c."

#: ../../../Misc/NEWS:6237
msgid "Python 3.5.0 beta 2"
msgstr "Python 3.5.0 beta 2"

#: ../../../Misc/NEWS:6239
msgid "Release date: 2015-05-31"
msgstr "Date de sortie : 2015-05-31"

#: ../../../Misc/NEWS:6244
msgid ""
"`bpo-24284 <https://bugs.python.org/issue24284>`__: The startswith and "
"endswith methods of the str class no longer return True when finding the "
"empty string and the indexes are completely out of range."
msgstr ""
"`bpo-24284 <https://bugs.python.org/issue24284>`__: The startswith and "
"endswith methods of the str class no longer return True when finding the "
"empty string and the indexes are completely out of range."

#: ../../../Misc/NEWS:6248
msgid ""
"`bpo-24115 <https://bugs.python.org/issue24115>`__: Update uses of "
"PyObject_IsTrue(), PyObject_Not(), PyObject_IsInstance(), "
"PyObject_RichCompareBool() and _PyDict_Contains() to check for and handle "
"errors correctly."
msgstr ""
"`bpo-24115 <https://bugs.python.org/issue24115>`__: Update uses of "
"PyObject_IsTrue(), PyObject_Not(), PyObject_IsInstance(), "
"PyObject_RichCompareBool() and _PyDict_Contains() to check for and handle "
"errors correctly."

#: ../../../Misc/NEWS:6252
msgid ""
"`bpo-24328 <https://bugs.python.org/issue24328>`__: Fix importing one "
"character extension modules."
msgstr ""
"`bpo-24328 <https://bugs.python.org/issue24328>`__: Fix importing one "
"character extension modules."

#: ../../../Misc/NEWS:6254
msgid ""
"`bpo-11205 <https://bugs.python.org/issue11205>`__: In dictionary displays, "
"evaluate the key before the value."
msgstr ""
"`bpo-11205 <https://bugs.python.org/issue11205>`__: In dictionary displays, "
"evaluate the key before the value."

#: ../../../Misc/NEWS:6256
msgid ""
"`bpo-24285 <https://bugs.python.org/issue24285>`__: Fixed regression that "
"prevented importing extension modules from inside packages. Patch by Petr "
"Viktorin."
msgstr ""
"`bpo-24285 <https://bugs.python.org/issue24285>`__: Fixed regression that "
"prevented importing extension modules from inside packages. Patch by Petr "
"Viktorin."

#: ../../../Misc/NEWS:6262
msgid ""
"`bpo-23247 <https://bugs.python.org/issue23247>`__: Fix a crash in the "
"StreamWriter.reset() of CJK codecs."
msgstr ""
"`bpo-23247 <https://bugs.python.org/issue23247>`__: Fix a crash in the "
"StreamWriter.reset() of CJK codecs."

#: ../../../Misc/NEWS:6264
msgid ""
"`bpo-24270 <https://bugs.python.org/issue24270>`__: Add math.isclose() and "
"cmath.isclose() functions as per PEP 485. Contributed by Chris Barker and "
"Tal Einat."
msgstr ""
"`bpo-24270 <https://bugs.python.org/issue24270>`__: Add math.isclose() and "
"cmath.isclose() functions as per PEP 485. Contributed by Chris Barker and "
"Tal Einat."

#: ../../../Misc/NEWS:6267
msgid ""
"`bpo-5633 <https://bugs.python.org/issue5633>`__: Fixed timeit when the "
"statement is a string and the setup is not."
msgstr ""
"`bpo-5633 <https://bugs.python.org/issue5633>`__: Fixed timeit when the "
"statement is a string and the setup is not."

#: ../../../Misc/NEWS:6269
msgid ""
"`bpo-24326 <https://bugs.python.org/issue24326>`__: Fixed audioop.ratecv() "
"with non-default weightB argument. Original patch by David Moore."
msgstr ""
"`bpo-24326 <https://bugs.python.org/issue24326>`__: Fixed audioop.ratecv() "
"with non-default weightB argument. Original patch by David Moore."

#: ../../../Misc/NEWS:6272
msgid ""
"`bpo-16991 <https://bugs.python.org/issue16991>`__: Add a C implementation "
"of OrderedDict."
msgstr ""
"`bpo-16991 <https://bugs.python.org/issue16991>`__: Add a C implementation "
"of OrderedDict."

#: ../../../Misc/NEWS:6274
msgid ""
"`bpo-23934 <https://bugs.python.org/issue23934>`__: Fix inspect.signature to "
"fail correctly for builtin types lacking signature information.  Initial "
"patch by James Powell."
msgstr ""
"`bpo-23934 <https://bugs.python.org/issue23934>`__: Fix inspect.signature to "
"fail correctly for builtin types lacking signature information.  Initial "
"patch by James Powell."

#: ../../../Misc/NEWS:6279
msgid "Python 3.5.0 beta 1"
msgstr "Python 3.5.0 beta 1"

#: ../../../Misc/NEWS:6281
msgid "Release date: 2015-05-24"
msgstr "Date de sortie : 2015-05-24"

#: ../../../Misc/NEWS:6286
msgid ""
"`bpo-24276 <https://bugs.python.org/issue24276>`__: Fixed optimization of "
"property descriptor getter."
msgstr ""
"`bpo-24276 <https://bugs.python.org/issue24276>`__: Fixed optimization of "
"property descriptor getter."

#: ../../../Misc/NEWS:6288
msgid ""
"`bpo-24268 <https://bugs.python.org/issue24268>`__: PEP 489: Multi-phase "
"extension module initialization. Patch by Petr Viktorin."
msgstr ""
"`bpo-24268 <https://bugs.python.org/issue24268>`__: PEP 489: Multi-phase "
"extension module initialization. Patch by Petr Viktorin."

#: ../../../Misc/NEWS:6291
msgid ""
"`bpo-23955 <https://bugs.python.org/issue23955>`__: Add pyvenv.cfg option to "
"suppress registry/environment lookup for generating sys.path on Windows."
msgstr ""
"`bpo-23955 <https://bugs.python.org/issue23955>`__: Add pyvenv.cfg option to "
"suppress registry/environment lookup for generating sys.path on Windows."

#: ../../../Misc/NEWS:6294
msgid ""
"`bpo-24257 <https://bugs.python.org/issue24257>`__: Fixed system error in "
"the comparison of faked types.SimpleNamespace."
msgstr ""
"`bpo-24257 <https://bugs.python.org/issue24257>`__: Fixed system error in "
"the comparison of faked types.SimpleNamespace."

#: ../../../Misc/NEWS:6297
msgid ""
"`bpo-22939 <https://bugs.python.org/issue22939>`__: Fixed integer overflow "
"in iterator object.  Patch by Clement Rouault."
msgstr ""
"`bpo-22939 <https://bugs.python.org/issue22939>`__: Fixed integer overflow "
"in iterator object.  Patch by Clement Rouault."

#: ../../../Misc/NEWS:6300
msgid ""
"`bpo-23985 <https://bugs.python.org/issue23985>`__: Fix a possible buffer "
"overrun when deleting a slice from the front of a bytearray and then "
"appending some other bytes data."
msgstr ""
"`bpo-23985 <https://bugs.python.org/issue23985>`__: Fix a possible buffer "
"overrun when deleting a slice from the front of a bytearray and then "
"appending some other bytes data."

#: ../../../Misc/NEWS:6303
msgid ""
"`bpo-24102 <https://bugs.python.org/issue24102>`__: Fixed exception type "
"checking in standard error handlers."
msgstr ""
"`bpo-24102 <https://bugs.python.org/issue24102>`__: Fixed exception type "
"checking in standard error handlers."

#: ../../../Misc/NEWS:6305
msgid ""
"`bpo-15027 <https://bugs.python.org/issue15027>`__: The UTF-32 encoder is "
"now 3x to 7x faster."
msgstr ""
"`bpo-15027 <https://bugs.python.org/issue15027>`__: The UTF-32 encoder is "
"now 3x to 7x faster."

#: ../../../Misc/NEWS:6307
msgid ""
"`bpo-23290 <https://bugs.python.org/issue23290>`__: Optimize set_merge() for "
"cases where the target is empty. (Contributed by Serhiy Storchaka.)"
msgstr ""
"`bpo-23290 <https://bugs.python.org/issue23290>`__: Optimize set_merge() for "
"cases where the target is empty. (Contributed by Serhiy Storchaka.)"

#: ../../../Misc/NEWS:6310
msgid ""
"`bpo-2292 <https://bugs.python.org/issue2292>`__: PEP 448: Additional "
"Unpacking Generalizations."
msgstr ""
"`bpo-2292 <https://bugs.python.org/issue2292>`__: PEP 448: Additional "
"Unpacking Generalizations."

#: ../../../Misc/NEWS:6312
msgid ""
"`bpo-24096 <https://bugs.python.org/issue24096>`__: Make warnings."
"warn_explicit more robust against mutation of the warnings.filters list."
msgstr ""
"`bpo-24096 <https://bugs.python.org/issue24096>`__: Make warnings."
"warn_explicit more robust against mutation of the warnings.filters list."

#: ../../../Misc/NEWS:6315
msgid ""
"`bpo-23996 <https://bugs.python.org/issue23996>`__: Avoid a crash when a "
"delegated generator raises an unnormalized StopIteration exception.  Patch "
"by Stefan Behnel."
msgstr ""
"`bpo-23996 <https://bugs.python.org/issue23996>`__: Avoid a crash when a "
"delegated generator raises an unnormalized StopIteration exception.  Patch "
"by Stefan Behnel."

#: ../../../Misc/NEWS:6318
msgid ""
"`bpo-23910 <https://bugs.python.org/issue23910>`__: Optimize property() "
"getter calls.  Patch by Joe Jevnik."
msgstr ""
"`bpo-23910 <https://bugs.python.org/issue23910>`__: Optimize property() "
"getter calls.  Patch by Joe Jevnik."

#: ../../../Misc/NEWS:6320
msgid ""
"`bpo-23911 <https://bugs.python.org/issue23911>`__: Move path-based "
"importlib bootstrap code to a separate frozen module."
msgstr ""
"`bpo-23911 <https://bugs.python.org/issue23911>`__: Move path-based "
"importlib bootstrap code to a separate frozen module."

#: ../../../Misc/NEWS:6323
msgid ""
"`bpo-24192 <https://bugs.python.org/issue24192>`__: Fix namespace package "
"imports."
msgstr ""
"`bpo-24192 <https://bugs.python.org/issue24192>`__: Fix namespace package "
"imports."

#: ../../../Misc/NEWS:6325
msgid ""
"`bpo-24022 <https://bugs.python.org/issue24022>`__: Fix tokenizer crash when "
"processing undecodable source code."
msgstr ""
"`bpo-24022 <https://bugs.python.org/issue24022>`__: Fix tokenizer crash when "
"processing undecodable source code."

#: ../../../Misc/NEWS:6327
msgid ""
"`bpo-9951 <https://bugs.python.org/issue9951>`__: Added a hex() method to "
"bytes, bytearray, and memoryview."
msgstr ""
"`bpo-9951 <https://bugs.python.org/issue9951>`__: Added a hex() method to "
"bytes, bytearray, and memoryview."

#: ../../../Misc/NEWS:6329
msgid ""
"`bpo-22906 <https://bugs.python.org/issue22906>`__: PEP 479: Change "
"StopIteration handling inside generators."
msgstr ""
"`bpo-22906 <https://bugs.python.org/issue22906>`__: PEP 479: Change "
"StopIteration handling inside generators."

#: ../../../Misc/NEWS:6331
msgid ""
"`bpo-24017 <https://bugs.python.org/issue24017>`__: PEP 492: Coroutines with "
"async and await syntax."
msgstr ""
"`bpo-24017 <https://bugs.python.org/issue24017>`__: PEP 492: Coroutines with "
"async and await syntax."

#: ../../../Misc/NEWS:6336
msgid ""
"`bpo-14373 <https://bugs.python.org/issue14373>`__: Added C implementation "
"of functools.lru_cache().  Based on patches by Matt Joiner and Alexey "
"Kachayev."
msgstr ""
"`bpo-14373 <https://bugs.python.org/issue14373>`__: Added C implementation "
"of functools.lru_cache().  Based on patches by Matt Joiner and Alexey "
"Kachayev."

#: ../../../Misc/NEWS:6339
msgid ""
"`bpo-24230 <https://bugs.python.org/issue24230>`__: The tempfile module now "
"accepts bytes for prefix, suffix and dir parameters and returns bytes in "
"such situations (matching the os module APIs)."
msgstr ""
"`bpo-24230 <https://bugs.python.org/issue24230>`__: The tempfile module now "
"accepts bytes for prefix, suffix and dir parameters and returns bytes in "
"such situations (matching the os module APIs)."

#: ../../../Misc/NEWS:6342
msgid ""
"`bpo-22189 <https://bugs.python.org/issue22189>`__: collections.UserString "
"now supports __getnewargs__(), __rmod__(), casefold(), format_map(), "
"isprintable(), and maketrans(). Patch by Joe Jevnik."
msgstr ""
"`bpo-22189 <https://bugs.python.org/issue22189>`__: collections.UserString "
"now supports __getnewargs__(), __rmod__(), casefold(), format_map(), "
"isprintable(), and maketrans(). Patch by Joe Jevnik."

#: ../../../Misc/NEWS:6346
msgid ""
"`bpo-24244 <https://bugs.python.org/issue24244>`__: Prevents termination "
"when an invalid format string is encountered on Windows in strftime."
msgstr ""
"`bpo-24244 <https://bugs.python.org/issue24244>`__: Prevents termination "
"when an invalid format string is encountered on Windows in strftime."

#: ../../../Misc/NEWS:6349
msgid ""
"`bpo-23973 <https://bugs.python.org/issue23973>`__: PEP 484: Add the typing "
"module."
msgstr ""
"`bpo-23973 <https://bugs.python.org/issue23973>`__: PEP 484: Add the typing "
"module."

#: ../../../Misc/NEWS:6351
msgid ""
"`bpo-23086 <https://bugs.python.org/issue23086>`__: The collections.abc."
"Sequence() abstract base class added *start* and *stop* parameters to the "
"index() mixin. Patch by Devin Jeanpierre."
msgstr ""
"`bpo-23086 <https://bugs.python.org/issue23086>`__: The collections.abc."
"Sequence() abstract base class added *start* and *stop* parameters to the "
"index() mixin. Patch by Devin Jeanpierre."

#: ../../../Misc/NEWS:6355
msgid ""
"`bpo-20035 <https://bugs.python.org/issue20035>`__: Replaced the ``tkinter."
"_fix`` module used for setting up the Tcl/Tk environment on Windows with a "
"private function in the ``_tkinter`` module that makes no permanent changes "
"to the environment."
msgstr ""
"`bpo-20035 <https://bugs.python.org/issue20035>`__: Replaced the ``tkinter."
"_fix`` module used for setting up the Tcl/Tk environment on Windows with a "
"private function in the ``_tkinter`` module that makes no permanent changes "
"to the environment."

#: ../../../Misc/NEWS:6359
msgid ""
"`bpo-24257 <https://bugs.python.org/issue24257>`__: Fixed segmentation fault "
"in sqlite3.Row constructor with faked cursor type."
msgstr ""
"`bpo-24257 <https://bugs.python.org/issue24257>`__: Fixed segmentation fault "
"in sqlite3.Row constructor with faked cursor type."

#: ../../../Misc/NEWS:6362
msgid ""
"`bpo-15836 <https://bugs.python.org/issue15836>`__: assertRaises(), "
"assertRaisesRegex(), assertWarns() and assertWarnsRegex() assertments now "
"check the type of the first argument to prevent possible user error.  Based "
"on patch by Daniel Wagner-Hall."
msgstr ""
"`bpo-15836 <https://bugs.python.org/issue15836>`__: assertRaises(), "
"assertRaisesRegex(), assertWarns() and assertWarnsRegex() assertments now "
"check the type of the first argument to prevent possible user error.  Based "
"on patch by Daniel Wagner-Hall."

#: ../../../Misc/NEWS:6366
msgid ""
"`bpo-9858 <https://bugs.python.org/issue9858>`__: Add missing method stubs "
"to _io.RawIOBase.  Patch by Laura Rupprecht."
msgstr ""
"`bpo-9858 <https://bugs.python.org/issue9858>`__: Add missing method stubs "
"to _io.RawIOBase.  Patch by Laura Rupprecht."

#: ../../../Misc/NEWS:6369
msgid ""
"`bpo-22955 <https://bugs.python.org/issue22955>`__: attrgetter, itemgetter "
"and methodcaller objects in the operator module now support pickling.  Added "
"readable and evaluable repr for these objects.  Based on patch by Josh "
"Rosenberg."
msgstr ""
"`bpo-22955 <https://bugs.python.org/issue22955>`__: attrgetter, itemgetter "
"and methodcaller objects in the operator module now support pickling.  Added "
"readable and evaluable repr for these objects.  Based on patch by Josh "
"Rosenberg."

#: ../../../Misc/NEWS:6373
msgid ""
"`bpo-22107 <https://bugs.python.org/issue22107>`__: tempfile.gettempdir() "
"and tempfile.mkdtemp() now try again when a directory with the chosen name "
"already exists on Windows as well as on Unix.  tempfile.mkstemp() now fails "
"early if parent directory is not valid (not exists or is a file) on Windows."
msgstr ""
"`bpo-22107 <https://bugs.python.org/issue22107>`__: tempfile.gettempdir() "
"and tempfile.mkdtemp() now try again when a directory with the chosen name "
"already exists on Windows as well as on Unix.  tempfile.mkstemp() now fails "
"early if parent directory is not valid (not exists or is a file) on Windows."

#: ../../../Misc/NEWS:6378
msgid ""
"`bpo-23780 <https://bugs.python.org/issue23780>`__: Improved error message "
"in os.path.join() with single argument."
msgstr ""
"`bpo-23780 <https://bugs.python.org/issue23780>`__: Improved error message "
"in os.path.join() with single argument."

#: ../../../Misc/NEWS:6380
msgid ""
"`bpo-6598 <https://bugs.python.org/issue6598>`__: Increased time precision "
"and random number range in email.utils.make_msgid() to strengthen the "
"uniqueness of the message ID."
msgstr ""
"`bpo-6598 <https://bugs.python.org/issue6598>`__: Increased time precision "
"and random number range in email.utils.make_msgid() to strengthen the "
"uniqueness of the message ID."

#: ../../../Misc/NEWS:6383
msgid ""
"`bpo-24091 <https://bugs.python.org/issue24091>`__: Fixed various crashes in "
"corner cases in C implementation of ElementTree."
msgstr ""
"`bpo-24091 <https://bugs.python.org/issue24091>`__: Fixed various crashes in "
"corner cases in C implementation of ElementTree."

#: ../../../Misc/NEWS:6386
msgid ""
"`bpo-21931 <https://bugs.python.org/issue21931>`__: msilib.FCICreate() now "
"raises TypeError in the case of a bad argument instead of a ValueError with "
"a bogus FCI error number. Patch by Jeffrey Armstrong."
msgstr ""
"`bpo-21931 <https://bugs.python.org/issue21931>`__: msilib.FCICreate() now "
"raises TypeError in the case of a bad argument instead of a ValueError with "
"a bogus FCI error number. Patch by Jeffrey Armstrong."

#: ../../../Misc/NEWS:6390
msgid ""
"`bpo-13866 <https://bugs.python.org/issue13866>`__: *quote_via* argument "
"added to urllib.parse.urlencode."
msgstr ""
"`bpo-13866 <https://bugs.python.org/issue13866>`__: *quote_via* argument "
"added to urllib.parse.urlencode."

#: ../../../Misc/NEWS:6392
msgid ""
"`bpo-20098 <https://bugs.python.org/issue20098>`__: New mangle_from policy "
"option for email, default True for compat32, but False for all other "
"policies."
msgstr ""
"`bpo-20098 <https://bugs.python.org/issue20098>`__: New mangle_from policy "
"option for email, default True for compat32, but False for all other "
"policies."

#: ../../../Misc/NEWS:6395
msgid ""
"`bpo-24211 <https://bugs.python.org/issue24211>`__: The email library now "
"supports RFC 6532: it can generate headers using utf-8 instead of encoded "
"words."
msgstr ""
"`bpo-24211 <https://bugs.python.org/issue24211>`__: The email library now "
"supports RFC 6532: it can generate headers using utf-8 instead of encoded "
"words."

#: ../../../Misc/NEWS:6398
msgid ""
"`bpo-16314 <https://bugs.python.org/issue16314>`__: Added support for the "
"LZMA compression in distutils."
msgstr ""
"`bpo-16314 <https://bugs.python.org/issue16314>`__: Added support for the "
"LZMA compression in distutils."

#: ../../../Misc/NEWS:6400
msgid ""
"`bpo-21804 <https://bugs.python.org/issue21804>`__: poplib now supports RFC "
"6856 (UTF8)."
msgstr ""
"`bpo-21804 <https://bugs.python.org/issue21804>`__: poplib now supports RFC "
"6856 (UTF8)."

#: ../../../Misc/NEWS:6402
msgid ""
"`bpo-18682 <https://bugs.python.org/issue18682>`__: Optimized pprint "
"functions for builtin scalar types."
msgstr ""
"`bpo-18682 <https://bugs.python.org/issue18682>`__: Optimized pprint "
"functions for builtin scalar types."

#: ../../../Misc/NEWS:6404
msgid ""
"`bpo-22027 <https://bugs.python.org/issue22027>`__: smtplib now supports RFC "
"6531 (SMTPUTF8)."
msgstr ""
"`bpo-22027 <https://bugs.python.org/issue22027>`__: smtplib now supports RFC "
"6531 (SMTPUTF8)."

#: ../../../Misc/NEWS:6406
msgid ""
"`bpo-23488 <https://bugs.python.org/issue23488>`__: Random generator objects "
"now consume 2x less memory on 64-bit."
msgstr ""
"`bpo-23488 <https://bugs.python.org/issue23488>`__: Random generator objects "
"now consume 2x less memory on 64-bit."

#: ../../../Misc/NEWS:6408
msgid ""
"`bpo-1322 <https://bugs.python.org/issue1322>`__: platform.dist() and "
"platform.linux_distribution() functions are now deprecated.  Initial patch "
"by Vajrasky Kok."
msgstr ""
"`bpo-1322 <https://bugs.python.org/issue1322>`__: platform.dist() and "
"platform.linux_distribution() functions are now deprecated.  Initial patch "
"by Vajrasky Kok."

#: ../../../Misc/NEWS:6411
msgid ""
"`bpo-22486 <https://bugs.python.org/issue22486>`__: Added the math.gcd() "
"function.  The fractions.gcd() function now is deprecated.  Based on patch "
"by Mark Dickinson."
msgstr ""
"`bpo-22486 <https://bugs.python.org/issue22486>`__: Added the math.gcd() "
"function.  The fractions.gcd() function now is deprecated.  Based on patch "
"by Mark Dickinson."

#: ../../../Misc/NEWS:6414
msgid ""
"`bpo-24064 <https://bugs.python.org/issue24064>`__: Property() docstrings "
"are now writeable. (Patch by Berker Peksag.)"
msgstr ""
"`bpo-24064 <https://bugs.python.org/issue24064>`__: Property() docstrings "
"are now writeable. (Patch by Berker Peksag.)"

#: ../../../Misc/NEWS:6417
msgid ""
"`bpo-22681 <https://bugs.python.org/issue22681>`__: Added support for the "
"koi8_t encoding."
msgstr ""
"`bpo-22681 <https://bugs.python.org/issue22681>`__: Added support for the "
"koi8_t encoding."

#: ../../../Misc/NEWS:6419
msgid ""
"`bpo-22682 <https://bugs.python.org/issue22682>`__: Added support for the "
"kz1048 encoding."
msgstr ""
"`bpo-22682 <https://bugs.python.org/issue22682>`__: Added support for the "
"kz1048 encoding."

#: ../../../Misc/NEWS:6421
msgid ""
"`bpo-23796 <https://bugs.python.org/issue23796>`__: peek and read1 methods "
"of BufferedReader now raise ValueError if they called on a closed object. "
"Patch by John Hergenroeder."
msgstr ""
"`bpo-23796 <https://bugs.python.org/issue23796>`__: peek and read1 methods "
"of BufferedReader now raise ValueError if they called on a closed object. "
"Patch by John Hergenroeder."

#: ../../../Misc/NEWS:6424
msgid ""
"`bpo-21795 <https://bugs.python.org/issue21795>`__: smtpd now supports the "
"8BITMIME extension whenever the new *decode_data* constructor argument is "
"set to False."
msgstr ""
"`bpo-21795 <https://bugs.python.org/issue21795>`__: smtpd now supports the "
"8BITMIME extension whenever the new *decode_data* constructor argument is "
"set to False."

#: ../../../Misc/NEWS:6427
msgid ""
"`bpo-24155 <https://bugs.python.org/issue24155>`__: optimize heapq.heapify() "
"for better cache performance when heapifying large lists."
msgstr ""
"`bpo-24155 <https://bugs.python.org/issue24155>`__: optimize heapq.heapify() "
"for better cache performance when heapifying large lists."

#: ../../../Misc/NEWS:6430
msgid ""
"`bpo-21800 <https://bugs.python.org/issue21800>`__: imaplib now supports RFC "
"5161 (enable), RFC 6855 (utf8/internationalized email) and automatically "
"encodes non-ASCII usernames and passwords to UTF8."
msgstr ""
"`bpo-21800 <https://bugs.python.org/issue21800>`__: imaplib now supports RFC "
"5161 (enable), RFC 6855 (utf8/internationalized email) and automatically "
"encodes non-ASCII usernames and passwords to UTF8."

#: ../../../Misc/NEWS:6434
msgid ""
"`bpo-20274 <https://bugs.python.org/issue20274>`__: When calling a _sqlite."
"Connection, it now complains if passed any keyword arguments.  Previously it "
"silently ignored them."
msgstr ""
"`bpo-20274 <https://bugs.python.org/issue20274>`__: When calling a _sqlite."
"Connection, it now complains if passed any keyword arguments.  Previously it "
"silently ignored them."

#: ../../../Misc/NEWS:6437
msgid ""
"`bpo-20274 <https://bugs.python.org/issue20274>`__: Remove ignored and "
"erroneous \"kwargs\" parameters from three METH_VARARGS methods on _sqlite."
"Connection."
msgstr ""
"`bpo-20274 <https://bugs.python.org/issue20274>`__: Remove ignored and "
"erroneous \"kwargs\" parameters from three METH_VARARGS methods on _sqlite."
"Connection."

#: ../../../Misc/NEWS:6440
msgid ""
"`bpo-24134 <https://bugs.python.org/issue24134>`__: assertRaises(), "
"assertRaisesRegex(), assertWarns() and assertWarnsRegex() checks now emits a "
"deprecation warning when callable is None or keyword arguments except msg is "
"passed in the context manager mode."
msgstr ""
"`bpo-24134 <https://bugs.python.org/issue24134>`__: assertRaises(), "
"assertRaisesRegex(), assertWarns() and assertWarnsRegex() checks now emits a "
"deprecation warning when callable is None or keyword arguments except msg is "
"passed in the context manager mode."

#: ../../../Misc/NEWS:6444
msgid ""
"`bpo-24018 <https://bugs.python.org/issue24018>`__: Add a collections.abc."
"Generator abstract base class. Contributed by Stefan Behnel."
msgstr ""
"`bpo-24018 <https://bugs.python.org/issue24018>`__: Add a collections.abc."
"Generator abstract base class. Contributed by Stefan Behnel."

#: ../../../Misc/NEWS:6447
msgid ""
"`bpo-23880 <https://bugs.python.org/issue23880>`__: Tkinter's getint() and "
"getdouble() now support Tcl_Obj. Tkinter's getdouble() now supports any "
"numbers (in particular int)."
msgstr ""
"`bpo-23880 <https://bugs.python.org/issue23880>`__: Tkinter's getint() and "
"getdouble() now support Tcl_Obj. Tkinter's getdouble() now supports any "
"numbers (in particular int)."

#: ../../../Misc/NEWS:6450
msgid ""
"`bpo-22619 <https://bugs.python.org/issue22619>`__: Added negative limit "
"support in the traceback module. Based on patch by Dmitry Kazakov."
msgstr ""
"`bpo-22619 <https://bugs.python.org/issue22619>`__: Added negative limit "
"support in the traceback module. Based on patch by Dmitry Kazakov."

#: ../../../Misc/NEWS:6453
msgid ""
"`bpo-24094 <https://bugs.python.org/issue24094>`__: Fix possible crash in "
"json.encode with poorly behaved dict subclasses."
msgstr ""
"`bpo-24094 <https://bugs.python.org/issue24094>`__: Fix possible crash in "
"json.encode with poorly behaved dict subclasses."

#: ../../../Misc/NEWS:6456
msgid ""
"`bpo-9246 <https://bugs.python.org/issue9246>`__: On POSIX, os.getcwd() now "
"supports paths longer than 1025 bytes. Patch written by William Orr."
msgstr ""
"`bpo-9246 <https://bugs.python.org/issue9246>`__: On POSIX, os.getcwd() now "
"supports paths longer than 1025 bytes. Patch written by William Orr."

#: ../../../Misc/NEWS:6459
msgid ""
"`bpo-17445 <https://bugs.python.org/issue17445>`__: add difflib.diff_bytes() "
"to support comparison of byte strings (fixes a regression from Python 2)."
msgstr ""
"`bpo-17445 <https://bugs.python.org/issue17445>`__: add difflib.diff_bytes() "
"to support comparison of byte strings (fixes a regression from Python 2)."

#: ../../../Misc/NEWS:6462
msgid ""
"`bpo-23917 <https://bugs.python.org/issue23917>`__: Fall back to sequential "
"compilation when ProcessPoolExecutor doesn't exist.  Patch by Claudiu Popa."
msgstr ""
"`bpo-23917 <https://bugs.python.org/issue23917>`__: Fall back to sequential "
"compilation when ProcessPoolExecutor doesn't exist.  Patch by Claudiu Popa."

#: ../../../Misc/NEWS:6465
msgid ""
"`bpo-23008 <https://bugs.python.org/issue23008>`__: Fixed resolving "
"attributes with boolean value is False in pydoc."
msgstr ""
"`bpo-23008 <https://bugs.python.org/issue23008>`__: Fixed resolving "
"attributes with boolean value is False in pydoc."

#: ../../../Misc/NEWS:6467
msgid ""
"Fix asyncio issue 235: LifoQueue and PriorityQueue's put didn't increment "
"unfinished tasks (this bug was introduced when JoinableQueue was merged with "
"Queue)."
msgstr ""

#: ../../../Misc/NEWS:6471
msgid ""
"`bpo-23908 <https://bugs.python.org/issue23908>`__: os functions now reject "
"paths with embedded null character on Windows instead of silently truncating "
"them."
msgstr ""
"`bpo-23908 <https://bugs.python.org/issue23908>`__: os functions now reject "
"paths with embedded null character on Windows instead of silently truncating "
"them."

#: ../../../Misc/NEWS:6474
msgid ""
"`bpo-23728 <https://bugs.python.org/issue23728>`__: binascii.crc_hqx() could "
"return an integer outside of the range 0-0xffff for empty data."
msgstr ""
"`bpo-23728 <https://bugs.python.org/issue23728>`__: binascii.crc_hqx() could "
"return an integer outside of the range 0-0xffff for empty data."

#: ../../../Misc/NEWS:6477
msgid ""
"`bpo-23887 <https://bugs.python.org/issue23887>`__: urllib.error.HTTPError "
"now has a proper repr() representation. Patch by Berker Peksag."
msgstr ""
"`bpo-23887 <https://bugs.python.org/issue23887>`__: urllib.error.HTTPError "
"now has a proper repr() representation. Patch by Berker Peksag."

#: ../../../Misc/NEWS:6480
msgid ""
"asyncio: New event loop APIs: set_task_factory() and get_task_factory()."
msgstr ""

#: ../../../Misc/NEWS:6482
msgid "asyncio: async() function is deprecated in favour of ensure_future()."
msgstr ""

#: ../../../Misc/NEWS:6484
msgid ""
"`bpo-24178 <https://bugs.python.org/issue24178>`__: asyncio.Lock, Condition, "
"Semaphore, and BoundedSemaphore support new 'async with' syntax.  "
"Contributed by Yury Selivanov."
msgstr ""
"`bpo-24178 <https://bugs.python.org/issue24178>`__: asyncio.Lock, Condition, "
"Semaphore, and BoundedSemaphore support new 'async with' syntax.  "
"Contributed by Yury Selivanov."

#: ../../../Misc/NEWS:6487
msgid ""
"`bpo-24179 <https://bugs.python.org/issue24179>`__: Support 'async for' for "
"asyncio.StreamReader. Contributed by Yury Selivanov."
msgstr ""
"`bpo-24179 <https://bugs.python.org/issue24179>`__: Support 'async for' for "
"asyncio.StreamReader. Contributed by Yury Selivanov."

#: ../../../Misc/NEWS:6490
msgid ""
"`bpo-24184 <https://bugs.python.org/issue24184>`__: Add AsyncIterator and "
"AsyncIterable ABCs to collections.abc.  Contributed by Yury Selivanov."
msgstr ""
"`bpo-24184 <https://bugs.python.org/issue24184>`__: Add AsyncIterator and "
"AsyncIterable ABCs to collections.abc.  Contributed by Yury Selivanov."

#: ../../../Misc/NEWS:6493
msgid ""
"`bpo-22547 <https://bugs.python.org/issue22547>`__: Implement informative "
"__repr__ for inspect.BoundArguments. Contributed by Yury Selivanov."
msgstr ""
"`bpo-22547 <https://bugs.python.org/issue22547>`__: Implement informative "
"__repr__ for inspect.BoundArguments. Contributed by Yury Selivanov."

#: ../../../Misc/NEWS:6496
msgid ""
"`bpo-24190 <https://bugs.python.org/issue24190>`__: Implement inspect."
"BoundArgument.apply_defaults() method. Contributed by Yury Selivanov."
msgstr ""
"`bpo-24190 <https://bugs.python.org/issue24190>`__: Implement inspect."
"BoundArgument.apply_defaults() method. Contributed by Yury Selivanov."

#: ../../../Misc/NEWS:6499
msgid ""
"`bpo-20691 <https://bugs.python.org/issue20691>`__: Add 'follow_wrapped' "
"argument to inspect.Signature.from_callable() and inspect.signature(). "
"Contributed by Yury Selivanov."
msgstr ""
"`bpo-20691 <https://bugs.python.org/issue20691>`__: Add 'follow_wrapped' "
"argument to inspect.Signature.from_callable() and inspect.signature(). "
"Contributed by Yury Selivanov."

#: ../../../Misc/NEWS:6503
msgid ""
"`bpo-24248 <https://bugs.python.org/issue24248>`__: Deprecate inspect."
"Signature.from_function() and inspect.Signature.from_builtin()."
msgstr ""
"`bpo-24248 <https://bugs.python.org/issue24248>`__: Deprecate inspect."
"Signature.from_function() and inspect.Signature.from_builtin()."

#: ../../../Misc/NEWS:6506
msgid ""
"`bpo-23898 <https://bugs.python.org/issue23898>`__: Fix inspect."
"classify_class_attrs() to support attributes with overloaded __eq__ and "
"__bool__.  Patch by Mike Bayer."
msgstr ""
"`bpo-23898 <https://bugs.python.org/issue23898>`__: Fix inspect."
"classify_class_attrs() to support attributes with overloaded __eq__ and "
"__bool__.  Patch by Mike Bayer."

#: ../../../Misc/NEWS:6509
msgid ""
"`bpo-24298 <https://bugs.python.org/issue24298>`__: Fix inspect.signature() "
"to correctly unwrap wrappers around bound methods."
msgstr ""
"`bpo-24298 <https://bugs.python.org/issue24298>`__: Fix inspect.signature() "
"to correctly unwrap wrappers around bound methods."

#: ../../../Misc/NEWS:6515
msgid ""
"`bpo-23184 <https://bugs.python.org/issue23184>`__: remove unused names and "
"imports in idlelib. Initial patch by Al Sweigart."
msgstr ""
"`bpo-23184 <https://bugs.python.org/issue23184>`__: remove unused names and "
"imports in idlelib. Initial patch by Al Sweigart."

#: ../../../Misc/NEWS:6521
msgid ""
"`bpo-21520 <https://bugs.python.org/issue21520>`__: test_zipfile no longer "
"fails if the word 'bad' appears anywhere in the name of the current "
"directory."
msgstr ""
"`bpo-21520 <https://bugs.python.org/issue21520>`__: test_zipfile no longer "
"fails if the word 'bad' appears anywhere in the name of the current "
"directory."

#: ../../../Misc/NEWS:6524
msgid ""
"`bpo-9517 <https://bugs.python.org/issue9517>`__: Move script_helper into "
"the support package. Patch by Christie Wilson."
msgstr ""
"`bpo-9517 <https://bugs.python.org/issue9517>`__: Move script_helper into "
"the support package. Patch by Christie Wilson."

#: ../../../Misc/NEWS:6530
msgid ""
"`bpo-22155 <https://bugs.python.org/issue22155>`__: Add File Handlers "
"subsection with createfilehandler to tkinter doc.  Remove obsolete example "
"from FAQ.  Patch by Martin Panter."
msgstr ""
"`bpo-22155 <https://bugs.python.org/issue22155>`__: Add File Handlers "
"subsection with createfilehandler to tkinter doc.  Remove obsolete example "
"from FAQ.  Patch by Martin Panter."

#: ../../../Misc/NEWS:6533
msgid ""
"`bpo-24029 <https://bugs.python.org/issue24029>`__: Document the name "
"binding behavior for submodule imports."
msgstr ""
"`bpo-24029 <https://bugs.python.org/issue24029>`__: Document the name "
"binding behavior for submodule imports."

#: ../../../Misc/NEWS:6535
msgid ""
"`bpo-24077 <https://bugs.python.org/issue24077>`__: Fix typo in man page for "
"-I command option: -s, not -S"
msgstr ""
"`bpo-24077 <https://bugs.python.org/issue24077>`__: Fix typo in man page for "
"-I command option: -s, not -S"

#: ../../../Misc/NEWS:6540
msgid ""
"`bpo-24000 <https://bugs.python.org/issue24000>`__: Improved Argument "
"Clinic's mapping of converters to legacy \"format units\".  Updated the "
"documentation to match."
msgstr ""
"`bpo-24000 <https://bugs.python.org/issue24000>`__: Improved Argument "
"Clinic's mapping of converters to legacy \"format units\".  Updated the "
"documentation to match."

#: ../../../Misc/NEWS:6543
msgid ""
"`bpo-24001 <https://bugs.python.org/issue24001>`__: Argument Clinic "
"converters now use accept={type} instead of types={'type'} to specify the "
"types the converter accepts."
msgstr ""
"`bpo-24001 <https://bugs.python.org/issue24001>`__: Argument Clinic "
"converters now use accept={type} instead of types={'type'} to specify the "
"types the converter accepts."

#: ../../../Misc/NEWS:6546
msgid ""
"`bpo-23330 <https://bugs.python.org/issue23330>`__: h2py now supports "
"arbitrary filenames in #include."
msgstr ""
"`bpo-23330 <https://bugs.python.org/issue23330>`__: h2py now supports "
"arbitrary filenames in #include."

#: ../../../Misc/NEWS:6548
msgid ""
"`bpo-24031 <https://bugs.python.org/issue24031>`__: make patchcheck now "
"supports git checkouts, too."
msgstr ""
"`bpo-24031 <https://bugs.python.org/issue24031>`__: make patchcheck now "
"supports git checkouts, too."

#: ../../../Misc/NEWS:6552
msgid "Python 3.5.0 alpha 4"
msgstr "Python 3.5.0 alpha 4"

#: ../../../Misc/NEWS:6554
msgid "Release date: 2015-04-19"
msgstr "Date de sortie : 2015-04-19"

#: ../../../Misc/NEWS:6559
msgid ""
"`bpo-22980 <https://bugs.python.org/issue22980>`__: Under Linux, GNU/"
"KFreeBSD and the Hurd, C extensions now include the architecture triplet in "
"the extension name, to make it easy to test builds for different ABIs in the "
"same working tree.  Under OS X, the extension name now includes PEP 3149-"
"style information."
msgstr ""
"`bpo-22980 <https://bugs.python.org/issue22980>`__: Under Linux, GNU/"
"KFreeBSD and the Hurd, C extensions now include the architecture triplet in "
"the extension name, to make it easy to test builds for different ABIs in the "
"same working tree.  Under OS X, the extension name now includes PEP 3149-"
"style information."

#: ../../../Misc/NEWS:6564
msgid ""
"`bpo-22631 <https://bugs.python.org/issue22631>`__: Added Linux-specific "
"socket constant CAN_RAW_FD_FRAMES. Patch courtesy of Joe Jevnik."
msgstr ""
"`bpo-22631 <https://bugs.python.org/issue22631>`__: Added Linux-specific "
"socket constant CAN_RAW_FD_FRAMES. Patch courtesy of Joe Jevnik."

#: ../../../Misc/NEWS:6567
msgid ""
"`bpo-23731 <https://bugs.python.org/issue23731>`__: Implement PEP 488: "
"removal of .pyo files."
msgstr ""
"`bpo-23731 <https://bugs.python.org/issue23731>`__: Implement PEP 488: "
"removal of .pyo files."

#: ../../../Misc/NEWS:6569
msgid ""
"`bpo-23726 <https://bugs.python.org/issue23726>`__: Don't enable GC for user "
"subclasses of non-GC types that don't add any new fields.  Patch by Eugene "
"Toder."
msgstr ""
"`bpo-23726 <https://bugs.python.org/issue23726>`__: Don't enable GC for user "
"subclasses of non-GC types that don't add any new fields.  Patch by Eugene "
"Toder."

#: ../../../Misc/NEWS:6572
msgid ""
"`bpo-23309 <https://bugs.python.org/issue23309>`__: Avoid a deadlock at "
"shutdown if a daemon thread is aborted while it is holding a lock to a "
"buffered I/O object, and the main thread tries to use the same I/O object "
"(typically stdout or stderr).  A fatal error is emitted instead."
msgstr ""
"`bpo-23309 <https://bugs.python.org/issue23309>`__: Avoid a deadlock at "
"shutdown if a daemon thread is aborted while it is holding a lock to a "
"buffered I/O object, and the main thread tries to use the same I/O object "
"(typically stdout or stderr).  A fatal error is emitted instead."

#: ../../../Misc/NEWS:6577
msgid ""
"`bpo-22977 <https://bugs.python.org/issue22977>`__: Fixed formatting Windows "
"error messages on Wine. Patch by Martin Panter."
msgstr ""
"`bpo-22977 <https://bugs.python.org/issue22977>`__: Fixed formatting Windows "
"error messages on Wine. Patch by Martin Panter."

#: ../../../Misc/NEWS:6580
msgid ""
"`bpo-23466 <https://bugs.python.org/issue23466>`__: %c, %o, %x, and %X in "
"bytes formatting now raise TypeError on non-integer input."
msgstr ""
"`bpo-23466 <https://bugs.python.org/issue23466>`__: %c, %o, %x, and %X in "
"bytes formatting now raise TypeError on non-integer input."

#: ../../../Misc/NEWS:6583
msgid ""
"`bpo-24044 <https://bugs.python.org/issue24044>`__: Fix possible null "
"pointer dereference in list.sort in out of memory conditions."
msgstr ""
"`bpo-24044 <https://bugs.python.org/issue24044>`__: Fix possible null "
"pointer dereference in list.sort in out of memory conditions."

#: ../../../Misc/NEWS:6586
msgid ""
"`bpo-21354 <https://bugs.python.org/issue21354>`__: PyCFunction_New function "
"is exposed by python DLL again."
msgstr ""
"`bpo-21354 <https://bugs.python.org/issue21354>`__: PyCFunction_New function "
"is exposed by python DLL again."

#: ../../../Misc/NEWS:6591
msgid ""
"`bpo-23840 <https://bugs.python.org/issue23840>`__: tokenize.open() now "
"closes the temporary binary file on error to fix a resource warning."
msgstr ""
"`bpo-23840 <https://bugs.python.org/issue23840>`__: tokenize.open() now "
"closes the temporary binary file on error to fix a resource warning."

#: ../../../Misc/NEWS:6594
msgid ""
"`bpo-16914 <https://bugs.python.org/issue16914>`__: new debuglevel 2 in "
"smtplib adds timestamps to debug output."
msgstr ""
"`bpo-16914 <https://bugs.python.org/issue16914>`__: new debuglevel 2 in "
"smtplib adds timestamps to debug output."

#: ../../../Misc/NEWS:6596
msgid ""
"`bpo-7159 <https://bugs.python.org/issue7159>`__: urllib.request now "
"supports sending auth credentials automatically after the first 401.  This "
"enhancement is a superset of the enhancement from `bpo-19494 <https://bugs."
"python.org/issue19494>`__ and supersedes that change."
msgstr ""
"`bpo-7159 <https://bugs.python.org/issue7159>`__: urllib.request now "
"supports sending auth credentials automatically after the first 401.  This "
"enhancement is a superset of the enhancement from `bpo-19494 <https://bugs."
"python.org/issue19494>`__ and supersedes that change."

#: ../../../Misc/NEWS:6600
msgid ""
"`bpo-23703 <https://bugs.python.org/issue23703>`__: Fix a regression in "
"urljoin() introduced in 901e4e52b20a. Patch by Demian Brecht."
msgstr ""
"`bpo-23703 <https://bugs.python.org/issue23703>`__: Fix a regression in "
"urljoin() introduced in 901e4e52b20a. Patch by Demian Brecht."

#: ../../../Misc/NEWS:6603
msgid ""
"`bpo-4254 <https://bugs.python.org/issue4254>`__: Adds _curses."
"update_lines_cols().  Patch by Arnon Yaari"
msgstr ""
"`bpo-4254 <https://bugs.python.org/issue4254>`__: Adds _curses."
"update_lines_cols().  Patch by Arnon Yaari"

#: ../../../Misc/NEWS:6605
msgid ""
"`bpo-19933 <https://bugs.python.org/issue19933>`__: Provide default argument "
"for ndigits in round. Patch by Vajrasky Kok."
msgstr ""
"`bpo-19933 <https://bugs.python.org/issue19933>`__: Provide default argument "
"for ndigits in round. Patch by Vajrasky Kok."

#: ../../../Misc/NEWS:6608
msgid ""
"`bpo-23193 <https://bugs.python.org/issue23193>`__: Add a numeric_owner "
"parameter to tarfile.TarFile.extract and tarfile.TarFile.extractall. Patch "
"by Michael Vogt and Eric Smith."
msgstr ""
"`bpo-23193 <https://bugs.python.org/issue23193>`__: Add a numeric_owner "
"parameter to tarfile.TarFile.extract and tarfile.TarFile.extractall. Patch "
"by Michael Vogt and Eric Smith."

#: ../../../Misc/NEWS:6612
msgid ""
"`bpo-23342 <https://bugs.python.org/issue23342>`__: Add a subprocess.run() "
"function than returns a CalledProcess instance for a more consistent API "
"than the existing call* functions."
msgstr ""
"`bpo-23342 <https://bugs.python.org/issue23342>`__: Add a subprocess.run() "
"function than returns a CalledProcess instance for a more consistent API "
"than the existing call* functions."

#: ../../../Misc/NEWS:6615
msgid ""
"`bpo-21217 <https://bugs.python.org/issue21217>`__: inspect.getsourcelines() "
"now tries to compute the start and end lines from the code object, fixing an "
"issue when a lambda function is used as decorator argument. Patch by Thomas "
"Ballinger and Allison Kaptur."
msgstr ""
"`bpo-21217 <https://bugs.python.org/issue21217>`__: inspect.getsourcelines() "
"now tries to compute the start and end lines from the code object, fixing an "
"issue when a lambda function is used as decorator argument. Patch by Thomas "
"Ballinger and Allison Kaptur."

#: ../../../Misc/NEWS:6619
msgid ""
"`bpo-24521 <https://bugs.python.org/issue24521>`__: Fix possible integer "
"overflows in the pickle module."
msgstr ""
"`bpo-24521 <https://bugs.python.org/issue24521>`__: Fix possible integer "
"overflows in the pickle module."

#: ../../../Misc/NEWS:6621
msgid ""
"`bpo-22931 <https://bugs.python.org/issue22931>`__: Allow '[' and ']' in "
"cookie values."
msgstr ""
"`bpo-22931 <https://bugs.python.org/issue22931>`__: Allow '[' and ']' in "
"cookie values."

#: ../../../Misc/NEWS:6623
msgid "The keywords attribute of functools.partial is now always a dictionary."
msgstr ""

#: ../../../Misc/NEWS:6625
msgid ""
"`bpo-23811 <https://bugs.python.org/issue23811>`__: Add missing newline to "
"the PyCompileError error message. Patch by Alex Shkop."
msgstr ""
"`bpo-23811 <https://bugs.python.org/issue23811>`__: Add missing newline to "
"the PyCompileError error message. Patch by Alex Shkop."

#: ../../../Misc/NEWS:6628
msgid ""
"`bpo-21116 <https://bugs.python.org/issue21116>`__: Avoid blowing memory "
"when allocating a multiprocessing shared array that's larger than 50% of the "
"available RAM.  Patch by M√©d√©ric Boquien."
msgstr ""
"`bpo-21116 <https://bugs.python.org/issue21116>`__: Avoid blowing memory "
"when allocating a multiprocessing shared array that's larger than 50% of the "
"available RAM.  Patch by M√©d√©ric Boquien."

#: ../../../Misc/NEWS:6631
msgid ""
"`bpo-22982 <https://bugs.python.org/issue22982>`__: Improve BOM handling "
"when seeking to multiple positions of a writable text file."
msgstr ""
"`bpo-22982 <https://bugs.python.org/issue22982>`__: Improve BOM handling "
"when seeking to multiple positions of a writable text file."

#: ../../../Misc/NEWS:6634
msgid ""
"`bpo-23464 <https://bugs.python.org/issue23464>`__: Removed deprecated "
"asyncio JoinableQueue."
msgstr ""
"`bpo-23464 <https://bugs.python.org/issue23464>`__: Removed deprecated "
"asyncio JoinableQueue."

#: ../../../Misc/NEWS:6636
msgid ""
"`bpo-23529 <https://bugs.python.org/issue23529>`__: Limit the size of "
"decompressed data when reading from GzipFile, BZ2File or LZMAFile.  This "
"defeats denial of service attacks using compressed bombs (i.e. compressed "
"payloads which decompress to a huge size).  Patch by Martin Panter and "
"Nikolaus Rath."
msgstr ""
"`bpo-23529 <https://bugs.python.org/issue23529>`__: Limit the size of "
"decompressed data when reading from GzipFile, BZ2File or LZMAFile.  This "
"defeats denial of service attacks using compressed bombs (i.e. compressed "
"payloads which decompress to a huge size).  Patch by Martin Panter and "
"Nikolaus Rath."

#: ../../../Misc/NEWS:6641
msgid ""
"`bpo-21859 <https://bugs.python.org/issue21859>`__: Added Python "
"implementation of io.FileIO."
msgstr ""
"`bpo-21859 <https://bugs.python.org/issue21859>`__: Added Python "
"implementation of io.FileIO."

#: ../../../Misc/NEWS:6643
msgid ""
"`bpo-23865 <https://bugs.python.org/issue23865>`__: close() methods in "
"multiple modules now are idempotent and more robust at shutdown. If they "
"need to release multiple resources, all are released even if errors occur."
msgstr ""
"`bpo-23865 <https://bugs.python.org/issue23865>`__: close() methods in "
"multiple modules now are idempotent and more robust at shutdown. If they "
"need to release multiple resources, all are released even if errors occur."

#: ../../../Misc/NEWS:6647
msgid ""
"`bpo-23400 <https://bugs.python.org/issue23400>`__: Raise same exception on "
"both Python 2 and 3 if sem_open is not available.  Patch by Davin Potts."
msgstr ""
"`bpo-23400 <https://bugs.python.org/issue23400>`__: Raise same exception on "
"both Python 2 and 3 if sem_open is not available.  Patch by Davin Potts."

#: ../../../Misc/NEWS:6650
msgid ""
"`bpo-10838 <https://bugs.python.org/issue10838>`__: The subprocess now "
"module includes SubprocessError and TimeoutError in its list of exported "
"names for the users wild enough to use ``from subprocess import *``."
msgstr ""
"`bpo-10838 <https://bugs.python.org/issue10838>`__: The subprocess now "
"module includes SubprocessError and TimeoutError in its list of exported "
"names for the users wild enough to use ``from subprocess import *``."

#: ../../../Misc/NEWS:6654
msgid ""
"`bpo-23411 <https://bugs.python.org/issue23411>`__: Added DefragResult, "
"ParseResult, SplitResult, DefragResultBytes, ParseResultBytes, and "
"SplitResultBytes to urllib.parse.__all__. Patch by Martin Panter."
msgstr ""
"`bpo-23411 <https://bugs.python.org/issue23411>`__: Added DefragResult, "
"ParseResult, SplitResult, DefragResultBytes, ParseResultBytes, and "
"SplitResultBytes to urllib.parse.__all__. Patch by Martin Panter."

#: ../../../Misc/NEWS:6658
msgid ""
"`bpo-23881 <https://bugs.python.org/issue23881>`__: urllib.request."
"ftpwrapper constructor now closes the socket if the FTP connection failed to "
"fix a ResourceWarning."
msgstr ""
"`bpo-23881 <https://bugs.python.org/issue23881>`__: urllib.request."
"ftpwrapper constructor now closes the socket if the FTP connection failed to "
"fix a ResourceWarning."

#: ../../../Misc/NEWS:6661
msgid ""
"`bpo-23853 <https://bugs.python.org/issue23853>`__: :meth:`socket.socket."
"sendall` does no more reset the socket timeout each time data is sent "
"successfully. The socket timeout is now the maximum total duration to send "
"all data."
msgstr ""
"`bpo-23853 <https://bugs.python.org/issue23853>`__: :meth:`socket.socket."
"sendall` does no more reset the socket timeout each time data is sent "
"successfully. The socket timeout is now the maximum total duration to send "
"all data."

#: ../../../Misc/NEWS:6665
msgid ""
"`bpo-22721 <https://bugs.python.org/issue22721>`__: An order of multiline "
"pprint output of set or dict containing orderable and non-orderable elements "
"no longer depends on iteration order of set or dict."
msgstr ""
"`bpo-22721 <https://bugs.python.org/issue22721>`__: An order of multiline "
"pprint output of set or dict containing orderable and non-orderable elements "
"no longer depends on iteration order of set or dict."

#: ../../../Misc/NEWS:6669
msgid ""
"`bpo-15133 <https://bugs.python.org/issue15133>`__: _tkinter.tkapp."
"getboolean() now supports Tcl_Obj and always returns bool.  tkinter."
"BooleanVar now validates input values (accepted bool, int, str, and "
"Tcl_Obj).  tkinter.BooleanVar.get() now always returns bool."
msgstr ""
"`bpo-15133 <https://bugs.python.org/issue15133>`__: _tkinter.tkapp."
"getboolean() now supports Tcl_Obj and always returns bool.  tkinter."
"BooleanVar now validates input values (accepted bool, int, str, and "
"Tcl_Obj).  tkinter.BooleanVar.get() now always returns bool."

#: ../../../Misc/NEWS:6673
msgid ""
"`bpo-10590 <https://bugs.python.org/issue10590>`__: xml.sax.parseString() "
"now supports string argument."
msgstr ""
"`bpo-10590 <https://bugs.python.org/issue10590>`__: xml.sax.parseString() "
"now supports string argument."

#: ../../../Misc/NEWS:6675
msgid ""
"`bpo-23338 <https://bugs.python.org/issue23338>`__: Fixed formatting ctypes "
"error messages on Cygwin. Patch by Makoto Kato."
msgstr ""
"`bpo-23338 <https://bugs.python.org/issue23338>`__: Fixed formatting ctypes "
"error messages on Cygwin. Patch by Makoto Kato."

#: ../../../Misc/NEWS:6678
msgid ""
"`bpo-15582 <https://bugs.python.org/issue15582>`__: inspect.getdoc() now "
"follows inheritance chains."
msgstr ""
"`bpo-15582 <https://bugs.python.org/issue15582>`__: inspect.getdoc() now "
"follows inheritance chains."

#: ../../../Misc/NEWS:6680
msgid ""
"`bpo-2175 <https://bugs.python.org/issue2175>`__: SAX parsers now support a "
"character stream of InputSource object."
msgstr ""
"`bpo-2175 <https://bugs.python.org/issue2175>`__: SAX parsers now support a "
"character stream of InputSource object."

#: ../../../Misc/NEWS:6682
msgid ""
"`bpo-16840 <https://bugs.python.org/issue16840>`__: Tkinter now supports 64-"
"bit integers added in Tcl 8.4 and arbitrary precision integers added in Tcl "
"8.5."
msgstr ""
"`bpo-16840 <https://bugs.python.org/issue16840>`__: Tkinter now supports 64-"
"bit integers added in Tcl 8.4 and arbitrary precision integers added in Tcl "
"8.5."

#: ../../../Misc/NEWS:6685
msgid ""
"`bpo-23834 <https://bugs.python.org/issue23834>`__: Fix socket.sendto(), use "
"the C Py_ssize_t type to store the result of sendto() instead of the C int "
"type."
msgstr ""
"`bpo-23834 <https://bugs.python.org/issue23834>`__: Fix socket.sendto(), use "
"the C Py_ssize_t type to store the result of sendto() instead of the C int "
"type."

#: ../../../Misc/NEWS:6688
msgid ""
"`bpo-23618 <https://bugs.python.org/issue23618>`__: :meth:`socket.socket."
"connect` now waits until the connection completes instead of raising :exc:"
"`InterruptedError` if the connection is interrupted by signals, signal "
"handlers don't raise an exception and the socket is blocking or has a "
"timeout. :meth:`socket.socket.connect` still raise :exc:`InterruptedError` "
"for non-blocking sockets."
msgstr ""
"`bpo-23618 <https://bugs.python.org/issue23618>`__: :meth:`socket.socket."
"connect` now waits until the connection completes instead of raising :exc:"
"`InterruptedError` if the connection is interrupted by signals, signal "
"handlers don't raise an exception and the socket is blocking or has a "
"timeout. :meth:`socket.socket.connect` still raise :exc:`InterruptedError` "
"for non-blocking sockets."

#: ../../../Misc/NEWS:6694
msgid ""
"`bpo-21526 <https://bugs.python.org/issue21526>`__: Tkinter now supports new "
"boolean type in Tcl 8.5."
msgstr ""
"`bpo-21526 <https://bugs.python.org/issue21526>`__: Tkinter now supports new "
"boolean type in Tcl 8.5."

#: ../../../Misc/NEWS:6696
msgid ""
"`bpo-23836 <https://bugs.python.org/issue23836>`__: Fix the faulthandler "
"module to handle reentrant calls to its signal handlers."
msgstr ""
"`bpo-23836 <https://bugs.python.org/issue23836>`__: Fix the faulthandler "
"module to handle reentrant calls to its signal handlers."

#: ../../../Misc/NEWS:6699
msgid ""
"`bpo-23838 <https://bugs.python.org/issue23838>`__: linecache now clears the "
"cache and returns an empty result on MemoryError."
msgstr ""
"`bpo-23838 <https://bugs.python.org/issue23838>`__: linecache now clears the "
"cache and returns an empty result on MemoryError."

#: ../../../Misc/NEWS:6702
msgid ""
"`bpo-10395 <https://bugs.python.org/issue10395>`__: Added os.path."
"commonpath(). Implemented in posixpath and ntpath. Based on patch by Rafik "
"Draoui."
msgstr ""
"`bpo-10395 <https://bugs.python.org/issue10395>`__: Added os.path."
"commonpath(). Implemented in posixpath and ntpath. Based on patch by Rafik "
"Draoui."

#: ../../../Misc/NEWS:6705
msgid ""
"`bpo-23611 <https://bugs.python.org/issue23611>`__: Serializing more "
"\"lookupable\" objects (such as unbound methods or nested classes) now are "
"supported with pickle protocols < 4."
msgstr ""
"`bpo-23611 <https://bugs.python.org/issue23611>`__: Serializing more "
"\"lookupable\" objects (such as unbound methods or nested classes) now are "
"supported with pickle protocols < 4."

#: ../../../Misc/NEWS:6708
msgid ""
"`bpo-13583 <https://bugs.python.org/issue13583>`__: sqlite3.Row now supports "
"slice indexing."
msgstr ""
"`bpo-13583 <https://bugs.python.org/issue13583>`__: sqlite3.Row now supports "
"slice indexing."

#: ../../../Misc/NEWS:6710
msgid ""
"`bpo-18473 <https://bugs.python.org/issue18473>`__: Fixed 2to3 and 3to2 "
"compatible pickle mappings.  Fixed ambigious reverse mappings.  Added many "
"new mappings.  Import mapping is no longer applied to modules already mapped "
"with full name mapping."
msgstr ""
"`bpo-18473 <https://bugs.python.org/issue18473>`__: Fixed 2to3 and 3to2 "
"compatible pickle mappings.  Fixed ambigious reverse mappings.  Added many "
"new mappings.  Import mapping is no longer applied to modules already mapped "
"with full name mapping."

#: ../../../Misc/NEWS:6714
msgid ""
"`bpo-23485 <https://bugs.python.org/issue23485>`__: select.select() is now "
"retried automatically with the recomputed timeout when interrupted by a "
"signal, except if the signal handler raises an exception. This change is "
"part of the PEP 475."
msgstr ""
"`bpo-23485 <https://bugs.python.org/issue23485>`__: select.select() is now "
"retried automatically with the recomputed timeout when interrupted by a "
"signal, except if the signal handler raises an exception. This change is "
"part of the PEP 475."

#: ../../../Misc/NEWS:6718
msgid ""
"`bpo-23752 <https://bugs.python.org/issue23752>`__: When built from an "
"existing file descriptor, io.FileIO() now only calls fstat() once. Before "
"fstat() was called twice, which was not necessary."
msgstr ""
"`bpo-23752 <https://bugs.python.org/issue23752>`__: When built from an "
"existing file descriptor, io.FileIO() now only calls fstat() once. Before "
"fstat() was called twice, which was not necessary."

#: ../../../Misc/NEWS:6722
msgid ""
"`bpo-23704 <https://bugs.python.org/issue23704>`__: collections.deque() "
"objects now support __add__, __mul__, and __imul__()."
msgstr ""
"`bpo-23704 <https://bugs.python.org/issue23704>`__: collections.deque() "
"objects now support __add__, __mul__, and __imul__()."

#: ../../../Misc/NEWS:6725
msgid ""
"`bpo-23171 <https://bugs.python.org/issue23171>`__: csv.Writer.writerow() "
"now supports arbitrary iterables."
msgstr ""
"`bpo-23171 <https://bugs.python.org/issue23171>`__: csv.Writer.writerow() "
"now supports arbitrary iterables."

#: ../../../Misc/NEWS:6727
msgid ""
"`bpo-23745 <https://bugs.python.org/issue23745>`__: The new email header "
"parser now handles duplicate MIME parameter names without error, similar to "
"how get_param behaves."
msgstr ""
"`bpo-23745 <https://bugs.python.org/issue23745>`__: The new email header "
"parser now handles duplicate MIME parameter names without error, similar to "
"how get_param behaves."

#: ../../../Misc/NEWS:6730
msgid ""
"`bpo-22117 <https://bugs.python.org/issue22117>`__: Fix os.utime(), it now "
"rounds the timestamp towards minus infinity (-inf) instead of rounding "
"towards zero."
msgstr ""
"`bpo-22117 <https://bugs.python.org/issue22117>`__: Fix os.utime(), it now "
"rounds the timestamp towards minus infinity (-inf) instead of rounding "
"towards zero."

#: ../../../Misc/NEWS:6733
msgid ""
"`bpo-23310 <https://bugs.python.org/issue23310>`__: Fix MagicMock's "
"initializer to work with __methods__, just like configure_mock().  Patch by "
"Kasia Jachim."
msgstr ""
"`bpo-23310 <https://bugs.python.org/issue23310>`__: Fix MagicMock's "
"initializer to work with __methods__, just like configure_mock().  Patch by "
"Kasia Jachim."

#: ../../../Misc/NEWS:6739
msgid ""
"`bpo-23817 <https://bugs.python.org/issue23817>`__: FreeBSD now uses \"1.0\" "
"in the SOVERSION as other operating systems, instead of just \"1\"."
msgstr ""
"`bpo-23817 <https://bugs.python.org/issue23817>`__: FreeBSD now uses \"1.0\" "
"in the SOVERSION as other operating systems, instead of just \"1\"."

#: ../../../Misc/NEWS:6742
msgid ""
"`bpo-23501 <https://bugs.python.org/issue23501>`__: Argument Clinic now "
"generates code into separate files by default."
msgstr ""
"`bpo-23501 <https://bugs.python.org/issue23501>`__: Argument Clinic now "
"generates code into separate files by default."

#: ../../../Misc/NEWS:6747
msgid ""
"`bpo-23799 <https://bugs.python.org/issue23799>`__: Added test.support."
"start_threads() for running and cleaning up multiple threads."
msgstr ""
"`bpo-23799 <https://bugs.python.org/issue23799>`__: Added test.support."
"start_threads() for running and cleaning up multiple threads."

#: ../../../Misc/NEWS:6750
msgid ""
"`bpo-22390 <https://bugs.python.org/issue22390>`__: test.regrtest now emits "
"a warning if temporary files or directories are left after running a test."
msgstr ""
"`bpo-22390 <https://bugs.python.org/issue22390>`__: test.regrtest now emits "
"a warning if temporary files or directories are left after running a test."

#: ../../../Misc/NEWS:6756
msgid ""
"`bpo-18128 <https://bugs.python.org/issue18128>`__: pygettext now uses "
"standard +NNNN format in the POT-Creation-Date header."
msgstr ""
"`bpo-18128 <https://bugs.python.org/issue18128>`__: pygettext now uses "
"standard +NNNN format in the POT-Creation-Date header."

#: ../../../Misc/NEWS:6759
msgid ""
"`bpo-23935 <https://bugs.python.org/issue23935>`__: Argument Clinic's "
"understanding of format units accepting bytes, bytearrays, and buffers is "
"now consistent with both the documentation and the implementation."
msgstr ""
"`bpo-23935 <https://bugs.python.org/issue23935>`__: Argument Clinic's "
"understanding of format units accepting bytes, bytearrays, and buffers is "
"now consistent with both the documentation and the implementation."

#: ../../../Misc/NEWS:6763
msgid ""
"`bpo-23944 <https://bugs.python.org/issue23944>`__: Argument Clinic now "
"wraps long impl prototypes at column 78."
msgstr ""
"`bpo-23944 <https://bugs.python.org/issue23944>`__: Argument Clinic now "
"wraps long impl prototypes at column 78."

#: ../../../Misc/NEWS:6765
msgid ""
"`bpo-20586 <https://bugs.python.org/issue20586>`__: Argument Clinic now "
"ensures that functions without docstrings have signatures."
msgstr ""
"`bpo-20586 <https://bugs.python.org/issue20586>`__: Argument Clinic now "
"ensures that functions without docstrings have signatures."

#: ../../../Misc/NEWS:6768
msgid ""
"`bpo-23492 <https://bugs.python.org/issue23492>`__: Argument Clinic now "
"generates argument parsing code with PyArg_Parse instead of PyArg_ParseTuple "
"if possible."
msgstr ""
"`bpo-23492 <https://bugs.python.org/issue23492>`__: Argument Clinic now "
"generates argument parsing code with PyArg_Parse instead of PyArg_ParseTuple "
"if possible."

#: ../../../Misc/NEWS:6771
msgid ""
"`bpo-23500 <https://bugs.python.org/issue23500>`__: Argument Clinic is now "
"smarter about generating the \"#ifndef\" (empty) definition of the methoddef "
"macro: it's only generated once, even if Argument Clinic processes the same "
"symbol multiple times, and it's emitted at the end of all processing rather "
"than immediately after the first use."
msgstr ""
"`bpo-23500 <https://bugs.python.org/issue23500>`__: Argument Clinic is now "
"smarter about generating the \"#ifndef\" (empty) definition of the methoddef "
"macro: it's only generated once, even if Argument Clinic processes the same "
"symbol multiple times, and it's emitted at the end of all processing rather "
"than immediately after the first use."

#: ../../../Misc/NEWS:6779
msgid ""
"`bpo-23998 <https://bugs.python.org/issue23998>`__: PyImport_ReInitLock() "
"now checks for lock allocation error"
msgstr ""
"`bpo-23998 <https://bugs.python.org/issue23998>`__: PyImport_ReInitLock() "
"now checks for lock allocation error"

#: ../../../Misc/NEWS:6783
msgid "Python 3.5.0 alpha 3"
msgstr "Python 3.5.0 alpha 3"

#: ../../../Misc/NEWS:6785
msgid "Release date: 2015-03-28"
msgstr "Date de sortie : 2015-03-28"

#: ../../../Misc/NEWS:6790
msgid ""
"`bpo-23573 <https://bugs.python.org/issue23573>`__: Increased performance of "
"string search operations (str.find, str.index, str.count, the in operator, "
"str.split, str.partition) with arguments of different kinds (UCS1, UCS2, "
"UCS4)."
msgstr ""
"`bpo-23573 <https://bugs.python.org/issue23573>`__: Increased performance of "
"string search operations (str.find, str.index, str.count, the in operator, "
"str.split, str.partition) with arguments of different kinds (UCS1, UCS2, "
"UCS4)."

#: ../../../Misc/NEWS:6794
msgid ""
"`bpo-23753 <https://bugs.python.org/issue23753>`__: Python doesn't support "
"anymore platforms without stat() or fstat(), these functions are always "
"required."
msgstr ""
"`bpo-23753 <https://bugs.python.org/issue23753>`__: Python doesn't support "
"anymore platforms without stat() or fstat(), these functions are always "
"required."

#: ../../../Misc/NEWS:6797
msgid ""
"`bpo-23681 <https://bugs.python.org/issue23681>`__: The -b option now "
"affects comparisons of bytes with int."
msgstr ""
"`bpo-23681 <https://bugs.python.org/issue23681>`__: The -b option now "
"affects comparisons of bytes with int."

#: ../../../Misc/NEWS:6799
msgid ""
"`bpo-23632 <https://bugs.python.org/issue23632>`__: Memoryviews now allow "
"tuple indexing (including for multi-dimensional memoryviews)."
msgstr ""
"`bpo-23632 <https://bugs.python.org/issue23632>`__: Memoryviews now allow "
"tuple indexing (including for multi-dimensional memoryviews)."

#: ../../../Misc/NEWS:6802
msgid ""
"`bpo-23192 <https://bugs.python.org/issue23192>`__: Fixed generator "
"lambdas.  Patch by Bruno Cauet."
msgstr ""
"`bpo-23192 <https://bugs.python.org/issue23192>`__: Fixed generator "
"lambdas.  Patch by Bruno Cauet."

#: ../../../Misc/NEWS:6804
msgid ""
"`bpo-23629 <https://bugs.python.org/issue23629>`__: Fix the default "
"__sizeof__ implementation for variable-sized objects."
msgstr ""
"`bpo-23629 <https://bugs.python.org/issue23629>`__: Fix the default "
"__sizeof__ implementation for variable-sized objects."

#: ../../../Misc/NEWS:6810
msgid ""
"`bpo-14260 <https://bugs.python.org/issue14260>`__: The groupindex attribute "
"of regular expression pattern object now is non-modifiable mapping."
msgstr ""
"`bpo-14260 <https://bugs.python.org/issue14260>`__: The groupindex attribute "
"of regular expression pattern object now is non-modifiable mapping."

#: ../../../Misc/NEWS:6813
msgid ""
"`bpo-23792 <https://bugs.python.org/issue23792>`__: Ignore KeyboardInterrupt "
"when the pydoc pager is active. This mimics the behavior of the standard "
"unix pagers, and prevents pipepager from shutting down while the pager "
"itself is still running."
msgstr ""
"`bpo-23792 <https://bugs.python.org/issue23792>`__: Ignore KeyboardInterrupt "
"when the pydoc pager is active. This mimics the behavior of the standard "
"unix pagers, and prevents pipepager from shutting down while the pager "
"itself is still running."

#: ../../../Misc/NEWS:6817
msgid ""
"`bpo-23775 <https://bugs.python.org/issue23775>`__: pprint() of OrderedDict "
"now outputs the same representation as repr()."
msgstr ""
"`bpo-23775 <https://bugs.python.org/issue23775>`__: pprint() of OrderedDict "
"now outputs the same representation as repr()."

#: ../../../Misc/NEWS:6820
msgid ""
"`bpo-23765 <https://bugs.python.org/issue23765>`__: Removed IsBadStringPtr "
"calls in ctypes"
msgstr ""
"`bpo-23765 <https://bugs.python.org/issue23765>`__: Removed IsBadStringPtr "
"calls in ctypes"

#: ../../../Misc/NEWS:6822
msgid ""
"`bpo-22364 <https://bugs.python.org/issue22364>`__: Improved some re error "
"messages using regex for hints."
msgstr ""
"`bpo-22364 <https://bugs.python.org/issue22364>`__: Improved some re error "
"messages using regex for hints."

#: ../../../Misc/NEWS:6824
msgid ""
"`bpo-23742 <https://bugs.python.org/issue23742>`__: ntpath.expandvars() no "
"longer loses unbalanced single quotes."
msgstr ""
"`bpo-23742 <https://bugs.python.org/issue23742>`__: ntpath.expandvars() no "
"longer loses unbalanced single quotes."

#: ../../../Misc/NEWS:6826
msgid ""
"`bpo-21717 <https://bugs.python.org/issue21717>`__: The zipfile.ZipFile.open "
"function now supports 'x' (exclusive creation) mode."
msgstr ""
"`bpo-21717 <https://bugs.python.org/issue21717>`__: The zipfile.ZipFile.open "
"function now supports 'x' (exclusive creation) mode."

#: ../../../Misc/NEWS:6829
msgid ""
"`bpo-21802 <https://bugs.python.org/issue21802>`__: The reader in "
"BufferedRWPair now is closed even when closing writer failed in "
"BufferedRWPair.close()."
msgstr ""
"`bpo-21802 <https://bugs.python.org/issue21802>`__: The reader in "
"BufferedRWPair now is closed even when closing writer failed in "
"BufferedRWPair.close()."

#: ../../../Misc/NEWS:6832
msgid ""
"`bpo-23622 <https://bugs.python.org/issue23622>`__: Unknown escapes in "
"regular expressions that consist of ``'\\'`` and ASCII letter now raise a "
"deprecation warning and will be forbidden in Python 3.6."
msgstr ""
"`bpo-23622 <https://bugs.python.org/issue23622>`__: Unknown escapes in "
"regular expressions that consist of ``'\\'`` and ASCII letter now raise a "
"deprecation warning and will be forbidden in Python 3.6."

#: ../../../Misc/NEWS:6836
msgid ""
"`bpo-23671 <https://bugs.python.org/issue23671>`__: string.Template now "
"allows specifying the \"self\" parameter as a keyword argument.  string."
"Formatter now allows specifying the \"self\" and the \"format_string\" "
"parameters as keyword arguments."
msgstr ""
"`bpo-23671 <https://bugs.python.org/issue23671>`__: string.Template now "
"allows specifying the \"self\" parameter as a keyword argument.  string."
"Formatter now allows specifying the \"self\" and the \"format_string\" "
"parameters as keyword arguments."

#: ../../../Misc/NEWS:6840
msgid ""
"`bpo-23502 <https://bugs.python.org/issue23502>`__: The pprint module now "
"supports mapping proxies."
msgstr ""
"`bpo-23502 <https://bugs.python.org/issue23502>`__: The pprint module now "
"supports mapping proxies."

#: ../../../Misc/NEWS:6842
msgid ""
"`bpo-17530 <https://bugs.python.org/issue17530>`__: pprint now wraps long "
"bytes objects and bytearrays."
msgstr ""
"`bpo-17530 <https://bugs.python.org/issue17530>`__: pprint now wraps long "
"bytes objects and bytearrays."

#: ../../../Misc/NEWS:6844
msgid ""
"`bpo-22687 <https://bugs.python.org/issue22687>`__: Fixed some corner cases "
"in breaking words in tetxtwrap. Got rid of quadratic complexity in breaking "
"long words."
msgstr ""
"`bpo-22687 <https://bugs.python.org/issue22687>`__: Fixed some corner cases "
"in breaking words in tetxtwrap. Got rid of quadratic complexity in breaking "
"long words."

#: ../../../Misc/NEWS:6847
msgid ""
"`bpo-4727 <https://bugs.python.org/issue4727>`__: The copy module now uses "
"pickle protocol 4 (PEP 3154) and supports copying of instances of classes "
"whose __new__ method takes keyword-only arguments."
msgstr ""
"`bpo-4727 <https://bugs.python.org/issue4727>`__: The copy module now uses "
"pickle protocol 4 (PEP 3154) and supports copying of instances of classes "
"whose __new__ method takes keyword-only arguments."

#: ../../../Misc/NEWS:6851
msgid ""
"`bpo-23491 <https://bugs.python.org/issue23491>`__: Added a zipapp module to "
"support creating executable zip file archives of Python code. Registered \"."
"pyz\" and \".pyzw\" extensions on Windows for these archives (PEP 441)."
msgstr ""
"`bpo-23491 <https://bugs.python.org/issue23491>`__: Added a zipapp module to "
"support creating executable zip file archives of Python code. Registered \"."
"pyz\" and \".pyzw\" extensions on Windows for these archives (PEP 441)."

#: ../../../Misc/NEWS:6855
msgid ""
"`bpo-23657 <https://bugs.python.org/issue23657>`__: Avoid explicit checks "
"for str in zipapp, adding support for pathlib.Path objects as arguments."
msgstr ""
"`bpo-23657 <https://bugs.python.org/issue23657>`__: Avoid explicit checks "
"for str in zipapp, adding support for pathlib.Path objects as arguments."

#: ../../../Misc/NEWS:6858
msgid ""
"`bpo-23688 <https://bugs.python.org/issue23688>`__: Added support of "
"arbitrary bytes-like objects and avoided unnecessary copying of memoryview "
"in gzip.GzipFile.write(). Original patch by Wolfgang Maier."
msgstr ""
"`bpo-23688 <https://bugs.python.org/issue23688>`__: Added support of "
"arbitrary bytes-like objects and avoided unnecessary copying of memoryview "
"in gzip.GzipFile.write(). Original patch by Wolfgang Maier."

#: ../../../Misc/NEWS:6862
msgid ""
"`bpo-23252 <https://bugs.python.org/issue23252>`__: Added support for "
"writing ZIP files to unseekable streams."
msgstr ""
"`bpo-23252 <https://bugs.python.org/issue23252>`__: Added support for "
"writing ZIP files to unseekable streams."

#: ../../../Misc/NEWS:6864
msgid ""
"`bpo-23647 <https://bugs.python.org/issue23647>`__: Increase impalib's "
"MAXLINE to accommodate modern mailbox sizes."
msgstr ""
"`bpo-23647 <https://bugs.python.org/issue23647>`__: Increase impalib's "
"MAXLINE to accommodate modern mailbox sizes."

#: ../../../Misc/NEWS:6866
msgid ""
"`bpo-23539 <https://bugs.python.org/issue23539>`__: If body is None, http."
"client.HTTPConnection.request now sets Content-Length to 0 for PUT, POST, "
"and PATCH headers to avoid 411 errors from some web servers."
msgstr ""
"`bpo-23539 <https://bugs.python.org/issue23539>`__: If body is None, http."
"client.HTTPConnection.request now sets Content-Length to 0 for PUT, POST, "
"and PATCH headers to avoid 411 errors from some web servers."

#: ../../../Misc/NEWS:6870
msgid ""
"`bpo-22351 <https://bugs.python.org/issue22351>`__: The nntplib.NNTP "
"constructor no longer leaves the connection and socket open until the "
"garbage collector cleans them up.  Patch by Martin Panter."
msgstr ""
"`bpo-22351 <https://bugs.python.org/issue22351>`__: The nntplib.NNTP "
"constructor no longer leaves the connection and socket open until the "
"garbage collector cleans them up.  Patch by Martin Panter."

#: ../../../Misc/NEWS:6874
msgid ""
"`bpo-23704 <https://bugs.python.org/issue23704>`__: collections.deque() "
"objects now support methods for index(), insert(), and copy().  This allows "
"deques to be registered as a MutableSequence and it improves their "
"substitutability for lists."
msgstr ""
"`bpo-23704 <https://bugs.python.org/issue23704>`__: collections.deque() "
"objects now support methods for index(), insert(), and copy().  This allows "
"deques to be registered as a MutableSequence and it improves their "
"substitutability for lists."

#: ../../../Misc/NEWS:6878
msgid ""
"`bpo-23715 <https://bugs.python.org/issue23715>`__: :func:`signal."
"sigwaitinfo` and :func:`signal.sigtimedwait` are now retried when "
"interrupted by a signal not in the *sigset* parameter, if the signal handler "
"does not raise an exception. signal.sigtimedwait() recomputes the timeout "
"with a monotonic clock when it is retried."
msgstr ""
"`bpo-23715 <https://bugs.python.org/issue23715>`__: :func:`signal."
"sigwaitinfo` and :func:`signal.sigtimedwait` are now retried when "
"interrupted by a signal not in the *sigset* parameter, if the signal handler "
"does not raise an exception. signal.sigtimedwait() recomputes the timeout "
"with a monotonic clock when it is retried."

#: ../../../Misc/NEWS:6883
msgid ""
"`bpo-23001 <https://bugs.python.org/issue23001>`__: Few functions in modules "
"mmap, ossaudiodev, socket, ssl, and codecs, that accepted only read-only "
"bytes-like object now accept writable bytes-like object too."
msgstr ""
"`bpo-23001 <https://bugs.python.org/issue23001>`__: Few functions in modules "
"mmap, ossaudiodev, socket, ssl, and codecs, that accepted only read-only "
"bytes-like object now accept writable bytes-like object too."

#: ../../../Misc/NEWS:6887
msgid ""
"`bpo-23646 <https://bugs.python.org/issue23646>`__: If time.sleep() is "
"interrupted by a signal, the sleep is now retried with the recomputed delay, "
"except if the signal handler raises an exception (PEP 475)."
msgstr ""
"`bpo-23646 <https://bugs.python.org/issue23646>`__: If time.sleep() is "
"interrupted by a signal, the sleep is now retried with the recomputed delay, "
"except if the signal handler raises an exception (PEP 475)."

#: ../../../Misc/NEWS:6891
msgid ""
"`bpo-23136 <https://bugs.python.org/issue23136>`__: _strptime now uniformly "
"handles all days in week 0, including Dec 30 of previous year.  Based on "
"patch by Jim Carroll."
msgstr ""
"`bpo-23136 <https://bugs.python.org/issue23136>`__: _strptime now uniformly "
"handles all days in week 0, including Dec 30 of previous year.  Based on "
"patch by Jim Carroll."

#: ../../../Misc/NEWS:6894
msgid ""
"`bpo-23700 <https://bugs.python.org/issue23700>`__: Iterator of "
"NamedTemporaryFile now keeps a reference to NamedTemporaryFile instance.  "
"Patch by Bohuslav Kabrda."
msgstr ""
"`bpo-23700 <https://bugs.python.org/issue23700>`__: Iterator of "
"NamedTemporaryFile now keeps a reference to NamedTemporaryFile instance.  "
"Patch by Bohuslav Kabrda."

#: ../../../Misc/NEWS:6897
msgid ""
"`bpo-22903 <https://bugs.python.org/issue22903>`__: The fake test case "
"created by unittest.loader when it fails importing a test module is now "
"picklable."
msgstr ""
"`bpo-22903 <https://bugs.python.org/issue22903>`__: The fake test case "
"created by unittest.loader when it fails importing a test module is now "
"picklable."

#: ../../../Misc/NEWS:6900
msgid ""
"`bpo-22181 <https://bugs.python.org/issue22181>`__: On Linux, os.urandom() "
"now uses the new getrandom() syscall if available, syscall introduced in the "
"Linux kernel 3.17. It is more reliable and more secure, because it avoids "
"the need of a file descriptor and waits until the kernel has enough entropy."
msgstr ""
"`bpo-22181 <https://bugs.python.org/issue22181>`__: On Linux, os.urandom() "
"now uses the new getrandom() syscall if available, syscall introduced in the "
"Linux kernel 3.17. It is more reliable and more secure, because it avoids "
"the need of a file descriptor and waits until the kernel has enough entropy."

#: ../../../Misc/NEWS:6905
msgid ""
"`bpo-2211 <https://bugs.python.org/issue2211>`__: Updated the implementation "
"of the http.cookies.Morsel class. Setting attributes key, value and "
"coded_value directly now is deprecated. update() and setdefault() now "
"transform and check keys.  Comparing for equality now takes into account "
"attributes key, value and coded_value. copy() now returns a Morsel, not a "
"dict.  repr() now contains all attributes. Optimized checking keys and "
"quoting values.  Added new tests. Original patch by Demian Brecht."
msgstr ""
"`bpo-2211 <https://bugs.python.org/issue2211>`__: Updated the implementation "
"of the http.cookies.Morsel class. Setting attributes key, value and "
"coded_value directly now is deprecated. update() and setdefault() now "
"transform and check keys.  Comparing for equality now takes into account "
"attributes key, value and coded_value. copy() now returns a Morsel, not a "
"dict.  repr() now contains all attributes. Optimized checking keys and "
"quoting values.  Added new tests. Original patch by Demian Brecht."

#: ../../../Misc/NEWS:6913
msgid ""
"`bpo-18983 <https://bugs.python.org/issue18983>`__: Allow selection of "
"output units in timeit. Patch by Julian Gindi."
msgstr ""
"`bpo-18983 <https://bugs.python.org/issue18983>`__: Allow selection of "
"output units in timeit. Patch by Julian Gindi."

#: ../../../Misc/NEWS:6916
msgid ""
"`bpo-23631 <https://bugs.python.org/issue23631>`__: Fix traceback."
"format_list when a traceback has been mutated."
msgstr ""
"`bpo-23631 <https://bugs.python.org/issue23631>`__: Fix traceback."
"format_list when a traceback has been mutated."

#: ../../../Misc/NEWS:6918
msgid ""
"`bpo-23568 <https://bugs.python.org/issue23568>`__: Add rdivmod support to "
"MagicMock() objects. Patch by H√•kan L√∂vdahl."
msgstr ""
"`bpo-23568 <https://bugs.python.org/issue23568>`__: Add rdivmod support to "
"MagicMock() objects. Patch by H√•kan L√∂vdahl."

#: ../../../Misc/NEWS:6921
msgid ""
"`bpo-2052 <https://bugs.python.org/issue2052>`__: Add charset parameter to "
"HtmlDiff.make_file()."
msgstr ""
"`bpo-2052 <https://bugs.python.org/issue2052>`__: Add charset parameter to "
"HtmlDiff.make_file()."

#: ../../../Misc/NEWS:6923
msgid ""
"`bpo-23668 <https://bugs.python.org/issue23668>`__: Support os.truncate and "
"os.ftruncate on Windows."
msgstr ""
"`bpo-23668 <https://bugs.python.org/issue23668>`__: Support os.truncate and "
"os.ftruncate on Windows."

#: ../../../Misc/NEWS:6925
msgid ""
"`bpo-23138 <https://bugs.python.org/issue23138>`__: Fixed parsing cookies "
"with absent keys or values in cookiejar. Patch by Demian Brecht."
msgstr ""
"`bpo-23138 <https://bugs.python.org/issue23138>`__: Fixed parsing cookies "
"with absent keys or values in cookiejar. Patch by Demian Brecht."

#: ../../../Misc/NEWS:6928
msgid ""
"`bpo-23051 <https://bugs.python.org/issue23051>`__: multiprocessing.Pool "
"methods imap() and imap_unordered() now handle exceptions raised by an "
"iterator.  Patch by Alon Diamant and Davin Potts."
msgstr ""
"`bpo-23051 <https://bugs.python.org/issue23051>`__: multiprocessing.Pool "
"methods imap() and imap_unordered() now handle exceptions raised by an "
"iterator.  Patch by Alon Diamant and Davin Potts."

#: ../../../Misc/NEWS:6932
msgid ""
"`bpo-23581 <https://bugs.python.org/issue23581>`__: Add matmul support to "
"MagicMock. Patch by H√•kan L√∂vdahl."
msgstr ""
"`bpo-23581 <https://bugs.python.org/issue23581>`__: Add matmul support to "
"MagicMock. Patch by H√•kan L√∂vdahl."

#: ../../../Misc/NEWS:6934
msgid ""
"`bpo-23566 <https://bugs.python.org/issue23566>`__: enable(), register(), "
"dump_traceback() and dump_traceback_later() functions of faulthandler now "
"accept file descriptors. Patch by Wei Wu."
msgstr ""
"`bpo-23566 <https://bugs.python.org/issue23566>`__: enable(), register(), "
"dump_traceback() and dump_traceback_later() functions of faulthandler now "
"accept file descriptors. Patch by Wei Wu."

#: ../../../Misc/NEWS:6938
msgid ""
"`bpo-22928 <https://bugs.python.org/issue22928>`__: Disabled HTTP header "
"injections in http.client. Original patch by Demian Brecht."
msgstr ""
"`bpo-22928 <https://bugs.python.org/issue22928>`__: Disabled HTTP header "
"injections in http.client. Original patch by Demian Brecht."

#: ../../../Misc/NEWS:6941
msgid ""
"`bpo-23615 <https://bugs.python.org/issue23615>`__: Modules bz2, tarfile and "
"tokenize now can be reloaded with imp.reload().  Patch by Thomas Kluyver."
msgstr ""
"`bpo-23615 <https://bugs.python.org/issue23615>`__: Modules bz2, tarfile and "
"tokenize now can be reloaded with imp.reload().  Patch by Thomas Kluyver."

#: ../../../Misc/NEWS:6944
msgid ""
"`bpo-23605 <https://bugs.python.org/issue23605>`__: os.walk() now calls os."
"scandir() instead of os.listdir(). The usage of os.scandir() reduces the "
"number of calls to os.stat(). Initial patch written by Ben Hoyt."
msgstr ""
"`bpo-23605 <https://bugs.python.org/issue23605>`__: os.walk() now calls os."
"scandir() instead of os.listdir(). The usage of os.scandir() reduces the "
"number of calls to os.stat(). Initial patch written by Ben Hoyt."

#: ../../../Misc/NEWS:6951
msgid ""
"`bpo-23585 <https://bugs.python.org/issue23585>`__: make patchcheck will "
"ensure the interpreter is built."
msgstr ""
"`bpo-23585 <https://bugs.python.org/issue23585>`__: make patchcheck will "
"ensure the interpreter is built."

#: ../../../Misc/NEWS:6956
msgid ""
"`bpo-23583 <https://bugs.python.org/issue23583>`__: Added tests for standard "
"IO streams in IDLE."
msgstr ""
"`bpo-23583 <https://bugs.python.org/issue23583>`__: Added tests for standard "
"IO streams in IDLE."

#: ../../../Misc/NEWS:6958
msgid ""
"`bpo-22289 <https://bugs.python.org/issue22289>`__: Prevent test_urllib2net "
"failures due to ftp connection timeout."
msgstr ""
"`bpo-22289 <https://bugs.python.org/issue22289>`__: Prevent test_urllib2net "
"failures due to ftp connection timeout."

#: ../../../Misc/NEWS:6963
msgid ""
"`bpo-22826 <https://bugs.python.org/issue22826>`__: The result of open() in "
"Tools/freeze/bkfile.py is now better compatible with regular files (in "
"particular it now supports the context management protocol)."
msgstr ""
"`bpo-22826 <https://bugs.python.org/issue22826>`__: The result of open() in "
"Tools/freeze/bkfile.py is now better compatible with regular files (in "
"particular it now supports the context management protocol)."

#: ../../../Misc/NEWS:6969
msgid "Python 3.5 alpha 2"
msgstr "Python 3.5 alpha 2"

#: ../../../Misc/NEWS:6971
msgid "Release date: 2015-03-09"
msgstr "Date de sortie : 2015-03-09"

#: ../../../Misc/NEWS:6976
msgid ""
"`bpo-23571 <https://bugs.python.org/issue23571>`__: PyObject_Call() and "
"PyCFunction_Call() now raise a SystemError if a function returns a result "
"and raises an exception. The SystemError is chained to the previous "
"exception."
msgstr ""
"`bpo-23571 <https://bugs.python.org/issue23571>`__: PyObject_Call() and "
"PyCFunction_Call() now raise a SystemError if a function returns a result "
"and raises an exception. The SystemError is chained to the previous "
"exception."

#: ../../../Misc/NEWS:6983
msgid ""
"`bpo-22524 <https://bugs.python.org/issue22524>`__: New os.scandir() "
"function, part of the PEP 471: \"os.scandir() function -- a better and "
"faster directory iterator\". Patch written by Ben Hoyt."
msgstr ""
"`bpo-22524 <https://bugs.python.org/issue22524>`__: New os.scandir() "
"function, part of the PEP 471: \"os.scandir() function -- a better and "
"faster directory iterator\". Patch written by Ben Hoyt."

#: ../../../Misc/NEWS:6987
msgid ""
"`bpo-23103 <https://bugs.python.org/issue23103>`__: Reduced the memory "
"consumption of IPv4Address and IPv6Address."
msgstr ""
"`bpo-23103 <https://bugs.python.org/issue23103>`__: Reduced the memory "
"consumption of IPv4Address and IPv6Address."

#: ../../../Misc/NEWS:6989
msgid ""
"`bpo-21793 <https://bugs.python.org/issue21793>`__: BaseHTTPRequestHandler "
"again logs response code as numeric, not as stringified enum.  Patch by "
"Demian Brecht."
msgstr ""
"`bpo-21793 <https://bugs.python.org/issue21793>`__: BaseHTTPRequestHandler "
"again logs response code as numeric, not as stringified enum.  Patch by "
"Demian Brecht."

#: ../../../Misc/NEWS:6992
msgid ""
"`bpo-23476 <https://bugs.python.org/issue23476>`__: In the ssl module, "
"enable OpenSSL's X509_V_FLAG_TRUSTED_FIRST flag on certificate stores when "
"it is available."
msgstr ""
"`bpo-23476 <https://bugs.python.org/issue23476>`__: In the ssl module, "
"enable OpenSSL's X509_V_FLAG_TRUSTED_FIRST flag on certificate stores when "
"it is available."

#: ../../../Misc/NEWS:6995
msgid ""
"`bpo-23576 <https://bugs.python.org/issue23576>`__: Avoid stalling in SSL "
"reads when EOF has been reached in the SSL layer but the underlying "
"connection hasn't been closed."
msgstr ""
"`bpo-23576 <https://bugs.python.org/issue23576>`__: Avoid stalling in SSL "
"reads when EOF has been reached in the SSL layer but the underlying "
"connection hasn't been closed."

#: ../../../Misc/NEWS:6998
msgid ""
"`bpo-23504 <https://bugs.python.org/issue23504>`__: Added an __all__ to the "
"types module."
msgstr ""
"`bpo-23504 <https://bugs.python.org/issue23504>`__: Added an __all__ to the "
"types module."

#: ../../../Misc/NEWS:7000
msgid ""
"`bpo-23563 <https://bugs.python.org/issue23563>`__: Optimized utility "
"functions in urllib.parse."
msgstr ""
"`bpo-23563 <https://bugs.python.org/issue23563>`__: Optimized utility "
"functions in urllib.parse."

#: ../../../Misc/NEWS:7002
msgid ""
"`bpo-7830 <https://bugs.python.org/issue7830>`__: Flatten nested functools."
"partial."
msgstr ""
"`bpo-7830 <https://bugs.python.org/issue7830>`__: Flatten nested functools."
"partial."

#: ../../../Misc/NEWS:7004
msgid ""
"`bpo-20204 <https://bugs.python.org/issue20204>`__: Added the __module__ "
"attribute to _tkinter classes."
msgstr ""
"`bpo-20204 <https://bugs.python.org/issue20204>`__: Added the __module__ "
"attribute to _tkinter classes."

#: ../../../Misc/NEWS:7006
msgid ""
"`bpo-19980 <https://bugs.python.org/issue19980>`__: Improved help() for non-"
"recognized strings.  help('') now shows the help on str.  help('help') now "
"shows the help on help(). Original patch by Mark Lawrence."
msgstr ""
"`bpo-19980 <https://bugs.python.org/issue19980>`__: Improved help() for non-"
"recognized strings.  help('') now shows the help on str.  help('help') now "
"shows the help on help(). Original patch by Mark Lawrence."

#: ../../../Misc/NEWS:7010
msgid ""
"`bpo-23521 <https://bugs.python.org/issue23521>`__: Corrected pure python "
"implementation of timedelta division."
msgstr ""
"`bpo-23521 <https://bugs.python.org/issue23521>`__: Corrected pure python "
"implementation of timedelta division."

#: ../../../Misc/NEWS:7012
msgid "Eliminated OverflowError from ``timedelta * float`` for some floats;"
msgstr ""

#: ../../../Misc/NEWS:7013
msgid "Corrected rounding in timedlta true division."
msgstr ""

#: ../../../Misc/NEWS:7015
msgid ""
"`bpo-21619 <https://bugs.python.org/issue21619>`__: Popen objects no longer "
"leave a zombie after exit in the with statement if the pipe was broken.  "
"Patch by Martin Panter."
msgstr ""
"`bpo-21619 <https://bugs.python.org/issue21619>`__: Popen objects no longer "
"leave a zombie after exit in the with statement if the pipe was broken.  "
"Patch by Martin Panter."

#: ../../../Misc/NEWS:7018
msgid ""
"`bpo-22936 <https://bugs.python.org/issue22936>`__: Make it possible to show "
"local variables in tracebacks for both the traceback module and unittest."
msgstr ""
"`bpo-22936 <https://bugs.python.org/issue22936>`__: Make it possible to show "
"local variables in tracebacks for both the traceback module and unittest."

#: ../../../Misc/NEWS:7021
msgid ""
"`bpo-15955 <https://bugs.python.org/issue15955>`__: Add an option to limit "
"the output size in bz2.decompress(). Patch by Nikolaus Rath."
msgstr ""
"`bpo-15955 <https://bugs.python.org/issue15955>`__: Add an option to limit "
"the output size in bz2.decompress(). Patch by Nikolaus Rath."

#: ../../../Misc/NEWS:7024
msgid ""
"`bpo-6639 <https://bugs.python.org/issue6639>`__: Module-level turtle "
"functions no longer raise TclError after closing the window."
msgstr ""
"`bpo-6639 <https://bugs.python.org/issue6639>`__: Module-level turtle "
"functions no longer raise TclError after closing the window."

#: ../../../Misc/NEWS:7027
msgid ""
"Issues #814253, #9179: Group references and conditional group references now "
"work in lookbehind assertions in regular expressions."
msgstr ""

#: ../../../Misc/NEWS:7030
msgid ""
"`bpo-23215 <https://bugs.python.org/issue23215>`__: Multibyte codecs with "
"custom error handlers that ignores errors consumed too much memory and "
"raised SystemError or MemoryError. Original patch by Aleksi Torhamo."
msgstr ""
"`bpo-23215 <https://bugs.python.org/issue23215>`__: Multibyte codecs with "
"custom error handlers that ignores errors consumed too much memory and "
"raised SystemError or MemoryError. Original patch by Aleksi Torhamo."

#: ../../../Misc/NEWS:7034
msgid ""
"`bpo-5700 <https://bugs.python.org/issue5700>`__: io.FileIO() called flush() "
"after closing the file. flush() was not called in close() if closefd=False."
msgstr ""
"`bpo-5700 <https://bugs.python.org/issue5700>`__: io.FileIO() called flush() "
"after closing the file. flush() was not called in close() if closefd=False."

#: ../../../Misc/NEWS:7037
msgid ""
"`bpo-23374 <https://bugs.python.org/issue23374>`__: Fixed pydoc failure with "
"non-ASCII files when stdout encoding differs from file system encoding (e.g. "
"on Mac OS)."
msgstr ""
"`bpo-23374 <https://bugs.python.org/issue23374>`__: Fixed pydoc failure with "
"non-ASCII files when stdout encoding differs from file system encoding (e.g. "
"on Mac OS)."

#: ../../../Misc/NEWS:7040
msgid ""
"`bpo-23481 <https://bugs.python.org/issue23481>`__: Remove RC4 from the SSL "
"module's default cipher list."
msgstr ""
"`bpo-23481 <https://bugs.python.org/issue23481>`__: Remove RC4 from the SSL "
"module's default cipher list."

#: ../../../Misc/NEWS:7042
msgid ""
"`bpo-21548 <https://bugs.python.org/issue21548>`__: Fix pydoc.synopsis() and "
"pydoc.apropos() on modules with empty docstrings."
msgstr ""
"`bpo-21548 <https://bugs.python.org/issue21548>`__: Fix pydoc.synopsis() and "
"pydoc.apropos() on modules with empty docstrings."

#: ../../../Misc/NEWS:7045
msgid ""
"`bpo-22885 <https://bugs.python.org/issue22885>`__: Fixed arbitrary code "
"execution vulnerability in the dbm.dumb module.  Original patch by Claudiu "
"Popa."
msgstr ""
"`bpo-22885 <https://bugs.python.org/issue22885>`__: Fixed arbitrary code "
"execution vulnerability in the dbm.dumb module.  Original patch by Claudiu "
"Popa."

#: ../../../Misc/NEWS:7048
msgid ""
"`bpo-23239 <https://bugs.python.org/issue23239>`__: ssl.match_hostname() now "
"supports matching of IP addresses."
msgstr ""
"`bpo-23239 <https://bugs.python.org/issue23239>`__: ssl.match_hostname() now "
"supports matching of IP addresses."

#: ../../../Misc/NEWS:7050
msgid ""
"`bpo-23146 <https://bugs.python.org/issue23146>`__: Fix mishandling of "
"absolute Windows paths with forward slashes in pathlib."
msgstr ""
"`bpo-23146 <https://bugs.python.org/issue23146>`__: Fix mishandling of "
"absolute Windows paths with forward slashes in pathlib."

#: ../../../Misc/NEWS:7053
msgid ""
"`bpo-23096 <https://bugs.python.org/issue23096>`__: Pickle representation of "
"floats with protocol 0 now is the same for both Python and C implementations."
msgstr ""
"`bpo-23096 <https://bugs.python.org/issue23096>`__: Pickle representation of "
"floats with protocol 0 now is the same for both Python and C implementations."

#: ../../../Misc/NEWS:7056
msgid ""
"`bpo-19105 <https://bugs.python.org/issue19105>`__: pprint now more "
"efficiently uses free space at the right."
msgstr ""
"`bpo-19105 <https://bugs.python.org/issue19105>`__: pprint now more "
"efficiently uses free space at the right."

#: ../../../Misc/NEWS:7058
msgid ""
"`bpo-14910 <https://bugs.python.org/issue14910>`__: Add allow_abbrev "
"parameter to argparse.ArgumentParser. Patch by Jonathan Paugh, Steven "
"Bethard, paul j3 and Daniel Eriksson."
msgstr ""
"`bpo-14910 <https://bugs.python.org/issue14910>`__: Add allow_abbrev "
"parameter to argparse.ArgumentParser. Patch by Jonathan Paugh, Steven "
"Bethard, paul j3 and Daniel Eriksson."

#: ../../../Misc/NEWS:7061
msgid ""
"`bpo-21717 <https://bugs.python.org/issue21717>`__: tarfile.open() now "
"supports 'x' (exclusive creation) mode."
msgstr ""
"`bpo-21717 <https://bugs.python.org/issue21717>`__: tarfile.open() now "
"supports 'x' (exclusive creation) mode."

#: ../../../Misc/NEWS:7063
msgid ""
"`bpo-23344 <https://bugs.python.org/issue23344>`__: marshal.dumps() is now "
"20-25% faster on average."
msgstr ""
"`bpo-23344 <https://bugs.python.org/issue23344>`__: marshal.dumps() is now "
"20-25% faster on average."

#: ../../../Misc/NEWS:7065
msgid ""
"`bpo-20416 <https://bugs.python.org/issue20416>`__: marshal.dumps() with "
"protocols 3 and 4 is now 40-50% faster on average."
msgstr ""
"`bpo-20416 <https://bugs.python.org/issue20416>`__: marshal.dumps() with "
"protocols 3 and 4 is now 40-50% faster on average."

#: ../../../Misc/NEWS:7068
msgid ""
"`bpo-23421 <https://bugs.python.org/issue23421>`__: Fixed compression in "
"tarfile CLI.  Patch by wdv4758h."
msgstr ""
"`bpo-23421 <https://bugs.python.org/issue23421>`__: Fixed compression in "
"tarfile CLI.  Patch by wdv4758h."

#: ../../../Misc/NEWS:7070
msgid ""
"`bpo-23367 <https://bugs.python.org/issue23367>`__: Fix possible overflows "
"in the unicodedata module."
msgstr ""
"`bpo-23367 <https://bugs.python.org/issue23367>`__: Fix possible overflows "
"in the unicodedata module."

#: ../../../Misc/NEWS:7072
msgid ""
"`bpo-23361 <https://bugs.python.org/issue23361>`__: Fix possible overflow in "
"Windows subprocess creation code."
msgstr ""
"`bpo-23361 <https://bugs.python.org/issue23361>`__: Fix possible overflow in "
"Windows subprocess creation code."

#: ../../../Misc/NEWS:7074
msgid ""
"logging.handlers.QueueListener now takes a respect_handler_level keyword "
"argument which, if set to True, will pass messages to handlers taking "
"handler levels into account."
msgstr ""

#: ../../../Misc/NEWS:7078
msgid ""
"`bpo-19705 <https://bugs.python.org/issue19705>`__: turtledemo now has a "
"visual sorting algorithm demo.  Original patch from Jason Yeo."
msgstr ""
"`bpo-19705 <https://bugs.python.org/issue19705>`__: turtledemo now has a "
"visual sorting algorithm demo.  Original patch from Jason Yeo."

#: ../../../Misc/NEWS:7081
msgid ""
"`bpo-23801 <https://bugs.python.org/issue23801>`__: Fix issue where cgi."
"FieldStorage did not always ignore the entire preamble to a multipart body."
msgstr ""
"`bpo-23801 <https://bugs.python.org/issue23801>`__: Fix issue where cgi."
"FieldStorage did not always ignore the entire preamble to a multipart body."

#: ../../../Misc/NEWS:7087
msgid ""
"`bpo-23445 <https://bugs.python.org/issue23445>`__: pydebug builds now use "
"\"gcc -Og\" where possible, to make the resulting executable faster."
msgstr ""
"`bpo-23445 <https://bugs.python.org/issue23445>`__: pydebug builds now use "
"\"gcc -Og\" where possible, to make the resulting executable faster."

#: ../../../Misc/NEWS:7090
msgid ""
"`bpo-23686 <https://bugs.python.org/issue23686>`__: Update OS X 10.5 "
"installer build to use OpenSSL 1.0.2a."
msgstr ""
"`bpo-23686 <https://bugs.python.org/issue23686>`__: Update OS X 10.5 "
"installer build to use OpenSSL 1.0.2a."

#: ../../../Misc/NEWS:7095
msgid ""
"`bpo-20204 <https://bugs.python.org/issue20204>`__: Deprecation warning is "
"now raised for builtin types without the __module__ attribute."
msgstr ""
"`bpo-20204 <https://bugs.python.org/issue20204>`__: Deprecation warning is "
"now raised for builtin types without the __module__ attribute."

#: ../../../Misc/NEWS:7101
msgid ""
"`bpo-23465 <https://bugs.python.org/issue23465>`__: Implement PEP 486 - Make "
"the Python Launcher aware of virtual environments. Patch by Paul Moore."
msgstr ""
"`bpo-23465 <https://bugs.python.org/issue23465>`__: Implement PEP 486 - Make "
"the Python Launcher aware of virtual environments. Patch by Paul Moore."

#: ../../../Misc/NEWS:7104
msgid ""
"`bpo-23437 <https://bugs.python.org/issue23437>`__: Make user scripts "
"directory versioned on Windows. Patch by Paul Moore."
msgstr ""
"`bpo-23437 <https://bugs.python.org/issue23437>`__: Make user scripts "
"directory versioned on Windows. Patch by Paul Moore."

#: ../../../Misc/NEWS:7109
msgid "Python 3.5 alpha 1"
msgstr "Python 3.5 alpha 1"

#: ../../../Misc/NEWS:7111
msgid "Release date: 2015-02-08"
msgstr "Date de sortie : 2015-02-08"

#: ../../../Misc/NEWS:7116
msgid ""
"`bpo-23285 <https://bugs.python.org/issue23285>`__: PEP 475 - EINTR handling."
msgstr ""
"`bpo-23285 <https://bugs.python.org/issue23285>`__: PEP 475 - EINTR handling."

#: ../../../Misc/NEWS:7118
msgid ""
"`bpo-22735 <https://bugs.python.org/issue22735>`__: Fix many edge cases "
"(including crashes) involving custom mro() implementations."
msgstr ""
"`bpo-22735 <https://bugs.python.org/issue22735>`__: Fix many edge cases "
"(including crashes) involving custom mro() implementations."

#: ../../../Misc/NEWS:7121
msgid ""
"`bpo-22896 <https://bugs.python.org/issue22896>`__: Avoid using "
"PyObject_AsCharBuffer(), PyObject_AsReadBuffer() and "
"PyObject_AsWriteBuffer()."
msgstr ""
"`bpo-22896 <https://bugs.python.org/issue22896>`__: Avoid using "
"PyObject_AsCharBuffer(), PyObject_AsReadBuffer() and "
"PyObject_AsWriteBuffer()."

#: ../../../Misc/NEWS:7124
msgid ""
"`bpo-21295 <https://bugs.python.org/issue21295>`__: Revert some changes "
"(`bpo-16795 <https://bugs.python.org/issue16795>`__) to AST line numbers and "
"column offsets that constituted a regression."
msgstr ""
"`bpo-21295 <https://bugs.python.org/issue21295>`__: Revert some changes "
"(`bpo-16795 <https://bugs.python.org/issue16795>`__) to AST line numbers and "
"column offsets that constituted a regression."

#: ../../../Misc/NEWS:7127
msgid ""
"`bpo-22986 <https://bugs.python.org/issue22986>`__: Allow changing an "
"object's __class__ between a dynamic type and static type in some cases."
msgstr ""
"`bpo-22986 <https://bugs.python.org/issue22986>`__: Allow changing an "
"object's __class__ between a dynamic type and static type in some cases."

#: ../../../Misc/NEWS:7130
msgid ""
"`bpo-15859 <https://bugs.python.org/issue15859>`__: "
"PyUnicode_EncodeFSDefault(), PyUnicode_EncodeMBCS() and "
"PyUnicode_EncodeCodePage() now raise an exception if the object is not a "
"Unicode object. For PyUnicode_EncodeFSDefault(), it was already the case on "
"platforms other than Windows. Patch written by Campbell Barton."
msgstr ""
"`bpo-15859 <https://bugs.python.org/issue15859>`__: "
"PyUnicode_EncodeFSDefault(), PyUnicode_EncodeMBCS() and "
"PyUnicode_EncodeCodePage() now raise an exception if the object is not a "
"Unicode object. For PyUnicode_EncodeFSDefault(), it was already the case on "
"platforms other than Windows. Patch written by Campbell Barton."

#: ../../../Misc/NEWS:7135
msgid ""
"`bpo-21408 <https://bugs.python.org/issue21408>`__: The default __ne__() now "
"returns NotImplemented if __eq__() returned NotImplemented.  Original patch "
"by Martin Panter."
msgstr ""
"`bpo-21408 <https://bugs.python.org/issue21408>`__: The default __ne__() now "
"returns NotImplemented if __eq__() returned NotImplemented.  Original patch "
"by Martin Panter."

#: ../../../Misc/NEWS:7138
msgid ""
"`bpo-23321 <https://bugs.python.org/issue23321>`__: Fixed a crash in str."
"decode() when error handler returned replacment string longer than "
"mailformed input data."
msgstr ""
"`bpo-23321 <https://bugs.python.org/issue23321>`__: Fixed a crash in str."
"decode() when error handler returned replacment string longer than "
"mailformed input data."

#: ../../../Misc/NEWS:7141
msgid ""
"`bpo-22286 <https://bugs.python.org/issue22286>`__: The \"backslashreplace\" "
"error handlers now works with decoding and translating."
msgstr ""
"`bpo-22286 <https://bugs.python.org/issue22286>`__: The \"backslashreplace\" "
"error handlers now works with decoding and translating."

#: ../../../Misc/NEWS:7144
msgid ""
"`bpo-23253 <https://bugs.python.org/issue23253>`__: Delay-load "
"ShellExecute[AW] in os.startfile for reduced startup overhead on Windows."
msgstr ""
"`bpo-23253 <https://bugs.python.org/issue23253>`__: Delay-load "
"ShellExecute[AW] in os.startfile for reduced startup overhead on Windows."

#: ../../../Misc/NEWS:7147
msgid ""
"`bpo-22038 <https://bugs.python.org/issue22038>`__: pyatomic.h now uses "
"stdatomic.h or GCC built-in functions for atomic memory access if available. "
"Patch written by Vitor de Lima and Gustavo Temple."
msgstr ""
"`bpo-22038 <https://bugs.python.org/issue22038>`__: pyatomic.h now uses "
"stdatomic.h or GCC built-in functions for atomic memory access if available. "
"Patch written by Vitor de Lima and Gustavo Temple."

#: ../../../Misc/NEWS:7151
msgid ""
"`bpo-20284 <https://bugs.python.org/issue20284>`__: %-interpolation (aka "
"printf) formatting added for bytes and bytearray."
msgstr ""
"`bpo-20284 <https://bugs.python.org/issue20284>`__: %-interpolation (aka "
"printf) formatting added for bytes and bytearray."

#: ../../../Misc/NEWS:7154
msgid ""
"`bpo-23048 <https://bugs.python.org/issue23048>`__: Fix jumping out of an "
"infinite while loop in the pdb."
msgstr ""
"`bpo-23048 <https://bugs.python.org/issue23048>`__: Fix jumping out of an "
"infinite while loop in the pdb."

#: ../../../Misc/NEWS:7156
msgid ""
"`bpo-20335 <https://bugs.python.org/issue20335>`__: bytes constructor now "
"raises TypeError when encoding or errors is specified with non-string "
"argument.  Based on patch by Renaud Blanch."
msgstr ""
"`bpo-20335 <https://bugs.python.org/issue20335>`__: bytes constructor now "
"raises TypeError when encoding or errors is specified with non-string "
"argument.  Based on patch by Renaud Blanch."

#: ../../../Misc/NEWS:7159
msgid ""
"`bpo-22834 <https://bugs.python.org/issue22834>`__: If the current working "
"directory ends up being set to a non-existent directory then import will no "
"longer raise FileNotFoundError."
msgstr ""
"`bpo-22834 <https://bugs.python.org/issue22834>`__: If the current working "
"directory ends up being set to a non-existent directory then import will no "
"longer raise FileNotFoundError."

#: ../../../Misc/NEWS:7162
msgid ""
"`bpo-22869 <https://bugs.python.org/issue22869>`__: Move the interpreter "
"startup & shutdown code to a new dedicated pylifecycle.c module"
msgstr ""
"`bpo-22869 <https://bugs.python.org/issue22869>`__: Move the interpreter "
"startup & shutdown code to a new dedicated pylifecycle.c module"

#: ../../../Misc/NEWS:7165
msgid ""
"`bpo-22847 <https://bugs.python.org/issue22847>`__: Improve method cache "
"efficiency."
msgstr ""
"`bpo-22847 <https://bugs.python.org/issue22847>`__: Improve method cache "
"efficiency."

#: ../../../Misc/NEWS:7167
msgid ""
"`bpo-22335 <https://bugs.python.org/issue22335>`__: Fix crash when trying to "
"enlarge a bytearray to 0x7fffffff bytes on a 32-bit platform."
msgstr ""
"`bpo-22335 <https://bugs.python.org/issue22335>`__: Fix crash when trying to "
"enlarge a bytearray to 0x7fffffff bytes on a 32-bit platform."

#: ../../../Misc/NEWS:7170
msgid ""
"`bpo-22653 <https://bugs.python.org/issue22653>`__: Fix an assertion failure "
"in debug mode when doing a reentrant dict insertion in debug mode."
msgstr ""
"`bpo-22653 <https://bugs.python.org/issue22653>`__: Fix an assertion failure "
"in debug mode when doing a reentrant dict insertion in debug mode."

#: ../../../Misc/NEWS:7173
msgid ""
"`bpo-22643 <https://bugs.python.org/issue22643>`__: Fix integer overflow in "
"Unicode case operations (upper, lower, title, swapcase, casefold)."
msgstr ""
"`bpo-22643 <https://bugs.python.org/issue22643>`__: Fix integer overflow in "
"Unicode case operations (upper, lower, title, swapcase, casefold)."

#: ../../../Misc/NEWS:7176
msgid ""
"`bpo-17636 <https://bugs.python.org/issue17636>`__: Circular imports "
"involving relative imports are now supported."
msgstr ""
"`bpo-17636 <https://bugs.python.org/issue17636>`__: Circular imports "
"involving relative imports are now supported."

#: ../../../Misc/NEWS:7179
msgid ""
"`bpo-22604 <https://bugs.python.org/issue22604>`__: Fix assertion error in "
"debug mode when dividing a complex number by (nan+0j)."
msgstr ""
"`bpo-22604 <https://bugs.python.org/issue22604>`__: Fix assertion error in "
"debug mode when dividing a complex number by (nan+0j)."

#: ../../../Misc/NEWS:7182
msgid ""
"`bpo-21052 <https://bugs.python.org/issue21052>`__: Do not raise "
"ImportWarning when sys.path_hooks or sys.meta_path are set to None."
msgstr ""
"`bpo-21052 <https://bugs.python.org/issue21052>`__: Do not raise "
"ImportWarning when sys.path_hooks or sys.meta_path are set to None."

#: ../../../Misc/NEWS:7185
msgid ""
"`bpo-16518 <https://bugs.python.org/issue16518>`__: Use 'bytes-like object "
"required' in error messages that previously used the far more cryptic \"'x' "
"does not support the buffer protocol."
msgstr ""
"`bpo-16518 <https://bugs.python.org/issue16518>`__: Use 'bytes-like object "
"required' in error messages that previously used the far more cryptic \"'x' "
"does not support the buffer protocol."

#: ../../../Misc/NEWS:7189
msgid ""
"`bpo-22470 <https://bugs.python.org/issue22470>`__: Fixed integer overflow "
"issues in \"backslashreplace\", \"xmlcharrefreplace\", and \"surrogatepass\" "
"error handlers."
msgstr ""
"`bpo-22470 <https://bugs.python.org/issue22470>`__: Fixed integer overflow "
"issues in \"backslashreplace\", \"xmlcharrefreplace\", and \"surrogatepass\" "
"error handlers."

#: ../../../Misc/NEWS:7192
msgid ""
"`bpo-22540 <https://bugs.python.org/issue22540>`__: speed up "
"`PyObject_IsInstance` and `PyObject_IsSubclass` in the common case that the "
"second argument has metaclass `type`."
msgstr ""
"`bpo-22540 <https://bugs.python.org/issue22540>`__: speed up "
"`PyObject_IsInstance` and `PyObject_IsSubclass` in the common case that the "
"second argument has metaclass `type`."

#: ../../../Misc/NEWS:7195
msgid ""
"`bpo-18711 <https://bugs.python.org/issue18711>`__: Add a new "
"`PyErr_FormatV` function, similar to `PyErr_Format` but accepting a "
"`va_list` argument."
msgstr ""
"`bpo-18711 <https://bugs.python.org/issue18711>`__: Add a new "
"`PyErr_FormatV` function, similar to `PyErr_Format` but accepting a "
"`va_list` argument."

#: ../../../Misc/NEWS:7198
msgid ""
"`bpo-22520 <https://bugs.python.org/issue22520>`__: Fix overflow checking "
"when generating the repr of a unicode object."
msgstr ""
"`bpo-22520 <https://bugs.python.org/issue22520>`__: Fix overflow checking "
"when generating the repr of a unicode object."

#: ../../../Misc/NEWS:7201
msgid ""
"`bpo-22519 <https://bugs.python.org/issue22519>`__: Fix overflow checking in "
"PyBytes_Repr."
msgstr ""
"`bpo-22519 <https://bugs.python.org/issue22519>`__: Fix overflow checking in "
"PyBytes_Repr."

#: ../../../Misc/NEWS:7203
msgid ""
"`bpo-22518 <https://bugs.python.org/issue22518>`__: Fix integer overflow "
"issues in latin-1 encoding."
msgstr ""
"`bpo-22518 <https://bugs.python.org/issue22518>`__: Fix integer overflow "
"issues in latin-1 encoding."

#: ../../../Misc/NEWS:7205
msgid ""
"`bpo-16324 <https://bugs.python.org/issue16324>`__: _charset parameter of "
"MIMEText now also accepts email.charset.Charset instances. Initial patch by "
"Claude Paroz."
msgstr ""
"`bpo-16324 <https://bugs.python.org/issue16324>`__: _charset parameter of "
"MIMEText now also accepts email.charset.Charset instances. Initial patch by "
"Claude Paroz."

#: ../../../Misc/NEWS:7208
msgid ""
"`bpo-1764286 <https://bugs.python.org/issue1764286>`__: Fix inspect."
"getsource() to support decorated functions. Patch by Claudiu Popa."
msgstr ""
"`bpo-1764286 <https://bugs.python.org/issue1764286>`__: Fix inspect."
"getsource() to support decorated functions. Patch by Claudiu Popa."

#: ../../../Misc/NEWS:7211
msgid ""
"`bpo-18554 <https://bugs.python.org/issue18554>`__: os.__all__ includes "
"posix functions."
msgstr ""
"`bpo-18554 <https://bugs.python.org/issue18554>`__: os.__all__ includes "
"posix functions."

#: ../../../Misc/NEWS:7213
msgid ""
"`bpo-21391 <https://bugs.python.org/issue21391>`__: Use os.path.abspath in "
"the shutil module."
msgstr ""
"`bpo-21391 <https://bugs.python.org/issue21391>`__: Use os.path.abspath in "
"the shutil module."

#: ../../../Misc/NEWS:7215
msgid ""
"`bpo-11471 <https://bugs.python.org/issue11471>`__: avoid generating a "
"JUMP_FORWARD instruction at the end of an if-block if there is no else-"
"clause.  Original patch by Eugene Toder."
msgstr ""
"`bpo-11471 <https://bugs.python.org/issue11471>`__: avoid generating a "
"JUMP_FORWARD instruction at the end of an if-block if there is no else-"
"clause.  Original patch by Eugene Toder."

#: ../../../Misc/NEWS:7218
msgid ""
"`bpo-22215 <https://bugs.python.org/issue22215>`__: Now ValueError is raised "
"instead of TypeError when str or bytes argument contains not permitted null "
"character or byte."
msgstr ""
"`bpo-22215 <https://bugs.python.org/issue22215>`__: Now ValueError is raised "
"instead of TypeError when str or bytes argument contains not permitted null "
"character or byte."

#: ../../../Misc/NEWS:7221
msgid ""
"`bpo-22258 <https://bugs.python.org/issue22258>`__: Fix the internal "
"function set_inheritable() on Illumos. This platform exposes the function "
"``ioctl(FIOCLEX)``, but calling it fails with errno is ENOTTY: "
"\"Inappropriate ioctl for device\". set_inheritable() now falls back to the "
"slower ``fcntl()`` (``F_GETFD`` and then ``F_SETFD``)."
msgstr ""
"`bpo-22258 <https://bugs.python.org/issue22258>`__: Fix the internal "
"function set_inheritable() on Illumos. This platform exposes the function "
"``ioctl(FIOCLEX)``, but calling it fails with errno is ENOTTY: "
"\"Inappropriate ioctl for device\". set_inheritable() now falls back to the "
"slower ``fcntl()`` (``F_GETFD`` and then ``F_SETFD``)."

#: ../../../Misc/NEWS:7226
msgid ""
"`bpo-21389 <https://bugs.python.org/issue21389>`__: Displaying the "
"__qualname__ of the underlying function in the repr of a bound method."
msgstr ""
"`bpo-21389 <https://bugs.python.org/issue21389>`__: Displaying the "
"__qualname__ of the underlying function in the repr of a bound method."

#: ../../../Misc/NEWS:7229
msgid ""
"`bpo-22206 <https://bugs.python.org/issue22206>`__: Using pthread, "
"PyThread_create_key() now sets errno to ENOMEM and returns -1 (error) on "
"integer overflow."
msgstr ""
"`bpo-22206 <https://bugs.python.org/issue22206>`__: Using pthread, "
"PyThread_create_key() now sets errno to ENOMEM and returns -1 (error) on "
"integer overflow."

#: ../../../Misc/NEWS:7232
msgid ""
"`bpo-20184 <https://bugs.python.org/issue20184>`__: Argument Clinic based "
"signature introspection added for 30 of the builtin functions."
msgstr ""
"`bpo-20184 <https://bugs.python.org/issue20184>`__: Argument Clinic based "
"signature introspection added for 30 of the builtin functions."

#: ../../../Misc/NEWS:7235
msgid ""
"`bpo-22116 <https://bugs.python.org/issue22116>`__: C functions and methods "
"(of the 'builtin_function_or_method' type) can now be weakref'ed.  Patch by "
"Wei Wu."
msgstr ""
"`bpo-22116 <https://bugs.python.org/issue22116>`__: C functions and methods "
"(of the 'builtin_function_or_method' type) can now be weakref'ed.  Patch by "
"Wei Wu."

#: ../../../Misc/NEWS:7238
msgid ""
"`bpo-22077 <https://bugs.python.org/issue22077>`__: Improve index error "
"messages for bytearrays, bytes, lists, and tuples by adding 'or slices'. "
"Added ', not <typename>' for bytearrays. Original patch by Claudiu Popa."
msgstr ""
"`bpo-22077 <https://bugs.python.org/issue22077>`__: Improve index error "
"messages for bytearrays, bytes, lists, and tuples by adding 'or slices'. "
"Added ', not <typename>' for bytearrays. Original patch by Claudiu Popa."

#: ../../../Misc/NEWS:7242
msgid ""
"`bpo-20179 <https://bugs.python.org/issue20179>`__: Apply Argument Clinic to "
"bytes and bytearray. Patch by Tal Einat."
msgstr ""
"`bpo-20179 <https://bugs.python.org/issue20179>`__: Apply Argument Clinic to "
"bytes and bytearray. Patch by Tal Einat."

#: ../../../Misc/NEWS:7245
msgid ""
"`bpo-22082 <https://bugs.python.org/issue22082>`__: Clear interned strings "
"in slotdefs."
msgstr ""
"`bpo-22082 <https://bugs.python.org/issue22082>`__: Clear interned strings "
"in slotdefs."

#: ../../../Misc/NEWS:7247
msgid "Upgrade Unicode database to Unicode 7.0.0."
msgstr ""

#: ../../../Misc/NEWS:7249
msgid ""
"`bpo-21897 <https://bugs.python.org/issue21897>`__: Fix a crash with the "
"f_locals attribute with closure variables when frame.clear() has been called."
msgstr ""
"`bpo-21897 <https://bugs.python.org/issue21897>`__: Fix a crash with the "
"f_locals attribute with closure variables when frame.clear() has been called."

#: ../../../Misc/NEWS:7252
msgid ""
"`bpo-21205 <https://bugs.python.org/issue21205>`__: Add a new "
"``__qualname__`` attribute to generator, the qualified name, and use it in "
"the representation of a generator (``repr(gen)``). The default name of the "
"generator (``__name__`` attribute) is now get from the function instead of "
"the code. Use ``gen.gi_code.co_name`` to get the name of the code."
msgstr ""
"`bpo-21205 <https://bugs.python.org/issue21205>`__: Add a new "
"``__qualname__`` attribute to generator, the qualified name, and use it in "
"the representation of a generator (``repr(gen)``). The default name of the "
"generator (``__name__`` attribute) is now get from the function instead of "
"the code. Use ``gen.gi_code.co_name`` to get the name of the code."

#: ../../../Misc/NEWS:7258
msgid ""
"`bpo-21669 <https://bugs.python.org/issue21669>`__: With the aid of "
"heuristics in SyntaxError.__init__, the parser now attempts to generate more "
"meaningful (or at least more search engine friendly) error messages when "
"\"exec\" and \"print\" are used as statements."
msgstr ""
"`bpo-21669 <https://bugs.python.org/issue21669>`__: With the aid of "
"heuristics in SyntaxError.__init__, the parser now attempts to generate more "
"meaningful (or at least more search engine friendly) error messages when "
"\"exec\" and \"print\" are used as statements."

#: ../../../Misc/NEWS:7263
msgid ""
"`bpo-21642 <https://bugs.python.org/issue21642>`__: In the conditional if-"
"else expression, allow an integer written with no space between itself and "
"the ``else`` keyword (e.g. ``True if 42else False``) to be valid syntax."
msgstr ""
"`bpo-21642 <https://bugs.python.org/issue21642>`__: In the conditional if-"
"else expression, allow an integer written with no space between itself and "
"the ``else`` keyword (e.g. ``True if 42else False``) to be valid syntax."

#: ../../../Misc/NEWS:7267
msgid ""
"`bpo-21523 <https://bugs.python.org/issue21523>`__: Fix over-pessimistic "
"computation of the stack effect of some opcodes in the compiler.  This also "
"fixes a quadratic compilation time issue noticeable when compiling code with "
"a large number of \"and\" and \"or\" operators."
msgstr ""
"`bpo-21523 <https://bugs.python.org/issue21523>`__: Fix over-pessimistic "
"computation of the stack effect of some opcodes in the compiler.  This also "
"fixes a quadratic compilation time issue noticeable when compiling code with "
"a large number of \"and\" and \"or\" operators."

#: ../../../Misc/NEWS:7272
msgid ""
"`bpo-21418 <https://bugs.python.org/issue21418>`__: Fix a crash in the "
"builtin function super() when called without argument and without current "
"frame (ex: embedded Python)."
msgstr ""
"`bpo-21418 <https://bugs.python.org/issue21418>`__: Fix a crash in the "
"builtin function super() when called without argument and without current "
"frame (ex: embedded Python)."

#: ../../../Misc/NEWS:7275
msgid ""
"`bpo-21425 <https://bugs.python.org/issue21425>`__: Fix flushing of standard "
"streams in the interactive interpreter."
msgstr ""
"`bpo-21425 <https://bugs.python.org/issue21425>`__: Fix flushing of standard "
"streams in the interactive interpreter."

#: ../../../Misc/NEWS:7278
msgid ""
"`bpo-21435 <https://bugs.python.org/issue21435>`__: In rare cases, when "
"running finalizers on objects in cyclic trash a bad pointer dereference "
"could occur due to a subtle flaw in internal iteration logic."
msgstr ""
"`bpo-21435 <https://bugs.python.org/issue21435>`__: In rare cases, when "
"running finalizers on objects in cyclic trash a bad pointer dereference "
"could occur due to a subtle flaw in internal iteration logic."

#: ../../../Misc/NEWS:7282
msgid ""
"`bpo-21377 <https://bugs.python.org/issue21377>`__: PyBytes_Concat() now "
"tries to concatenate in-place when the first argument has a reference count "
"of 1.  Patch by Nikolaus Rath."
msgstr ""
"`bpo-21377 <https://bugs.python.org/issue21377>`__: PyBytes_Concat() now "
"tries to concatenate in-place when the first argument has a reference count "
"of 1.  Patch by Nikolaus Rath."

#: ../../../Misc/NEWS:7285
msgid ""
"`bpo-20355 <https://bugs.python.org/issue20355>`__: -W command line options "
"now have higher priority than the PYTHONWARNINGS environment variable.  "
"Patch by Arfrever."
msgstr ""
"`bpo-20355 <https://bugs.python.org/issue20355>`__: -W command line options "
"now have higher priority than the PYTHONWARNINGS environment variable.  "
"Patch by Arfrever."

#: ../../../Misc/NEWS:7288
msgid ""
"`bpo-21274 <https://bugs.python.org/issue21274>`__: Define PATH_MAX for GNU/"
"Hurd in Python/pythonrun.c."
msgstr ""
"`bpo-21274 <https://bugs.python.org/issue21274>`__: Define PATH_MAX for GNU/"
"Hurd in Python/pythonrun.c."

#: ../../../Misc/NEWS:7290
msgid ""
"`bpo-20904 <https://bugs.python.org/issue20904>`__: Support setting FPU "
"precision on m68k."
msgstr ""
"`bpo-20904 <https://bugs.python.org/issue20904>`__: Support setting FPU "
"precision on m68k."

#: ../../../Misc/NEWS:7292
msgid ""
"`bpo-21209 <https://bugs.python.org/issue21209>`__: Fix sending tuples to "
"custom generator objects with the yield from syntax."
msgstr ""
"`bpo-21209 <https://bugs.python.org/issue21209>`__: Fix sending tuples to "
"custom generator objects with the yield from syntax."

#: ../../../Misc/NEWS:7295
msgid ""
"`bpo-21193 <https://bugs.python.org/issue21193>`__: pow(a, b, c) now raises "
"ValueError rather than TypeError when b is negative.  Patch by Josh "
"Rosenberg."
msgstr ""
"`bpo-21193 <https://bugs.python.org/issue21193>`__: pow(a, b, c) now raises "
"ValueError rather than TypeError when b is negative.  Patch by Josh "
"Rosenberg."

#: ../../../Misc/NEWS:7298
msgid ""
"PEP 465 and `bpo-21176 <https://bugs.python.org/issue21176>`__: Add the '@' "
"operator for matrix multiplication."
msgstr ""
"PEP 465 and `bpo-21176 <https://bugs.python.org/issue21176>`__: Add the '@' "
"operator for matrix multiplication."

#: ../../../Misc/NEWS:7300
msgid ""
"`bpo-21134 <https://bugs.python.org/issue21134>`__: Fix segfault when str is "
"called on an uninitialized UnicodeEncodeError, UnicodeDecodeError, or "
"UnicodeTranslateError object."
msgstr ""
"`bpo-21134 <https://bugs.python.org/issue21134>`__: Fix segfault when str is "
"called on an uninitialized UnicodeEncodeError, UnicodeDecodeError, or "
"UnicodeTranslateError object."

#: ../../../Misc/NEWS:7303
msgid ""
"`bpo-19537 <https://bugs.python.org/issue19537>`__: Fix PyUnicode_DATA() "
"alignment under m68k.  Patch by Andreas Schwab."
msgstr ""
"`bpo-19537 <https://bugs.python.org/issue19537>`__: Fix PyUnicode_DATA() "
"alignment under m68k.  Patch by Andreas Schwab."

#: ../../../Misc/NEWS:7306
msgid ""
"`bpo-20929 <https://bugs.python.org/issue20929>`__: Add a type cast to avoid "
"shifting a negative number."
msgstr ""
"`bpo-20929 <https://bugs.python.org/issue20929>`__: Add a type cast to avoid "
"shifting a negative number."

#: ../../../Misc/NEWS:7308
msgid ""
"`bpo-20731 <https://bugs.python.org/issue20731>`__: Properly position in "
"source code files even if they are opened in text mode. Patch by Serhiy "
"Storchaka."
msgstr ""
"`bpo-20731 <https://bugs.python.org/issue20731>`__: Properly position in "
"source code files even if they are opened in text mode. Patch by Serhiy "
"Storchaka."

#: ../../../Misc/NEWS:7311
msgid ""
"`bpo-20637 <https://bugs.python.org/issue20637>`__: Key-sharing now also "
"works for instance dictionaries of subclasses.  Patch by Peter Ingebretson."
msgstr ""
"`bpo-20637 <https://bugs.python.org/issue20637>`__: Key-sharing now also "
"works for instance dictionaries of subclasses.  Patch by Peter Ingebretson."

#: ../../../Misc/NEWS:7314
msgid ""
"`bpo-8297 <https://bugs.python.org/issue8297>`__: Attributes missing from "
"modules now include the module name in the error text.  Original patch by "
"ysj.ray."
msgstr ""
"`bpo-8297 <https://bugs.python.org/issue8297>`__: Attributes missing from "
"modules now include the module name in the error text.  Original patch by "
"ysj.ray."

#: ../../../Misc/NEWS:7317
msgid ""
"`bpo-19995 <https://bugs.python.org/issue19995>`__: %c, %o, %x, and %X now "
"raise TypeError on non-integer input."
msgstr ""
"`bpo-19995 <https://bugs.python.org/issue19995>`__: %c, %o, %x, and %X now "
"raise TypeError on non-integer input."

#: ../../../Misc/NEWS:7319
msgid ""
"`bpo-19655 <https://bugs.python.org/issue19655>`__: The ASDL parser - used "
"by the build process to generate code for managing the Python AST in C - was "
"rewritten. The new parser is self contained and does not require to carry "
"long the spark.py parser-generator library; spark.py was removed from the "
"source base."
msgstr ""
"`bpo-19655 <https://bugs.python.org/issue19655>`__: The ASDL parser - used "
"by the build process to generate code for managing the Python AST in C - was "
"rewritten. The new parser is self contained and does not require to carry "
"long the spark.py parser-generator library; spark.py was removed from the "
"source base."

#: ../../../Misc/NEWS:7324
msgid ""
"`bpo-12546 <https://bugs.python.org/issue12546>`__: Allow ``\\x00`` to be "
"used as a fill character when using str, int, float, and complex __format__ "
"methods."
msgstr ""
"`bpo-12546 <https://bugs.python.org/issue12546>`__: Allow ``\\x00`` to be "
"used as a fill character when using str, int, float, and complex __format__ "
"methods."

#: ../../../Misc/NEWS:7327
msgid ""
"`bpo-20480 <https://bugs.python.org/issue20480>`__: Add ipaddress."
"reverse_pointer. Patch by Leon Weber."
msgstr ""
"`bpo-20480 <https://bugs.python.org/issue20480>`__: Add ipaddress."
"reverse_pointer. Patch by Leon Weber."

#: ../../../Misc/NEWS:7329
msgid ""
"`bpo-13598 <https://bugs.python.org/issue13598>`__: Modify string.Formatter "
"to support auto-numbering of replacement fields. It now matches the behavior "
"of str.format() in this regard. Patches by Phil Elson and Ramchandra Apte."
msgstr ""
"`bpo-13598 <https://bugs.python.org/issue13598>`__: Modify string.Formatter "
"to support auto-numbering of replacement fields. It now matches the behavior "
"of str.format() in this regard. Patches by Phil Elson and Ramchandra Apte."

#: ../../../Misc/NEWS:7333
msgid ""
"`bpo-8931 <https://bugs.python.org/issue8931>`__: Make alternate formatting "
"('#') for type 'c' raise an exception. In versions prior to 3.5, '#' with "
"'c' had no effect. Now specifying it is an error.  Patch by Torsten "
"Landschoff."
msgstr ""
"`bpo-8931 <https://bugs.python.org/issue8931>`__: Make alternate formatting "
"('#') for type 'c' raise an exception. In versions prior to 3.5, '#' with "
"'c' had no effect. Now specifying it is an error.  Patch by Torsten "
"Landschoff."

#: ../../../Misc/NEWS:7337
msgid ""
"`bpo-23165 <https://bugs.python.org/issue23165>`__: Perform overflow checks "
"before allocating memory in the _Py_char2wchar function."
msgstr ""
"`bpo-23165 <https://bugs.python.org/issue23165>`__: Perform overflow checks "
"before allocating memory in the _Py_char2wchar function."

#: ../../../Misc/NEWS:7343
msgid ""
"`bpo-23399 <https://bugs.python.org/issue23399>`__: pyvenv creates relative "
"symlinks where possible."
msgstr ""
"`bpo-23399 <https://bugs.python.org/issue23399>`__: pyvenv creates relative "
"symlinks where possible."

#: ../../../Misc/NEWS:7345
msgid ""
"`bpo-20289 <https://bugs.python.org/issue20289>`__: cgi.FieldStorage() now "
"supports the context management protocol."
msgstr ""
"`bpo-20289 <https://bugs.python.org/issue20289>`__: cgi.FieldStorage() now "
"supports the context management protocol."

#: ../../../Misc/NEWS:7348
msgid ""
"`bpo-13128 <https://bugs.python.org/issue13128>`__: Print response headers "
"for CONNECT requests when debuglevel > 0. Patch by Demian Brecht."
msgstr ""
"`bpo-13128 <https://bugs.python.org/issue13128>`__: Print response headers "
"for CONNECT requests when debuglevel > 0. Patch by Demian Brecht."

#: ../../../Misc/NEWS:7351
msgid ""
"`bpo-15381 <https://bugs.python.org/issue15381>`__: Optimized io.BytesIO to "
"make less allocations and copyings."
msgstr ""
"`bpo-15381 <https://bugs.python.org/issue15381>`__: Optimized io.BytesIO to "
"make less allocations and copyings."

#: ../../../Misc/NEWS:7353
msgid ""
"`bpo-22818 <https://bugs.python.org/issue22818>`__: Splitting on a pattern "
"that could match an empty string now raises a warning.  Patterns that can "
"only match empty strings are now rejected."
msgstr ""
"`bpo-22818 <https://bugs.python.org/issue22818>`__: Splitting on a pattern "
"that could match an empty string now raises a warning.  Patterns that can "
"only match empty strings are now rejected."

#: ../../../Misc/NEWS:7357
msgid ""
"`bpo-23099 <https://bugs.python.org/issue23099>`__: Closing io.BytesIO with "
"exported buffer is rejected now to prevent corrupting exported buffer."
msgstr ""
"`bpo-23099 <https://bugs.python.org/issue23099>`__: Closing io.BytesIO with "
"exported buffer is rejected now to prevent corrupting exported buffer."

#: ../../../Misc/NEWS:7360
msgid ""
"`bpo-23326 <https://bugs.python.org/issue23326>`__: Removed __ne__ "
"implementations.  Since fixing default __ne__ implementation in `bpo-21408 "
"<https://bugs.python.org/issue21408>`__ they are redundant."
msgstr ""
"`bpo-23326 <https://bugs.python.org/issue23326>`__: Removed __ne__ "
"implementations.  Since fixing default __ne__ implementation in `bpo-21408 "
"<https://bugs.python.org/issue21408>`__ they are redundant."

#: ../../../Misc/NEWS:7363
msgid ""
"`bpo-23363 <https://bugs.python.org/issue23363>`__: Fix possible overflow in "
"itertools.permutations."
msgstr ""
"`bpo-23363 <https://bugs.python.org/issue23363>`__: Fix possible overflow in "
"itertools.permutations."

#: ../../../Misc/NEWS:7365
msgid ""
"`bpo-23364 <https://bugs.python.org/issue23364>`__: Fix possible overflow in "
"itertools.product."
msgstr ""
"`bpo-23364 <https://bugs.python.org/issue23364>`__: Fix possible overflow in "
"itertools.product."

#: ../../../Misc/NEWS:7367
msgid ""
"`bpo-23366 <https://bugs.python.org/issue23366>`__: Fixed possible integer "
"overflow in itertools.combinations."
msgstr ""
"`bpo-23366 <https://bugs.python.org/issue23366>`__: Fixed possible integer "
"overflow in itertools.combinations."

#: ../../../Misc/NEWS:7369
msgid ""
"`bpo-23369 <https://bugs.python.org/issue23369>`__: Fixed possible integer "
"overflow in _json.encode_basestring_ascii."
msgstr ""
"`bpo-23369 <https://bugs.python.org/issue23369>`__: Fixed possible integer "
"overflow in _json.encode_basestring_ascii."

#: ../../../Misc/NEWS:7372
msgid ""
"`bpo-23353 <https://bugs.python.org/issue23353>`__: Fix the exception "
"handling of generators in PyEval_EvalFrameEx(). At entry, save or swap the "
"exception state even if PyEval_EvalFrameEx() is called with throwflag=0. At "
"exit, the exception state is now always restored or swapped, not only if why "
"is WHY_YIELD or WHY_RETURN. Patch co-written with Antoine Pitrou."
msgstr ""
"`bpo-23353 <https://bugs.python.org/issue23353>`__: Fix the exception "
"handling of generators in PyEval_EvalFrameEx(). At entry, save or swap the "
"exception state even if PyEval_EvalFrameEx() is called with throwflag=0. At "
"exit, the exception state is now always restored or swapped, not only if why "
"is WHY_YIELD or WHY_RETURN. Patch co-written with Antoine Pitrou."

#: ../../../Misc/NEWS:7378
msgid ""
"`bpo-14099 <https://bugs.python.org/issue14099>`__: Restored support of "
"writing ZIP files to tellable but non-seekable streams."
msgstr ""
"`bpo-14099 <https://bugs.python.org/issue14099>`__: Restored support of "
"writing ZIP files to tellable but non-seekable streams."

#: ../../../Misc/NEWS:7381
msgid ""
"`bpo-14099 <https://bugs.python.org/issue14099>`__: Writing to ZipFile and "
"reading multiple ZipExtFiles is threadsafe now."
msgstr ""
"`bpo-14099 <https://bugs.python.org/issue14099>`__: Writing to ZipFile and "
"reading multiple ZipExtFiles is threadsafe now."

#: ../../../Misc/NEWS:7384
msgid ""
"`bpo-19361 <https://bugs.python.org/issue19361>`__: JSON decoder now raises "
"JSONDecodeError instead of ValueError."
msgstr ""
"`bpo-19361 <https://bugs.python.org/issue19361>`__: JSON decoder now raises "
"JSONDecodeError instead of ValueError."

#: ../../../Misc/NEWS:7386
msgid ""
"`bpo-18518 <https://bugs.python.org/issue18518>`__: timeit now rejects "
"statements which can't be compiled outside a function or a loop (e.g. "
"\"return\" or \"break\")."
msgstr ""
"`bpo-18518 <https://bugs.python.org/issue18518>`__: timeit now rejects "
"statements which can't be compiled outside a function or a loop (e.g. "
"\"return\" or \"break\")."

#: ../../../Misc/NEWS:7389
msgid ""
"`bpo-23094 <https://bugs.python.org/issue23094>`__: Fixed readline with "
"frames in Python implementation of pickle."
msgstr ""
"`bpo-23094 <https://bugs.python.org/issue23094>`__: Fixed readline with "
"frames in Python implementation of pickle."

#: ../../../Misc/NEWS:7391
msgid ""
"`bpo-23268 <https://bugs.python.org/issue23268>`__: Fixed bugs in the "
"comparison of ipaddress classes."
msgstr ""
"`bpo-23268 <https://bugs.python.org/issue23268>`__: Fixed bugs in the "
"comparison of ipaddress classes."

#: ../../../Misc/NEWS:7393
msgid ""
"`bpo-21408 <https://bugs.python.org/issue21408>`__: Removed incorrect "
"implementations of __ne__() which didn't returned NotImplemented if __eq__() "
"returned NotImplemented.  The default __ne__() now works correctly."
msgstr ""
"`bpo-21408 <https://bugs.python.org/issue21408>`__: Removed incorrect "
"implementations of __ne__() which didn't returned NotImplemented if __eq__() "
"returned NotImplemented.  The default __ne__() now works correctly."

#: ../../../Misc/NEWS:7397
msgid ""
"`bpo-19996 <https://bugs.python.org/issue19996>`__: :class:`email.feedparser."
"FeedParser` now handles (malformed) headers with no key rather than assuming "
"the body has started."
msgstr ""
"`bpo-19996 <https://bugs.python.org/issue19996>`__: :class:`email.feedparser."
"FeedParser` now handles (malformed) headers with no key rather than assuming "
"the body has started."

#: ../../../Misc/NEWS:7400
msgid ""
"`bpo-20188 <https://bugs.python.org/issue20188>`__: Support Application-"
"Layer Protocol Negotiation (ALPN) in the ssl module."
msgstr ""
"`bpo-20188 <https://bugs.python.org/issue20188>`__: Support Application-"
"Layer Protocol Negotiation (ALPN) in the ssl module."

#: ../../../Misc/NEWS:7403
msgid ""
"`bpo-23133 <https://bugs.python.org/issue23133>`__: Pickling of ipaddress "
"objects now produces more compact and portable representation."
msgstr ""
"`bpo-23133 <https://bugs.python.org/issue23133>`__: Pickling of ipaddress "
"objects now produces more compact and portable representation."

#: ../../../Misc/NEWS:7406
msgid ""
"`bpo-23248 <https://bugs.python.org/issue23248>`__: Update ssl error codes "
"from latest OpenSSL git master."
msgstr ""
"`bpo-23248 <https://bugs.python.org/issue23248>`__: Update ssl error codes "
"from latest OpenSSL git master."

#: ../../../Misc/NEWS:7408
msgid ""
"`bpo-23266 <https://bugs.python.org/issue23266>`__: Much faster "
"implementation of ipaddress.collapse_addresses() when there are many non-"
"consecutive addresses."
msgstr ""
"`bpo-23266 <https://bugs.python.org/issue23266>`__: Much faster "
"implementation of ipaddress.collapse_addresses() when there are many non-"
"consecutive addresses."

#: ../../../Misc/NEWS:7411
msgid ""
"`bpo-23098 <https://bugs.python.org/issue23098>`__: 64-bit dev_t is now "
"supported in the os module."
msgstr ""
"`bpo-23098 <https://bugs.python.org/issue23098>`__: 64-bit dev_t is now "
"supported in the os module."

#: ../../../Misc/NEWS:7413
msgid ""
"`bpo-21817 <https://bugs.python.org/issue21817>`__: When an exception is "
"raised in a task submitted to a ProcessPoolExecutor, the remote traceback is "
"now displayed in the parent process.  Patch by Claudiu Popa."
msgstr ""
"`bpo-21817 <https://bugs.python.org/issue21817>`__: When an exception is "
"raised in a task submitted to a ProcessPoolExecutor, the remote traceback is "
"now displayed in the parent process.  Patch by Claudiu Popa."

#: ../../../Misc/NEWS:7417
msgid ""
"`bpo-15955 <https://bugs.python.org/issue15955>`__: Add an option to limit "
"output size when decompressing LZMA data.  Patch by Nikolaus Rath and Martin "
"Panter."
msgstr ""
"`bpo-15955 <https://bugs.python.org/issue15955>`__: Add an option to limit "
"output size when decompressing LZMA data.  Patch by Nikolaus Rath and Martin "
"Panter."

#: ../../../Misc/NEWS:7420
msgid ""
"`bpo-23250 <https://bugs.python.org/issue23250>`__: In the http.cookies "
"module, capitalize \"HttpOnly\" and \"Secure\" as they are written in the "
"standard."
msgstr ""
"`bpo-23250 <https://bugs.python.org/issue23250>`__: In the http.cookies "
"module, capitalize \"HttpOnly\" and \"Secure\" as they are written in the "
"standard."

#: ../../../Misc/NEWS:7423
msgid ""
"`bpo-23063 <https://bugs.python.org/issue23063>`__: In the disutils' check "
"command, fix parsing of reST with code or code-block directives."
msgstr ""
"`bpo-23063 <https://bugs.python.org/issue23063>`__: In the disutils' check "
"command, fix parsing of reST with code or code-block directives."

#: ../../../Misc/NEWS:7426
msgid ""
"`bpo-23209 <https://bugs.python.org/issue23209>`__, #23225: selectors."
"BaseSelector.get_key() now raises a RuntimeError if the selector is closed. "
"And selectors.BaseSelector.close() now clears its internal reference to the "
"selector mapping to break a reference cycle. Initial patch written by Martin "
"Richard."
msgstr ""
"`bpo-23209 <https://bugs.python.org/issue23209>`__, #23225: selectors."
"BaseSelector.get_key() now raises a RuntimeError if the selector is closed. "
"And selectors.BaseSelector.close() now clears its internal reference to the "
"selector mapping to break a reference cycle. Initial patch written by Martin "
"Richard."

#: ../../../Misc/NEWS:7431
msgid ""
"`bpo-17911 <https://bugs.python.org/issue17911>`__: Provide a way to seed "
"the linecache for a PEP-302 module without actually loading the code."
msgstr ""
"`bpo-17911 <https://bugs.python.org/issue17911>`__: Provide a way to seed "
"the linecache for a PEP-302 module without actually loading the code."

#: ../../../Misc/NEWS:7434
msgid ""
"`bpo-17911 <https://bugs.python.org/issue17911>`__: Provide a new object API "
"for traceback, including the ability to not lookup lines at all until the "
"traceback is actually rendered, without any trace of the original objects "
"being kept alive."
msgstr ""
"`bpo-17911 <https://bugs.python.org/issue17911>`__: Provide a new object API "
"for traceback, including the ability to not lookup lines at all until the "
"traceback is actually rendered, without any trace of the original objects "
"being kept alive."

#: ../../../Misc/NEWS:7438
msgid ""
"`bpo-19777 <https://bugs.python.org/issue19777>`__: Provide a home() "
"classmethod on Path objects.  Contributed by Victor Salgado and Mayank "
"Tripathi."
msgstr ""
"`bpo-19777 <https://bugs.python.org/issue19777>`__: Provide a home() "
"classmethod on Path objects.  Contributed by Victor Salgado and Mayank "
"Tripathi."

#: ../../../Misc/NEWS:7441
msgid ""
"`bpo-23206 <https://bugs.python.org/issue23206>`__: Make ``json.dumps(..., "
"ensure_ascii=False)`` as fast as the default case of ``ensure_ascii=True``.  "
"Patch by Naoki Inada."
msgstr ""
"`bpo-23206 <https://bugs.python.org/issue23206>`__: Make ``json.dumps(..., "
"ensure_ascii=False)`` as fast as the default case of ``ensure_ascii=True``.  "
"Patch by Naoki Inada."

#: ../../../Misc/NEWS:7444
msgid ""
"`bpo-23185 <https://bugs.python.org/issue23185>`__: Add math.inf and math."
"nan constants."
msgstr ""
"`bpo-23185 <https://bugs.python.org/issue23185>`__: Add math.inf and math."
"nan constants."

#: ../../../Misc/NEWS:7446
msgid ""
"`bpo-23186 <https://bugs.python.org/issue23186>`__: Add ssl.SSLObject."
"shared_ciphers() and ssl.SSLSocket.shared_ciphers() to fetch the client's "
"list ciphers sent at handshake."
msgstr ""
"`bpo-23186 <https://bugs.python.org/issue23186>`__: Add ssl.SSLObject."
"shared_ciphers() and ssl.SSLSocket.shared_ciphers() to fetch the client's "
"list ciphers sent at handshake."

#: ../../../Misc/NEWS:7450
msgid ""
"`bpo-23143 <https://bugs.python.org/issue23143>`__: Remove compatibility "
"with OpenSSLs older than 0.9.8."
msgstr ""
"`bpo-23143 <https://bugs.python.org/issue23143>`__: Remove compatibility "
"with OpenSSLs older than 0.9.8."

#: ../../../Misc/NEWS:7452
msgid ""
"`bpo-23132 <https://bugs.python.org/issue23132>`__: Improve performance and "
"introspection support of comparison methods created by functool."
"total_ordering."
msgstr ""
"`bpo-23132 <https://bugs.python.org/issue23132>`__: Improve performance and "
"introspection support of comparison methods created by functool."
"total_ordering."

#: ../../../Misc/NEWS:7455
msgid ""
"`bpo-19776 <https://bugs.python.org/issue19776>`__: Add an expanduser() "
"method on Path objects."
msgstr ""
"`bpo-19776 <https://bugs.python.org/issue19776>`__: Add an expanduser() "
"method on Path objects."

#: ../../../Misc/NEWS:7457
msgid ""
"`bpo-23112 <https://bugs.python.org/issue23112>`__: Fix SimpleHTTPServer to "
"correctly carry the query string and fragment when it redirects to add a "
"trailing slash."
msgstr ""
"`bpo-23112 <https://bugs.python.org/issue23112>`__: Fix SimpleHTTPServer to "
"correctly carry the query string and fragment when it redirects to add a "
"trailing slash."

#: ../../../Misc/NEWS:7460
msgid ""
"`bpo-21793 <https://bugs.python.org/issue21793>`__: Added http.HTTPStatus "
"enums (i.e. HTTPStatus.OK, HTTPStatus.NOT_FOUND).  Patch by Demian Brecht."
msgstr ""
"`bpo-21793 <https://bugs.python.org/issue21793>`__: Added http.HTTPStatus "
"enums (i.e. HTTPStatus.OK, HTTPStatus.NOT_FOUND).  Patch by Demian Brecht."

#: ../../../Misc/NEWS:7463
msgid ""
"`bpo-23093 <https://bugs.python.org/issue23093>`__: In the io, module allow "
"more operations to work on detached streams."
msgstr ""
"`bpo-23093 <https://bugs.python.org/issue23093>`__: In the io, module allow "
"more operations to work on detached streams."

#: ../../../Misc/NEWS:7466
msgid ""
"`bpo-23111 <https://bugs.python.org/issue23111>`__: In the ftplib, make ssl."
"PROTOCOL_SSLv23 the default protocol version."
msgstr ""
"`bpo-23111 <https://bugs.python.org/issue23111>`__: In the ftplib, make ssl."
"PROTOCOL_SSLv23 the default protocol version."

#: ../../../Misc/NEWS:7469
msgid ""
"`bpo-22585 <https://bugs.python.org/issue22585>`__: On OpenBSD 5.6 and "
"newer, os.urandom() now calls getentropy(), instead of reading /dev/urandom, "
"to get pseudo-random bytes."
msgstr ""
"`bpo-22585 <https://bugs.python.org/issue22585>`__: On OpenBSD 5.6 and "
"newer, os.urandom() now calls getentropy(), instead of reading /dev/urandom, "
"to get pseudo-random bytes."

#: ../../../Misc/NEWS:7472
msgid ""
"`bpo-19104 <https://bugs.python.org/issue19104>`__: pprint now produces "
"evaluable output for wrapped strings."
msgstr ""
"`bpo-19104 <https://bugs.python.org/issue19104>`__: pprint now produces "
"evaluable output for wrapped strings."

#: ../../../Misc/NEWS:7474
msgid ""
"`bpo-23071 <https://bugs.python.org/issue23071>`__: Added missing names to "
"codecs.__all__.  Patch by Martin Panter."
msgstr ""
"`bpo-23071 <https://bugs.python.org/issue23071>`__: Added missing names to "
"codecs.__all__.  Patch by Martin Panter."

#: ../../../Misc/NEWS:7476
msgid ""
"`bpo-22783 <https://bugs.python.org/issue22783>`__: Pickling now uses the "
"NEWOBJ opcode instead of the NEWOBJ_EX opcode if possible."
msgstr ""
"`bpo-22783 <https://bugs.python.org/issue22783>`__: Pickling now uses the "
"NEWOBJ opcode instead of the NEWOBJ_EX opcode if possible."

#: ../../../Misc/NEWS:7479
msgid ""
"`bpo-15513 <https://bugs.python.org/issue15513>`__: Added a __sizeof__ "
"implementation for pickle classes."
msgstr ""
"`bpo-15513 <https://bugs.python.org/issue15513>`__: Added a __sizeof__ "
"implementation for pickle classes."

#: ../../../Misc/NEWS:7481
msgid ""
"`bpo-19858 <https://bugs.python.org/issue19858>`__: pickletools.optimize() "
"now aware of the MEMOIZE opcode, can produce more compact result and no "
"longer produces invalid output if input data contains MEMOIZE opcodes "
"together with PUT or BINPUT opcodes."
msgstr ""
"`bpo-19858 <https://bugs.python.org/issue19858>`__: pickletools.optimize() "
"now aware of the MEMOIZE opcode, can produce more compact result and no "
"longer produces invalid output if input data contains MEMOIZE opcodes "
"together with PUT or BINPUT opcodes."

#: ../../../Misc/NEWS:7485
msgid ""
"`bpo-22095 <https://bugs.python.org/issue22095>`__: Fixed HTTPConnection."
"set_tunnel with default port.  The port value in the host header was set to "
"\"None\".  Patch by Demian Brecht."
msgstr ""
"`bpo-22095 <https://bugs.python.org/issue22095>`__: Fixed HTTPConnection."
"set_tunnel with default port.  The port value in the host header was set to "
"\"None\".  Patch by Demian Brecht."

#: ../../../Misc/NEWS:7488
msgid ""
"`bpo-23016 <https://bugs.python.org/issue23016>`__: A warning no longer "
"produces an AttributeError when the program is run with pythonw.exe."
msgstr ""
"`bpo-23016 <https://bugs.python.org/issue23016>`__: A warning no longer "
"produces an AttributeError when the program is run with pythonw.exe."

#: ../../../Misc/NEWS:7491
msgid ""
"`bpo-21775 <https://bugs.python.org/issue21775>`__: shutil.copytree(): fix "
"crash when copying to VFAT. An exception handler assumed that OSError "
"objects always have a 'winerror' attribute. That is not the case, so the "
"exception handler itself raised AttributeError when run on Linux (and, "
"presumably, any other non-Windows OS). Patch by Greg Ward."
msgstr ""
"`bpo-21775 <https://bugs.python.org/issue21775>`__: shutil.copytree(): fix "
"crash when copying to VFAT. An exception handler assumed that OSError "
"objects always have a 'winerror' attribute. That is not the case, so the "
"exception handler itself raised AttributeError when run on Linux (and, "
"presumably, any other non-Windows OS). Patch by Greg Ward."

#: ../../../Misc/NEWS:7497
msgid ""
"`bpo-1218234 <https://bugs.python.org/issue1218234>`__: Fix inspect."
"getsource() to load updated source of reloaded module. Initial patch by "
"Berker Peksag."
msgstr ""
"`bpo-1218234 <https://bugs.python.org/issue1218234>`__: Fix inspect."
"getsource() to load updated source of reloaded module. Initial patch by "
"Berker Peksag."

#: ../../../Misc/NEWS:7500
msgid ""
"`bpo-21740 <https://bugs.python.org/issue21740>`__: Support wrapped "
"callables in doctest. Patch by Claudiu Popa."
msgstr ""
"`bpo-21740 <https://bugs.python.org/issue21740>`__: Support wrapped "
"callables in doctest. Patch by Claudiu Popa."

#: ../../../Misc/NEWS:7502
msgid ""
"`bpo-23009 <https://bugs.python.org/issue23009>`__: Make sure selectors."
"EpollSelecrtor.select() works when no FD is registered."
msgstr ""
"`bpo-23009 <https://bugs.python.org/issue23009>`__: Make sure selectors."
"EpollSelecrtor.select() works when no FD is registered."

#: ../../../Misc/NEWS:7505
msgid ""
"`bpo-22959 <https://bugs.python.org/issue22959>`__: In the constructor of "
"http.client.HTTPSConnection, prefer the context's check_hostname attribute "
"over the *check_hostname* parameter."
msgstr ""
"`bpo-22959 <https://bugs.python.org/issue22959>`__: In the constructor of "
"http.client.HTTPSConnection, prefer the context's check_hostname attribute "
"over the *check_hostname* parameter."

#: ../../../Misc/NEWS:7508
msgid ""
"`bpo-22696 <https://bugs.python.org/issue22696>`__: Add function :func:`sys."
"is_finalizing` to know about interpreter shutdown."
msgstr ""
"`bpo-22696 <https://bugs.python.org/issue22696>`__: Add function :func:`sys."
"is_finalizing` to know about interpreter shutdown."

#: ../../../Misc/NEWS:7511
msgid ""
"`bpo-16043 <https://bugs.python.org/issue16043>`__: Add a default limit for "
"the amount of data xmlrpclib.gzip_decode will return. This resolves "
"CVE-2013-1753."
msgstr ""
"`bpo-16043 <https://bugs.python.org/issue16043>`__: Add a default limit for "
"the amount of data xmlrpclib.gzip_decode will return. This resolves "
"CVE-2013-1753."

#: ../../../Misc/NEWS:7514
msgid ""
"`bpo-14099 <https://bugs.python.org/issue14099>`__: ZipFile.open() no longer "
"reopen the underlying file.  Objects returned by ZipFile.open() can now "
"operate independently of the ZipFile even if the ZipFile was created by "
"passing in a file-like object as the first argument to the constructor."
msgstr ""
"`bpo-14099 <https://bugs.python.org/issue14099>`__: ZipFile.open() no longer "
"reopen the underlying file.  Objects returned by ZipFile.open() can now "
"operate independently of the ZipFile even if the ZipFile was created by "
"passing in a file-like object as the first argument to the constructor."

#: ../../../Misc/NEWS:7519
msgid ""
"`bpo-22966 <https://bugs.python.org/issue22966>`__: Fix __pycache__ pyc file "
"name clobber when pyc_compile is asked to compile a source file containing "
"multiple dots in the source file name."
msgstr ""
"`bpo-22966 <https://bugs.python.org/issue22966>`__: Fix __pycache__ pyc file "
"name clobber when pyc_compile is asked to compile a source file containing "
"multiple dots in the source file name."

#: ../../../Misc/NEWS:7523
msgid ""
"`bpo-21971 <https://bugs.python.org/issue21971>`__: Update turtledemo doc "
"and add module to the index."
msgstr ""
"`bpo-21971 <https://bugs.python.org/issue21971>`__: Update turtledemo doc "
"and add module to the index."

#: ../../../Misc/NEWS:7525
msgid ""
"`bpo-21032 <https://bugs.python.org/issue21032>`__: Fixed socket leak if "
"HTTPConnection.getresponse() fails. Original patch by Martin Panter."
msgstr ""
"`bpo-21032 <https://bugs.python.org/issue21032>`__: Fixed socket leak if "
"HTTPConnection.getresponse() fails. Original patch by Martin Panter."

#: ../../../Misc/NEWS:7528
msgid ""
"`bpo-22407 <https://bugs.python.org/issue22407>`__: Deprecated the use of re."
"LOCALE flag with str patterns or re.ASCII. It was newer worked."
msgstr ""
"`bpo-22407 <https://bugs.python.org/issue22407>`__: Deprecated the use of re."
"LOCALE flag with str patterns or re.ASCII. It was newer worked."

#: ../../../Misc/NEWS:7531
msgid ""
"`bpo-22902 <https://bugs.python.org/issue22902>`__: The \"ip\" command is "
"now used on Linux to determine MAC address in uuid.getnode().  Pach by Bruno "
"Cauet."
msgstr ""
"`bpo-22902 <https://bugs.python.org/issue22902>`__: The \"ip\" command is "
"now used on Linux to determine MAC address in uuid.getnode().  Pach by Bruno "
"Cauet."

#: ../../../Misc/NEWS:7534
msgid ""
"`bpo-22960 <https://bugs.python.org/issue22960>`__: Add a context argument "
"to xmlrpclib.ServerProxy constructor."
msgstr ""
"`bpo-22960 <https://bugs.python.org/issue22960>`__: Add a context argument "
"to xmlrpclib.ServerProxy constructor."

#: ../../../Misc/NEWS:7536
msgid ""
"`bpo-22389 <https://bugs.python.org/issue22389>`__: Add contextlib."
"redirect_stderr()."
msgstr ""
"`bpo-22389 <https://bugs.python.org/issue22389>`__: Add contextlib."
"redirect_stderr()."

#: ../../../Misc/NEWS:7538
msgid ""
"`bpo-21356 <https://bugs.python.org/issue21356>`__: Make ssl.RAND_egd() "
"optional to support LibreSSL. The availability of the function is checked "
"during the compilation. Patch written by Bernard Spil."
msgstr ""
"`bpo-21356 <https://bugs.python.org/issue21356>`__: Make ssl.RAND_egd() "
"optional to support LibreSSL. The availability of the function is checked "
"during the compilation. Patch written by Bernard Spil."

#: ../../../Misc/NEWS:7542
msgid ""
"`bpo-22915 <https://bugs.python.org/issue22915>`__: SAX parser now supports "
"files opened with file descriptor or bytes path."
msgstr ""
"`bpo-22915 <https://bugs.python.org/issue22915>`__: SAX parser now supports "
"files opened with file descriptor or bytes path."

#: ../../../Misc/NEWS:7545
msgid ""
"`bpo-22609 <https://bugs.python.org/issue22609>`__: Constructors and update "
"methods of mapping classes in the collections module now accept the self "
"keyword argument."
msgstr ""
"`bpo-22609 <https://bugs.python.org/issue22609>`__: Constructors and update "
"methods of mapping classes in the collections module now accept the self "
"keyword argument."

#: ../../../Misc/NEWS:7548
msgid ""
"`bpo-22940 <https://bugs.python.org/issue22940>`__: Add readline."
"append_history_file."
msgstr ""
"`bpo-22940 <https://bugs.python.org/issue22940>`__: Add readline."
"append_history_file."

#: ../../../Misc/NEWS:7550
msgid ""
"`bpo-19676 <https://bugs.python.org/issue19676>`__: Added the \"namereplace"
"\" error handler."
msgstr ""
"`bpo-19676 <https://bugs.python.org/issue19676>`__: Added the \"namereplace"
"\" error handler."

#: ../../../Misc/NEWS:7552
msgid ""
"`bpo-22788 <https://bugs.python.org/issue22788>`__: Add *context* parameter "
"to logging.handlers.HTTPHandler."
msgstr ""
"`bpo-22788 <https://bugs.python.org/issue22788>`__: Add *context* parameter "
"to logging.handlers.HTTPHandler."

#: ../../../Misc/NEWS:7554
msgid ""
"`bpo-22921 <https://bugs.python.org/issue22921>`__: Allow SSLContext to take "
"the *hostname* parameter even if OpenSSL doesn't support SNI."
msgstr ""
"`bpo-22921 <https://bugs.python.org/issue22921>`__: Allow SSLContext to take "
"the *hostname* parameter even if OpenSSL doesn't support SNI."

#: ../../../Misc/NEWS:7557
msgid ""
"`bpo-22894 <https://bugs.python.org/issue22894>`__: TestCase.subTest() would "
"cause the test suite to be stopped when in failfast mode, even in the "
"absence of failures."
msgstr ""
"`bpo-22894 <https://bugs.python.org/issue22894>`__: TestCase.subTest() would "
"cause the test suite to be stopped when in failfast mode, even in the "
"absence of failures."

#: ../../../Misc/NEWS:7560
msgid ""
"`bpo-22796 <https://bugs.python.org/issue22796>`__: HTTP cookie parsing is "
"now stricter, in order to protect against potential injection attacks."
msgstr ""
"`bpo-22796 <https://bugs.python.org/issue22796>`__: HTTP cookie parsing is "
"now stricter, in order to protect against potential injection attacks."

#: ../../../Misc/NEWS:7563
msgid ""
"`bpo-22370 <https://bugs.python.org/issue22370>`__: Windows detection in "
"pathlib is now more robust."
msgstr ""
"`bpo-22370 <https://bugs.python.org/issue22370>`__: Windows detection in "
"pathlib is now more robust."

#: ../../../Misc/NEWS:7565
msgid ""
"`bpo-22841 <https://bugs.python.org/issue22841>`__: Reject coroutines in "
"asyncio add_signal_handler(). Patch by Ludovic.Gasc."
msgstr ""
"`bpo-22841 <https://bugs.python.org/issue22841>`__: Reject coroutines in "
"asyncio add_signal_handler(). Patch by Ludovic.Gasc."

#: ../../../Misc/NEWS:7568
msgid ""
"`bpo-19494 <https://bugs.python.org/issue19494>`__: Added urllib.request."
"HTTPBasicPriorAuthHandler. Patch by Matej Cepl."
msgstr ""
"`bpo-19494 <https://bugs.python.org/issue19494>`__: Added urllib.request."
"HTTPBasicPriorAuthHandler. Patch by Matej Cepl."

#: ../../../Misc/NEWS:7571
msgid ""
"`bpo-22578 <https://bugs.python.org/issue22578>`__: Added attributes to the "
"re.error class."
msgstr ""
"`bpo-22578 <https://bugs.python.org/issue22578>`__: Added attributes to the "
"re.error class."

#: ../../../Misc/NEWS:7573
msgid ""
"`bpo-22849 <https://bugs.python.org/issue22849>`__: Fix possible double free "
"in the io.TextIOWrapper constructor."
msgstr ""
"`bpo-22849 <https://bugs.python.org/issue22849>`__: Fix possible double free "
"in the io.TextIOWrapper constructor."

#: ../../../Misc/NEWS:7575
msgid ""
"`bpo-12728 <https://bugs.python.org/issue12728>`__: Different Unicode "
"characters having the same uppercase but different lowercase are now matched "
"in case-insensitive regular expressions."
msgstr ""
"`bpo-12728 <https://bugs.python.org/issue12728>`__: Different Unicode "
"characters having the same uppercase but different lowercase are now matched "
"in case-insensitive regular expressions."

#: ../../../Misc/NEWS:7578
msgid ""
"`bpo-22821 <https://bugs.python.org/issue22821>`__: Fixed fcntl() with "
"integer argument on 64-bit big-endian platforms."
msgstr ""
"`bpo-22821 <https://bugs.python.org/issue22821>`__: Fixed fcntl() with "
"integer argument on 64-bit big-endian platforms."

#: ../../../Misc/NEWS:7581
msgid ""
"`bpo-21650 <https://bugs.python.org/issue21650>`__: Add an `--sort-keys` "
"option to json.tool CLI."
msgstr ""
"`bpo-21650 <https://bugs.python.org/issue21650>`__: Add an `--sort-keys` "
"option to json.tool CLI."

#: ../../../Misc/NEWS:7583
msgid ""
"`bpo-22824 <https://bugs.python.org/issue22824>`__: Updated reprlib output "
"format for sets to use set literals. Patch contributed by Berker Peksag."
msgstr ""
"`bpo-22824 <https://bugs.python.org/issue22824>`__: Updated reprlib output "
"format for sets to use set literals. Patch contributed by Berker Peksag."

#: ../../../Misc/NEWS:7586
msgid ""
"`bpo-22824 <https://bugs.python.org/issue22824>`__: Updated reprlib output "
"format for arrays to display empty arrays without an unnecessary empty "
"list.  Suggested by Serhiy Storchaka."
msgstr ""
"`bpo-22824 <https://bugs.python.org/issue22824>`__: Updated reprlib output "
"format for arrays to display empty arrays without an unnecessary empty "
"list.  Suggested by Serhiy Storchaka."

#: ../../../Misc/NEWS:7589
msgid ""
"`bpo-22406 <https://bugs.python.org/issue22406>`__: Fixed the uu_codec codec "
"incorrectly ported to 3.x. Based on patch by Martin Panter."
msgstr ""
"`bpo-22406 <https://bugs.python.org/issue22406>`__: Fixed the uu_codec codec "
"incorrectly ported to 3.x. Based on patch by Martin Panter."

#: ../../../Misc/NEWS:7592
msgid ""
"`bpo-17293 <https://bugs.python.org/issue17293>`__: uuid.getnode() now "
"determines MAC address on AIX using netstat. Based on patch by Aivars "
"KalvƒÅns."
msgstr ""
"`bpo-17293 <https://bugs.python.org/issue17293>`__: uuid.getnode() now "
"determines MAC address on AIX using netstat. Based on patch by Aivars "
"KalvƒÅns."

#: ../../../Misc/NEWS:7595
msgid ""
"`bpo-22769 <https://bugs.python.org/issue22769>`__: Fixed ttk.Treeview."
"tag_has() when called without arguments."
msgstr ""
"`bpo-22769 <https://bugs.python.org/issue22769>`__: Fixed ttk.Treeview."
"tag_has() when called without arguments."

#: ../../../Misc/NEWS:7597
msgid ""
"`bpo-22417 <https://bugs.python.org/issue22417>`__: Verify certificates by "
"default in httplib (PEP 476)."
msgstr ""
"`bpo-22417 <https://bugs.python.org/issue22417>`__: Verify certificates by "
"default in httplib (PEP 476)."

#: ../../../Misc/NEWS:7599
msgid ""
"`bpo-22775 <https://bugs.python.org/issue22775>`__: Fixed unpickling of http."
"cookies.SimpleCookie with protocol 2 and above.  Patch by Tim Graham."
msgstr ""
"`bpo-22775 <https://bugs.python.org/issue22775>`__: Fixed unpickling of http."
"cookies.SimpleCookie with protocol 2 and above.  Patch by Tim Graham."

#: ../../../Misc/NEWS:7602
msgid ""
"`bpo-22776 <https://bugs.python.org/issue22776>`__: Brought excluded code "
"into the scope of a try block in SysLogHandler.emit()."
msgstr ""
"`bpo-22776 <https://bugs.python.org/issue22776>`__: Brought excluded code "
"into the scope of a try block in SysLogHandler.emit()."

#: ../../../Misc/NEWS:7605
msgid ""
"`bpo-22665 <https://bugs.python.org/issue22665>`__: Add missing "
"get_terminal_size and SameFileError to shutil.__all__."
msgstr ""
"`bpo-22665 <https://bugs.python.org/issue22665>`__: Add missing "
"get_terminal_size and SameFileError to shutil.__all__."

#: ../../../Misc/NEWS:7608
msgid ""
"`bpo-6623 <https://bugs.python.org/issue6623>`__: Remove deprecated Netrc "
"class in the ftplib module. Patch by Matt Chaput."
msgstr ""
"`bpo-6623 <https://bugs.python.org/issue6623>`__: Remove deprecated Netrc "
"class in the ftplib module. Patch by Matt Chaput."

#: ../../../Misc/NEWS:7611
msgid ""
"`bpo-17381 <https://bugs.python.org/issue17381>`__: Fixed handling of case-"
"insensitive ranges in regular expressions."
msgstr ""
"`bpo-17381 <https://bugs.python.org/issue17381>`__: Fixed handling of case-"
"insensitive ranges in regular expressions."

#: ../../../Misc/NEWS:7614
msgid ""
"`bpo-22410 <https://bugs.python.org/issue22410>`__: Module level functions "
"in the re module now cache compiled locale-dependent regular expressions "
"taking into account the locale."
msgstr ""
"`bpo-22410 <https://bugs.python.org/issue22410>`__: Module level functions "
"in the re module now cache compiled locale-dependent regular expressions "
"taking into account the locale."

#: ../../../Misc/NEWS:7617
msgid ""
"`bpo-22759 <https://bugs.python.org/issue22759>`__: Query methods on pathlib."
"Path() (exists(), is_dir(), etc.) now return False when the underlying stat "
"call raises NotADirectoryError."
msgstr ""
"`bpo-22759 <https://bugs.python.org/issue22759>`__: Query methods on pathlib."
"Path() (exists(), is_dir(), etc.) now return False when the underlying stat "
"call raises NotADirectoryError."

#: ../../../Misc/NEWS:7620
msgid ""
"`bpo-8876 <https://bugs.python.org/issue8876>`__: distutils now falls back "
"to copying files when hard linking doesn't work.  This allows use with "
"special filesystems such as VirtualBox shared folders."
msgstr ""
"`bpo-8876 <https://bugs.python.org/issue8876>`__: distutils now falls back "
"to copying files when hard linking doesn't work.  This allows use with "
"special filesystems such as VirtualBox shared folders."

#: ../../../Misc/NEWS:7624
msgid ""
"`bpo-22217 <https://bugs.python.org/issue22217>`__: Implemented reprs of "
"classes in the zipfile module."
msgstr ""
"`bpo-22217 <https://bugs.python.org/issue22217>`__: Implemented reprs of "
"classes in the zipfile module."

#: ../../../Misc/NEWS:7626
msgid ""
"`bpo-22457 <https://bugs.python.org/issue22457>`__: Honour load_tests in the "
"start_dir of discovery."
msgstr ""
"`bpo-22457 <https://bugs.python.org/issue22457>`__: Honour load_tests in the "
"start_dir of discovery."

#: ../../../Misc/NEWS:7628
msgid ""
"`bpo-18216 <https://bugs.python.org/issue18216>`__: gettext now raises an "
"error when a .mo file has an unsupported major version number.  Patch by "
"Aaron Hill."
msgstr ""
"`bpo-18216 <https://bugs.python.org/issue18216>`__: gettext now raises an "
"error when a .mo file has an unsupported major version number.  Patch by "
"Aaron Hill."

#: ../../../Misc/NEWS:7631
msgid ""
"`bpo-13918 <https://bugs.python.org/issue13918>`__: Provide a locale."
"delocalize() function which can remove locale-specific number formatting "
"from a string representing a number, without then converting it to a "
"specific type.  Patch by C√©dric Krier."
msgstr ""
"`bpo-13918 <https://bugs.python.org/issue13918>`__: Provide a locale."
"delocalize() function which can remove locale-specific number formatting "
"from a string representing a number, without then converting it to a "
"specific type.  Patch by C√©dric Krier."

#: ../../../Misc/NEWS:7635
msgid ""
"`bpo-22676 <https://bugs.python.org/issue22676>`__: Make the pickling of "
"global objects which don't have a __module__ attribute less slow."
msgstr ""
"`bpo-22676 <https://bugs.python.org/issue22676>`__: Make the pickling of "
"global objects which don't have a __module__ attribute less slow."

#: ../../../Misc/NEWS:7638
msgid ""
"`bpo-18853 <https://bugs.python.org/issue18853>`__: Fixed ResourceWarning in "
"shlex.__nain__."
msgstr ""
"`bpo-18853 <https://bugs.python.org/issue18853>`__: Fixed ResourceWarning in "
"shlex.__nain__."

#: ../../../Misc/NEWS:7640
msgid ""
"`bpo-9351 <https://bugs.python.org/issue9351>`__: Defaults set with "
"set_defaults on an argparse subparser are no longer ignored when also set on "
"the parent parser."
msgstr ""
"`bpo-9351 <https://bugs.python.org/issue9351>`__: Defaults set with "
"set_defaults on an argparse subparser are no longer ignored when also set on "
"the parent parser."

#: ../../../Misc/NEWS:7643
msgid ""
"`bpo-7559 <https://bugs.python.org/issue7559>`__: unittest test loading "
"ImportErrors are reported as import errors with their import exception "
"rather than as attribute errors after the import has already failed."
msgstr ""
"`bpo-7559 <https://bugs.python.org/issue7559>`__: unittest test loading "
"ImportErrors are reported as import errors with their import exception "
"rather than as attribute errors after the import has already failed."

#: ../../../Misc/NEWS:7647
msgid ""
"`bpo-19746 <https://bugs.python.org/issue19746>`__: Make it possible to "
"examine the errors from unittest discovery without executing the test suite. "
"The new `errors` attribute on TestLoader exposes these non-fatal errors "
"encountered during discovery."
msgstr ""
"`bpo-19746 <https://bugs.python.org/issue19746>`__: Make it possible to "
"examine the errors from unittest discovery without executing the test suite. "
"The new `errors` attribute on TestLoader exposes these non-fatal errors "
"encountered during discovery."

#: ../../../Misc/NEWS:7651
msgid ""
"`bpo-21991 <https://bugs.python.org/issue21991>`__: Make email."
"headerregistry's header 'params' attributes be read-only "
"(MappingProxyType).  Previously the dictionary was modifiable but a new one "
"was created on each access of the attribute."
msgstr ""
"`bpo-21991 <https://bugs.python.org/issue21991>`__: Make email."
"headerregistry's header 'params' attributes be read-only "
"(MappingProxyType).  Previously the dictionary was modifiable but a new one "
"was created on each access of the attribute."

#: ../../../Misc/NEWS:7655
msgid ""
"`bpo-22638 <https://bugs.python.org/issue22638>`__: SSLv3 is now disabled "
"throughout the standard library. It can still be enabled by instantiating a "
"SSLContext manually."
msgstr ""
"`bpo-22638 <https://bugs.python.org/issue22638>`__: SSLv3 is now disabled "
"throughout the standard library. It can still be enabled by instantiating a "
"SSLContext manually."

#: ../../../Misc/NEWS:7658
msgid ""
"`bpo-22641 <https://bugs.python.org/issue22641>`__: In asyncio, the default "
"SSL context for client connections is now created using ssl."
"create_default_context(), for stronger security."
msgstr ""
"`bpo-22641 <https://bugs.python.org/issue22641>`__: In asyncio, the default "
"SSL context for client connections is now created using ssl."
"create_default_context(), for stronger security."

#: ../../../Misc/NEWS:7661
msgid ""
"`bpo-17401 <https://bugs.python.org/issue17401>`__: Include closefd in io."
"FileIO repr."
msgstr ""
"`bpo-17401 <https://bugs.python.org/issue17401>`__: Include closefd in io."
"FileIO repr."

#: ../../../Misc/NEWS:7663
msgid ""
"`bpo-21338 <https://bugs.python.org/issue21338>`__: Add silent mode for "
"compileall. quiet parameters of compile_{dir, file, path} functions now have "
"a multilevel value. Also, -q option of the CLI now have a multilevel value. "
"Patch by Thomas Kluyver."
msgstr ""
"`bpo-21338 <https://bugs.python.org/issue21338>`__: Add silent mode for "
"compileall. quiet parameters of compile_{dir, file, path} functions now have "
"a multilevel value. Also, -q option of the CLI now have a multilevel value. "
"Patch by Thomas Kluyver."

#: ../../../Misc/NEWS:7667
msgid ""
"`bpo-20152 <https://bugs.python.org/issue20152>`__: Convert the array and "
"cmath modules to Argument Clinic."
msgstr ""
"`bpo-20152 <https://bugs.python.org/issue20152>`__: Convert the array and "
"cmath modules to Argument Clinic."

#: ../../../Misc/NEWS:7669
msgid ""
"`bpo-18643 <https://bugs.python.org/issue18643>`__: Add socket.socketpair() "
"on Windows."
msgstr ""
"`bpo-18643 <https://bugs.python.org/issue18643>`__: Add socket.socketpair() "
"on Windows."

#: ../../../Misc/NEWS:7671
msgid ""
"`bpo-22435 <https://bugs.python.org/issue22435>`__: Fix a file descriptor "
"leak when socketserver bind fails."
msgstr ""
"`bpo-22435 <https://bugs.python.org/issue22435>`__: Fix a file descriptor "
"leak when socketserver bind fails."

#: ../../../Misc/NEWS:7673
msgid ""
"`bpo-13096 <https://bugs.python.org/issue13096>`__: Fixed segfault in CTypes "
"POINTER handling of large values."
msgstr ""
"`bpo-13096 <https://bugs.python.org/issue13096>`__: Fixed segfault in CTypes "
"POINTER handling of large values."

#: ../../../Misc/NEWS:7676
msgid ""
"`bpo-11694 <https://bugs.python.org/issue11694>`__: Raise ConversionError in "
"xdrlib as documented.  Patch by Filip Gruszczy≈Ñski and Claudiu Popa."
msgstr ""
"`bpo-11694 <https://bugs.python.org/issue11694>`__: Raise ConversionError in "
"xdrlib as documented.  Patch by Filip Gruszczy≈Ñski and Claudiu Popa."

#: ../../../Misc/NEWS:7679
msgid ""
"`bpo-19380 <https://bugs.python.org/issue19380>`__: Optimized parsing of "
"regular expressions."
msgstr ""
"`bpo-19380 <https://bugs.python.org/issue19380>`__: Optimized parsing of "
"regular expressions."

#: ../../../Misc/NEWS:7681
msgid ""
"`bpo-1519638 <https://bugs.python.org/issue1519638>`__: Now unmatched groups "
"are replaced with empty strings in re.sub() and re.subn()."
msgstr ""
"`bpo-1519638 <https://bugs.python.org/issue1519638>`__: Now unmatched groups "
"are replaced with empty strings in re.sub() and re.subn()."

#: ../../../Misc/NEWS:7684
msgid ""
"`bpo-18615 <https://bugs.python.org/issue18615>`__: sndhdr.what/whathdr now "
"return a namedtuple."
msgstr ""
"`bpo-18615 <https://bugs.python.org/issue18615>`__: sndhdr.what/whathdr now "
"return a namedtuple."

#: ../../../Misc/NEWS:7686
msgid ""
"`bpo-22462 <https://bugs.python.org/issue22462>`__: Fix pyexpat's creation "
"of a dummy frame to make it appear in exception tracebacks."
msgstr ""
"`bpo-22462 <https://bugs.python.org/issue22462>`__: Fix pyexpat's creation "
"of a dummy frame to make it appear in exception tracebacks."

#: ../../../Misc/NEWS:7689
msgid ""
"`bpo-21965 <https://bugs.python.org/issue21965>`__: Add support for in-"
"memory SSL to the ssl module.  Patch by Geert Jansen."
msgstr ""
"`bpo-21965 <https://bugs.python.org/issue21965>`__: Add support for in-"
"memory SSL to the ssl module.  Patch by Geert Jansen."

#: ../../../Misc/NEWS:7692
msgid ""
"`bpo-21173 <https://bugs.python.org/issue21173>`__: Fix len() on a "
"WeakKeyDictionary when .clear() was called with an iterator alive."
msgstr ""
"`bpo-21173 <https://bugs.python.org/issue21173>`__: Fix len() on a "
"WeakKeyDictionary when .clear() was called with an iterator alive."

#: ../../../Misc/NEWS:7695
msgid ""
"`bpo-11866 <https://bugs.python.org/issue11866>`__: Eliminated race "
"condition in the computation of names for new threads."
msgstr ""
"`bpo-11866 <https://bugs.python.org/issue11866>`__: Eliminated race "
"condition in the computation of names for new threads."

#: ../../../Misc/NEWS:7698
msgid ""
"`bpo-21905 <https://bugs.python.org/issue21905>`__: Avoid RuntimeError in "
"pickle.whichmodule() when sys.modules is mutated while iterating.  Patch by "
"Olivier Grisel."
msgstr ""
"`bpo-21905 <https://bugs.python.org/issue21905>`__: Avoid RuntimeError in "
"pickle.whichmodule() when sys.modules is mutated while iterating.  Patch by "
"Olivier Grisel."

#: ../../../Misc/NEWS:7701
msgid ""
"`bpo-11271 <https://bugs.python.org/issue11271>`__: concurrent.futures."
"Executor.map() now takes a *chunksize* argument to allow batching of tasks "
"in child processes and improve performance of ProcessPoolExecutor.  Patch by "
"Dan O'Reilly."
msgstr ""
"`bpo-11271 <https://bugs.python.org/issue11271>`__: concurrent.futures."
"Executor.map() now takes a *chunksize* argument to allow batching of tasks "
"in child processes and improve performance of ProcessPoolExecutor.  Patch by "
"Dan O'Reilly."

#: ../../../Misc/NEWS:7705
msgid ""
"`bpo-21883 <https://bugs.python.org/issue21883>`__: os.path.join() and os."
"path.relpath() now raise a TypeError with more helpful error message for "
"unsupported or mismatched types of arguments."
msgstr ""
"`bpo-21883 <https://bugs.python.org/issue21883>`__: os.path.join() and os."
"path.relpath() now raise a TypeError with more helpful error message for "
"unsupported or mismatched types of arguments."

#: ../../../Misc/NEWS:7708
msgid ""
"`bpo-22219 <https://bugs.python.org/issue22219>`__: The zipfile module CLI "
"now adds entries for directories (including empty directories) in ZIP file."
msgstr ""
"`bpo-22219 <https://bugs.python.org/issue22219>`__: The zipfile module CLI "
"now adds entries for directories (including empty directories) in ZIP file."

#: ../../../Misc/NEWS:7711
msgid ""
"`bpo-22449 <https://bugs.python.org/issue22449>`__: In the ssl.SSLContext."
"load_default_certs, consult the environmental variables SSL_CERT_DIR and "
"SSL_CERT_FILE on Windows."
msgstr ""
"`bpo-22449 <https://bugs.python.org/issue22449>`__: In the ssl.SSLContext."
"load_default_certs, consult the environmental variables SSL_CERT_DIR and "
"SSL_CERT_FILE on Windows."

#: ../../../Misc/NEWS:7714
msgid ""
"`bpo-22508 <https://bugs.python.org/issue22508>`__: The email.__version__ "
"variable has been removed; the email code is no longer shipped separately "
"from the stdlib, and __version__ hasn't been updated in several releases."
msgstr ""
"`bpo-22508 <https://bugs.python.org/issue22508>`__: The email.__version__ "
"variable has been removed; the email code is no longer shipped separately "
"from the stdlib, and __version__ hasn't been updated in several releases."

#: ../../../Misc/NEWS:7718
msgid ""
"`bpo-20076 <https://bugs.python.org/issue20076>`__: Added non derived UTF-8 "
"aliases to locale aliases table."
msgstr ""
"`bpo-20076 <https://bugs.python.org/issue20076>`__: Added non derived UTF-8 "
"aliases to locale aliases table."

#: ../../../Misc/NEWS:7720
msgid ""
"`bpo-20079 <https://bugs.python.org/issue20079>`__: Added locales supported "
"in glibc 2.18 to locale alias table."
msgstr ""
"`bpo-20079 <https://bugs.python.org/issue20079>`__: Added locales supported "
"in glibc 2.18 to locale alias table."

#: ../../../Misc/NEWS:7722
msgid ""
"`bpo-20218 <https://bugs.python.org/issue20218>`__: Added convenience "
"methods read_text/write_text and read_bytes/ write_bytes to pathlib.Path "
"objects."
msgstr ""
"`bpo-20218 <https://bugs.python.org/issue20218>`__: Added convenience "
"methods read_text/write_text and read_bytes/ write_bytes to pathlib.Path "
"objects."

#: ../../../Misc/NEWS:7725
msgid ""
"`bpo-22396 <https://bugs.python.org/issue22396>`__: On 32-bit AIX platform, "
"don't expose os.posix_fadvise() nor os.posix_fallocate() because their "
"prototypes in system headers are wrong."
msgstr ""
"`bpo-22396 <https://bugs.python.org/issue22396>`__: On 32-bit AIX platform, "
"don't expose os.posix_fadvise() nor os.posix_fallocate() because their "
"prototypes in system headers are wrong."

#: ../../../Misc/NEWS:7728
msgid ""
"`bpo-22517 <https://bugs.python.org/issue22517>`__: When an io."
"BufferedRWPair object is deallocated, clear its weakrefs."
msgstr ""
"`bpo-22517 <https://bugs.python.org/issue22517>`__: When an io."
"BufferedRWPair object is deallocated, clear its weakrefs."

#: ../../../Misc/NEWS:7731
msgid ""
"`bpo-22437 <https://bugs.python.org/issue22437>`__: Number of capturing "
"groups in regular expression is no longer limited by 100."
msgstr ""
"`bpo-22437 <https://bugs.python.org/issue22437>`__: Number of capturing "
"groups in regular expression is no longer limited by 100."

#: ../../../Misc/NEWS:7734
msgid ""
"`bpo-17442 <https://bugs.python.org/issue17442>`__: InteractiveInterpreter "
"now displays the full chained traceback in its showtraceback method, to "
"match the built in interactive interpreter."
msgstr ""
"`bpo-17442 <https://bugs.python.org/issue17442>`__: InteractiveInterpreter "
"now displays the full chained traceback in its showtraceback method, to "
"match the built in interactive interpreter."

#: ../../../Misc/NEWS:7737
msgid ""
"`bpo-23392 <https://bugs.python.org/issue23392>`__: Added tests for marshal "
"C API that works with FILE*."
msgstr ""
"`bpo-23392 <https://bugs.python.org/issue23392>`__: Added tests for marshal "
"C API that works with FILE*."

#: ../../../Misc/NEWS:7740
msgid ""
"`bpo-10510 <https://bugs.python.org/issue10510>`__: distutils register and "
"upload methods now use HTML standards compliant CRLF line endings."
msgstr ""
"`bpo-10510 <https://bugs.python.org/issue10510>`__: distutils register and "
"upload methods now use HTML standards compliant CRLF line endings."

#: ../../../Misc/NEWS:7743
msgid ""
"`bpo-9850 <https://bugs.python.org/issue9850>`__: Fixed macpath.join() for "
"empty first component.  Patch by Oleg Oshmyan."
msgstr ""
"`bpo-9850 <https://bugs.python.org/issue9850>`__: Fixed macpath.join() for "
"empty first component.  Patch by Oleg Oshmyan."

#: ../../../Misc/NEWS:7746
msgid ""
"`bpo-5309 <https://bugs.python.org/issue5309>`__: distutils' build and "
"build_ext commands now accept a ``-j`` option to enable parallel building of "
"extension modules."
msgstr ""
"`bpo-5309 <https://bugs.python.org/issue5309>`__: distutils' build and "
"build_ext commands now accept a ``-j`` option to enable parallel building of "
"extension modules."

#: ../../../Misc/NEWS:7749
msgid ""
"`bpo-22448 <https://bugs.python.org/issue22448>`__: Improve canceled timer "
"handles cleanup to prevent unbound memory usage. Patch by Joshua Moore-Oliva."
msgstr ""
"`bpo-22448 <https://bugs.python.org/issue22448>`__: Improve canceled timer "
"handles cleanup to prevent unbound memory usage. Patch by Joshua Moore-Oliva."

#: ../../../Misc/NEWS:7752
msgid ""
"`bpo-22427 <https://bugs.python.org/issue22427>`__: TemporaryDirectory no "
"longer attempts to clean up twice when used in the with statement in "
"generator."
msgstr ""
"`bpo-22427 <https://bugs.python.org/issue22427>`__: TemporaryDirectory no "
"longer attempts to clean up twice when used in the with statement in "
"generator."

#: ../../../Misc/NEWS:7755
msgid ""
"`bpo-22362 <https://bugs.python.org/issue22362>`__: Forbidden ambiguous "
"octal escapes out of range 0-0o377 in regular expressions."
msgstr ""
"`bpo-22362 <https://bugs.python.org/issue22362>`__: Forbidden ambiguous "
"octal escapes out of range 0-0o377 in regular expressions."

#: ../../../Misc/NEWS:7758
msgid ""
"`bpo-20912 <https://bugs.python.org/issue20912>`__: Now directories added to "
"ZIP file have correct Unix and MS-DOS directory attributes."
msgstr ""
"`bpo-20912 <https://bugs.python.org/issue20912>`__: Now directories added to "
"ZIP file have correct Unix and MS-DOS directory attributes."

#: ../../../Misc/NEWS:7761
msgid ""
"`bpo-21866 <https://bugs.python.org/issue21866>`__: ZipFile.close() no "
"longer writes ZIP64 central directory records if allowZip64 is false."
msgstr ""
"`bpo-21866 <https://bugs.python.org/issue21866>`__: ZipFile.close() no "
"longer writes ZIP64 central directory records if allowZip64 is false."

#: ../../../Misc/NEWS:7764
msgid ""
"`bpo-22278 <https://bugs.python.org/issue22278>`__: Fix urljoin problem with "
"relative urls, a regression observed after changes to issue22118 were "
"submitted."
msgstr ""
"`bpo-22278 <https://bugs.python.org/issue22278>`__: Fix urljoin problem with "
"relative urls, a regression observed after changes to issue22118 were "
"submitted."

#: ../../../Misc/NEWS:7767
msgid ""
"`bpo-22415 <https://bugs.python.org/issue22415>`__: Fixed debugging output "
"of the GROUPREF_EXISTS opcode in the re module.  Removed trailing spaces in "
"debugging output."
msgstr ""
"`bpo-22415 <https://bugs.python.org/issue22415>`__: Fixed debugging output "
"of the GROUPREF_EXISTS opcode in the re module.  Removed trailing spaces in "
"debugging output."

#: ../../../Misc/NEWS:7770
msgid ""
"`bpo-22423 <https://bugs.python.org/issue22423>`__: Unhandled exception in "
"thread no longer causes unhandled AttributeError when sys.stderr is None."
msgstr ""
"`bpo-22423 <https://bugs.python.org/issue22423>`__: Unhandled exception in "
"thread no longer causes unhandled AttributeError when sys.stderr is None."

#: ../../../Misc/NEWS:7773
msgid ""
"`bpo-21332 <https://bugs.python.org/issue21332>`__: Ensure that "
"``bufsize=1`` in subprocess.Popen() selects line buffering, rather than "
"block buffering.  Patch by Akira Li."
msgstr ""
"`bpo-21332 <https://bugs.python.org/issue21332>`__: Ensure that "
"``bufsize=1`` in subprocess.Popen() selects line buffering, rather than "
"block buffering.  Patch by Akira Li."

#: ../../../Misc/NEWS:7776
msgid ""
"`bpo-21091 <https://bugs.python.org/issue21091>`__: Fix API bug: email."
"message.EmailMessage.is_attachment is now a method."
msgstr ""
"`bpo-21091 <https://bugs.python.org/issue21091>`__: Fix API bug: email."
"message.EmailMessage.is_attachment is now a method."

#: ../../../Misc/NEWS:7779
msgid ""
"`bpo-21079 <https://bugs.python.org/issue21079>`__: Fix email.message."
"EmailMessage.is_attachment to return the correct result when the header has "
"parameters as well as a value."
msgstr ""
"`bpo-21079 <https://bugs.python.org/issue21079>`__: Fix email.message."
"EmailMessage.is_attachment to return the correct result when the header has "
"parameters as well as a value."

#: ../../../Misc/NEWS:7782
msgid ""
"`bpo-22247 <https://bugs.python.org/issue22247>`__: Add NNTPError to nntplib."
"__all__."
msgstr ""
"`bpo-22247 <https://bugs.python.org/issue22247>`__: Add NNTPError to nntplib."
"__all__."

#: ../../../Misc/NEWS:7784
msgid ""
"`bpo-22366 <https://bugs.python.org/issue22366>`__: urllib.request.urlopen "
"will accept a context object (SSLContext) as an argument which will then be "
"used for HTTPS connection. Patch by Alex Gaynor."
msgstr ""
"`bpo-22366 <https://bugs.python.org/issue22366>`__: urllib.request.urlopen "
"will accept a context object (SSLContext) as an argument which will then be "
"used for HTTPS connection. Patch by Alex Gaynor."

#: ../../../Misc/NEWS:7788
msgid ""
"`bpo-4180 <https://bugs.python.org/issue4180>`__: The warnings registries "
"are now reset when the filters are modified."
msgstr ""
"`bpo-4180 <https://bugs.python.org/issue4180>`__: The warnings registries "
"are now reset when the filters are modified."

#: ../../../Misc/NEWS:7791
msgid ""
"`bpo-22419 <https://bugs.python.org/issue22419>`__: Limit the length of "
"incoming HTTP request in wsgiref server to 65536 bytes and send a 414 error "
"code for higher lengths. Patch contributed by Devin Cook."
msgstr ""
"`bpo-22419 <https://bugs.python.org/issue22419>`__: Limit the length of "
"incoming HTTP request in wsgiref server to 65536 bytes and send a 414 error "
"code for higher lengths. Patch contributed by Devin Cook."

#: ../../../Misc/NEWS:7795
msgid ""
"Lax cookie parsing in http.cookies could be a security issue when combined "
"with non-standard cookie handling in some Web browsers.  Reported by Sergey "
"Bobrov."
msgstr ""

#: ../../../Misc/NEWS:7799
msgid ""
"`bpo-20537 <https://bugs.python.org/issue20537>`__: logging methods now "
"accept an exception instance as well as a Boolean value or exception tuple. "
"Thanks to Yury Selivanov for the patch."
msgstr ""
"`bpo-20537 <https://bugs.python.org/issue20537>`__: logging methods now "
"accept an exception instance as well as a Boolean value or exception tuple. "
"Thanks to Yury Selivanov for the patch."

#: ../../../Misc/NEWS:7802
msgid ""
"`bpo-22384 <https://bugs.python.org/issue22384>`__: An exception in Tkinter "
"callback no longer crashes the program when it is run with pythonw.exe."
msgstr ""
"`bpo-22384 <https://bugs.python.org/issue22384>`__: An exception in Tkinter "
"callback no longer crashes the program when it is run with pythonw.exe."

#: ../../../Misc/NEWS:7805
msgid ""
"`bpo-22168 <https://bugs.python.org/issue22168>`__: Prevent turtle "
"AttributeError with non-default Canvas on OS X."
msgstr ""
"`bpo-22168 <https://bugs.python.org/issue22168>`__: Prevent turtle "
"AttributeError with non-default Canvas on OS X."

#: ../../../Misc/NEWS:7807
msgid ""
"`bpo-21147 <https://bugs.python.org/issue21147>`__: sqlite3 now raises an "
"exception if the request contains a null character instead of truncating "
"it.  Based on patch by Victor Stinner."
msgstr ""
"`bpo-21147 <https://bugs.python.org/issue21147>`__: sqlite3 now raises an "
"exception if the request contains a null character instead of truncating "
"it.  Based on patch by Victor Stinner."

#: ../../../Misc/NEWS:7810
msgid ""
"`bpo-13968 <https://bugs.python.org/issue13968>`__: The glob module now "
"supports recursive search in subdirectories using the ``**`` pattern."
msgstr ""
"`bpo-13968 <https://bugs.python.org/issue13968>`__: The glob module now "
"supports recursive search in subdirectories using the ``**`` pattern."

#: ../../../Misc/NEWS:7813
msgid ""
"`bpo-21951 <https://bugs.python.org/issue21951>`__: Fixed a crash in Tkinter "
"on AIX when called Tcl command with empty string or tuple argument."
msgstr ""
"`bpo-21951 <https://bugs.python.org/issue21951>`__: Fixed a crash in Tkinter "
"on AIX when called Tcl command with empty string or tuple argument."

#: ../../../Misc/NEWS:7816
msgid ""
"`bpo-21951 <https://bugs.python.org/issue21951>`__: Tkinter now most likely "
"raises MemoryError instead of crash if the memory allocation fails."
msgstr ""
"`bpo-21951 <https://bugs.python.org/issue21951>`__: Tkinter now most likely "
"raises MemoryError instead of crash if the memory allocation fails."

#: ../../../Misc/NEWS:7819
msgid ""
"`bpo-22338 <https://bugs.python.org/issue22338>`__: Fix a crash in the json "
"module on memory allocation failure."
msgstr ""
"`bpo-22338 <https://bugs.python.org/issue22338>`__: Fix a crash in the json "
"module on memory allocation failure."

#: ../../../Misc/NEWS:7821
msgid ""
"`bpo-12410 <https://bugs.python.org/issue12410>`__: imaplib.IMAP4 now "
"supports the context management protocol. Original patch by Tarek Ziad√©."
msgstr ""
"`bpo-12410 <https://bugs.python.org/issue12410>`__: imaplib.IMAP4 now "
"supports the context management protocol. Original patch by Tarek Ziad√©."

#: ../../../Misc/NEWS:7824
msgid ""
"`bpo-21270 <https://bugs.python.org/issue21270>`__: We now override tuple "
"methods in mock.call objects so that they can be used as normal call "
"attributes."
msgstr ""
"`bpo-21270 <https://bugs.python.org/issue21270>`__: We now override tuple "
"methods in mock.call objects so that they can be used as normal call "
"attributes."

#: ../../../Misc/NEWS:7827
msgid ""
"`bpo-16662 <https://bugs.python.org/issue16662>`__: load_tests() is now "
"unconditionally run when it is present in a package's __init__.py.  "
"TestLoader.loadTestsFromModule() still accepts use_load_tests, but it is "
"deprecated and ignored.  A new keyword-only attribute `pattern` is added and "
"documented.  Patch given by Robert Collins, tweaked by Barry Warsaw."
msgstr ""
"`bpo-16662 <https://bugs.python.org/issue16662>`__: load_tests() is now "
"unconditionally run when it is present in a package's __init__.py.  "
"TestLoader.loadTestsFromModule() still accepts use_load_tests, but it is "
"deprecated and ignored.  A new keyword-only attribute `pattern` is added and "
"documented.  Patch given by Robert Collins, tweaked by Barry Warsaw."

#: ../../../Misc/NEWS:7833
msgid ""
"`bpo-22226 <https://bugs.python.org/issue22226>`__: First letter no longer "
"is stripped from the \"status\" key in the result of Treeview.heading()."
msgstr ""
"`bpo-22226 <https://bugs.python.org/issue22226>`__: First letter no longer "
"is stripped from the \"status\" key in the result of Treeview.heading()."

#: ../../../Misc/NEWS:7836
msgid ""
"`bpo-19524 <https://bugs.python.org/issue19524>`__: Fixed resource leak in "
"the HTTP connection when an invalid response is received.  Patch by Martin "
"Panter."
msgstr ""
"`bpo-19524 <https://bugs.python.org/issue19524>`__: Fixed resource leak in "
"the HTTP connection when an invalid response is received.  Patch by Martin "
"Panter."

#: ../../../Misc/NEWS:7839
msgid ""
"`bpo-20421 <https://bugs.python.org/issue20421>`__: Add a .version() method "
"to SSL sockets exposing the actual protocol version in use."
msgstr ""
"`bpo-20421 <https://bugs.python.org/issue20421>`__: Add a .version() method "
"to SSL sockets exposing the actual protocol version in use."

#: ../../../Misc/NEWS:7842
msgid ""
"`bpo-19546 <https://bugs.python.org/issue19546>`__: configparser exceptions "
"no longer expose implementation details. Chained KeyErrors are removed, "
"which leads to cleaner tracebacks.  Patch by Claudiu Popa."
msgstr ""
"`bpo-19546 <https://bugs.python.org/issue19546>`__: configparser exceptions "
"no longer expose implementation details. Chained KeyErrors are removed, "
"which leads to cleaner tracebacks.  Patch by Claudiu Popa."

#: ../../../Misc/NEWS:7846
msgid ""
"`bpo-22051 <https://bugs.python.org/issue22051>`__: turtledemo no longer "
"reloads examples to re-run them. Initialization of variables and gui setup "
"should be done in main(), which is called each time a demo is run, but not "
"on import."
msgstr ""
"`bpo-22051 <https://bugs.python.org/issue22051>`__: turtledemo no longer "
"reloads examples to re-run them. Initialization of variables and gui setup "
"should be done in main(), which is called each time a demo is run, but not "
"on import."

#: ../../../Misc/NEWS:7850
msgid ""
"`bpo-21933 <https://bugs.python.org/issue21933>`__: Turtledemo users can "
"change the code font size with a menu selection or control(command) '-' or "
"'+' or control-mousewheel. Original patch by Lita Cho."
msgstr ""
"`bpo-21933 <https://bugs.python.org/issue21933>`__: Turtledemo users can "
"change the code font size with a menu selection or control(command) '-' or "
"'+' or control-mousewheel. Original patch by Lita Cho."

#: ../../../Misc/NEWS:7854
msgid ""
"`bpo-21597 <https://bugs.python.org/issue21597>`__: The separator between "
"the turtledemo text pane and the drawing canvas can now be grabbed and "
"dragged with a mouse.  The code text pane can be widened to easily view or "
"copy the full width of the text.  The canvas can be widened on small "
"screens.  Original patches by Jan Kanis and Lita Cho."
msgstr ""
"`bpo-21597 <https://bugs.python.org/issue21597>`__: The separator between "
"the turtledemo text pane and the drawing canvas can now be grabbed and "
"dragged with a mouse.  The code text pane can be widened to easily view or "
"copy the full width of the text.  The canvas can be widened on small "
"screens.  Original patches by Jan Kanis and Lita Cho."

#: ../../../Misc/NEWS:7859
msgid ""
"`bpo-18132 <https://bugs.python.org/issue18132>`__: Turtledemo buttons no "
"longer disappear when the window is shrunk.  Original patches by Jan Kanis "
"and Lita Cho."
msgstr ""
"`bpo-18132 <https://bugs.python.org/issue18132>`__: Turtledemo buttons no "
"longer disappear when the window is shrunk.  Original patches by Jan Kanis "
"and Lita Cho."

#: ../../../Misc/NEWS:7862
msgid ""
"`bpo-22043 <https://bugs.python.org/issue22043>`__: time.monotonic() is now "
"always available. ``threading.Lock.acquire()``, ``threading.RLock."
"acquire()`` and socket operations now use a monotonic clock, instead of the "
"system clock, when a timeout is used."
msgstr ""
"`bpo-22043 <https://bugs.python.org/issue22043>`__: time.monotonic() is now "
"always available. ``threading.Lock.acquire()``, ``threading.RLock."
"acquire()`` and socket operations now use a monotonic clock, instead of the "
"system clock, when a timeout is used."

#: ../../../Misc/NEWS:7867
msgid ""
"`bpo-21527 <https://bugs.python.org/issue21527>`__: Add a default number of "
"workers to ThreadPoolExecutor equal to 5 times the number of CPUs.  Patch by "
"Claudiu Popa."
msgstr ""
"`bpo-21527 <https://bugs.python.org/issue21527>`__: Add a default number of "
"workers to ThreadPoolExecutor equal to 5 times the number of CPUs.  Patch by "
"Claudiu Popa."

#: ../../../Misc/NEWS:7870
msgid ""
"`bpo-22216 <https://bugs.python.org/issue22216>`__: smtplib now resets its "
"state more completely after a quit.  The most obvious consequence of the "
"previous behavior was a STARTTLS failure during a connect/starttls/quit/"
"connect/starttls sequence."
msgstr ""
"`bpo-22216 <https://bugs.python.org/issue22216>`__: smtplib now resets its "
"state more completely after a quit.  The most obvious consequence of the "
"previous behavior was a STARTTLS failure during a connect/starttls/quit/"
"connect/starttls sequence."

#: ../../../Misc/NEWS:7874
msgid ""
"`bpo-22098 <https://bugs.python.org/issue22098>`__: ctypes' "
"BigEndianStructure and LittleEndianStructure now define an empty __slots__ "
"so that subclasses don't always get an instance dict.  Patch by Claudiu Popa."
msgstr ""
"`bpo-22098 <https://bugs.python.org/issue22098>`__: ctypes' "
"BigEndianStructure and LittleEndianStructure now define an empty __slots__ "
"so that subclasses don't always get an instance dict.  Patch by Claudiu Popa."

#: ../../../Misc/NEWS:7878
msgid ""
"`bpo-22185 <https://bugs.python.org/issue22185>`__: Fix an occasional "
"RuntimeError in threading.Condition.wait() caused by mutation of the waiters "
"queue without holding the lock.  Patch by Doug Zongker."
msgstr ""
"`bpo-22185 <https://bugs.python.org/issue22185>`__: Fix an occasional "
"RuntimeError in threading.Condition.wait() caused by mutation of the waiters "
"queue without holding the lock.  Patch by Doug Zongker."

#: ../../../Misc/NEWS:7882
msgid ""
"`bpo-22287 <https://bugs.python.org/issue22287>`__: On UNIX, "
"_PyTime_gettimeofday() now uses clock_gettime(CLOCK_REALTIME) if available. "
"As a side effect, Python now depends on the librt library on Solaris and on "
"Linux (only with glibc older than 2.17)."
msgstr ""
"`bpo-22287 <https://bugs.python.org/issue22287>`__: On UNIX, "
"_PyTime_gettimeofday() now uses clock_gettime(CLOCK_REALTIME) if available. "
"As a side effect, Python now depends on the librt library on Solaris and on "
"Linux (only with glibc older than 2.17)."

#: ../../../Misc/NEWS:7887
msgid ""
"`bpo-22182 <https://bugs.python.org/issue22182>`__: Use e.args to unpack "
"exceptions correctly in distutils.file_util.move_file. Patch by Claudiu Popa."
msgstr ""
"`bpo-22182 <https://bugs.python.org/issue22182>`__: Use e.args to unpack "
"exceptions correctly in distutils.file_util.move_file. Patch by Claudiu Popa."

#: ../../../Misc/NEWS:7890
msgid ""
"The webbrowser module now uses subprocess's start_new_session=True rather "
"than a potentially risky preexec_fn=os.setsid call."
msgstr ""

#: ../../../Misc/NEWS:7893
msgid ""
"`bpo-22042 <https://bugs.python.org/issue22042>`__: signal.set_wakeup_fd(fd) "
"now raises an exception if the file descriptor is in blocking mode."
msgstr ""
"`bpo-22042 <https://bugs.python.org/issue22042>`__: signal.set_wakeup_fd(fd) "
"now raises an exception if the file descriptor is in blocking mode."

#: ../../../Misc/NEWS:7896
msgid ""
"`bpo-16808 <https://bugs.python.org/issue16808>`__: inspect.stack() now "
"returns a named tuple instead of a tuple. Patch by Daniel Shahaf."
msgstr ""
"`bpo-16808 <https://bugs.python.org/issue16808>`__: inspect.stack() now "
"returns a named tuple instead of a tuple. Patch by Daniel Shahaf."

#: ../../../Misc/NEWS:7899
msgid ""
"`bpo-22236 <https://bugs.python.org/issue22236>`__: Fixed Tkinter images "
"copying operations in NoDefaultRoot mode."
msgstr ""
"`bpo-22236 <https://bugs.python.org/issue22236>`__: Fixed Tkinter images "
"copying operations in NoDefaultRoot mode."

#: ../../../Misc/NEWS:7901
msgid ""
"`bpo-2527 <https://bugs.python.org/issue2527>`__: Add a *globals* argument "
"to timeit functions, in order to override the globals namespace in which the "
"timed code is executed. Patch by Ben Roberts."
msgstr ""
"`bpo-2527 <https://bugs.python.org/issue2527>`__: Add a *globals* argument "
"to timeit functions, in order to override the globals namespace in which the "
"timed code is executed. Patch by Ben Roberts."

#: ../../../Misc/NEWS:7905
msgid ""
"`bpo-22118 <https://bugs.python.org/issue22118>`__: Switch urllib.parse to "
"use RFC 3986 semantics for the resolution of relative URLs, rather than RFCs "
"1808 and 2396. Patch by Demian Brecht."
msgstr ""
"`bpo-22118 <https://bugs.python.org/issue22118>`__: Switch urllib.parse to "
"use RFC 3986 semantics for the resolution of relative URLs, rather than RFCs "
"1808 and 2396. Patch by Demian Brecht."

#: ../../../Misc/NEWS:7909
msgid ""
"`bpo-21549 <https://bugs.python.org/issue21549>`__: Added the \"members\" "
"parameter to TarFile.list()."
msgstr ""
"`bpo-21549 <https://bugs.python.org/issue21549>`__: Added the \"members\" "
"parameter to TarFile.list()."

#: ../../../Misc/NEWS:7911
msgid ""
"`bpo-19628 <https://bugs.python.org/issue19628>`__: Allow compileall "
"recursion depth to be specified with a -r option."
msgstr ""
"`bpo-19628 <https://bugs.python.org/issue19628>`__: Allow compileall "
"recursion depth to be specified with a -r option."

#: ../../../Misc/NEWS:7914
msgid ""
"`bpo-15696 <https://bugs.python.org/issue15696>`__: Add a __sizeof__ "
"implementation for mmap objects on Windows."
msgstr ""
"`bpo-15696 <https://bugs.python.org/issue15696>`__: Add a __sizeof__ "
"implementation for mmap objects on Windows."

#: ../../../Misc/NEWS:7916
msgid ""
"`bpo-22068 <https://bugs.python.org/issue22068>`__: Avoided reference loops "
"with Variables and Fonts in Tkinter."
msgstr ""
"`bpo-22068 <https://bugs.python.org/issue22068>`__: Avoided reference loops "
"with Variables and Fonts in Tkinter."

#: ../../../Misc/NEWS:7918
msgid ""
"`bpo-22165 <https://bugs.python.org/issue22165>`__: SimpleHTTPRequestHandler "
"now supports undecodable file names."
msgstr ""
"`bpo-22165 <https://bugs.python.org/issue22165>`__: SimpleHTTPRequestHandler "
"now supports undecodable file names."

#: ../../../Misc/NEWS:7920
msgid ""
"`bpo-15381 <https://bugs.python.org/issue15381>`__: Optimized line reading "
"in io.BytesIO."
msgstr ""
"`bpo-15381 <https://bugs.python.org/issue15381>`__: Optimized line reading "
"in io.BytesIO."

#: ../../../Misc/NEWS:7922
msgid ""
"`bpo-8797 <https://bugs.python.org/issue8797>`__: Raise HTTPError on failed "
"Basic Authentication immediately. Initial patch by Sam Bull."
msgstr ""
"`bpo-8797 <https://bugs.python.org/issue8797>`__: Raise HTTPError on failed "
"Basic Authentication immediately. Initial patch by Sam Bull."

#: ../../../Misc/NEWS:7925
msgid ""
"`bpo-20729 <https://bugs.python.org/issue20729>`__: Restored the use of lazy "
"iterkeys()/itervalues()/iteritems() in the mailbox module."
msgstr ""
"`bpo-20729 <https://bugs.python.org/issue20729>`__: Restored the use of lazy "
"iterkeys()/itervalues()/iteritems() in the mailbox module."

#: ../../../Misc/NEWS:7928
msgid ""
"`bpo-21448 <https://bugs.python.org/issue21448>`__: Changed FeedParser "
"feed() to avoid O(N**2) behavior when parsing long line.  Original patch by "
"Raymond Hettinger."
msgstr ""
"`bpo-21448 <https://bugs.python.org/issue21448>`__: Changed FeedParser "
"feed() to avoid O(N**2) behavior when parsing long line.  Original patch by "
"Raymond Hettinger."

#: ../../../Misc/NEWS:7931
msgid ""
"`bpo-22184 <https://bugs.python.org/issue22184>`__: The functools LRU Cache "
"decorator factory now gives an earlier and clearer error message when the "
"user forgets the required parameters."
msgstr ""
"`bpo-22184 <https://bugs.python.org/issue22184>`__: The functools LRU Cache "
"decorator factory now gives an earlier and clearer error message when the "
"user forgets the required parameters."

#: ../../../Misc/NEWS:7934
msgid ""
"`bpo-17923 <https://bugs.python.org/issue17923>`__: glob() patterns ending "
"with a slash no longer match non-dirs on AIX.  Based on patch by Delhallt."
msgstr ""
"`bpo-17923 <https://bugs.python.org/issue17923>`__: glob() patterns ending "
"with a slash no longer match non-dirs on AIX.  Based on patch by Delhallt."

#: ../../../Misc/NEWS:7937
msgid ""
"`bpo-21725 <https://bugs.python.org/issue21725>`__: Added support for RFC "
"6531 (SMTPUTF8) in smtpd."
msgstr ""
"`bpo-21725 <https://bugs.python.org/issue21725>`__: Added support for RFC "
"6531 (SMTPUTF8) in smtpd."

#: ../../../Misc/NEWS:7939
msgid ""
"`bpo-22176 <https://bugs.python.org/issue22176>`__: Update the ctypes "
"module's libffi to v3.1.  This release adds support for the Linux AArch64 "
"and POWERPC ELF ABIv2 little endian architectures."
msgstr ""
"`bpo-22176 <https://bugs.python.org/issue22176>`__: Update the ctypes "
"module's libffi to v3.1.  This release adds support for the Linux AArch64 "
"and POWERPC ELF ABIv2 little endian architectures."

#: ../../../Misc/NEWS:7943
msgid ""
"`bpo-5411 <https://bugs.python.org/issue5411>`__: Added support for the "
"\"xztar\" format in the shutil module."
msgstr ""
"`bpo-5411 <https://bugs.python.org/issue5411>`__: Added support for the "
"\"xztar\" format in the shutil module."

#: ../../../Misc/NEWS:7945
msgid ""
"`bpo-21121 <https://bugs.python.org/issue21121>`__: Don't force 3rd party C "
"extensions to be built with -Werror=declaration-after-statement."
msgstr ""
"`bpo-21121 <https://bugs.python.org/issue21121>`__: Don't force 3rd party C "
"extensions to be built with -Werror=declaration-after-statement."

#: ../../../Misc/NEWS:7948
msgid ""
"`bpo-21975 <https://bugs.python.org/issue21975>`__: Fixed crash when using "
"uninitialized sqlite3.Row (in particular when unpickling pickled sqlite3."
"Row).  sqlite3.Row is now initialized in the __new__() method."
msgstr ""
"`bpo-21975 <https://bugs.python.org/issue21975>`__: Fixed crash when using "
"uninitialized sqlite3.Row (in particular when unpickling pickled sqlite3."
"Row).  sqlite3.Row is now initialized in the __new__() method."

#: ../../../Misc/NEWS:7952
msgid ""
"`bpo-20170 <https://bugs.python.org/issue20170>`__: Convert posixmodule to "
"use Argument Clinic."
msgstr ""
"`bpo-20170 <https://bugs.python.org/issue20170>`__: Convert posixmodule to "
"use Argument Clinic."

#: ../../../Misc/NEWS:7954
msgid ""
"`bpo-21539 <https://bugs.python.org/issue21539>`__: Add an *exists_ok* "
"argument to `Pathlib.mkdir()` to mimic `mkdir -p` and `os.makedirs()` "
"functionality.  When true, ignore FileExistsErrors.  Patch by Berker Peksag."
msgstr ""
"`bpo-21539 <https://bugs.python.org/issue21539>`__: Add an *exists_ok* "
"argument to `Pathlib.mkdir()` to mimic `mkdir -p` and `os.makedirs()` "
"functionality.  When true, ignore FileExistsErrors.  Patch by Berker Peksag."

#: ../../../Misc/NEWS:7958
msgid ""
"`bpo-22127 <https://bugs.python.org/issue22127>`__: Bypass IDNA for pure-"
"ASCII host names in the socket module (in particular for numeric IPs)."
msgstr ""
"`bpo-22127 <https://bugs.python.org/issue22127>`__: Bypass IDNA for pure-"
"ASCII host names in the socket module (in particular for numeric IPs)."

#: ../../../Misc/NEWS:7961
msgid ""
"`bpo-21047 <https://bugs.python.org/issue21047>`__: set the default value "
"for the *convert_charrefs* argument of HTMLParser to True.  Patch by Berker "
"Peksag."
msgstr ""
"`bpo-21047 <https://bugs.python.org/issue21047>`__: set the default value "
"for the *convert_charrefs* argument of HTMLParser to True.  Patch by Berker "
"Peksag."

#: ../../../Misc/NEWS:7964
msgid "Add an __all__ to html.entities."
msgstr ""

#: ../../../Misc/NEWS:7966
msgid ""
"`bpo-15114 <https://bugs.python.org/issue15114>`__: the strict mode and "
"argument of HTMLParser, HTMLParser.error, and the HTMLParserError exception "
"have been removed."
msgstr ""
"`bpo-15114 <https://bugs.python.org/issue15114>`__: the strict mode and "
"argument of HTMLParser, HTMLParser.error, and the HTMLParserError exception "
"have been removed."

#: ../../../Misc/NEWS:7969
msgid ""
"`bpo-22085 <https://bugs.python.org/issue22085>`__: Dropped support of Tk "
"8.3 in Tkinter."
msgstr ""
"`bpo-22085 <https://bugs.python.org/issue22085>`__: Dropped support of Tk "
"8.3 in Tkinter."

#: ../../../Misc/NEWS:7971
msgid ""
"`bpo-21580 <https://bugs.python.org/issue21580>`__: Now Tkinter correctly "
"handles bytes arguments passed to Tk. In particular this allows initializing "
"images from binary data."
msgstr ""
"`bpo-21580 <https://bugs.python.org/issue21580>`__: Now Tkinter correctly "
"handles bytes arguments passed to Tk. In particular this allows initializing "
"images from binary data."

#: ../../../Misc/NEWS:7974
msgid ""
"`bpo-22003 <https://bugs.python.org/issue22003>`__: When initialized from a "
"bytes object, io.BytesIO() now defers making a copy until it is mutated, "
"improving performance and memory use on some use cases.  Patch by David "
"Wilson."
msgstr ""
"`bpo-22003 <https://bugs.python.org/issue22003>`__: When initialized from a "
"bytes object, io.BytesIO() now defers making a copy until it is mutated, "
"improving performance and memory use on some use cases.  Patch by David "
"Wilson."

#: ../../../Misc/NEWS:7978
msgid ""
"`bpo-22018 <https://bugs.python.org/issue22018>`__: On Windows, signal."
"set_wakeup_fd() now also supports sockets. A side effect is that Python "
"depends to the WinSock library."
msgstr ""
"`bpo-22018 <https://bugs.python.org/issue22018>`__: On Windows, signal."
"set_wakeup_fd() now also supports sockets. A side effect is that Python "
"depends to the WinSock library."

#: ../../../Misc/NEWS:7981
msgid ""
"`bpo-22054 <https://bugs.python.org/issue22054>`__: Add os.get_blocking() "
"and os.set_blocking() functions to get and set the blocking mode of a file "
"descriptor (False if the O_NONBLOCK flag is set, True otherwise). These "
"functions are not available on Windows."
msgstr ""
"`bpo-22054 <https://bugs.python.org/issue22054>`__: Add os.get_blocking() "
"and os.set_blocking() functions to get and set the blocking mode of a file "
"descriptor (False if the O_NONBLOCK flag is set, True otherwise). These "
"functions are not available on Windows."

#: ../../../Misc/NEWS:7985
msgid ""
"`bpo-17172 <https://bugs.python.org/issue17172>`__: Make turtledemo start as "
"active on OS X even when run with subprocess.  Patch by Lita Cho."
msgstr ""
"`bpo-17172 <https://bugs.python.org/issue17172>`__: Make turtledemo start as "
"active on OS X even when run with subprocess.  Patch by Lita Cho."

#: ../../../Misc/NEWS:7988
msgid ""
"`bpo-21704 <https://bugs.python.org/issue21704>`__: Fix build error for "
"_multiprocessing when semaphores are not available.  Patch by Arfrever "
"Frehtes Taifersar Arahesis."
msgstr ""
"`bpo-21704 <https://bugs.python.org/issue21704>`__: Fix build error for "
"_multiprocessing when semaphores are not available.  Patch by Arfrever "
"Frehtes Taifersar Arahesis."

#: ../../../Misc/NEWS:7991
msgid ""
"`bpo-20173 <https://bugs.python.org/issue20173>`__: Convert sha1, sha256, "
"sha512 and md5 to ArgumentClinic. Patch by Vajrasky Kok."
msgstr ""
"`bpo-20173 <https://bugs.python.org/issue20173>`__: Convert sha1, sha256, "
"sha512 and md5 to ArgumentClinic. Patch by Vajrasky Kok."

#: ../../../Misc/NEWS:7994
msgid ""
"Fix repr(_socket.socket) on Windows 64-bit: don't fail with OverflowError on "
"closed socket. repr(socket.socket) already works fine."
msgstr ""

#: ../../../Misc/NEWS:7997
msgid ""
"`bpo-22033 <https://bugs.python.org/issue22033>`__: Reprs of most Python "
"implemened classes now contain actual class name instead of hardcoded one."
msgstr ""
"`bpo-22033 <https://bugs.python.org/issue22033>`__: Reprs of most Python "
"implemened classes now contain actual class name instead of hardcoded one."

#: ../../../Misc/NEWS:8000
msgid ""
"`bpo-21947 <https://bugs.python.org/issue21947>`__: The dis module can now "
"disassemble generator-iterator objects based on their gi_code attribute. "
"Patch by Clement Rouault."
msgstr ""
"`bpo-21947 <https://bugs.python.org/issue21947>`__: The dis module can now "
"disassemble generator-iterator objects based on their gi_code attribute. "
"Patch by Clement Rouault."

#: ../../../Misc/NEWS:8003
msgid ""
"`bpo-16133 <https://bugs.python.org/issue16133>`__: The asynchat.async_chat."
"handle_read() method now ignores BlockingIOError exceptions."
msgstr ""
"`bpo-16133 <https://bugs.python.org/issue16133>`__: The asynchat.async_chat."
"handle_read() method now ignores BlockingIOError exceptions."

#: ../../../Misc/NEWS:8006
msgid ""
"`bpo-22044 <https://bugs.python.org/issue22044>`__: Fixed premature DECREF "
"in call_tzinfo_method. Patch by Tom Flanagan."
msgstr ""
"`bpo-22044 <https://bugs.python.org/issue22044>`__: Fixed premature DECREF "
"in call_tzinfo_method. Patch by Tom Flanagan."

#: ../../../Misc/NEWS:8009
msgid ""
"`bpo-19884 <https://bugs.python.org/issue19884>`__: readline: Disable the "
"meta modifier key if stdout is not a terminal to not write the ANSI sequence "
"``\"\\033[1034h\"`` into stdout. This sequence is used on some terminal (ex: "
"TERM=xterm-256color\") to enable support of 8 bit characters."
msgstr ""
"`bpo-19884 <https://bugs.python.org/issue19884>`__: readline: Disable the "
"meta modifier key if stdout is not a terminal to not write the ANSI sequence "
"``\"\\033[1034h\"`` into stdout. This sequence is used on some terminal (ex: "
"TERM=xterm-256color\") to enable support of 8 bit characters."

#: ../../../Misc/NEWS:8014
msgid ""
"`bpo-4350 <https://bugs.python.org/issue4350>`__: Removed a number of out-of-"
"dated and non-working for a long time Tkinter methods."
msgstr ""
"`bpo-4350 <https://bugs.python.org/issue4350>`__: Removed a number of out-of-"
"dated and non-working for a long time Tkinter methods."

#: ../../../Misc/NEWS:8017
msgid ""
"`bpo-6167 <https://bugs.python.org/issue6167>`__: Scrollbar.activate() now "
"returns the name of active element if the argument is not specified.  "
"Scrollbar.set() now always accepts only 2 arguments."
msgstr ""
"`bpo-6167 <https://bugs.python.org/issue6167>`__: Scrollbar.activate() now "
"returns the name of active element if the argument is not specified.  "
"Scrollbar.set() now always accepts only 2 arguments."

#: ../../../Misc/NEWS:8021
msgid ""
"`bpo-15275 <https://bugs.python.org/issue15275>`__: Clean up and speed up "
"the ntpath module."
msgstr ""
"`bpo-15275 <https://bugs.python.org/issue15275>`__: Clean up and speed up "
"the ntpath module."

#: ../../../Misc/NEWS:8023
msgid ""
"`bpo-21888 <https://bugs.python.org/issue21888>`__: plistlib's load() and "
"loads() now work if the fmt parameter is specified."
msgstr ""
"`bpo-21888 <https://bugs.python.org/issue21888>`__: plistlib's load() and "
"loads() now work if the fmt parameter is specified."

#: ../../../Misc/NEWS:8026
msgid ""
"`bpo-22032 <https://bugs.python.org/issue22032>`__: __qualname__ instead of "
"__name__ is now always used to format fully qualified class names of Python "
"implemented classes."
msgstr ""
"`bpo-22032 <https://bugs.python.org/issue22032>`__: __qualname__ instead of "
"__name__ is now always used to format fully qualified class names of Python "
"implemented classes."

#: ../../../Misc/NEWS:8029
msgid ""
"`bpo-22031 <https://bugs.python.org/issue22031>`__: Reprs now always use "
"hexadecimal format with the \"0x\" prefix when contain an id in form \" at "
"0x...\"."
msgstr ""
"`bpo-22031 <https://bugs.python.org/issue22031>`__: Reprs now always use "
"hexadecimal format with the \"0x\" prefix when contain an id in form \" at "
"0x...\"."

#: ../../../Misc/NEWS:8032
msgid ""
"`bpo-22018 <https://bugs.python.org/issue22018>`__: signal.set_wakeup_fd() "
"now raises an OSError instead of a ValueError on ``fstat()`` failure."
msgstr ""
"`bpo-22018 <https://bugs.python.org/issue22018>`__: signal.set_wakeup_fd() "
"now raises an OSError instead of a ValueError on ``fstat()`` failure."

#: ../../../Misc/NEWS:8035
msgid ""
"`bpo-21044 <https://bugs.python.org/issue21044>`__: tarfile.open() now "
"handles fileobj with an integer 'name' attribute.  Based on patch by Antoine "
"Pietri."
msgstr ""
"`bpo-21044 <https://bugs.python.org/issue21044>`__: tarfile.open() now "
"handles fileobj with an integer 'name' attribute.  Based on patch by Antoine "
"Pietri."

#: ../../../Misc/NEWS:8038
msgid ""
"`bpo-21966 <https://bugs.python.org/issue21966>`__: Respect -q command-line "
"option when code module is ran."
msgstr ""
"`bpo-21966 <https://bugs.python.org/issue21966>`__: Respect -q command-line "
"option when code module is ran."

#: ../../../Misc/NEWS:8040
msgid ""
"`bpo-19076 <https://bugs.python.org/issue19076>`__: Don't pass the redundant "
"'file' argument to self.error()."
msgstr ""
"`bpo-19076 <https://bugs.python.org/issue19076>`__: Don't pass the redundant "
"'file' argument to self.error()."

#: ../../../Misc/NEWS:8042
msgid ""
"`bpo-16382 <https://bugs.python.org/issue16382>`__: Improve exception "
"message of warnings.warn() for bad category. Initial patch by Phil Elson."
msgstr ""
"`bpo-16382 <https://bugs.python.org/issue16382>`__: Improve exception "
"message of warnings.warn() for bad category. Initial patch by Phil Elson."

#: ../../../Misc/NEWS:8045
msgid ""
"`bpo-21932 <https://bugs.python.org/issue21932>`__: os.read() now uses a :c:"
"func:`Py_ssize_t` type instead of :c:type:`int` for the size to support "
"reading more than 2 GB at once. On Windows, the size is truncted to INT_MAX. "
"As any call to os.read(), the OS may read less bytes than the number of "
"requested bytes."
msgstr ""
"`bpo-21932 <https://bugs.python.org/issue21932>`__: os.read() now uses a :c:"
"func:`Py_ssize_t` type instead of :c:type:`int` for the size to support "
"reading more than 2 GB at once. On Windows, the size is truncted to INT_MAX. "
"As any call to os.read(), the OS may read less bytes than the number of "
"requested bytes."

#: ../../../Misc/NEWS:8050
msgid ""
"`bpo-21942 <https://bugs.python.org/issue21942>`__: Fixed source file "
"viewing in pydoc's server mode on Windows."
msgstr ""
"`bpo-21942 <https://bugs.python.org/issue21942>`__: Fixed source file "
"viewing in pydoc's server mode on Windows."

#: ../../../Misc/NEWS:8052
msgid ""
"`bpo-11259 <https://bugs.python.org/issue11259>`__: asynchat.async_chat()."
"set_terminator() now raises a ValueError if the number of received bytes is "
"negative."
msgstr ""
"`bpo-11259 <https://bugs.python.org/issue11259>`__: asynchat.async_chat()."
"set_terminator() now raises a ValueError if the number of received bytes is "
"negative."

#: ../../../Misc/NEWS:8055
msgid ""
"`bpo-12523 <https://bugs.python.org/issue12523>`__: asynchat.async_chat."
"push() now raises a TypeError if it doesn't get a bytes string"
msgstr ""
"`bpo-12523 <https://bugs.python.org/issue12523>`__: asynchat.async_chat."
"push() now raises a TypeError if it doesn't get a bytes string"

#: ../../../Misc/NEWS:8058
msgid ""
"`bpo-21707 <https://bugs.python.org/issue21707>`__: Add missing "
"kwonlyargcount argument to ModuleFinder.replace_paths_in_code()."
msgstr ""
"`bpo-21707 <https://bugs.python.org/issue21707>`__: Add missing "
"kwonlyargcount argument to ModuleFinder.replace_paths_in_code()."

#: ../../../Misc/NEWS:8061
msgid ""
"`bpo-20639 <https://bugs.python.org/issue20639>`__: calling Path."
"with_suffix('') allows removing the suffix again.  Patch by July Tikhonov."
msgstr ""
"`bpo-20639 <https://bugs.python.org/issue20639>`__: calling Path."
"with_suffix('') allows removing the suffix again.  Patch by July Tikhonov."

#: ../../../Misc/NEWS:8064
msgid ""
"`bpo-21714 <https://bugs.python.org/issue21714>`__: Disallow the "
"construction of invalid paths using Path.with_name().  Original patch by "
"Antony Lee."
msgstr ""
"`bpo-21714 <https://bugs.python.org/issue21714>`__: Disallow the "
"construction of invalid paths using Path.with_name().  Original patch by "
"Antony Lee."

#: ../../../Misc/NEWS:8067
msgid ""
"`bpo-15014 <https://bugs.python.org/issue15014>`__: Added 'auth' method to "
"smtplib to make implementing auth mechanisms simpler, and used it internally "
"in the login method."
msgstr ""
"`bpo-15014 <https://bugs.python.org/issue15014>`__: Added 'auth' method to "
"smtplib to make implementing auth mechanisms simpler, and used it internally "
"in the login method."

#: ../../../Misc/NEWS:8070
msgid ""
"`bpo-21151 <https://bugs.python.org/issue21151>`__: Fixed a segfault in the "
"winreg module when ``None`` is passed as a ``REG_BINARY`` value to "
"SetValueEx.  Patch by John Ehresman."
msgstr ""
"`bpo-21151 <https://bugs.python.org/issue21151>`__: Fixed a segfault in the "
"winreg module when ``None`` is passed as a ``REG_BINARY`` value to "
"SetValueEx.  Patch by John Ehresman."

#: ../../../Misc/NEWS:8073
msgid ""
"`bpo-21090 <https://bugs.python.org/issue21090>`__: io.FileIO.readall() does "
"not ignore I/O errors anymore. Before, it ignored I/O errors if at least the "
"first C call read() succeed."
msgstr ""
"`bpo-21090 <https://bugs.python.org/issue21090>`__: io.FileIO.readall() does "
"not ignore I/O errors anymore. Before, it ignored I/O errors if at least the "
"first C call read() succeed."

#: ../../../Misc/NEWS:8076
msgid ""
"`bpo-5800 <https://bugs.python.org/issue5800>`__: headers parameter of "
"wsgiref.headers.Headers is now optional. Initial patch by Pablo Torres "
"Navarrete and SilentGhost."
msgstr ""
"`bpo-5800 <https://bugs.python.org/issue5800>`__: headers parameter of "
"wsgiref.headers.Headers is now optional. Initial patch by Pablo Torres "
"Navarrete and SilentGhost."

#: ../../../Misc/NEWS:8079
msgid ""
"`bpo-21781 <https://bugs.python.org/issue21781>`__: ssl.RAND_add() now "
"supports strings longer than 2 GB."
msgstr ""
"`bpo-21781 <https://bugs.python.org/issue21781>`__: ssl.RAND_add() now "
"supports strings longer than 2 GB."

#: ../../../Misc/NEWS:8081
msgid ""
"`bpo-21679 <https://bugs.python.org/issue21679>`__: Prevent extraneous "
"fstat() calls during open().  Patch by Bohuslav Kabrda."
msgstr ""
"`bpo-21679 <https://bugs.python.org/issue21679>`__: Prevent extraneous "
"fstat() calls during open().  Patch by Bohuslav Kabrda."

#: ../../../Misc/NEWS:8084
msgid ""
"`bpo-21863 <https://bugs.python.org/issue21863>`__: cProfile now displays "
"the module name of C extension functions, in addition to their own name."
msgstr ""
"`bpo-21863 <https://bugs.python.org/issue21863>`__: cProfile now displays "
"the module name of C extension functions, in addition to their own name."

#: ../../../Misc/NEWS:8087
msgid ""
"`bpo-11453 <https://bugs.python.org/issue11453>`__: asyncore: emit a "
"ResourceWarning when an unclosed file_wrapper object is destroyed. The "
"destructor now closes the file if needed. The close() method can now be "
"called twice: the second call does nothing."
msgstr ""
"`bpo-11453 <https://bugs.python.org/issue11453>`__: asyncore: emit a "
"ResourceWarning when an unclosed file_wrapper object is destroyed. The "
"destructor now closes the file if needed. The close() method can now be "
"called twice: the second call does nothing."

#: ../../../Misc/NEWS:8091
msgid ""
"`bpo-21858 <https://bugs.python.org/issue21858>`__: Better handling of "
"Python exceptions in the sqlite3 module."
msgstr ""
"`bpo-21858 <https://bugs.python.org/issue21858>`__: Better handling of "
"Python exceptions in the sqlite3 module."

#: ../../../Misc/NEWS:8093
msgid ""
"`bpo-21476 <https://bugs.python.org/issue21476>`__: Make sure the email."
"parser.BytesParser TextIOWrapper is discarded after parsing, so the input "
"file isn't unexpectedly closed."
msgstr ""
"`bpo-21476 <https://bugs.python.org/issue21476>`__: Make sure the email."
"parser.BytesParser TextIOWrapper is discarded after parsing, so the input "
"file isn't unexpectedly closed."

#: ../../../Misc/NEWS:8096
msgid ""
"`bpo-20295 <https://bugs.python.org/issue20295>`__: imghdr now recognizes "
"OpenEXR format images."
msgstr ""
"`bpo-20295 <https://bugs.python.org/issue20295>`__: imghdr now recognizes "
"OpenEXR format images."

#: ../../../Misc/NEWS:8098
msgid ""
"`bpo-21729 <https://bugs.python.org/issue21729>`__: Used the \"with\" "
"statement in the dbm.dumb module to ensure files closing.  Patch by Claudiu "
"Popa."
msgstr ""
"`bpo-21729 <https://bugs.python.org/issue21729>`__: Used the \"with\" "
"statement in the dbm.dumb module to ensure files closing.  Patch by Claudiu "
"Popa."

#: ../../../Misc/NEWS:8101
msgid ""
"`bpo-21491 <https://bugs.python.org/issue21491>`__: socketserver: Fix a race "
"condition in child processes reaping."
msgstr ""
"`bpo-21491 <https://bugs.python.org/issue21491>`__: socketserver: Fix a race "
"condition in child processes reaping."

#: ../../../Misc/NEWS:8103
msgid ""
"`bpo-21719 <https://bugs.python.org/issue21719>`__: Added the "
"``st_file_attributes`` field to os.stat_result on Windows."
msgstr ""
"`bpo-21719 <https://bugs.python.org/issue21719>`__: Added the "
"``st_file_attributes`` field to os.stat_result on Windows."

#: ../../../Misc/NEWS:8106
msgid ""
"`bpo-21832 <https://bugs.python.org/issue21832>`__: Require named tuple "
"inputs to be exact strings."
msgstr ""
"`bpo-21832 <https://bugs.python.org/issue21832>`__: Require named tuple "
"inputs to be exact strings."

#: ../../../Misc/NEWS:8108
msgid ""
"`bpo-21722 <https://bugs.python.org/issue21722>`__: The distutils \"upload\" "
"command now exits with a non-zero return code when uploading fails.  Patch "
"by Martin Dengler."
msgstr ""
"`bpo-21722 <https://bugs.python.org/issue21722>`__: The distutils \"upload\" "
"command now exits with a non-zero return code when uploading fails.  Patch "
"by Martin Dengler."

#: ../../../Misc/NEWS:8111
msgid ""
"`bpo-21723 <https://bugs.python.org/issue21723>`__: asyncio.Queue: support "
"any type of number (ex: float) for the maximum size. Patch written by "
"Vajrasky Kok."
msgstr ""
"`bpo-21723 <https://bugs.python.org/issue21723>`__: asyncio.Queue: support "
"any type of number (ex: float) for the maximum size. Patch written by "
"Vajrasky Kok."

#: ../../../Misc/NEWS:8114
msgid ""
"`bpo-21711 <https://bugs.python.org/issue21711>`__: support for \"site-python"
"\" directories has now been removed from the site module (it was deprecated "
"in 3.4)."
msgstr ""
"`bpo-21711 <https://bugs.python.org/issue21711>`__: support for \"site-python"
"\" directories has now been removed from the site module (it was deprecated "
"in 3.4)."

#: ../../../Misc/NEWS:8117
msgid ""
"`bpo-17552 <https://bugs.python.org/issue17552>`__: new socket.sendfile() "
"method allowing a file to be sent over a socket by using high-performance os."
"sendfile() on UNIX. Patch by Giampaolo Rodola'."
msgstr ""
"`bpo-17552 <https://bugs.python.org/issue17552>`__: new socket.sendfile() "
"method allowing a file to be sent over a socket by using high-performance os."
"sendfile() on UNIX. Patch by Giampaolo Rodola'."

#: ../../../Misc/NEWS:8121
msgid ""
"`bpo-18039 <https://bugs.python.org/issue18039>`__: dbm.dump.open() now "
"always creates a new database when the flag has the value 'n'.  Patch by "
"Claudiu Popa."
msgstr ""
"`bpo-18039 <https://bugs.python.org/issue18039>`__: dbm.dump.open() now "
"always creates a new database when the flag has the value 'n'.  Patch by "
"Claudiu Popa."

#: ../../../Misc/NEWS:8124
msgid ""
"`bpo-21326 <https://bugs.python.org/issue21326>`__: Add a new is_closed() "
"method to asyncio.BaseEventLoop. run_forever() and run_until_complete() "
"methods of asyncio.BaseEventLoop now raise an exception if the event loop "
"was closed."
msgstr ""
"`bpo-21326 <https://bugs.python.org/issue21326>`__: Add a new is_closed() "
"method to asyncio.BaseEventLoop. run_forever() and run_until_complete() "
"methods of asyncio.BaseEventLoop now raise an exception if the event loop "
"was closed."

#: ../../../Misc/NEWS:8128
msgid ""
"`bpo-21766 <https://bugs.python.org/issue21766>`__: Prevent a security hole "
"in CGIHTTPServer by URL unquoting paths before checking for a CGI script at "
"that path."
msgstr ""
"`bpo-21766 <https://bugs.python.org/issue21766>`__: Prevent a security hole "
"in CGIHTTPServer by URL unquoting paths before checking for a CGI script at "
"that path."

#: ../../../Misc/NEWS:8131
msgid ""
"`bpo-21310 <https://bugs.python.org/issue21310>`__: Fixed possible resource "
"leak in failed open()."
msgstr ""
"`bpo-21310 <https://bugs.python.org/issue21310>`__: Fixed possible resource "
"leak in failed open()."

#: ../../../Misc/NEWS:8133
msgid ""
"`bpo-21256 <https://bugs.python.org/issue21256>`__: Printout of keyword args "
"should be in deterministic order in a mock function call. This will help to "
"write better doctests."
msgstr ""
"`bpo-21256 <https://bugs.python.org/issue21256>`__: Printout of keyword args "
"should be in deterministic order in a mock function call. This will help to "
"write better doctests."

#: ../../../Misc/NEWS:8136
msgid ""
"`bpo-21677 <https://bugs.python.org/issue21677>`__: Fixed chaining "
"nonnormalized exceptions in io close() methods."
msgstr ""
"`bpo-21677 <https://bugs.python.org/issue21677>`__: Fixed chaining "
"nonnormalized exceptions in io close() methods."

#: ../../../Misc/NEWS:8138
msgid ""
"`bpo-11709 <https://bugs.python.org/issue11709>`__: Fix the pydoc.help "
"function to not fail when sys.stdin is not a valid file."
msgstr ""
"`bpo-11709 <https://bugs.python.org/issue11709>`__: Fix the pydoc.help "
"function to not fail when sys.stdin is not a valid file."

#: ../../../Misc/NEWS:8141
msgid ""
"`bpo-21515 <https://bugs.python.org/issue21515>`__: tempfile.TemporaryFile "
"now uses os.O_TMPFILE flag is available."
msgstr ""
"`bpo-21515 <https://bugs.python.org/issue21515>`__: tempfile.TemporaryFile "
"now uses os.O_TMPFILE flag is available."

#: ../../../Misc/NEWS:8143
msgid ""
"`bpo-13223 <https://bugs.python.org/issue13223>`__: Fix pydoc.writedoc so "
"that the HTML documentation for methods that use 'self' in the example code "
"is generated correctly."
msgstr ""
"`bpo-13223 <https://bugs.python.org/issue13223>`__: Fix pydoc.writedoc so "
"that the HTML documentation for methods that use 'self' in the example code "
"is generated correctly."

#: ../../../Misc/NEWS:8146
msgid ""
"`bpo-21463 <https://bugs.python.org/issue21463>`__: In urllib.request, fix "
"pruning of the FTP cache."
msgstr ""
"`bpo-21463 <https://bugs.python.org/issue21463>`__: In urllib.request, fix "
"pruning of the FTP cache."

#: ../../../Misc/NEWS:8148
msgid ""
"`bpo-21618 <https://bugs.python.org/issue21618>`__: The subprocess module "
"could fail to close open fds that were inherited by the calling process and "
"already higher than POSIX resource limits would otherwise allow.  On systems "
"with a functioning /proc/self/fd or /dev/fd interface the max is now ignored "
"and all fds are closed."
msgstr ""
"`bpo-21618 <https://bugs.python.org/issue21618>`__: The subprocess module "
"could fail to close open fds that were inherited by the calling process and "
"already higher than POSIX resource limits would otherwise allow.  On systems "
"with a functioning /proc/self/fd or /dev/fd interface the max is now ignored "
"and all fds are closed."

#: ../../../Misc/NEWS:8153
msgid ""
"`bpo-20383 <https://bugs.python.org/issue20383>`__: Introduce importlib.util."
"module_from_spec() as the preferred way to create a new module."
msgstr ""
"`bpo-20383 <https://bugs.python.org/issue20383>`__: Introduce importlib.util."
"module_from_spec() as the preferred way to create a new module."

#: ../../../Misc/NEWS:8156
msgid ""
"`bpo-21552 <https://bugs.python.org/issue21552>`__: Fixed possible integer "
"overflow of too long string lengths in the tkinter module on 64-bit "
"platforms."
msgstr ""
"`bpo-21552 <https://bugs.python.org/issue21552>`__: Fixed possible integer "
"overflow of too long string lengths in the tkinter module on 64-bit "
"platforms."

#: ../../../Misc/NEWS:8159
msgid ""
"`bpo-14315 <https://bugs.python.org/issue14315>`__: The zipfile module now "
"ignores extra fields in the central directory that are too short to be "
"parsed instead of letting a struct.unpack error bubble up as this \"bad data"
"\" appears in many real world zip files in the wild and is ignored by other "
"zip tools."
msgstr ""
"`bpo-14315 <https://bugs.python.org/issue14315>`__: The zipfile module now "
"ignores extra fields in the central directory that are too short to be "
"parsed instead of letting a struct.unpack error bubble up as this \"bad data"
"\" appears in many real world zip files in the wild and is ignored by other "
"zip tools."

#: ../../../Misc/NEWS:8164
msgid ""
"`bpo-13742 <https://bugs.python.org/issue13742>`__: Added \"key\" and "
"\"reverse\" parameters to heapq.merge(). (First draft of patch contributed "
"by Simon Sapin.)"
msgstr ""
"`bpo-13742 <https://bugs.python.org/issue13742>`__: Added \"key\" and "
"\"reverse\" parameters to heapq.merge(). (First draft of patch contributed "
"by Simon Sapin.)"

#: ../../../Misc/NEWS:8167
msgid ""
"`bpo-21402 <https://bugs.python.org/issue21402>`__: tkinter.ttk now works "
"when default root window is not set."
msgstr ""
"`bpo-21402 <https://bugs.python.org/issue21402>`__: tkinter.ttk now works "
"when default root window is not set."

#: ../../../Misc/NEWS:8169
msgid ""
"`bpo-3015 <https://bugs.python.org/issue3015>`__: _tkinter.create() now "
"creates tkapp object with wantobject=1 by default."
msgstr ""
"`bpo-3015 <https://bugs.python.org/issue3015>`__: _tkinter.create() now "
"creates tkapp object with wantobject=1 by default."

#: ../../../Misc/NEWS:8172
msgid ""
"`bpo-10203 <https://bugs.python.org/issue10203>`__: sqlite3.Row now truly "
"supports sequence protocol.  In particular it supports reverse() and "
"negative indices.  Original patch by Claudiu Popa."
msgstr ""
"`bpo-10203 <https://bugs.python.org/issue10203>`__: sqlite3.Row now truly "
"supports sequence protocol.  In particular it supports reverse() and "
"negative indices.  Original patch by Claudiu Popa."

#: ../../../Misc/NEWS:8175
msgid ""
"`bpo-18807 <https://bugs.python.org/issue18807>`__: If copying (no symlinks) "
"specified for a venv, then the python interpreter aliases (python, python3) "
"are now created by copying rather than symlinking."
msgstr ""
"`bpo-18807 <https://bugs.python.org/issue18807>`__: If copying (no symlinks) "
"specified for a venv, then the python interpreter aliases (python, python3) "
"are now created by copying rather than symlinking."

#: ../../../Misc/NEWS:8179
msgid ""
"`bpo-20197 <https://bugs.python.org/issue20197>`__: Added support for the "
"WebP image type in the imghdr module. Patch by Fabrice Aneche and Claudiu "
"Popa."
msgstr ""
"`bpo-20197 <https://bugs.python.org/issue20197>`__: Added support for the "
"WebP image type in the imghdr module. Patch by Fabrice Aneche and Claudiu "
"Popa."

#: ../../../Misc/NEWS:8182
msgid ""
"`bpo-21513 <https://bugs.python.org/issue21513>`__: Speedup some properties "
"of IP addresses (IPv4Address, IPv6Address) such as .is_private or ."
"is_multicast."
msgstr ""
"`bpo-21513 <https://bugs.python.org/issue21513>`__: Speedup some properties "
"of IP addresses (IPv4Address, IPv6Address) such as .is_private or ."
"is_multicast."

#: ../../../Misc/NEWS:8185
msgid ""
"`bpo-21137 <https://bugs.python.org/issue21137>`__: Improve the repr for "
"threading.Lock() and its variants by showing the \"locked\" or \"unlocked\" "
"status.  Patch by Berker Peksag."
msgstr ""
"`bpo-21137 <https://bugs.python.org/issue21137>`__: Improve the repr for "
"threading.Lock() and its variants by showing the \"locked\" or \"unlocked\" "
"status.  Patch by Berker Peksag."

#: ../../../Misc/NEWS:8188
msgid ""
"`bpo-21538 <https://bugs.python.org/issue21538>`__: The plistlib module now "
"supports loading of binary plist files when reference or offset size is not "
"a power of two."
msgstr ""
"`bpo-21538 <https://bugs.python.org/issue21538>`__: The plistlib module now "
"supports loading of binary plist files when reference or offset size is not "
"a power of two."

#: ../../../Misc/NEWS:8191
msgid ""
"`bpo-21455 <https://bugs.python.org/issue21455>`__: Add a default backlog to "
"socket.listen()."
msgstr ""
"`bpo-21455 <https://bugs.python.org/issue21455>`__: Add a default backlog to "
"socket.listen()."

#: ../../../Misc/NEWS:8193
msgid ""
"`bpo-21525 <https://bugs.python.org/issue21525>`__: Most Tkinter methods "
"which accepted tuples now accept lists too."
msgstr ""
"`bpo-21525 <https://bugs.python.org/issue21525>`__: Most Tkinter methods "
"which accepted tuples now accept lists too."

#: ../../../Misc/NEWS:8195
msgid ""
"`bpo-22166 <https://bugs.python.org/issue22166>`__: With the assistance of a "
"new internal _codecs._forget_codec helping function, test_codecs now clears "
"the encoding caches to avoid the appearance of a reference leak"
msgstr ""
"`bpo-22166 <https://bugs.python.org/issue22166>`__: With the assistance of a "
"new internal _codecs._forget_codec helping function, test_codecs now clears "
"the encoding caches to avoid the appearance of a reference leak"

#: ../../../Misc/NEWS:8199
msgid ""
"`bpo-22236 <https://bugs.python.org/issue22236>`__: Tkinter tests now don't "
"reuse default root window.  New root window is created for every test class."
msgstr ""
"`bpo-22236 <https://bugs.python.org/issue22236>`__: Tkinter tests now don't "
"reuse default root window.  New root window is created for every test class."

#: ../../../Misc/NEWS:8202
msgid ""
"`bpo-10744 <https://bugs.python.org/issue10744>`__: Fix PEP 3118 format "
"strings on ctypes objects with a nontrivial shape."
msgstr ""
"`bpo-10744 <https://bugs.python.org/issue10744>`__: Fix PEP 3118 format "
"strings on ctypes objects with a nontrivial shape."

#: ../../../Misc/NEWS:8205
msgid ""
"`bpo-20826 <https://bugs.python.org/issue20826>`__: Optimize ipaddress."
"collapse_addresses()."
msgstr ""
"`bpo-20826 <https://bugs.python.org/issue20826>`__: Optimize ipaddress."
"collapse_addresses()."

#: ../../../Misc/NEWS:8207
msgid ""
"`bpo-21487 <https://bugs.python.org/issue21487>`__: Optimize ipaddress."
"summarize_address_range() and ipaddress.{IPv4Network,IPv6Network}.subnets()."
msgstr ""
"`bpo-21487 <https://bugs.python.org/issue21487>`__: Optimize ipaddress."
"summarize_address_range() and ipaddress.{IPv4Network,IPv6Network}.subnets()."

#: ../../../Misc/NEWS:8210
msgid ""
"`bpo-21486 <https://bugs.python.org/issue21486>`__: Optimize parsing of "
"netmasks in ipaddress.IPv4Network and ipaddress.IPv6Network."
msgstr ""
"`bpo-21486 <https://bugs.python.org/issue21486>`__: Optimize parsing of "
"netmasks in ipaddress.IPv4Network and ipaddress.IPv6Network."

#: ../../../Misc/NEWS:8213
msgid ""
"`bpo-13916 <https://bugs.python.org/issue13916>`__: Disallowed the "
"surrogatepass error handler for non UTF-\\* encodings."
msgstr ""
"`bpo-13916 <https://bugs.python.org/issue13916>`__: Disallowed the "
"surrogatepass error handler for non UTF-\\* encodings."

#: ../../../Misc/NEWS:8216
msgid ""
"`bpo-20998 <https://bugs.python.org/issue20998>`__: Fixed re.fullmatch() of "
"repeated single character pattern with ignore case.  Original patch by "
"Matthew Barnett."
msgstr ""
"`bpo-20998 <https://bugs.python.org/issue20998>`__: Fixed re.fullmatch() of "
"repeated single character pattern with ignore case.  Original patch by "
"Matthew Barnett."

#: ../../../Misc/NEWS:8219
msgid ""
"`bpo-21075 <https://bugs.python.org/issue21075>`__: fileinput.FileInput now "
"reads bytes from standard stream if binary mode is specified.  Patch by Sam "
"Kimbrel."
msgstr ""
"`bpo-21075 <https://bugs.python.org/issue21075>`__: fileinput.FileInput now "
"reads bytes from standard stream if binary mode is specified.  Patch by Sam "
"Kimbrel."

#: ../../../Misc/NEWS:8222
msgid ""
"`bpo-19775 <https://bugs.python.org/issue19775>`__: Add a samefile() method "
"to pathlib Path objects.  Initial patch by Vajrasky Kok."
msgstr ""
"`bpo-19775 <https://bugs.python.org/issue19775>`__: Add a samefile() method "
"to pathlib Path objects.  Initial patch by Vajrasky Kok."

#: ../../../Misc/NEWS:8225
msgid ""
"`bpo-21226 <https://bugs.python.org/issue21226>`__: Set up modules properly "
"in PyImport_ExecCodeModuleObject (and friends)."
msgstr ""
"`bpo-21226 <https://bugs.python.org/issue21226>`__: Set up modules properly "
"in PyImport_ExecCodeModuleObject (and friends)."

#: ../../../Misc/NEWS:8228
msgid ""
"`bpo-21398 <https://bugs.python.org/issue21398>`__: Fix a unicode error in "
"the pydoc pager when the documentation contains characters not encodable to "
"the stdout encoding."
msgstr ""
"`bpo-21398 <https://bugs.python.org/issue21398>`__: Fix a unicode error in "
"the pydoc pager when the documentation contains characters not encodable to "
"the stdout encoding."

#: ../../../Misc/NEWS:8231
msgid ""
"`bpo-16531 <https://bugs.python.org/issue16531>`__: ipaddress.IPv4Network "
"and ipaddress.IPv6Network now accept an (address, netmask) tuple argument, "
"so as to easily construct network objects from existing addresses."
msgstr ""
"`bpo-16531 <https://bugs.python.org/issue16531>`__: ipaddress.IPv4Network "
"and ipaddress.IPv6Network now accept an (address, netmask) tuple argument, "
"so as to easily construct network objects from existing addresses."

#: ../../../Misc/NEWS:8235
msgid ""
"`bpo-21156 <https://bugs.python.org/issue21156>`__: importlib.abc."
"InspectLoader.source_to_code() is now a staticmethod."
msgstr ""
"`bpo-21156 <https://bugs.python.org/issue21156>`__: importlib.abc."
"InspectLoader.source_to_code() is now a staticmethod."

#: ../../../Misc/NEWS:8238
msgid ""
"`bpo-21424 <https://bugs.python.org/issue21424>`__: Simplified and optimized "
"heaqp.nlargest() and nmsmallest() to make fewer tuple comparisons."
msgstr ""
"`bpo-21424 <https://bugs.python.org/issue21424>`__: Simplified and optimized "
"heaqp.nlargest() and nmsmallest() to make fewer tuple comparisons."

#: ../../../Misc/NEWS:8241
msgid ""
"`bpo-21396 <https://bugs.python.org/issue21396>`__: Fix TextIOWrapper(..., "
"write_through=True) to not force a flush() on the underlying binary stream.  "
"Patch by akira."
msgstr ""
"`bpo-21396 <https://bugs.python.org/issue21396>`__: Fix TextIOWrapper(..., "
"write_through=True) to not force a flush() on the underlying binary stream.  "
"Patch by akira."

#: ../../../Misc/NEWS:8244
msgid ""
"`bpo-18314 <https://bugs.python.org/issue18314>`__: Unlink now removes "
"junctions on Windows. Patch by Kim Gr√§sman"
msgstr ""
"`bpo-18314 <https://bugs.python.org/issue18314>`__: Unlink now removes "
"junctions on Windows. Patch by Kim Gr√§sman"

#: ../../../Misc/NEWS:8246
msgid ""
"`bpo-21088 <https://bugs.python.org/issue21088>`__: Bugfix for curses.window."
"addch() regression in 3.4.0. In porting to Argument Clinic, the first two "
"arguments were reversed."
msgstr ""
"`bpo-21088 <https://bugs.python.org/issue21088>`__: Bugfix for curses.window."
"addch() regression in 3.4.0. In porting to Argument Clinic, the first two "
"arguments were reversed."

#: ../../../Misc/NEWS:8249
msgid ""
"`bpo-21407 <https://bugs.python.org/issue21407>`__: _decimal: The module now "
"supports function signatures."
msgstr ""
"`bpo-21407 <https://bugs.python.org/issue21407>`__: _decimal: The module now "
"supports function signatures."

#: ../../../Misc/NEWS:8251
msgid ""
"`bpo-10650 <https://bugs.python.org/issue10650>`__: Remove the non-standard "
"'watchexp' parameter from the Decimal.quantize() method in the Python "
"version.  It had never been present in the C version."
msgstr ""
"`bpo-10650 <https://bugs.python.org/issue10650>`__: Remove the non-standard "
"'watchexp' parameter from the Decimal.quantize() method in the Python "
"version.  It had never been present in the C version."

#: ../../../Misc/NEWS:8255
msgid ""
"`bpo-21469 <https://bugs.python.org/issue21469>`__: Reduced the risk of "
"false positives in robotparser by checking to make sure that robots.txt has "
"been read or does not exist prior to returning True in can_fetch()."
msgstr ""
"`bpo-21469 <https://bugs.python.org/issue21469>`__: Reduced the risk of "
"false positives in robotparser by checking to make sure that robots.txt has "
"been read or does not exist prior to returning True in can_fetch()."

#: ../../../Misc/NEWS:8259
msgid ""
"`bpo-19414 <https://bugs.python.org/issue19414>`__: Have the OrderedDict "
"mark deleted links as unusable. This gives an early failure if the link is "
"deleted during iteration."
msgstr ""
"`bpo-19414 <https://bugs.python.org/issue19414>`__: Have the OrderedDict "
"mark deleted links as unusable. This gives an early failure if the link is "
"deleted during iteration."

#: ../../../Misc/NEWS:8262
msgid ""
"`bpo-21421 <https://bugs.python.org/issue21421>`__: Add __slots__ to the "
"MappingViews ABC. Patch by Josh Rosenberg."
msgstr ""
"`bpo-21421 <https://bugs.python.org/issue21421>`__: Add __slots__ to the "
"MappingViews ABC. Patch by Josh Rosenberg."

#: ../../../Misc/NEWS:8265
msgid ""
"`bpo-21101 <https://bugs.python.org/issue21101>`__: Eliminate double hashing "
"in the C speed-up code for collections.Counter()."
msgstr ""
"`bpo-21101 <https://bugs.python.org/issue21101>`__: Eliminate double hashing "
"in the C speed-up code for collections.Counter()."

#: ../../../Misc/NEWS:8268
msgid ""
"`bpo-21321 <https://bugs.python.org/issue21321>`__: itertools.islice() now "
"releases the reference to the source iterator when the slice is exhausted.  "
"Patch by Anton Afanasyev."
msgstr ""
"`bpo-21321 <https://bugs.python.org/issue21321>`__: itertools.islice() now "
"releases the reference to the source iterator when the slice is exhausted.  "
"Patch by Anton Afanasyev."

#: ../../../Misc/NEWS:8271
msgid ""
"`bpo-21057 <https://bugs.python.org/issue21057>`__: TextIOWrapper now allows "
"the underlying binary stream's read() or read1() method to return an "
"arbitrary bytes-like object (such as a memoryview).  Patch by Nikolaus Rath."
msgstr ""
"`bpo-21057 <https://bugs.python.org/issue21057>`__: TextIOWrapper now allows "
"the underlying binary stream's read() or read1() method to return an "
"arbitrary bytes-like object (such as a memoryview).  Patch by Nikolaus Rath."

#: ../../../Misc/NEWS:8275
msgid ""
"`bpo-20951 <https://bugs.python.org/issue20951>`__: SSLSocket.send() now "
"raises either SSLWantReadError or SSLWantWriteError on a non-blocking socket "
"if the operation would block. Previously, it would return 0.  Patch by "
"Nikolaus Rath."
msgstr ""
"`bpo-20951 <https://bugs.python.org/issue20951>`__: SSLSocket.send() now "
"raises either SSLWantReadError or SSLWantWriteError on a non-blocking socket "
"if the operation would block. Previously, it would return 0.  Patch by "
"Nikolaus Rath."

#: ../../../Misc/NEWS:8279
msgid ""
"`bpo-13248 <https://bugs.python.org/issue13248>`__: removed previously "
"deprecated asyncore.dispatcher __getattr__ cheap inheritance hack."
msgstr ""
"`bpo-13248 <https://bugs.python.org/issue13248>`__: removed previously "
"deprecated asyncore.dispatcher __getattr__ cheap inheritance hack."

#: ../../../Misc/NEWS:8282
msgid ""
"`bpo-9815 <https://bugs.python.org/issue9815>`__: assertRaises now tries to "
"clear references to local variables in the exception's traceback."
msgstr ""
"`bpo-9815 <https://bugs.python.org/issue9815>`__: assertRaises now tries to "
"clear references to local variables in the exception's traceback."

#: ../../../Misc/NEWS:8285
msgid ""
"`bpo-19940 <https://bugs.python.org/issue19940>`__: ssl."
"cert_time_to_seconds() now interprets the given time string in the UTC "
"timezone (as specified in RFC 5280), not the local timezone."
msgstr ""
"`bpo-19940 <https://bugs.python.org/issue19940>`__: ssl."
"cert_time_to_seconds() now interprets the given time string in the UTC "
"timezone (as specified in RFC 5280), not the local timezone."

#: ../../../Misc/NEWS:8289
msgid ""
"`bpo-13204 <https://bugs.python.org/issue13204>`__: Calling sys.flags."
"__new__ would crash the interpreter, now it raises a TypeError."
msgstr ""
"`bpo-13204 <https://bugs.python.org/issue13204>`__: Calling sys.flags."
"__new__ would crash the interpreter, now it raises a TypeError."

#: ../../../Misc/NEWS:8292
msgid ""
"`bpo-19385 <https://bugs.python.org/issue19385>`__: Make operations on a "
"closed dbm.dumb database always raise the same exception."
msgstr ""
"`bpo-19385 <https://bugs.python.org/issue19385>`__: Make operations on a "
"closed dbm.dumb database always raise the same exception."

#: ../../../Misc/NEWS:8295
msgid ""
"`bpo-21207 <https://bugs.python.org/issue21207>`__: Detect when the os."
"urandom cached fd has been closed or replaced, and open it anew."
msgstr ""
"`bpo-21207 <https://bugs.python.org/issue21207>`__: Detect when the os."
"urandom cached fd has been closed or replaced, and open it anew."

#: ../../../Misc/NEWS:8298
msgid ""
"`bpo-21291 <https://bugs.python.org/issue21291>`__: subprocess's Popen."
"wait() is now thread safe so that multiple threads may be calling wait() or "
"poll() on a Popen instance at the same time without losing the Popen."
"returncode value."
msgstr ""
"`bpo-21291 <https://bugs.python.org/issue21291>`__: subprocess's Popen."
"wait() is now thread safe so that multiple threads may be calling wait() or "
"poll() on a Popen instance at the same time without losing the Popen."
"returncode value."

#: ../../../Misc/NEWS:8302
msgid ""
"`bpo-21127 <https://bugs.python.org/issue21127>`__: Path objects can now be "
"instantiated from str subclass instances (such as ``numpy.str_``)."
msgstr ""
"`bpo-21127 <https://bugs.python.org/issue21127>`__: Path objects can now be "
"instantiated from str subclass instances (such as ``numpy.str_``)."

#: ../../../Misc/NEWS:8305
msgid ""
"`bpo-15002 <https://bugs.python.org/issue15002>`__: urllib.response object "
"to use _TemporaryFileWrapper (and _TemporaryFileCloser) facility. Provides a "
"better way to handle file descriptor close. Patch contributed by Christian "
"Theune."
msgstr ""
"`bpo-15002 <https://bugs.python.org/issue15002>`__: urllib.response object "
"to use _TemporaryFileWrapper (and _TemporaryFileCloser) facility. Provides a "
"better way to handle file descriptor close. Patch contributed by Christian "
"Theune."

#: ../../../Misc/NEWS:8309
msgid ""
"`bpo-12220 <https://bugs.python.org/issue12220>`__: mindom now raises a "
"custom ValueError indicating it doesn't support spaces in URIs instead of "
"letting a 'split' ValueError bubble up."
msgstr ""
"`bpo-12220 <https://bugs.python.org/issue12220>`__: mindom now raises a "
"custom ValueError indicating it doesn't support spaces in URIs instead of "
"letting a 'split' ValueError bubble up."

#: ../../../Misc/NEWS:8312
msgid ""
"`bpo-21068 <https://bugs.python.org/issue21068>`__: The ssl.PROTOCOL* "
"constants are now enum members."
msgstr ""
"`bpo-21068 <https://bugs.python.org/issue21068>`__: The ssl.PROTOCOL* "
"constants are now enum members."

#: ../../../Misc/NEWS:8314
msgid ""
"`bpo-21276 <https://bugs.python.org/issue21276>`__: posixmodule: Don't "
"define USE_XATTRS on KFreeBSD and the Hurd."
msgstr ""
"`bpo-21276 <https://bugs.python.org/issue21276>`__: posixmodule: Don't "
"define USE_XATTRS on KFreeBSD and the Hurd."

#: ../../../Misc/NEWS:8316
msgid ""
"`bpo-21262 <https://bugs.python.org/issue21262>`__: New method "
"assert_not_called for Mock. It raises AssertionError if the mock has been "
"called."
msgstr ""
"`bpo-21262 <https://bugs.python.org/issue21262>`__: New method "
"assert_not_called for Mock. It raises AssertionError if the mock has been "
"called."

#: ../../../Misc/NEWS:8319
msgid ""
"`bpo-21238 <https://bugs.python.org/issue21238>`__: New keyword argument "
"`unsafe` to Mock. It raises `AttributeError` incase of an attribute "
"startswith assert or assret."
msgstr ""
"`bpo-21238 <https://bugs.python.org/issue21238>`__: New keyword argument "
"`unsafe` to Mock. It raises `AttributeError` incase of an attribute "
"startswith assert or assret."

#: ../../../Misc/NEWS:8322
msgid ""
"`bpo-20896 <https://bugs.python.org/issue20896>`__: ssl."
"get_server_certificate() now uses PROTOCOL_SSLv23, not PROTOCOL_SSLv3, for "
"maximum compatibility."
msgstr ""
"`bpo-20896 <https://bugs.python.org/issue20896>`__: ssl."
"get_server_certificate() now uses PROTOCOL_SSLv23, not PROTOCOL_SSLv3, for "
"maximum compatibility."

#: ../../../Misc/NEWS:8325
msgid ""
"`bpo-21239 <https://bugs.python.org/issue21239>`__: patch.stopall() didn't "
"work deterministically when the same name was patched more than once."
msgstr ""
"`bpo-21239 <https://bugs.python.org/issue21239>`__: patch.stopall() didn't "
"work deterministically when the same name was patched more than once."

#: ../../../Misc/NEWS:8328
msgid ""
"`bpo-21203 <https://bugs.python.org/issue21203>`__: Updated fileConfig and "
"dictConfig to remove inconsistencies. Thanks to Jure Koren for the patch."
msgstr ""
"`bpo-21203 <https://bugs.python.org/issue21203>`__: Updated fileConfig and "
"dictConfig to remove inconsistencies. Thanks to Jure Koren for the patch."

#: ../../../Misc/NEWS:8331
msgid ""
"`bpo-21222 <https://bugs.python.org/issue21222>`__: Passing name keyword "
"argument to mock.create_autospec now works."
msgstr ""
"`bpo-21222 <https://bugs.python.org/issue21222>`__: Passing name keyword "
"argument to mock.create_autospec now works."

#: ../../../Misc/NEWS:8334
msgid ""
"`bpo-21197 <https://bugs.python.org/issue21197>`__: Add lib64 -> lib symlink "
"in venvs on 64-bit non-OS X POSIX."
msgstr ""
"`bpo-21197 <https://bugs.python.org/issue21197>`__: Add lib64 -> lib symlink "
"in venvs on 64-bit non-OS X POSIX."

#: ../../../Misc/NEWS:8336
msgid ""
"`bpo-17498 <https://bugs.python.org/issue17498>`__: Some SMTP servers "
"disconnect after certain errors, violating strict RFC conformance.  Instead "
"of losing the error code when we issue the subsequent RSET, smtplib now "
"returns the error code and defers raising the SMTPServerDisconnected error "
"until the next command is issued."
msgstr ""
"`bpo-17498 <https://bugs.python.org/issue17498>`__: Some SMTP servers "
"disconnect after certain errors, violating strict RFC conformance.  Instead "
"of losing the error code when we issue the subsequent RSET, smtplib now "
"returns the error code and defers raising the SMTPServerDisconnected error "
"until the next command is issued."

#: ../../../Misc/NEWS:8341
msgid ""
"`bpo-17826 <https://bugs.python.org/issue17826>`__: setting an iterable "
"side_effect on a mock function created by create_autospec now works. Patch "
"by Kushal Das."
msgstr ""
"`bpo-17826 <https://bugs.python.org/issue17826>`__: setting an iterable "
"side_effect on a mock function created by create_autospec now works. Patch "
"by Kushal Das."

#: ../../../Misc/NEWS:8344
msgid ""
"`bpo-7776 <https://bugs.python.org/issue7776>`__: Fix ``Host:`` header and "
"reconnection when using http.client.HTTPConnection.set_tunnel(). Patch by "
"Nikolaus Rath."
msgstr ""
"`bpo-7776 <https://bugs.python.org/issue7776>`__: Fix ``Host:`` header and "
"reconnection when using http.client.HTTPConnection.set_tunnel(). Patch by "
"Nikolaus Rath."

#: ../../../Misc/NEWS:8347
msgid ""
"`bpo-20968 <https://bugs.python.org/issue20968>`__: unittest.mock.MagicMock "
"now supports division. Patch by Johannes Baiter."
msgstr ""
"`bpo-20968 <https://bugs.python.org/issue20968>`__: unittest.mock.MagicMock "
"now supports division. Patch by Johannes Baiter."

#: ../../../Misc/NEWS:8350
msgid ""
"`bpo-21529 <https://bugs.python.org/issue21529>`__ (CVE-2014-4616): Fix "
"arbitrary memory access in JSONDecoder.raw_decode with a negative second "
"parameter. Bug reported by Guido Vranken."
msgstr ""
"`bpo-21529 <https://bugs.python.org/issue21529>`__ (CVE-2014-4616): Fix "
"arbitrary memory access in JSONDecoder.raw_decode with a negative second "
"parameter. Bug reported by Guido Vranken."

#: ../../../Misc/NEWS:8354
msgid ""
"`bpo-21169 <https://bugs.python.org/issue21169>`__: getpass now handles non-"
"ascii characters that the input stream encoding cannot encode by re-encoding "
"using the replace error handler."
msgstr ""
"`bpo-21169 <https://bugs.python.org/issue21169>`__: getpass now handles non-"
"ascii characters that the input stream encoding cannot encode by re-encoding "
"using the replace error handler."

#: ../../../Misc/NEWS:8358
msgid ""
"`bpo-21171 <https://bugs.python.org/issue21171>`__: Fixed undocumented "
"filter API of the rot13 codec. Patch by Berker Peksag."
msgstr ""
"`bpo-21171 <https://bugs.python.org/issue21171>`__: Fixed undocumented "
"filter API of the rot13 codec. Patch by Berker Peksag."

#: ../../../Misc/NEWS:8361
msgid ""
"`bpo-20539 <https://bugs.python.org/issue20539>`__: Improved math.factorial "
"error message for large positive inputs and changed exception type "
"(OverflowError -> ValueError) for large negative inputs."
msgstr ""
"`bpo-20539 <https://bugs.python.org/issue20539>`__: Improved math.factorial "
"error message for large positive inputs and changed exception type "
"(OverflowError -> ValueError) for large negative inputs."

#: ../../../Misc/NEWS:8365
msgid ""
"`bpo-21172 <https://bugs.python.org/issue21172>`__: isinstance check relaxed "
"from dict to collections.Mapping."
msgstr ""
"`bpo-21172 <https://bugs.python.org/issue21172>`__: isinstance check relaxed "
"from dict to collections.Mapping."

#: ../../../Misc/NEWS:8367
msgid ""
"`bpo-21155 <https://bugs.python.org/issue21155>`__: asyncio.EventLoop."
"create_unix_server() now raises a ValueError if path and sock are specified "
"at the same time."
msgstr ""
"`bpo-21155 <https://bugs.python.org/issue21155>`__: asyncio.EventLoop."
"create_unix_server() now raises a ValueError if path and sock are specified "
"at the same time."

#: ../../../Misc/NEWS:8370
msgid ""
"`bpo-21136 <https://bugs.python.org/issue21136>`__: Avoid unnecessary "
"normalization of Fractions resulting from power and other operations.  Patch "
"by Raymond Hettinger."
msgstr ""
"`bpo-21136 <https://bugs.python.org/issue21136>`__: Avoid unnecessary "
"normalization of Fractions resulting from power and other operations.  Patch "
"by Raymond Hettinger."

#: ../../../Misc/NEWS:8373
msgid ""
"`bpo-17621 <https://bugs.python.org/issue17621>`__: Introduce importlib.util."
"LazyLoader."
msgstr ""
"`bpo-17621 <https://bugs.python.org/issue17621>`__: Introduce importlib.util."
"LazyLoader."

#: ../../../Misc/NEWS:8375
msgid ""
"`bpo-21076 <https://bugs.python.org/issue21076>`__: signal module constants "
"were turned into enums. Patch by Giampaolo Rodola'."
msgstr ""
"`bpo-21076 <https://bugs.python.org/issue21076>`__: signal module constants "
"were turned into enums. Patch by Giampaolo Rodola'."

#: ../../../Misc/NEWS:8378
msgid ""
"`bpo-20636 <https://bugs.python.org/issue20636>`__: Improved the repr of "
"Tkinter widgets."
msgstr ""
"`bpo-20636 <https://bugs.python.org/issue20636>`__: Improved the repr of "
"Tkinter widgets."

#: ../../../Misc/NEWS:8380
msgid ""
"`bpo-19505 <https://bugs.python.org/issue19505>`__: The items, keys, and "
"values views of OrderedDict now support reverse iteration using reversed()."
msgstr ""
"`bpo-19505 <https://bugs.python.org/issue19505>`__: The items, keys, and "
"values views of OrderedDict now support reverse iteration using reversed()."

#: ../../../Misc/NEWS:8383
msgid ""
"`bpo-21149 <https://bugs.python.org/issue21149>`__: Improved thread-safety "
"in logging cleanup during interpreter shutdown. Thanks to Devin Jeanpierre "
"for the patch."
msgstr ""
"`bpo-21149 <https://bugs.python.org/issue21149>`__: Improved thread-safety "
"in logging cleanup during interpreter shutdown. Thanks to Devin Jeanpierre "
"for the patch."

#: ../../../Misc/NEWS:8386
msgid ""
"`bpo-21058 <https://bugs.python.org/issue21058>`__: Fix a leak of file "
"descriptor in :func:`tempfile.NamedTemporaryFile`, close the file descriptor "
"if :func:`io.open` fails"
msgstr ""
"`bpo-21058 <https://bugs.python.org/issue21058>`__: Fix a leak of file "
"descriptor in :func:`tempfile.NamedTemporaryFile`, close the file descriptor "
"if :func:`io.open` fails"

#: ../../../Misc/NEWS:8390
msgid ""
"`bpo-21200 <https://bugs.python.org/issue21200>`__: Return None from pkgutil."
"get_loader() when __spec__ is missing."
msgstr ""
"`bpo-21200 <https://bugs.python.org/issue21200>`__: Return None from pkgutil."
"get_loader() when __spec__ is missing."

#: ../../../Misc/NEWS:8392
msgid ""
"`bpo-21013 <https://bugs.python.org/issue21013>`__: Enhance ssl."
"create_default_context() when used for server side sockets to provide better "
"security by default."
msgstr ""
"`bpo-21013 <https://bugs.python.org/issue21013>`__: Enhance ssl."
"create_default_context() when used for server side sockets to provide better "
"security by default."

#: ../../../Misc/NEWS:8395
msgid ""
"`bpo-20145 <https://bugs.python.org/issue20145>`__: `assertRaisesRegex` and "
"`assertWarnsRegex` now raise a TypeError if the second argument is not a "
"string or compiled regex."
msgstr ""
"`bpo-20145 <https://bugs.python.org/issue20145>`__: `assertRaisesRegex` and "
"`assertWarnsRegex` now raise a TypeError if the second argument is not a "
"string or compiled regex."

#: ../../../Misc/NEWS:8398
msgid ""
"`bpo-20633 <https://bugs.python.org/issue20633>`__: Replace relative import "
"by absolute import."
msgstr ""
"`bpo-20633 <https://bugs.python.org/issue20633>`__: Replace relative import "
"by absolute import."

#: ../../../Misc/NEWS:8400
msgid ""
"`bpo-20980 <https://bugs.python.org/issue20980>`__: Stop wrapping exception "
"when using ThreadPool."
msgstr ""
"`bpo-20980 <https://bugs.python.org/issue20980>`__: Stop wrapping exception "
"when using ThreadPool."

#: ../../../Misc/NEWS:8402
msgid ""
"`bpo-21082 <https://bugs.python.org/issue21082>`__: In os.makedirs, do not "
"set the process-wide umask. Note this changes behavior of makedirs when "
"exist_ok=True."
msgstr ""
"`bpo-21082 <https://bugs.python.org/issue21082>`__: In os.makedirs, do not "
"set the process-wide umask. Note this changes behavior of makedirs when "
"exist_ok=True."

#: ../../../Misc/NEWS:8405
msgid ""
"`bpo-20990 <https://bugs.python.org/issue20990>`__: Fix issues found by "
"pyflakes for multiprocessing."
msgstr ""
"`bpo-20990 <https://bugs.python.org/issue20990>`__: Fix issues found by "
"pyflakes for multiprocessing."

#: ../../../Misc/NEWS:8407
msgid ""
"`bpo-21015 <https://bugs.python.org/issue21015>`__: SSL contexts will now "
"automatically select an elliptic curve for ECDH key exchange on OpenSSL "
"1.0.2 and later, and otherwise default to \"prime256v1\"."
msgstr ""
"`bpo-21015 <https://bugs.python.org/issue21015>`__: SSL contexts will now "
"automatically select an elliptic curve for ECDH key exchange on OpenSSL "
"1.0.2 and later, and otherwise default to \"prime256v1\"."

#: ../../../Misc/NEWS:8411
msgid ""
"`bpo-21000 <https://bugs.python.org/issue21000>`__: Improve the command-line "
"interface of json.tool."
msgstr ""
"`bpo-21000 <https://bugs.python.org/issue21000>`__: Improve the command-line "
"interface of json.tool."

#: ../../../Misc/NEWS:8413
msgid ""
"`bpo-20995 <https://bugs.python.org/issue20995>`__: Enhance default ciphers "
"used by the ssl module to enable better security and prioritize perfect "
"forward secrecy."
msgstr ""
"`bpo-20995 <https://bugs.python.org/issue20995>`__: Enhance default ciphers "
"used by the ssl module to enable better security and prioritize perfect "
"forward secrecy."

#: ../../../Misc/NEWS:8416
msgid ""
"`bpo-20884 <https://bugs.python.org/issue20884>`__: Don't assume that "
"__file__ is defined on importlib.__init__."
msgstr ""
"`bpo-20884 <https://bugs.python.org/issue20884>`__: Don't assume that "
"__file__ is defined on importlib.__init__."

#: ../../../Misc/NEWS:8418
msgid ""
"`bpo-21499 <https://bugs.python.org/issue21499>`__: Ignore __builtins__ in "
"several test_importlib.test_api tests."
msgstr ""
"`bpo-21499 <https://bugs.python.org/issue21499>`__: Ignore __builtins__ in "
"several test_importlib.test_api tests."

#: ../../../Misc/NEWS:8420
msgid ""
"`bpo-20627 <https://bugs.python.org/issue20627>`__: xmlrpc.client."
"ServerProxy is now a context manager."
msgstr ""
"`bpo-20627 <https://bugs.python.org/issue20627>`__: xmlrpc.client."
"ServerProxy is now a context manager."

#: ../../../Misc/NEWS:8422
msgid ""
"`bpo-19165 <https://bugs.python.org/issue19165>`__: The formatter module now "
"raises DeprecationWarning instead of PendingDeprecationWarning."
msgstr ""
"`bpo-19165 <https://bugs.python.org/issue19165>`__: The formatter module now "
"raises DeprecationWarning instead of PendingDeprecationWarning."

#: ../../../Misc/NEWS:8425
msgid ""
"`bpo-13936 <https://bugs.python.org/issue13936>`__: Remove the ability of "
"datetime.time instances to be considered false in boolean contexts."
msgstr ""
"`bpo-13936 <https://bugs.python.org/issue13936>`__: Remove the ability of "
"datetime.time instances to be considered false in boolean contexts."

#: ../../../Misc/NEWS:8428
msgid ""
"`bpo-18931 <https://bugs.python.org/issue18931>`__: selectors module now "
"supports /dev/poll on Solaris. Patch by Giampaolo Rodola'."
msgstr ""
"`bpo-18931 <https://bugs.python.org/issue18931>`__: selectors module now "
"supports /dev/poll on Solaris. Patch by Giampaolo Rodola'."

#: ../../../Misc/NEWS:8431
msgid ""
"`bpo-19977 <https://bugs.python.org/issue19977>`__: When the ``LC_TYPE`` "
"locale is the POSIX locale (``C`` locale), :py:data:`sys.stdin` and :py:data:"
"`sys.stdout` are now using the ``surrogateescape`` error handler, instead of "
"the ``strict`` error handler."
msgstr ""
"`bpo-19977 <https://bugs.python.org/issue19977>`__: When the ``LC_TYPE`` "
"locale is the POSIX locale (``C`` locale), :py:data:`sys.stdin` and :py:data:"
"`sys.stdout` are now using the ``surrogateescape`` error handler, instead of "
"the ``strict`` error handler."

#: ../../../Misc/NEWS:8435
msgid ""
"`bpo-20574 <https://bugs.python.org/issue20574>`__: Implement incremental "
"decoder for cp65001 code (Windows code page 65001, Microsoft UTF-8)."
msgstr ""
"`bpo-20574 <https://bugs.python.org/issue20574>`__: Implement incremental "
"decoder for cp65001 code (Windows code page 65001, Microsoft UTF-8)."

#: ../../../Misc/NEWS:8438
msgid ""
"`bpo-20879 <https://bugs.python.org/issue20879>`__: Delay the initialization "
"of encoding and decoding tables for base32, ascii85 and base85 codecs in the "
"base64 module, and delay the initialization of the unquote_to_bytes() table "
"of the urllib.parse module, to not waste memory if these modules are not "
"used."
msgstr ""
"`bpo-20879 <https://bugs.python.org/issue20879>`__: Delay the initialization "
"of encoding and decoding tables for base32, ascii85 and base85 codecs in the "
"base64 module, and delay the initialization of the unquote_to_bytes() table "
"of the urllib.parse module, to not waste memory if these modules are not "
"used."

#: ../../../Misc/NEWS:8443
msgid ""
"`bpo-19157 <https://bugs.python.org/issue19157>`__: Include the broadcast "
"address in the usuable hosts for IPv6 in ipaddress."
msgstr ""
"`bpo-19157 <https://bugs.python.org/issue19157>`__: Include the broadcast "
"address in the usuable hosts for IPv6 in ipaddress."

#: ../../../Misc/NEWS:8446
msgid ""
"`bpo-11599 <https://bugs.python.org/issue11599>`__: When an external command "
"(e.g. compiler) fails, distutils now prints out the whole command line "
"(instead of just the command name) if the environment variable "
"DISTUTILS_DEBUG is set."
msgstr ""
"`bpo-11599 <https://bugs.python.org/issue11599>`__: When an external command "
"(e.g. compiler) fails, distutils now prints out the whole command line "
"(instead of just the command name) if the environment variable "
"DISTUTILS_DEBUG is set."

#: ../../../Misc/NEWS:8450
msgid ""
"`bpo-4931 <https://bugs.python.org/issue4931>`__: distutils should not "
"produce unhelpful \"error: None\" messages anymore.  distutils.util."
"grok_environment_error is kept but doc-deprecated."
msgstr ""
"`bpo-4931 <https://bugs.python.org/issue4931>`__: distutils should not "
"produce unhelpful \"error: None\" messages anymore.  distutils.util."
"grok_environment_error is kept but doc-deprecated."

#: ../../../Misc/NEWS:8453
msgid ""
"`bpo-20875 <https://bugs.python.org/issue20875>`__: Prevent possible gzip "
"\"'read' is not defined\" NameError. Patch by Claudiu Popa."
msgstr ""
"`bpo-20875 <https://bugs.python.org/issue20875>`__: Prevent possible gzip "
"\"'read' is not defined\" NameError. Patch by Claudiu Popa."

#: ../../../Misc/NEWS:8456
msgid ""
"`bpo-11558 <https://bugs.python.org/issue11558>`__: ``email.message.Message."
"attach`` now returns a more useful error message if ``attach`` is called on "
"a message for which ``is_multipart`` is False."
msgstr ""
"`bpo-11558 <https://bugs.python.org/issue11558>`__: ``email.message.Message."
"attach`` now returns a more useful error message if ``attach`` is called on "
"a message for which ``is_multipart`` is False."

#: ../../../Misc/NEWS:8460
msgid ""
"`bpo-20283 <https://bugs.python.org/issue20283>`__: RE pattern methods now "
"accept the string keyword parameters as documented.  The pattern and source "
"keyword parameters are left as deprecated aliases."
msgstr ""
"`bpo-20283 <https://bugs.python.org/issue20283>`__: RE pattern methods now "
"accept the string keyword parameters as documented.  The pattern and source "
"keyword parameters are left as deprecated aliases."

#: ../../../Misc/NEWS:8464
msgid ""
"`bpo-20778 <https://bugs.python.org/issue20778>`__: Fix modulefinder to work "
"with bytecode-only modules."
msgstr ""
"`bpo-20778 <https://bugs.python.org/issue20778>`__: Fix modulefinder to work "
"with bytecode-only modules."

#: ../../../Misc/NEWS:8466
msgid ""
"`bpo-20791 <https://bugs.python.org/issue20791>`__: copy.copy() now doesn't "
"make a copy when the input is a bytes object.  Initial patch by Peter Otten."
msgstr ""
"`bpo-20791 <https://bugs.python.org/issue20791>`__: copy.copy() now doesn't "
"make a copy when the input is a bytes object.  Initial patch by Peter Otten."

#: ../../../Misc/NEWS:8469
msgid ""
"`bpo-19748 <https://bugs.python.org/issue19748>`__: On AIX, time.mktime() "
"now raises an OverflowError for year outsize range [1902; 2037]."
msgstr ""
"`bpo-19748 <https://bugs.python.org/issue19748>`__: On AIX, time.mktime() "
"now raises an OverflowError for year outsize range [1902; 2037]."

#: ../../../Misc/NEWS:8472
msgid ""
"`bpo-19573 <https://bugs.python.org/issue19573>`__: inspect.signature: Use "
"enum for parameter kind constants."
msgstr ""
"`bpo-19573 <https://bugs.python.org/issue19573>`__: inspect.signature: Use "
"enum for parameter kind constants."

#: ../../../Misc/NEWS:8474
msgid ""
"`bpo-20726 <https://bugs.python.org/issue20726>`__: inspect.signature: Make "
"Signature and Parameter picklable."
msgstr ""
"`bpo-20726 <https://bugs.python.org/issue20726>`__: inspect.signature: Make "
"Signature and Parameter picklable."

#: ../../../Misc/NEWS:8476
msgid ""
"`bpo-17373 <https://bugs.python.org/issue17373>`__: Add inspect.Signature."
"from_callable method."
msgstr ""
"`bpo-17373 <https://bugs.python.org/issue17373>`__: Add inspect.Signature."
"from_callable method."

#: ../../../Misc/NEWS:8478
msgid ""
"`bpo-20378 <https://bugs.python.org/issue20378>`__: Improve repr of inspect."
"Signature and inspect.Parameter."
msgstr ""
"`bpo-20378 <https://bugs.python.org/issue20378>`__: Improve repr of inspect."
"Signature and inspect.Parameter."

#: ../../../Misc/NEWS:8480
msgid ""
"`bpo-20816 <https://bugs.python.org/issue20816>`__: Fix inspect."
"getcallargs() to raise correct TypeError for missing keyword-only arguments. "
"Patch by Jeremiah Lowin."
msgstr ""
"`bpo-20816 <https://bugs.python.org/issue20816>`__: Fix inspect."
"getcallargs() to raise correct TypeError for missing keyword-only arguments. "
"Patch by Jeremiah Lowin."

#: ../../../Misc/NEWS:8483
msgid ""
"`bpo-20817 <https://bugs.python.org/issue20817>`__: Fix inspect."
"getcallargs() to fail correctly if more than 3 arguments are missing. Patch "
"by Jeremiah Lowin."
msgstr ""
"`bpo-20817 <https://bugs.python.org/issue20817>`__: Fix inspect."
"getcallargs() to fail correctly if more than 3 arguments are missing. Patch "
"by Jeremiah Lowin."

#: ../../../Misc/NEWS:8486
msgid ""
"`bpo-6676 <https://bugs.python.org/issue6676>`__: Ensure a meaningful "
"exception is raised when attempting to parse more than one XML document per "
"pyexpat xmlparser instance. (Original patches by Hirokazu Yamamoto and "
"Amaury Forgeot d'Arc, with suggested wording by David Gutteridge)"
msgstr ""
"`bpo-6676 <https://bugs.python.org/issue6676>`__: Ensure a meaningful "
"exception is raised when attempting to parse more than one XML document per "
"pyexpat xmlparser instance. (Original patches by Hirokazu Yamamoto and "
"Amaury Forgeot d'Arc, with suggested wording by David Gutteridge)"

#: ../../../Misc/NEWS:8491
msgid ""
"`bpo-21117 <https://bugs.python.org/issue21117>`__: Fix inspect.signature to "
"better support functools.partial. Due to the specifics of functools.partial "
"implementation, positional-or-keyword arguments passed as keyword arguments "
"become keyword-only."
msgstr ""
"`bpo-21117 <https://bugs.python.org/issue21117>`__: Fix inspect.signature to "
"better support functools.partial. Due to the specifics of functools.partial "
"implementation, positional-or-keyword arguments passed as keyword arguments "
"become keyword-only."

#: ../../../Misc/NEWS:8496
msgid ""
"`bpo-20334 <https://bugs.python.org/issue20334>`__: inspect.Signature and "
"inspect.Parameter are now hashable. Thanks to Antony Lee for bug reports and "
"suggestions."
msgstr ""
"`bpo-20334 <https://bugs.python.org/issue20334>`__: inspect.Signature and "
"inspect.Parameter are now hashable. Thanks to Antony Lee for bug reports and "
"suggestions."

#: ../../../Misc/NEWS:8499
msgid ""
"`bpo-15916 <https://bugs.python.org/issue15916>`__: doctest.DocTestSuite "
"returns an empty unittest.TestSuite instead of raising ValueError if it "
"finds no tests"
msgstr ""
"`bpo-15916 <https://bugs.python.org/issue15916>`__: doctest.DocTestSuite "
"returns an empty unittest.TestSuite instead of raising ValueError if it "
"finds no tests"

#: ../../../Misc/NEWS:8502
msgid ""
"`bpo-21209 <https://bugs.python.org/issue21209>`__: Fix asyncio.tasks."
"CoroWrapper to workaround a bug in yield-from implementation in CPythons "
"prior to 3.4.1."
msgstr ""
"`bpo-21209 <https://bugs.python.org/issue21209>`__: Fix asyncio.tasks."
"CoroWrapper to workaround a bug in yield-from implementation in CPythons "
"prior to 3.4.1."

#: ../../../Misc/NEWS:8505
msgid ""
"asyncio: Add gi_{frame,running,code} properties to CoroWrapper (upstream "
"`bpo-163 <https://bugs.python.org/issue163>`__)."
msgstr ""
"asyncio: Add gi_{frame,running,code} properties to CoroWrapper (upstream "
"`bpo-163 <https://bugs.python.org/issue163>`__)."

#: ../../../Misc/NEWS:8508
msgid ""
"`bpo-21311 <https://bugs.python.org/issue21311>`__: Avoid exception in "
"_osx_support with non-standard compiler configurations.  Patch by John "
"Szakmeister."
msgstr ""
"`bpo-21311 <https://bugs.python.org/issue21311>`__: Avoid exception in "
"_osx_support with non-standard compiler configurations.  Patch by John "
"Szakmeister."

#: ../../../Misc/NEWS:8511
msgid ""
"`bpo-11571 <https://bugs.python.org/issue11571>`__: Ensure that the turtle "
"window becomes the topmost window when launched on OS X."
msgstr ""
"`bpo-11571 <https://bugs.python.org/issue11571>`__: Ensure that the turtle "
"window becomes the topmost window when launched on OS X."

#: ../../../Misc/NEWS:8514
msgid ""
"`bpo-21801 <https://bugs.python.org/issue21801>`__: Validate that "
"__signature__ is None or an instance of Signature."
msgstr ""
"`bpo-21801 <https://bugs.python.org/issue21801>`__: Validate that "
"__signature__ is None or an instance of Signature."

#: ../../../Misc/NEWS:8516
msgid ""
"`bpo-21923 <https://bugs.python.org/issue21923>`__: Prevent AttributeError "
"in distutils.sysconfig.customize_compiler due to possible uninitialized "
"_config_vars."
msgstr ""
"`bpo-21923 <https://bugs.python.org/issue21923>`__: Prevent AttributeError "
"in distutils.sysconfig.customize_compiler due to possible uninitialized "
"_config_vars."

#: ../../../Misc/NEWS:8519
msgid ""
"`bpo-21323 <https://bugs.python.org/issue21323>`__: Fix http.server to again "
"handle scripts in CGI subdirectories, broken by the fix for security "
"`bpo-19435 <https://bugs.python.org/issue19435>`__.  Patch by Zach Byrne."
msgstr ""
"`bpo-21323 <https://bugs.python.org/issue21323>`__: Fix http.server to again "
"handle scripts in CGI subdirectories, broken by the fix for security "
"`bpo-19435 <https://bugs.python.org/issue19435>`__.  Patch by Zach Byrne."

#: ../../../Misc/NEWS:8522
msgid ""
"`bpo-22733 <https://bugs.python.org/issue22733>`__: Fix ffi_prep_args not "
"zero-extending argument values correctly on 64-bit Windows."
msgstr ""
"`bpo-22733 <https://bugs.python.org/issue22733>`__: Fix ffi_prep_args not "
"zero-extending argument values correctly on 64-bit Windows."

#: ../../../Misc/NEWS:8525
msgid ""
"`bpo-23302 <https://bugs.python.org/issue23302>`__: Default to TCP_NODELAY=1 "
"upon establishing an HTTPConnection. Removed use of hard-coded MSS as it's "
"an optimization that's no longer needed with Nagle disabled."
msgstr ""
"`bpo-23302 <https://bugs.python.org/issue23302>`__: Default to TCP_NODELAY=1 "
"upon establishing an HTTPConnection. Removed use of hard-coded MSS as it's "
"an optimization that's no longer needed with Nagle disabled."

#: ../../../Misc/NEWS:8532
msgid ""
"`bpo-20577 <https://bugs.python.org/issue20577>`__: Configuration of the max "
"line length for the FormatParagraph extension has been moved from the "
"General tab of the Idle preferences dialog to the FormatParagraph tab of the "
"Config Extensions dialog. Patch by Tal Einat."
msgstr ""
"`bpo-20577 <https://bugs.python.org/issue20577>`__: Configuration of the max "
"line length for the FormatParagraph extension has been moved from the "
"General tab of the Idle preferences dialog to the FormatParagraph tab of the "
"Config Extensions dialog. Patch by Tal Einat."

#: ../../../Misc/NEWS:8537
msgid ""
"`bpo-16893 <https://bugs.python.org/issue16893>`__: Update Idle doc chapter "
"to match current Idle and add new information."
msgstr ""
"`bpo-16893 <https://bugs.python.org/issue16893>`__: Update Idle doc chapter "
"to match current Idle and add new information."

#: ../../../Misc/NEWS:8540
msgid ""
"`bpo-3068 <https://bugs.python.org/issue3068>`__: Add Idle extension "
"configuration dialog to Options menu. Changes are written to HOME/.idlerc/"
"config-extensions.cfg. Original patch by Tal Einat."
msgstr ""
"`bpo-3068 <https://bugs.python.org/issue3068>`__: Add Idle extension "
"configuration dialog to Options menu. Changes are written to HOME/.idlerc/"
"config-extensions.cfg. Original patch by Tal Einat."

#: ../../../Misc/NEWS:8544
msgid ""
"`bpo-16233 <https://bugs.python.org/issue16233>`__: A module browser (File : "
"Class Browser, Alt+C) requires an editor window with a filename.  When Class "
"Browser is requested otherwise, from a shell, output window, or 'Untitled' "
"editor, Idle no longer displays an error box.  It now pops up an Open Module "
"box (Alt+M). If a valid name is entered and a module is opened, a "
"corresponding browser is also opened."
msgstr ""
"`bpo-16233 <https://bugs.python.org/issue16233>`__: A module browser (File : "
"Class Browser, Alt+C) requires an editor window with a filename.  When Class "
"Browser is requested otherwise, from a shell, output window, or 'Untitled' "
"editor, Idle no longer displays an error box.  It now pops up an Open Module "
"box (Alt+M). If a valid name is entered and a module is opened, a "
"corresponding browser is also opened."

#: ../../../Misc/NEWS:8550
msgid ""
"`bpo-4832 <https://bugs.python.org/issue4832>`__: Save As to type Python "
"files automatically adds .py to the name you enter (even if your system does "
"not display it).  Some systems automatically add .txt when type is Text "
"files."
msgstr ""
"`bpo-4832 <https://bugs.python.org/issue4832>`__: Save As to type Python "
"files automatically adds .py to the name you enter (even if your system does "
"not display it).  Some systems automatically add .txt when type is Text "
"files."

#: ../../../Misc/NEWS:8554
msgid ""
"`bpo-21986 <https://bugs.python.org/issue21986>`__: Code objects are not "
"normally pickled by the pickle module. To match this, they are no longer "
"pickled when running under Idle."
msgstr ""
"`bpo-21986 <https://bugs.python.org/issue21986>`__: Code objects are not "
"normally pickled by the pickle module. To match this, they are no longer "
"pickled when running under Idle."

#: ../../../Misc/NEWS:8557
msgid ""
"`bpo-17390 <https://bugs.python.org/issue17390>`__: Adjust Editor window "
"title; remove 'Python', move version to end."
msgstr ""
"`bpo-17390 <https://bugs.python.org/issue17390>`__: Adjust Editor window "
"title; remove 'Python', move version to end."

#: ../../../Misc/NEWS:8560
msgid ""
"`bpo-14105 <https://bugs.python.org/issue14105>`__: Idle debugger "
"breakpoints no longer disappear when inserting or deleting lines."
msgstr ""
"`bpo-14105 <https://bugs.python.org/issue14105>`__: Idle debugger "
"breakpoints no longer disappear when inserting or deleting lines."

#: ../../../Misc/NEWS:8563
msgid ""
"`bpo-17172 <https://bugs.python.org/issue17172>`__: Turtledemo can now be "
"run from Idle. Currently, the entry is on the Help menu, but it may move to "
"Run. Patch by Ramchandra Apt and Lita Cho."
msgstr ""
"`bpo-17172 <https://bugs.python.org/issue17172>`__: Turtledemo can now be "
"run from Idle. Currently, the entry is on the Help menu, but it may move to "
"Run. Patch by Ramchandra Apt and Lita Cho."

#: ../../../Misc/NEWS:8567
msgid ""
"`bpo-21765 <https://bugs.python.org/issue21765>`__: Add support for non-"
"ascii identifiers to HyperParser."
msgstr ""
"`bpo-21765 <https://bugs.python.org/issue21765>`__: Add support for non-"
"ascii identifiers to HyperParser."

#: ../../../Misc/NEWS:8569
msgid ""
"`bpo-21940 <https://bugs.python.org/issue21940>`__: Add unittest for "
"WidgetRedirector. Initial patch by Saimadhav Heblikar."
msgstr ""
"`bpo-21940 <https://bugs.python.org/issue21940>`__: Add unittest for "
"WidgetRedirector. Initial patch by Saimadhav Heblikar."

#: ../../../Misc/NEWS:8572
msgid ""
"`bpo-18592 <https://bugs.python.org/issue18592>`__: Add unittest for "
"SearchDialogBase. Patch by Phil Webster."
msgstr ""
"`bpo-18592 <https://bugs.python.org/issue18592>`__: Add unittest for "
"SearchDialogBase. Patch by Phil Webster."

#: ../../../Misc/NEWS:8574
msgid ""
"`bpo-21694 <https://bugs.python.org/issue21694>`__: Add unittest for "
"ParenMatch. Patch by Saimadhav Heblikar."
msgstr ""
"`bpo-21694 <https://bugs.python.org/issue21694>`__: Add unittest for "
"ParenMatch. Patch by Saimadhav Heblikar."

#: ../../../Misc/NEWS:8576
msgid ""
"`bpo-21686 <https://bugs.python.org/issue21686>`__: add unittest for "
"HyperParser. Original patch by Saimadhav Heblikar."
msgstr ""
"`bpo-21686 <https://bugs.python.org/issue21686>`__: add unittest for "
"HyperParser. Original patch by Saimadhav Heblikar."

#: ../../../Misc/NEWS:8579
msgid ""
"`bpo-12387 <https://bugs.python.org/issue12387>`__: Add missing "
"upper(lower)case versions of default Windows key bindings for Idle so Caps "
"Lock does not disable them. Patch by Roger Serwy."
msgstr ""
"`bpo-12387 <https://bugs.python.org/issue12387>`__: Add missing "
"upper(lower)case versions of default Windows key bindings for Idle so Caps "
"Lock does not disable them. Patch by Roger Serwy."

#: ../../../Misc/NEWS:8582
msgid ""
"`bpo-21695 <https://bugs.python.org/issue21695>`__: Closing a Find-in-files "
"output window while the search is still in progress no longer closes Idle."
msgstr ""
"`bpo-21695 <https://bugs.python.org/issue21695>`__: Closing a Find-in-files "
"output window while the search is still in progress no longer closes Idle."

#: ../../../Misc/NEWS:8585
msgid ""
"`bpo-18910 <https://bugs.python.org/issue18910>`__: Add unittest for "
"textView. Patch by Phil Webster."
msgstr ""
"`bpo-18910 <https://bugs.python.org/issue18910>`__: Add unittest for "
"textView. Patch by Phil Webster."

#: ../../../Misc/NEWS:8587
msgid ""
"`bpo-18292 <https://bugs.python.org/issue18292>`__: Add unittest for "
"AutoExpand. Patch by Saihadhav Heblikar."
msgstr ""
"`bpo-18292 <https://bugs.python.org/issue18292>`__: Add unittest for "
"AutoExpand. Patch by Saihadhav Heblikar."

#: ../../../Misc/NEWS:8589
msgid ""
"`bpo-18409 <https://bugs.python.org/issue18409>`__: Add unittest for "
"AutoComplete. Patch by Phil Webster."
msgstr ""
"`bpo-18409 <https://bugs.python.org/issue18409>`__: Add unittest for "
"AutoComplete. Patch by Phil Webster."

#: ../../../Misc/NEWS:8591
msgid ""
"`bpo-21477 <https://bugs.python.org/issue21477>`__: htest.py - Improve "
"framework, complete set of tests. Patches by Saimadhav Heblikar"
msgstr ""
"`bpo-21477 <https://bugs.python.org/issue21477>`__: htest.py - Improve "
"framework, complete set of tests. Patches by Saimadhav Heblikar"

#: ../../../Misc/NEWS:8594
msgid ""
"`bpo-18104 <https://bugs.python.org/issue18104>`__: Add idlelib/idle_test/"
"htest.py with a few sample tests to begin consolidating and improving human-"
"validated tests of Idle. Change other files as needed to work with htest.  "
"Running the module as __main__ runs all tests."
msgstr ""
"`bpo-18104 <https://bugs.python.org/issue18104>`__: Add idlelib/idle_test/"
"htest.py with a few sample tests to begin consolidating and improving human-"
"validated tests of Idle. Change other files as needed to work with htest.  "
"Running the module as __main__ runs all tests."

#: ../../../Misc/NEWS:8598
msgid ""
"`bpo-21139 <https://bugs.python.org/issue21139>`__: Change default paragraph "
"width to 72, the PEP 8 recommendation."
msgstr ""
"`bpo-21139 <https://bugs.python.org/issue21139>`__: Change default paragraph "
"width to 72, the PEP 8 recommendation."

#: ../../../Misc/NEWS:8600
msgid ""
"`bpo-21284 <https://bugs.python.org/issue21284>`__: Paragraph reformat test "
"passes after user changes reformat width."
msgstr ""
"`bpo-21284 <https://bugs.python.org/issue21284>`__: Paragraph reformat test "
"passes after user changes reformat width."

#: ../../../Misc/NEWS:8602
msgid ""
"`bpo-17654 <https://bugs.python.org/issue17654>`__: Ensure IDLE menus are "
"customized properly on OS X for non-framework builds and for all variants of "
"Tk."
msgstr ""
"`bpo-17654 <https://bugs.python.org/issue17654>`__: Ensure IDLE menus are "
"customized properly on OS X for non-framework builds and for all variants of "
"Tk."

#: ../../../Misc/NEWS:8605
msgid ""
"`bpo-23180 <https://bugs.python.org/issue23180>`__: Rename IDLE \"Windows\" "
"menu item to \"Window\". Patch by Al Sweigart."
msgstr ""
"`bpo-23180 <https://bugs.python.org/issue23180>`__: Rename IDLE \"Windows\" "
"menu item to \"Window\". Patch by Al Sweigart."

#: ../../../Misc/NEWS:8611
msgid ""
"`bpo-15506 <https://bugs.python.org/issue15506>`__: Use standard "
"PKG_PROG_PKG_CONFIG autoconf macro in the configure script."
msgstr ""
"`bpo-15506 <https://bugs.python.org/issue15506>`__: Use standard "
"PKG_PROG_PKG_CONFIG autoconf macro in the configure script."

#: ../../../Misc/NEWS:8614
msgid ""
"`bpo-22935 <https://bugs.python.org/issue22935>`__: Allow the ssl module to "
"be compiled if openssl doesn't support SSL 3."
msgstr ""
"`bpo-22935 <https://bugs.python.org/issue22935>`__: Allow the ssl module to "
"be compiled if openssl doesn't support SSL 3."

#: ../../../Misc/NEWS:8617
msgid ""
"`bpo-22592 <https://bugs.python.org/issue22592>`__: Drop support of the "
"Borland C compiler to build Python. The distutils module still supports it "
"to build extensions."
msgstr ""
"`bpo-22592 <https://bugs.python.org/issue22592>`__: Drop support of the "
"Borland C compiler to build Python. The distutils module still supports it "
"to build extensions."

#: ../../../Misc/NEWS:8620
msgid ""
"`bpo-22591 <https://bugs.python.org/issue22591>`__: Drop support of MS-DOS, "
"especially of the DJGPP compiler (MS-DOS port of GCC)."
msgstr ""
"`bpo-22591 <https://bugs.python.org/issue22591>`__: Drop support of MS-DOS, "
"especially of the DJGPP compiler (MS-DOS port of GCC)."

#: ../../../Misc/NEWS:8623
msgid ""
"`bpo-16537 <https://bugs.python.org/issue16537>`__: Check whether self."
"extensions is empty in setup.py. Patch by Jonathan Hosmer."
msgstr ""
"`bpo-16537 <https://bugs.python.org/issue16537>`__: Check whether self."
"extensions is empty in setup.py. Patch by Jonathan Hosmer."

#: ../../../Misc/NEWS:8626
msgid ""
"`bpo-22359 <https://bugs.python.org/issue22359>`__: Remove incorrect uses of "
"recursive make.  Patch by Jonas Wagner."
msgstr ""
"`bpo-22359 <https://bugs.python.org/issue22359>`__: Remove incorrect uses of "
"recursive make.  Patch by Jonas Wagner."

#: ../../../Misc/NEWS:8629
msgid ""
"`bpo-21958 <https://bugs.python.org/issue21958>`__: Define HAVE_ROUND when "
"building with Visual Studio 2013 and above.  Patch by Zachary Turner."
msgstr ""
"`bpo-21958 <https://bugs.python.org/issue21958>`__: Define HAVE_ROUND when "
"building with Visual Studio 2013 and above.  Patch by Zachary Turner."

#: ../../../Misc/NEWS:8632
msgid ""
"`bpo-18093 <https://bugs.python.org/issue18093>`__: the programs that embed "
"the CPython runtime are now in a separate \"Programs\" directory, rather "
"than being kept in the Modules directory."
msgstr ""
"`bpo-18093 <https://bugs.python.org/issue18093>`__: the programs that embed "
"the CPython runtime are now in a separate \"Programs\" directory, rather "
"than being kept in the Modules directory."

#: ../../../Misc/NEWS:8636
msgid ""
"`bpo-15759 <https://bugs.python.org/issue15759>`__: \"make suspicious\", "
"\"make linkcheck\" and \"make doctest\" in Doc/ now display special message "
"when and only when there are failures."
msgstr ""
"`bpo-15759 <https://bugs.python.org/issue15759>`__: \"make suspicious\", "
"\"make linkcheck\" and \"make doctest\" in Doc/ now display special message "
"when and only when there are failures."

#: ../../../Misc/NEWS:8639
msgid ""
"`bpo-21141 <https://bugs.python.org/issue21141>`__: The Windows build "
"process no longer attempts to find Perl, instead relying on OpenSSL source "
"being configured and ready to build.  The ``PCbuild\\build_ssl.py`` script "
"has been re-written and re-named to ``PCbuild\\prepare_ssl.py``, and takes "
"care of configuring OpenSSL source for both 32 and 64 bit platforms.  "
"OpenSSL sources obtained from svn.python.org will always be pre-configured "
"and ready to build."
msgstr ""
"`bpo-21141 <https://bugs.python.org/issue21141>`__: The Windows build "
"process no longer attempts to find Perl, instead relying on OpenSSL source "
"being configured and ready to build.  The ``PCbuild\\build_ssl.py`` script "
"has been re-written and re-named to ``PCbuild\\prepare_ssl.py``, and takes "
"care of configuring OpenSSL source for both 32 and 64 bit platforms.  "
"OpenSSL sources obtained from svn.python.org will always be pre-configured "
"and ready to build."

#: ../../../Misc/NEWS:8646
msgid ""
"`bpo-21037 <https://bugs.python.org/issue21037>`__: Add a build option to "
"enable AddressSanitizer support."
msgstr ""
"`bpo-21037 <https://bugs.python.org/issue21037>`__: Add a build option to "
"enable AddressSanitizer support."

#: ../../../Misc/NEWS:8648
msgid ""
"`bpo-19962 <https://bugs.python.org/issue19962>`__: The Windows build "
"process now creates \"python.bat\" in the root of the source tree, which "
"passes all arguments through to the most recently built interpreter."
msgstr ""
"`bpo-19962 <https://bugs.python.org/issue19962>`__: The Windows build "
"process now creates \"python.bat\" in the root of the source tree, which "
"passes all arguments through to the most recently built interpreter."

#: ../../../Misc/NEWS:8652
msgid ""
"`bpo-21285 <https://bugs.python.org/issue21285>`__: Refactor and fix curses "
"configure check to always search in a ncursesw directory."
msgstr ""
"`bpo-21285 <https://bugs.python.org/issue21285>`__: Refactor and fix curses "
"configure check to always search in a ncursesw directory."

#: ../../../Misc/NEWS:8655
msgid ""
"`bpo-15234 <https://bugs.python.org/issue15234>`__: For BerkelyDB and "
"Sqlite, only add the found library and include directories if they aren't "
"already being searched. This avoids an explicit runtime library dependency."
msgstr ""
"`bpo-15234 <https://bugs.python.org/issue15234>`__: For BerkelyDB and "
"Sqlite, only add the found library and include directories if they aren't "
"already being searched. This avoids an explicit runtime library dependency."

#: ../../../Misc/NEWS:8659
msgid ""
"`bpo-17861 <https://bugs.python.org/issue17861>`__: Tools/scripts/"
"generate_opcode_h.py automatically regenerates Include/opcode.h from Lib/"
"opcode.py if the latter gets any change."
msgstr ""
"`bpo-17861 <https://bugs.python.org/issue17861>`__: Tools/scripts/"
"generate_opcode_h.py automatically regenerates Include/opcode.h from Lib/"
"opcode.py if the latter gets any change."

#: ../../../Misc/NEWS:8662
msgid ""
"`bpo-20644 <https://bugs.python.org/issue20644>`__: OS X installer build "
"support for documentation build changes in 3.4.1: assume externally supplied "
"sphinx-build is available in /usr/bin."
msgstr ""
"`bpo-20644 <https://bugs.python.org/issue20644>`__: OS X installer build "
"support for documentation build changes in 3.4.1: assume externally supplied "
"sphinx-build is available in /usr/bin."

#: ../../../Misc/NEWS:8665
msgid ""
"`bpo-20022 <https://bugs.python.org/issue20022>`__: Eliminate use of "
"deprecated bundlebuilder in OS X builds."
msgstr ""
"`bpo-20022 <https://bugs.python.org/issue20022>`__: Eliminate use of "
"deprecated bundlebuilder in OS X builds."

#: ../../../Misc/NEWS:8667
msgid ""
"`bpo-15968 <https://bugs.python.org/issue15968>`__: Incorporated Tcl, Tk, "
"and Tix builds into the Windows build solution."
msgstr ""
"`bpo-15968 <https://bugs.python.org/issue15968>`__: Incorporated Tcl, Tk, "
"and Tix builds into the Windows build solution."

#: ../../../Misc/NEWS:8670
msgid ""
"`bpo-17095 <https://bugs.python.org/issue17095>`__: Fix Modules/Setup "
"*shared* support."
msgstr ""
"`bpo-17095 <https://bugs.python.org/issue17095>`__: Fix Modules/Setup "
"*shared* support."

#: ../../../Misc/NEWS:8672
msgid ""
"`bpo-21811 <https://bugs.python.org/issue21811>`__: Anticipated fixes to "
"support OS X versions > 10.9."
msgstr ""
"`bpo-21811 <https://bugs.python.org/issue21811>`__: Anticipated fixes to "
"support OS X versions > 10.9."

#: ../../../Misc/NEWS:8674
msgid ""
"`bpo-21166 <https://bugs.python.org/issue21166>`__: Prevent possible "
"segfaults and other random failures of python --generate-posix-vars in "
"pybuilddir.txt build target."
msgstr ""
"`bpo-21166 <https://bugs.python.org/issue21166>`__: Prevent possible "
"segfaults and other random failures of python --generate-posix-vars in "
"pybuilddir.txt build target."

#: ../../../Misc/NEWS:8677
msgid ""
"`bpo-18096 <https://bugs.python.org/issue18096>`__: Fix library order "
"returned by python-config."
msgstr ""
"`bpo-18096 <https://bugs.python.org/issue18096>`__: Fix library order "
"returned by python-config."

#: ../../../Misc/NEWS:8679
msgid ""
"`bpo-17219 <https://bugs.python.org/issue17219>`__: Add library build dir "
"for Python extension cross-builds."
msgstr ""
"`bpo-17219 <https://bugs.python.org/issue17219>`__: Add library build dir "
"for Python extension cross-builds."

#: ../../../Misc/NEWS:8681
msgid ""
"`bpo-22919 <https://bugs.python.org/issue22919>`__: Windows build updated to "
"support VC 14.0 (Visual Studio 2015), which will be used for the official "
"release."
msgstr ""
"`bpo-22919 <https://bugs.python.org/issue22919>`__: Windows build updated to "
"support VC 14.0 (Visual Studio 2015), which will be used for the official "
"release."

#: ../../../Misc/NEWS:8684
msgid ""
"`bpo-21236 <https://bugs.python.org/issue21236>`__: Build _msi.pyd with "
"cabinet.lib instead of fci.lib"
msgstr ""
"`bpo-21236 <https://bugs.python.org/issue21236>`__: Build _msi.pyd with "
"cabinet.lib instead of fci.lib"

#: ../../../Misc/NEWS:8686
msgid ""
"`bpo-17128 <https://bugs.python.org/issue17128>`__: Use private version of "
"OpenSSL for OS X 10.5+ installer."
msgstr ""
"`bpo-17128 <https://bugs.python.org/issue17128>`__: Use private version of "
"OpenSSL for OS X 10.5+ installer."

#: ../../../Misc/NEWS:8691
msgid ""
"`bpo-14203 <https://bugs.python.org/issue14203>`__: Remove obsolete support "
"for view==NULL in PyBuffer_FillInfo(), bytearray_getbuffer(), "
"bytesiobuf_getbuffer() and array_buffer_getbuf(). All functions now raise "
"BufferError in that case."
msgstr ""
"`bpo-14203 <https://bugs.python.org/issue14203>`__: Remove obsolete support "
"for view==NULL in PyBuffer_FillInfo(), bytearray_getbuffer(), "
"bytesiobuf_getbuffer() and array_buffer_getbuf(). All functions now raise "
"BufferError in that case."

#: ../../../Misc/NEWS:8695
msgid ""
"`bpo-22445 <https://bugs.python.org/issue22445>`__: PyBuffer_IsContiguous() "
"now implements precise contiguity tests, compatible with NumPy's "
"NPY_RELAXED_STRIDES_CHECKING compilation flag.  Previously the function "
"reported false negatives for corner cases."
msgstr ""
"`bpo-22445 <https://bugs.python.org/issue22445>`__: PyBuffer_IsContiguous() "
"now implements precise contiguity tests, compatible with NumPy's "
"NPY_RELAXED_STRIDES_CHECKING compilation flag.  Previously the function "
"reported false negatives for corner cases."

#: ../../../Misc/NEWS:8699
msgid ""
"`bpo-22079 <https://bugs.python.org/issue22079>`__: PyType_Ready() now "
"checks that statically allocated type has no dynamically allocated bases."
msgstr ""
"`bpo-22079 <https://bugs.python.org/issue22079>`__: PyType_Ready() now "
"checks that statically allocated type has no dynamically allocated bases."

#: ../../../Misc/NEWS:8702
msgid ""
"`bpo-22453 <https://bugs.python.org/issue22453>`__: Removed non-documented "
"macro PyObject_REPR()."
msgstr ""
"`bpo-22453 <https://bugs.python.org/issue22453>`__: Removed non-documented "
"macro PyObject_REPR()."

#: ../../../Misc/NEWS:8704
msgid ""
"`bpo-18395 <https://bugs.python.org/issue18395>`__: Rename "
"``_Py_char2wchar()`` to :c:func:`Py_DecodeLocale`, rename "
"``_Py_wchar2char()`` to :c:func:`Py_EncodeLocale`, and document these "
"functions."
msgstr ""
"`bpo-18395 <https://bugs.python.org/issue18395>`__: Rename "
"``_Py_char2wchar()`` to :c:func:`Py_DecodeLocale`, rename "
"``_Py_wchar2char()`` to :c:func:`Py_EncodeLocale`, and document these "
"functions."

#: ../../../Misc/NEWS:8708
msgid ""
"`bpo-21233 <https://bugs.python.org/issue21233>`__: Add new C functions: "
"PyMem_RawCalloc(), PyMem_Calloc(), PyObject_Calloc(), _PyObject_GC_Calloc(). "
"bytes(int) is now using ``calloc()`` instead of ``malloc()`` for large "
"objects which is faster and use less memory."
msgstr ""
"`bpo-21233 <https://bugs.python.org/issue21233>`__: Add new C functions: "
"PyMem_RawCalloc(), PyMem_Calloc(), PyObject_Calloc(), _PyObject_GC_Calloc(). "
"bytes(int) is now using ``calloc()`` instead of ``malloc()`` for large "
"objects which is faster and use less memory."

#: ../../../Misc/NEWS:8713
msgid ""
"`bpo-20942 <https://bugs.python.org/issue20942>`__: "
"PyImport_ImportFrozenModuleObject() no longer sets __file__ to match what "
"importlib does; this affects _frozen_importlib as well as any module loaded "
"using imp.init_frozen()."
msgstr ""
"`bpo-20942 <https://bugs.python.org/issue20942>`__: "
"PyImport_ImportFrozenModuleObject() no longer sets __file__ to match what "
"importlib does; this affects _frozen_importlib as well as any module loaded "
"using imp.init_frozen()."

#: ../../../Misc/NEWS:8720
msgid ""
"`bpo-19548 <https://bugs.python.org/issue19548>`__: Update the codecs module "
"documentation to better cover the distinction between text encodings and "
"other codecs, together with other clarifications. Patch by Martin Panter."
msgstr ""
"`bpo-19548 <https://bugs.python.org/issue19548>`__: Update the codecs module "
"documentation to better cover the distinction between text encodings and "
"other codecs, together with other clarifications. Patch by Martin Panter."

#: ../../../Misc/NEWS:8724
msgid ""
"`bpo-22394 <https://bugs.python.org/issue22394>`__: Doc/Makefile now "
"supports ``make venv PYTHON=../python`` to create a venv for generating the "
"documentation, e.g., ``make html PYTHON=venv/bin/python3``."
msgstr ""
"`bpo-22394 <https://bugs.python.org/issue22394>`__: Doc/Makefile now "
"supports ``make venv PYTHON=../python`` to create a venv for generating the "
"documentation, e.g., ``make html PYTHON=venv/bin/python3``."

#: ../../../Misc/NEWS:8728
msgid ""
"`bpo-21514 <https://bugs.python.org/issue21514>`__: The documentation of the "
"json module now refers to new JSON RFC 7159 instead of obsoleted RFC 4627."
msgstr ""
"`bpo-21514 <https://bugs.python.org/issue21514>`__: The documentation of the "
"json module now refers to new JSON RFC 7159 instead of obsoleted RFC 4627."

#: ../../../Misc/NEWS:8731
msgid ""
"`bpo-21777 <https://bugs.python.org/issue21777>`__: The binary sequence "
"methods on bytes and bytearray are now documented explicitly, rather than "
"assuming users will be able to derive the expected behaviour from the "
"behaviour of the corresponding str methods."
msgstr ""
"`bpo-21777 <https://bugs.python.org/issue21777>`__: The binary sequence "
"methods on bytes and bytearray are now documented explicitly, rather than "
"assuming users will be able to derive the expected behaviour from the "
"behaviour of the corresponding str methods."

#: ../../../Misc/NEWS:8735
msgid ""
"`bpo-6916 <https://bugs.python.org/issue6916>`__: undocument deprecated "
"asynchat.fifo class."
msgstr ""
"`bpo-6916 <https://bugs.python.org/issue6916>`__: undocument deprecated "
"asynchat.fifo class."

#: ../../../Misc/NEWS:8737
msgid ""
"`bpo-17386 <https://bugs.python.org/issue17386>`__: Expanded functionality "
"of the ``Doc/make.bat`` script to make it much more comparable to ``Doc/"
"Makefile``."
msgstr ""
"`bpo-17386 <https://bugs.python.org/issue17386>`__: Expanded functionality "
"of the ``Doc/make.bat`` script to make it much more comparable to ``Doc/"
"Makefile``."

#: ../../../Misc/NEWS:8740
msgid ""
"`bpo-21312 <https://bugs.python.org/issue21312>`__: Update the thread_foobar."
"h template file to include newer threading APIs.  Patch by Jack McCracken."
msgstr ""
"`bpo-21312 <https://bugs.python.org/issue21312>`__: Update the thread_foobar."
"h template file to include newer threading APIs.  Patch by Jack McCracken."

#: ../../../Misc/NEWS:8743
msgid ""
"`bpo-21043 <https://bugs.python.org/issue21043>`__: Remove the "
"recommendation for specific CA organizations and to mention the ability to "
"load the OS certificates."
msgstr ""
"`bpo-21043 <https://bugs.python.org/issue21043>`__: Remove the "
"recommendation for specific CA organizations and to mention the ability to "
"load the OS certificates."

#: ../../../Misc/NEWS:8746
msgid ""
"`bpo-20765 <https://bugs.python.org/issue20765>`__: Add missing "
"documentation for PurePath.with_name() and PurePath.with_suffix()."
msgstr ""
"`bpo-20765 <https://bugs.python.org/issue20765>`__: Add missing "
"documentation for PurePath.with_name() and PurePath.with_suffix()."

#: ../../../Misc/NEWS:8749
msgid ""
"`bpo-19407 <https://bugs.python.org/issue19407>`__: New package installation "
"and distribution guides based on the Python Packaging Authority tools. "
"Existing guides have been retained as legacy links from the distutils docs, "
"as they still contain some required reference material for tool developers "
"that isn't recorded anywhere else."
msgstr ""
"`bpo-19407 <https://bugs.python.org/issue19407>`__: New package installation "
"and distribution guides based on the Python Packaging Authority tools. "
"Existing guides have been retained as legacy links from the distutils docs, "
"as they still contain some required reference material for tool developers "
"that isn't recorded anywhere else."

#: ../../../Misc/NEWS:8755
msgid ""
"`bpo-19697 <https://bugs.python.org/issue19697>`__: Document cases where "
"__main__.__spec__ is None."
msgstr ""
"`bpo-19697 <https://bugs.python.org/issue19697>`__: Document cases where "
"__main__.__spec__ is None."

#: ../../../Misc/NEWS:8760
msgid ""
"`bpo-18982 <https://bugs.python.org/issue18982>`__: Add tests for CLI of the "
"calendar module."
msgstr ""
"`bpo-18982 <https://bugs.python.org/issue18982>`__: Add tests for CLI of the "
"calendar module."

#: ../../../Misc/NEWS:8762
msgid ""
"`bpo-19548 <https://bugs.python.org/issue19548>`__: Added some additional "
"checks to test_codecs to ensure that statements in the updated documentation "
"remain accurate. Patch by Martin Panter."
msgstr ""
"`bpo-19548 <https://bugs.python.org/issue19548>`__: Added some additional "
"checks to test_codecs to ensure that statements in the updated documentation "
"remain accurate. Patch by Martin Panter."

#: ../../../Misc/NEWS:8766
msgid ""
"`bpo-22838 <https://bugs.python.org/issue22838>`__: All test_re tests now "
"work with unittest test discovery."
msgstr ""
"`bpo-22838 <https://bugs.python.org/issue22838>`__: All test_re tests now "
"work with unittest test discovery."

#: ../../../Misc/NEWS:8768
msgid ""
"`bpo-22173 <https://bugs.python.org/issue22173>`__: Update lib2to3 tests to "
"use unittest test discovery."
msgstr ""
"`bpo-22173 <https://bugs.python.org/issue22173>`__: Update lib2to3 tests to "
"use unittest test discovery."

#: ../../../Misc/NEWS:8770
msgid ""
"`bpo-16000 <https://bugs.python.org/issue16000>`__: Convert test_curses to "
"use unittest."
msgstr ""
"`bpo-16000 <https://bugs.python.org/issue16000>`__: Convert test_curses to "
"use unittest."

#: ../../../Misc/NEWS:8772
msgid ""
"`bpo-21456 <https://bugs.python.org/issue21456>`__: Skip two tests in "
"test_urllib2net.py if _ssl module not present. Patch by Remi Pointel."
msgstr ""
"`bpo-21456 <https://bugs.python.org/issue21456>`__: Skip two tests in "
"test_urllib2net.py if _ssl module not present. Patch by Remi Pointel."

#: ../../../Misc/NEWS:8775
msgid ""
"`bpo-20746 <https://bugs.python.org/issue20746>`__: Fix test_pdb to run in "
"refleak mode (-R).  Patch by Xavier de Gaye."
msgstr ""
"`bpo-20746 <https://bugs.python.org/issue20746>`__: Fix test_pdb to run in "
"refleak mode (-R).  Patch by Xavier de Gaye."

#: ../../../Misc/NEWS:8778
msgid ""
"`bpo-22060 <https://bugs.python.org/issue22060>`__: test_ctypes has been "
"somewhat cleaned up and simplified; it now uses unittest test discovery to "
"find its tests."
msgstr ""
"`bpo-22060 <https://bugs.python.org/issue22060>`__: test_ctypes has been "
"somewhat cleaned up and simplified; it now uses unittest test discovery to "
"find its tests."

#: ../../../Misc/NEWS:8781
msgid ""
"`bpo-22104 <https://bugs.python.org/issue22104>`__: regrtest.py no longer "
"holds a reference to the suite of tests loaded from test modules that don't "
"define test_main()."
msgstr ""
"`bpo-22104 <https://bugs.python.org/issue22104>`__: regrtest.py no longer "
"holds a reference to the suite of tests loaded from test modules that don't "
"define test_main()."

#: ../../../Misc/NEWS:8784
msgid ""
"`bpo-22111 <https://bugs.python.org/issue22111>`__: Assorted cleanups in "
"test_imaplib.  Patch by Milan Oberkirch."
msgstr ""
"`bpo-22111 <https://bugs.python.org/issue22111>`__: Assorted cleanups in "
"test_imaplib.  Patch by Milan Oberkirch."

#: ../../../Misc/NEWS:8786
msgid ""
"`bpo-22002 <https://bugs.python.org/issue22002>`__: Added "
"``load_package_tests`` function to test.support and used it to implement/"
"augment test discovery in test_asyncio, test_email, test_importlib, "
"test_json, and test_tools."
msgstr ""
"`bpo-22002 <https://bugs.python.org/issue22002>`__: Added "
"``load_package_tests`` function to test.support and used it to implement/"
"augment test discovery in test_asyncio, test_email, test_importlib, "
"test_json, and test_tools."

#: ../../../Misc/NEWS:8790
msgid ""
"`bpo-21976 <https://bugs.python.org/issue21976>`__: Fix test_ssl to accept "
"LibreSSL version strings.  Thanks to William Orr."
msgstr ""
"`bpo-21976 <https://bugs.python.org/issue21976>`__: Fix test_ssl to accept "
"LibreSSL version strings.  Thanks to William Orr."

#: ../../../Misc/NEWS:8793
msgid ""
"`bpo-21918 <https://bugs.python.org/issue21918>`__: Converted test_tools "
"from a module to a package containing separate test files for each tested "
"script."
msgstr ""
"`bpo-21918 <https://bugs.python.org/issue21918>`__: Converted test_tools "
"from a module to a package containing separate test files for each tested "
"script."

#: ../../../Misc/NEWS:8796
msgid ""
"`bpo-9554 <https://bugs.python.org/issue9554>`__: Use modern unittest "
"features in test_argparse. Initial patch by Denver Coneybeare and Radu "
"Voicilas."
msgstr ""
"`bpo-9554 <https://bugs.python.org/issue9554>`__: Use modern unittest "
"features in test_argparse. Initial patch by Denver Coneybeare and Radu "
"Voicilas."

#: ../../../Misc/NEWS:8799
msgid ""
"`bpo-20155 <https://bugs.python.org/issue20155>`__: Changed HTTP method "
"names in failing tests in test_httpservers so that packet filtering software "
"(specifically Windows Base Filtering Engine) does not interfere with the "
"transaction semantics expected by the tests."
msgstr ""
"`bpo-20155 <https://bugs.python.org/issue20155>`__: Changed HTTP method "
"names in failing tests in test_httpservers so that packet filtering software "
"(specifically Windows Base Filtering Engine) does not interfere with the "
"transaction semantics expected by the tests."

#: ../../../Misc/NEWS:8803
msgid ""
"`bpo-19493 <https://bugs.python.org/issue19493>`__: Refactored the ctypes "
"test package to skip tests explicitly rather than silently."
msgstr ""
"`bpo-19493 <https://bugs.python.org/issue19493>`__: Refactored the ctypes "
"test package to skip tests explicitly rather than silently."

#: ../../../Misc/NEWS:8806
msgid ""
"`bpo-18492 <https://bugs.python.org/issue18492>`__: All resources are now "
"allowed when tests are not run by regrtest.py."
msgstr ""
"`bpo-18492 <https://bugs.python.org/issue18492>`__: All resources are now "
"allowed when tests are not run by regrtest.py."

#: ../../../Misc/NEWS:8809
msgid ""
"`bpo-21634 <https://bugs.python.org/issue21634>`__: Fix pystone micro-"
"benchmark: use floor division instead of true division to benchmark integers "
"instead of floating point numbers. Set pystone version to 1.2. Patch written "
"by Lennart Regebro."
msgstr ""
"`bpo-21634 <https://bugs.python.org/issue21634>`__: Fix pystone micro-"
"benchmark: use floor division instead of true division to benchmark integers "
"instead of floating point numbers. Set pystone version to 1.2. Patch written "
"by Lennart Regebro."

#: ../../../Misc/NEWS:8813
msgid ""
"`bpo-21605 <https://bugs.python.org/issue21605>`__: Added tests for Tkinter "
"images."
msgstr ""
"`bpo-21605 <https://bugs.python.org/issue21605>`__: Added tests for Tkinter "
"images."

#: ../../../Misc/NEWS:8815
msgid ""
"`bpo-21493 <https://bugs.python.org/issue21493>`__: Added test for ntpath."
"expanduser().  Original patch by Claudiu Popa."
msgstr ""
"`bpo-21493 <https://bugs.python.org/issue21493>`__: Added test for ntpath."
"expanduser().  Original patch by Claudiu Popa."

#: ../../../Misc/NEWS:8818
msgid ""
"`bpo-19925 <https://bugs.python.org/issue19925>`__: Added tests for the spwd "
"module. Original patch by Vajrasky Kok."
msgstr ""
"`bpo-19925 <https://bugs.python.org/issue19925>`__: Added tests for the spwd "
"module. Original patch by Vajrasky Kok."

#: ../../../Misc/NEWS:8820
msgid ""
"`bpo-21522 <https://bugs.python.org/issue21522>`__: Added Tkinter tests for "
"Listbox.itemconfigure(), PanedWindow.paneconfigure(), and Menu."
"entryconfigure()."
msgstr ""
"`bpo-21522 <https://bugs.python.org/issue21522>`__: Added Tkinter tests for "
"Listbox.itemconfigure(), PanedWindow.paneconfigure(), and Menu."
"entryconfigure()."

#: ../../../Misc/NEWS:8823
msgid ""
"`bpo-17756 <https://bugs.python.org/issue17756>`__: Fix test_code test when "
"run from the installed location."
msgstr ""
"`bpo-17756 <https://bugs.python.org/issue17756>`__: Fix test_code test when "
"run from the installed location."

#: ../../../Misc/NEWS:8825
msgid ""
"`bpo-17752 <https://bugs.python.org/issue17752>`__: Fix distutils tests when "
"run from the installed location."
msgstr ""
"`bpo-17752 <https://bugs.python.org/issue17752>`__: Fix distutils tests when "
"run from the installed location."

#: ../../../Misc/NEWS:8827
msgid ""
"`bpo-18604 <https://bugs.python.org/issue18604>`__: Consolidated checks for "
"GUI availability.  All platforms now at least check whether Tk can be "
"instantiated when the GUI resource is requested."
msgstr ""
"`bpo-18604 <https://bugs.python.org/issue18604>`__: Consolidated checks for "
"GUI availability.  All platforms now at least check whether Tk can be "
"instantiated when the GUI resource is requested."

#: ../../../Misc/NEWS:8831
msgid ""
"`bpo-21275 <https://bugs.python.org/issue21275>`__: Fix a socket test on "
"KFreeBSD."
msgstr ""
"`bpo-21275 <https://bugs.python.org/issue21275>`__: Fix a socket test on "
"KFreeBSD."

#: ../../../Misc/NEWS:8833
msgid ""
"`bpo-21223 <https://bugs.python.org/issue21223>`__: Pass test_site/"
"test_startup_imports when some of the extensions are built as builtins."
msgstr ""
"`bpo-21223 <https://bugs.python.org/issue21223>`__: Pass test_site/"
"test_startup_imports when some of the extensions are built as builtins."

#: ../../../Misc/NEWS:8836
msgid ""
"`bpo-20635 <https://bugs.python.org/issue20635>`__: Added tests for Tk "
"geometry managers."
msgstr ""
"`bpo-20635 <https://bugs.python.org/issue20635>`__: Added tests for Tk "
"geometry managers."

#: ../../../Misc/NEWS:8838
msgid "Add test case for freeze."
msgstr "Ajoute un test pour *freeze*."

#: ../../../Misc/NEWS:8840
msgid ""
"`bpo-20743 <https://bugs.python.org/issue20743>`__: Fix a reference leak in "
"test_tcl."
msgstr ""
"`bpo-20743 <https://bugs.python.org/issue20743>`__: Fix a reference leak in "
"test_tcl."

#: ../../../Misc/NEWS:8842
msgid ""
"`bpo-21097 <https://bugs.python.org/issue21097>`__: Move test_namespace_pkgs "
"into test_importlib."
msgstr ""
"`bpo-21097 <https://bugs.python.org/issue21097>`__: Move test_namespace_pkgs "
"into test_importlib."

#: ../../../Misc/NEWS:8844
msgid ""
"`bpo-21503 <https://bugs.python.org/issue21503>`__: Use test_both() "
"consistently in test_importlib."
msgstr ""
"`bpo-21503 <https://bugs.python.org/issue21503>`__: Use test_both() "
"consistently in test_importlib."

#: ../../../Misc/NEWS:8846
msgid ""
"`bpo-20939 <https://bugs.python.org/issue20939>`__: Avoid various network "
"test failures due to new redirect of http://www.python.org/ to https://www."
"python.org: use http://www.example.com instead."
msgstr ""
"`bpo-20939 <https://bugs.python.org/issue20939>`__: Avoid various network "
"test failures due to new redirect of http://www.python.org/ to https://www."
"python.org: use http://www.example.com instead."

#: ../../../Misc/NEWS:8850
msgid ""
"`bpo-20668 <https://bugs.python.org/issue20668>`__: asyncio tests no longer "
"rely on tests.txt file. (Patch by Vajrasky Kok)"
msgstr ""
"`bpo-20668 <https://bugs.python.org/issue20668>`__: asyncio tests no longer "
"rely on tests.txt file. (Patch by Vajrasky Kok)"

#: ../../../Misc/NEWS:8853
msgid ""
"`bpo-21093 <https://bugs.python.org/issue21093>`__: Prevent failures of "
"ctypes test_macholib on OS X if a copy of libz exists in $HOME/lib or /usr/"
"local/lib."
msgstr ""
"`bpo-21093 <https://bugs.python.org/issue21093>`__: Prevent failures of "
"ctypes test_macholib on OS X if a copy of libz exists in $HOME/lib or /usr/"
"local/lib."

#: ../../../Misc/NEWS:8856
msgid ""
"`bpo-22770 <https://bugs.python.org/issue22770>`__: Prevent some Tk "
"segfaults on OS X when running gui tests."
msgstr ""
"`bpo-22770 <https://bugs.python.org/issue22770>`__: Prevent some Tk "
"segfaults on OS X when running gui tests."

#: ../../../Misc/NEWS:8858
msgid ""
"`bpo-23211 <https://bugs.python.org/issue23211>`__: Workaround test_logging "
"failure on some OS X 10.6 systems."
msgstr ""
"`bpo-23211 <https://bugs.python.org/issue23211>`__: Workaround test_logging "
"failure on some OS X 10.6 systems."

#: ../../../Misc/NEWS:8860
msgid ""
"`bpo-23345 <https://bugs.python.org/issue23345>`__: Prevent test_ssl "
"failures with large OpenSSL patch level values (like 0.9.8zc)."
msgstr ""
"`bpo-23345 <https://bugs.python.org/issue23345>`__: Prevent test_ssl "
"failures with large OpenSSL patch level values (like 0.9.8zc)."

#: ../../../Misc/NEWS:8866
msgid ""
"`bpo-22314 <https://bugs.python.org/issue22314>`__: pydoc now works when the "
"LINES environment variable is set."
msgstr ""
"`bpo-22314 <https://bugs.python.org/issue22314>`__: pydoc now works when the "
"LINES environment variable is set."

#: ../../../Misc/NEWS:8868
msgid ""
"`bpo-22615 <https://bugs.python.org/issue22615>`__: Argument Clinic now "
"supports the \"type\" argument for the int converter.  This permits using "
"the int converter with enums and typedefs."
msgstr ""
"`bpo-22615 <https://bugs.python.org/issue22615>`__: Argument Clinic now "
"supports the \"type\" argument for the int converter.  This permits using "
"the int converter with enums and typedefs."

#: ../../../Misc/NEWS:8872
msgid ""
"`bpo-20076 <https://bugs.python.org/issue20076>`__: The makelocalealias.py "
"script no longer ignores UTF-8 mapping."
msgstr ""
"`bpo-20076 <https://bugs.python.org/issue20076>`__: The makelocalealias.py "
"script no longer ignores UTF-8 mapping."

#: ../../../Misc/NEWS:8874
msgid ""
"`bpo-20079 <https://bugs.python.org/issue20079>`__: The makelocalealias.py "
"script now can parse the SUPPORTED file from glibc sources and supports "
"command line options for source paths."
msgstr ""
"`bpo-20079 <https://bugs.python.org/issue20079>`__: The makelocalealias.py "
"script now can parse the SUPPORTED file from glibc sources and supports "
"command line options for source paths."

#: ../../../Misc/NEWS:8877
msgid ""
"`bpo-22201 <https://bugs.python.org/issue22201>`__: Command-line interface "
"of the zipfile module now correctly extracts ZIP files with directory "
"entries.  Patch by Ryan Wilson."
msgstr ""
"`bpo-22201 <https://bugs.python.org/issue22201>`__: Command-line interface "
"of the zipfile module now correctly extracts ZIP files with directory "
"entries.  Patch by Ryan Wilson."

#: ../../../Misc/NEWS:8880
msgid ""
"`bpo-22120 <https://bugs.python.org/issue22120>`__: For functions using an "
"unsigned integer return converter, Argument Clinic now generates a cast to "
"that type for the comparison to -1 in the generated code.  (This suppresses "
"a compilation warning.)"
msgstr ""
"`bpo-22120 <https://bugs.python.org/issue22120>`__: For functions using an "
"unsigned integer return converter, Argument Clinic now generates a cast to "
"that type for the comparison to -1 in the generated code.  (This suppresses "
"a compilation warning.)"

#: ../../../Misc/NEWS:8884
msgid ""
"`bpo-18974 <https://bugs.python.org/issue18974>`__: Tools/scripts/diff.py "
"now uses argparse instead of optparse."
msgstr ""
"`bpo-18974 <https://bugs.python.org/issue18974>`__: Tools/scripts/diff.py "
"now uses argparse instead of optparse."

#: ../../../Misc/NEWS:8886
msgid ""
"`bpo-21906 <https://bugs.python.org/issue21906>`__: Make Tools/scripts/"
"md5sum.py work in Python 3. Patch by Zachary Ware."
msgstr ""
"`bpo-21906 <https://bugs.python.org/issue21906>`__: Make Tools/scripts/"
"md5sum.py work in Python 3. Patch by Zachary Ware."

#: ../../../Misc/NEWS:8889
msgid ""
"`bpo-21629 <https://bugs.python.org/issue21629>`__: Fix Argument Clinic's "
"\"--converters\" feature."
msgstr ""
"`bpo-21629 <https://bugs.python.org/issue21629>`__: Fix Argument Clinic's "
"\"--converters\" feature."

#: ../../../Misc/NEWS:8891
msgid "Add support for ``yield from`` to 2to3."
msgstr "Ajoute le support de ``yield from`` √† *2to3*."

#: ../../../Misc/NEWS:8893
msgid "Add support for the PEP 465 matrix multiplication operator to 2to3."
msgstr ""

#: ../../../Misc/NEWS:8895
msgid ""
"`bpo-16047 <https://bugs.python.org/issue16047>`__: Fix module exception "
"list and __file__ handling in freeze. Patch by Meador Inge."
msgstr ""
"`bpo-16047 <https://bugs.python.org/issue16047>`__: Fix module exception "
"list and __file__ handling in freeze. Patch by Meador Inge."

#: ../../../Misc/NEWS:8898
msgid ""
"`bpo-11824 <https://bugs.python.org/issue11824>`__: Consider ABI tags in "
"freeze. Patch by Meador Inge."
msgstr ""
"`bpo-11824 <https://bugs.python.org/issue11824>`__: Consider ABI tags in "
"freeze. Patch by Meador Inge."

#: ../../../Misc/NEWS:8900
msgid ""
"`bpo-20535 <https://bugs.python.org/issue20535>`__: PYTHONWARNING no longer "
"affects the run_tests.py script. Patch by Arfrever Frehtes Taifersar "
"Arahesis."
msgstr ""
"`bpo-20535 <https://bugs.python.org/issue20535>`__: PYTHONWARNING no longer "
"affects the run_tests.py script. Patch by Arfrever Frehtes Taifersar "
"Arahesis."

#: ../../../Misc/NEWS:8906
msgid ""
"`bpo-23260 <https://bugs.python.org/issue23260>`__: Update Windows installer"
msgstr ""
"`bpo-23260 <https://bugs.python.org/issue23260>`__: Update Windows installer"

#: ../../../Misc/NEWS:8908
msgid ""
"The bundled version of Tcl/Tk has been updated to 8.6.3.  The most visible "
"result of this change is the addition of new native file dialogs when "
"running on Windows Vista or newer.  See Tcl/Tk's TIP 432 for more "
"information.  Also, this version of Tcl/Tk includes support for Windows 10."
msgstr ""

#: ../../../Misc/NEWS:8913
msgid ""
"`bpo-17896 <https://bugs.python.org/issue17896>`__: The Windows build "
"scripts now expect external library sources to be in ``PCbuild\\.."
"\\externals`` rather than ``PCbuild\\..\\..``."
msgstr ""
"`bpo-17896 <https://bugs.python.org/issue17896>`__: The Windows build "
"scripts now expect external library sources to be in ``PCbuild\\.."
"\\externals`` rather than ``PCbuild\\..\\..``."

#: ../../../Misc/NEWS:8916
msgid ""
"`bpo-17717 <https://bugs.python.org/issue17717>`__: The Windows build "
"scripts now use a copy of NASM pulled from svn.python.org to build OpenSSL."
msgstr ""
"`bpo-17717 <https://bugs.python.org/issue17717>`__: The Windows build "
"scripts now use a copy of NASM pulled from svn.python.org to build OpenSSL."

#: ../../../Misc/NEWS:8919
msgid ""
"`bpo-21907 <https://bugs.python.org/issue21907>`__: Improved the batch "
"scripts provided for building Python."
msgstr ""
"`bpo-21907 <https://bugs.python.org/issue21907>`__: Improved the batch "
"scripts provided for building Python."

#: ../../../Misc/NEWS:8921
msgid ""
"`bpo-22644 <https://bugs.python.org/issue22644>`__: The bundled version of "
"OpenSSL has been updated to 1.0.1j."
msgstr ""
"`bpo-22644 <https://bugs.python.org/issue22644>`__: The bundled version of "
"OpenSSL has been updated to 1.0.1j."

#: ../../../Misc/NEWS:8923
msgid ""
"`bpo-10747 <https://bugs.python.org/issue10747>`__: Use versioned labels in "
"the Windows start menu. Patch by Olive Kilburn."
msgstr ""
"`bpo-10747 <https://bugs.python.org/issue10747>`__: Use versioned labels in "
"the Windows start menu. Patch by Olive Kilburn."

#: ../../../Misc/NEWS:8926
msgid ""
"`bpo-22980 <https://bugs.python.org/issue22980>`__: .pyd files with a "
"version and platform tag (for example, \".cp35-win32.pyd\") will now be "
"loaded in preference to those without tags."
msgstr ""
"`bpo-22980 <https://bugs.python.org/issue22980>`__: .pyd files with a "
"version and platform tag (for example, \".cp35-win32.pyd\") will now be "
"loaded in preference to those without tags."

#: ../../../Misc/NEWS:8930
msgid "**(For information about older versions, consult the HISTORY file.)**"
msgstr ""
"**(Pour des informations sur les versions pr√©c√©dentes, consultez le fichier "
"HISTORY.)**"

#~ msgid ""
#~ "`Issue #28248 <https://bugs.python.org/28248>`__: Update Windows build to "
#~ "use OpenSSL 1.0.2j."
#~ msgstr ""
#~ "`Issue #28248 <https://bugs.python.org/28248>`__: Update Windows build to "
#~ "use OpenSSL 1.0.2j."

#~ msgid ""
#~ "`Issue #6549 <https://bugs.python.org/6549>`__: Remove hyphen from ttk."
#~ "Style().element options.  Only return result from ttk.Style().configure "
#~ "if a result was generated or a query submitted."
#~ msgstr ""
#~ "`Issue #6549 <https://bugs.python.org/6549>`__: Remove hyphen from ttk."
#~ "Style().element options.  Only return result from ttk.Style().configure "
#~ "if a result was generated or a query submitted."

#~ msgid ""
#~ "`Issue #23359 <https://bugs.python.org/23359>`__: Optimize set object "
#~ "internals by specializing the hash table search into a lookup function "
#~ "and an insert function."
#~ msgstr ""
#~ "`Issue #23359 <https://bugs.python.org/23359>`__: Optimize set object "
#~ "internals by specializing the hash table search into a lookup function "
#~ "and an insert function."

#~ msgid ""
#~ "`Issue #20939 <https://bugs.python.org/20939>`__: Fix test_geturl failure "
#~ "in test_urllibnet due to new redirect of http://www.python.org/ to "
#~ "https://www.python.org."
#~ msgstr ""
#~ "`Issue #20939 <https://bugs.python.org/20939>`__: Fix test_geturl failure "
#~ "in test_urllibnet due to new redirect of http://www.python.org/ to "
#~ "https://www.python.org."

#~ msgid ""
#~ "`Issue #20786 <https://bugs.python.org/20786>`__: Fix signatures for dict."
#~ "__delitem__ and property.__delete__ builtins."
#~ msgstr ""
#~ "`Issue #20786 <https://bugs.python.org/20786>`__: Fix signatures for dict."
#~ "__delitem__ and property.__delete__ builtins."

#~ msgid ""
#~ "`Issue #20839 <https://bugs.python.org/20839>`__: Don't trigger a "
#~ "DeprecationWarning in the still supported pkgutil.get_loader() API when "
#~ "__loader__ isn't set on a module (nor when pkgutil.find_loader() is "
#~ "called directly)."
#~ msgstr ""
#~ "`Issue #20839 <https://bugs.python.org/20839>`__: Don't trigger a "
#~ "DeprecationWarning in the still supported pkgutil.get_loader() API when "
#~ "__loader__ isn't set on a module (nor when pkgutil.find_loader() is "
#~ "called directly)."

#~ msgid ""
#~ "`Issue #14512 <https://bugs.python.org/14512>`__: Launch pydoc -b instead "
#~ "of pydocgui.pyw on Windows."
#~ msgstr ""
#~ "`Issue #14512 <https://bugs.python.org/14512>`__: Launch pydoc -b instead "
#~ "of pydocgui.pyw on Windows."

#~ msgid ""
#~ "`Issue #20748 <https://bugs.python.org/20748>`__: Uninstalling pip does "
#~ "not leave behind the pyc of the uninstaller anymore."
#~ msgstr ""
#~ "`Issue #20748 <https://bugs.python.org/20748>`__: Uninstalling pip does "
#~ "not leave behind the pyc of the uninstaller anymore."

#~ msgid ""
#~ "`Issue #20568 <https://bugs.python.org/20568>`__: The Windows installer "
#~ "now installs the unversioned ``pip`` command in addition to the versioned "
#~ "``pip3`` and ``pip3.4`` commands."
#~ msgstr ""
#~ "`Issue #20568 <https://bugs.python.org/20568>`__: The Windows installer "
#~ "now installs the unversioned ``pip`` command in addition to the versioned "
#~ "``pip3`` and ``pip3.4`` commands."

#~ msgid ""
#~ "`Issue #20757 <https://bugs.python.org/20757>`__: The ensurepip helper "
#~ "for the Windows uninstaller now skips uninstalling pip (rather than "
#~ "failing) if the user has updated pip to a different version from the one "
#~ "bundled with ensurepip."
#~ msgstr ""
#~ "`Issue #20757 <https://bugs.python.org/20757>`__: The ensurepip helper "
#~ "for the Windows uninstaller now skips uninstalling pip (rather than "
#~ "failing) if the user has updated pip to a different version from the one "
#~ "bundled with ensurepip."

#~ msgid ""
#~ "`Issue #20465 <https://bugs.python.org/20465>`__: Update OS X and Windows "
#~ "installer builds to use SQLite 3.8.3.1."
#~ msgstr ""
#~ "`Issue #20465 <https://bugs.python.org/20465>`__: Update OS X and Windows "
#~ "installer builds to use SQLite 3.8.3.1."

#~ msgid ""
#~ "`Issue #20625 <https://bugs.python.org/20625>`__: Parameter names in "
#~ "__annotations__ were not mangled properly. Discovered by Jonas Wielicki, "
#~ "patch by Yury Selivanov."
#~ msgstr ""
#~ "`Issue #20625 <https://bugs.python.org/20625>`__: Parameter names in "
#~ "__annotations__ were not mangled properly. Discovered by Jonas Wielicki, "
#~ "patch by Yury Selivanov."

#~ msgid ""
#~ "`Issue #20261 <https://bugs.python.org/20261>`__: In pickle, lookup "
#~ "__getnewargs__ and __getnewargs_ex__ on the type of the object."
#~ msgstr ""
#~ "`Issue #20261 <https://bugs.python.org/20261>`__: In pickle, lookup "
#~ "__getnewargs__ and __getnewargs_ex__ on the type of the object."

#~ msgid ""
#~ "`Issue #20619 <https://bugs.python.org/20619>`__: Give the AST nodes of "
#~ "keyword-only arguments a column and line number."
#~ msgstr ""
#~ "`Issue #20619 <https://bugs.python.org/20619>`__: Give the AST nodes of "
#~ "keyword-only arguments a column and line number."

#~ msgid ""
#~ "`Issue #20526 <https://bugs.python.org/20526>`__: Revert changes of "
#~ "`issue #19466 <https://bugs.python.org/19466>`__ which introduces a "
#~ "regression: don't clear anymore the state of Python threads early during "
#~ "the Python shutdown."
#~ msgstr ""
#~ "`Issue #20526 <https://bugs.python.org/20526>`__: Revert changes of "
#~ "`issue #19466 <https://bugs.python.org/19466>`__ which introduces a "
#~ "regression: don't clear anymore the state of Python threads early during "
#~ "the Python shutdown."

#~ msgid ""
#~ "`Issue #20710 <https://bugs.python.org/20710>`__: The pydoc summary line "
#~ "no longer displays the \"self\" parameter for bound methods."
#~ msgstr ""
#~ "`Issue #20710 <https://bugs.python.org/20710>`__: The pydoc summary line "
#~ "no longer displays the \"self\" parameter for bound methods."

#~ msgid ""
#~ "`Issue #20566 <https://bugs.python.org/20566>`__: Change asyncio."
#~ "as_completed() to use a Queue, to avoid O(N**2) behavior."
#~ msgstr ""
#~ "`Issue #20566 <https://bugs.python.org/20566>`__: Change asyncio."
#~ "as_completed() to use a Queue, to avoid O(N**2) behavior."

#~ msgid ""
#~ "`Issue #20704 <https://bugs.python.org/20704>`__: Implement new debug API "
#~ "in asyncio. Add new methods BaseEventLoop.set_debug() and BaseEventLoop."
#~ "get_debug(). Add support for setting 'asyncio.tasks._DEBUG' variable with "
#~ "'PYTHONASYNCIODEBUG' environment variable."
#~ msgstr ""
#~ "`Issue #20704 <https://bugs.python.org/20704>`__: Implement new debug API "
#~ "in asyncio. Add new methods BaseEventLoop.set_debug() and BaseEventLoop."
#~ "get_debug(). Add support for setting 'asyncio.tasks._DEBUG' variable with "
#~ "'PYTHONASYNCIODEBUG' environment variable."

#~ msgid ""
#~ "`Issue #20684 <https://bugs.python.org/20684>`__: Fix inspect."
#~ "getfullargspec() to not to follow __wrapped__ chains. Make its behaviour "
#~ "consistent with bound methods first argument. Patch by Nick Coghlan and "
#~ "Yury Selivanov."
#~ msgstr ""
#~ "`Issue #20684 <https://bugs.python.org/20684>`__: Fix inspect."
#~ "getfullargspec() to not to follow __wrapped__ chains. Make its behaviour "
#~ "consistent with bound methods first argument. Patch by Nick Coghlan and "
#~ "Yury Selivanov."

#~ msgid ""
#~ "`Issue #20681 <https://bugs.python.org/20681>`__: Add new error handling "
#~ "API in asyncio. New APIs: loop.set_exception_handler(), loop."
#~ "default_exception_handler(), and loop.call_exception_handler()."
#~ msgstr ""
#~ "`Issue #20681 <https://bugs.python.org/20681>`__: Add new error handling "
#~ "API in asyncio. New APIs: loop.set_exception_handler(), loop."
#~ "default_exception_handler(), and loop.call_exception_handler()."

#~ msgid ""
#~ "`Issue #20673 <https://bugs.python.org/20673>`__: Implement support for "
#~ "UNIX Domain Sockets in asyncio. New APIs: loop.create_unix_connection(), "
#~ "loop.create_unix_server(), streams.open_unix_connection(), and streams."
#~ "start_unix_server()."
#~ msgstr ""
#~ "`Issue #20673 <https://bugs.python.org/20673>`__: Implement support for "
#~ "UNIX Domain Sockets in asyncio. New APIs: loop.create_unix_connection(), "
#~ "loop.create_unix_server(), streams.open_unix_connection(), and streams."
#~ "start_unix_server()."

#~ msgid ""
#~ "`Issue #20616 <https://bugs.python.org/20616>`__: Add a format() method "
#~ "to tracemalloc.Traceback."
#~ msgstr ""
#~ "`Issue #20616 <https://bugs.python.org/20616>`__: Add a format() method "
#~ "to tracemalloc.Traceback."

#~ msgid ""
#~ "`Issue #19744 <https://bugs.python.org/19744>`__: the ensurepip "
#~ "installation step now just prints a warning to stderr rather than failing "
#~ "outright if SSL/TLS is unavailable. This allows local installation of "
#~ "POSIX builds without SSL/TLS support."
#~ msgstr ""
#~ "`Issue #19744 <https://bugs.python.org/19744>`__: the ensurepip "
#~ "installation step now just prints a warning to stderr rather than failing "
#~ "outright if SSL/TLS is unavailable. This allows local installation of "
#~ "POSIX builds without SSL/TLS support."

#~ msgid ""
#~ "`Issue #20594 <https://bugs.python.org/20594>`__: Avoid name clash with "
#~ "the libc function posix_close."
#~ msgstr ""
#~ "`Issue #20594 <https://bugs.python.org/20594>`__: Avoid name clash with "
#~ "the libc function posix_close."

#~ msgid ""
#~ "`Issue #20641 <https://bugs.python.org/20641>`__: Run MSI custom actions "
#~ "(pip installation, pyc compilation) with the NoImpersonate flag, to "
#~ "support elevated execution (UAC)."
#~ msgstr ""
#~ "`Issue #20641 <https://bugs.python.org/20641>`__: Run MSI custom actions "
#~ "(pip installation, pyc compilation) with the NoImpersonate flag, to "
#~ "support elevated execution (UAC)."

#~ msgid ""
#~ "`Issue #20221 <https://bugs.python.org/20221>`__: Removed conflicting (or "
#~ "circular) hypot definition when compiled with VS 2010 or above.  Initial "
#~ "patch by Tabrez Mohammed."
#~ msgstr ""
#~ "`Issue #20221 <https://bugs.python.org/20221>`__: Removed conflicting (or "
#~ "circular) hypot definition when compiled with VS 2010 or above.  Initial "
#~ "patch by Tabrez Mohammed."

#~ msgid ""
#~ "`Issue #20609 <https://bugs.python.org/20609>`__: Restored the ability to "
#~ "build 64-bit Windows binaries on 32-bit Windows, which was broken by the "
#~ "change in `issue #19788 <https://bugs.python.org/19788>`__."
#~ msgstr ""
#~ "`Issue #20609 <https://bugs.python.org/20609>`__: Restored the ability to "
#~ "build 64-bit Windows binaries on 32-bit Windows, which was broken by the "
#~ "change in `issue #19788 <https://bugs.python.org/19788>`__."

#~ msgid ""
#~ "`Issue #19255 <https://bugs.python.org/19255>`__: The builtins module is "
#~ "restored to initial value before cleaning other modules.  The sys and "
#~ "builtins modules are cleaned last."
#~ msgstr ""
#~ "`Issue #19255 <https://bugs.python.org/19255>`__: The builtins module is "
#~ "restored to initial value before cleaning other modules.  The sys and "
#~ "builtins modules are cleaned last."

#~ msgid ""
#~ "`Issue #20588 <https://bugs.python.org/20588>`__: Make Python-ast.c C89 "
#~ "compliant."
#~ msgstr ""
#~ "`Issue #20588 <https://bugs.python.org/20588>`__: Make Python-ast.c C89 "
#~ "compliant."

#~ msgid ""
#~ "`Issue #20500 <https://bugs.python.org/20500>`__: Displaying an exception "
#~ "at interpreter shutdown no longer risks triggering an assertion failure "
#~ "in PyObject_Str."
#~ msgstr ""
#~ "`Issue #20500 <https://bugs.python.org/20500>`__: Displaying an exception "
#~ "at interpreter shutdown no longer risks triggering an assertion failure "
#~ "in PyObject_Str."

#~ msgid ""
#~ "`Issue #20538 <https://bugs.python.org/20538>`__: UTF-7 incremental "
#~ "decoder produced inconsistent string when input was truncated in BASE64 "
#~ "section."
#~ msgstr ""
#~ "`Issue #20538 <https://bugs.python.org/20538>`__: UTF-7 incremental "
#~ "decoder produced inconsistent string when input was truncated in BASE64 "
#~ "section."

#~ msgid ""
#~ "`Issue #20404 <https://bugs.python.org/20404>`__: io.TextIOWrapper (and "
#~ "hence the open() builtin) now uses the internal codec marking system "
#~ "added for `issue #19619 <https://bugs.python.org/19619>`__ to throw "
#~ "LookupError for known non-text encodings at stream construction time. The "
#~ "existing output type checks remain in place to deal with unmarked third "
#~ "party codecs."
#~ msgstr ""
#~ "`Issue #20404 <https://bugs.python.org/20404>`__: io.TextIOWrapper (and "
#~ "hence the open() builtin) now uses the internal codec marking system "
#~ "added for `issue #19619 <https://bugs.python.org/19619>`__ to throw "
#~ "LookupError for known non-text encodings at stream construction time. The "
#~ "existing output type checks remain in place to deal with unmarked third "
#~ "party codecs."

#~ msgid ""
#~ "`Issue #17162 <https://bugs.python.org/17162>`__: Add PyType_GetSlot."
#~ msgstr ""
#~ "`Issue #17162 <https://bugs.python.org/17162>`__: Add PyType_GetSlot."

#~ msgid ""
#~ "`Issue #20162 <https://bugs.python.org/20162>`__: Fix an alignment issue "
#~ "in the siphash24() hash function which caused a crash on PowerPC 64-bit "
#~ "(ppc64)."
#~ msgstr ""
#~ "`Issue #20162 <https://bugs.python.org/20162>`__: Fix an alignment issue "
#~ "in the siphash24() hash function which caused a crash on PowerPC 64-bit "
#~ "(ppc64)."

#~ msgid ""
#~ "`Issue #20530 <https://bugs.python.org/20530>`__: The signatures for slot "
#~ "builtins have been updated to reflect the fact that they only accept "
#~ "positional-only arguments."
#~ msgstr ""
#~ "`Issue #20530 <https://bugs.python.org/20530>`__: The signatures for slot "
#~ "builtins have been updated to reflect the fact that they only accept "
#~ "positional-only arguments."

#~ msgid ""
#~ "`Issue #20517 <https://bugs.python.org/20517>`__: Functions in the os "
#~ "module that accept two filenames now register both filenames in the "
#~ "exception on failure."
#~ msgstr ""
#~ "`Issue #20517 <https://bugs.python.org/20517>`__: Functions in the os "
#~ "module that accept two filenames now register both filenames in the "
#~ "exception on failure."

#~ msgid ""
#~ "`Issue #20563 <https://bugs.python.org/20563>`__: The ipaddress module "
#~ "API is now considered stable."
#~ msgstr ""
#~ "`Issue #20563 <https://bugs.python.org/20563>`__: The ipaddress module "
#~ "API is now considered stable."

#~ msgid ""
#~ "`Issue #14983 <https://bugs.python.org/14983>`__: email.generator now "
#~ "always adds a line end after each MIME boundary marker, instead of doing "
#~ "so only when there is an epilogue.  This fixes an RFC compliance bug and "
#~ "solves an issue with signed MIME parts."
#~ msgstr ""
#~ "`Issue #14983 <https://bugs.python.org/14983>`__: email.generator now "
#~ "always adds a line end after each MIME boundary marker, instead of doing "
#~ "so only when there is an epilogue.  This fixes an RFC compliance bug and "
#~ "solves an issue with signed MIME parts."

#~ msgid ""
#~ "`Issue #20540 <https://bugs.python.org/20540>`__: Fix a performance "
#~ "regression (vs. Python 3.2) when layering a multiprocessing Connection "
#~ "over a TCP socket.  For small payloads, Nagle's algorithm would introduce "
#~ "idle delays before the entire transmission of a message."
#~ msgstr ""
#~ "`Issue #20540 <https://bugs.python.org/20540>`__: Fix a performance "
#~ "regression (vs. Python 3.2) when layering a multiprocessing Connection "
#~ "over a TCP socket.  For small payloads, Nagle's algorithm would introduce "
#~ "idle delays before the entire transmission of a message."

#~ msgid ""
#~ "`Issue #16983 <https://bugs.python.org/16983>`__: the new email header "
#~ "parsing code will now decode encoded words that are (incorrectly) "
#~ "surrounded by quotes, and register a defect."
#~ msgstr ""
#~ "`Issue #16983 <https://bugs.python.org/16983>`__: the new email header "
#~ "parsing code will now decode encoded words that are (incorrectly) "
#~ "surrounded by quotes, and register a defect."

#~ msgid ""
#~ "`Issue #19772 <https://bugs.python.org/19772>`__: email.generator no "
#~ "longer mutates the message object when doing a down-transform from 8bit "
#~ "to 7bit CTEs."
#~ msgstr ""
#~ "`Issue #19772 <https://bugs.python.org/19772>`__: email.generator no "
#~ "longer mutates the message object when doing a down-transform from 8bit "
#~ "to 7bit CTEs."

#~ msgid ""
#~ "`Issue #20536 <https://bugs.python.org/20536>`__: the statistics module "
#~ "now correctly handle Decimal instances with positive exponents"
#~ msgstr ""
#~ "`Issue #20536 <https://bugs.python.org/20536>`__: the statistics module "
#~ "now correctly handle Decimal instances with positive exponents"

#~ msgid ""
#~ "`Issue #18805 <https://bugs.python.org/18805>`__: the netmask/hostmask "
#~ "parsing in ipaddress now more reliably filters out illegal values and "
#~ "correctly allows any valid prefix length."
#~ msgstr ""
#~ "`Issue #18805 <https://bugs.python.org/18805>`__: the netmask/hostmask "
#~ "parsing in ipaddress now more reliably filters out illegal values and "
#~ "correctly allows any valid prefix length."

#~ msgid ""
#~ "`Issue #20481 <https://bugs.python.org/20481>`__: For at least Python "
#~ "3.4, the statistics module will require that all inputs for a single "
#~ "operation be of a single consistent type, or else a mixed of ints and a "
#~ "single other consistent type. This avoids some interoperability issues "
#~ "that arose with the previous approach of coercing to a suitable common "
#~ "type."
#~ msgstr ""
#~ "`Issue #20481 <https://bugs.python.org/20481>`__: For at least Python "
#~ "3.4, the statistics module will require that all inputs for a single "
#~ "operation be of a single consistent type, or else a mixed of ints and a "
#~ "single other consistent type. This avoids some interoperability issues "
#~ "that arose with the previous approach of coercing to a suitable common "
#~ "type."

#~ msgid ""
#~ "`Issue #20478 <https://bugs.python.org/20478>`__: the statistics module "
#~ "now treats collections.Counter inputs like any other iterable."
#~ msgstr ""
#~ "`Issue #20478 <https://bugs.python.org/20478>`__: the statistics module "
#~ "now treats collections.Counter inputs like any other iterable."

#~ msgid ""
#~ "`Issue #17369 <https://bugs.python.org/17369>`__: get_filename was "
#~ "raising an exception if the filename parameter's RFC2231 encoding was "
#~ "broken in certain ways.  This was a regression relative to python2."
#~ msgstr ""
#~ "`Issue #17369 <https://bugs.python.org/17369>`__: get_filename was "
#~ "raising an exception if the filename parameter's RFC2231 encoding was "
#~ "broken in certain ways.  This was a regression relative to python2."

#~ msgid ""
#~ "`Issue #20013 <https://bugs.python.org/20013>`__: Some imap servers "
#~ "disconnect if the current mailbox is deleted, and imaplib did not handle "
#~ "that case gracefully.  Now it handles the 'bye' correctly."
#~ msgstr ""
#~ "`Issue #20013 <https://bugs.python.org/20013>`__: Some imap servers "
#~ "disconnect if the current mailbox is deleted, and imaplib did not handle "
#~ "that case gracefully.  Now it handles the 'bye' correctly."

#~ msgid ""
#~ "`Issue #20531 <https://bugs.python.org/20531>`__: Revert 3.4 version of "
#~ "fix for #19063, and apply the 3.3 version.  That is, do *not* raise an "
#~ "error if unicode is passed to email.message.Message.set_payload."
#~ msgstr ""
#~ "`Issue #20531 <https://bugs.python.org/20531>`__: Revert 3.4 version of "
#~ "fix for #19063, and apply the 3.3 version.  That is, do *not* raise an "
#~ "error if unicode is passed to email.message.Message.set_payload."

#~ msgid ""
#~ "`Issue #20476 <https://bugs.python.org/20476>`__: If a non-compat32 "
#~ "policy is used with any of the email parsers, EmailMessage is now used as "
#~ "the factory class.  The factory class should really come from the policy; "
#~ "that will get fixed in 3.5."
#~ msgstr ""
#~ "`Issue #20476 <https://bugs.python.org/20476>`__: If a non-compat32 "
#~ "policy is used with any of the email parsers, EmailMessage is now used as "
#~ "the factory class.  The factory class should really come from the policy; "
#~ "that will get fixed in 3.5."

#~ msgid ""
#~ "`Issue #19920 <https://bugs.python.org/19920>`__: TarFile.list() no "
#~ "longer fails when outputs a listing containing non-encodable characters.  "
#~ "Based on patch by Vajrasky Kok."
#~ msgstr ""
#~ "`Issue #19920 <https://bugs.python.org/19920>`__: TarFile.list() no "
#~ "longer fails when outputs a listing containing non-encodable characters.  "
#~ "Based on patch by Vajrasky Kok."

#~ msgid ""
#~ "`Issue #20515 <https://bugs.python.org/20515>`__: Fix NULL pointer "
#~ "dereference introduced by `issue #20368 <https://bugs.python."
#~ "org/20368>`__."
#~ msgstr ""
#~ "`Issue #20515 <https://bugs.python.org/20515>`__: Fix NULL pointer "
#~ "dereference introduced by `issue #20368 <https://bugs.python."
#~ "org/20368>`__."

#~ msgid ""
#~ "`Issue #19186 <https://bugs.python.org/19186>`__: Restore namespacing of "
#~ "expat symbols inside the pyexpat module."
#~ msgstr ""
#~ "`Issue #19186 <https://bugs.python.org/19186>`__: Restore namespacing of "
#~ "expat symbols inside the pyexpat module."

#~ msgid ""
#~ "`Issue #20053 <https://bugs.python.org/20053>`__: ensurepip (and hence "
#~ "venv) are no longer affected by the settings in the default pip "
#~ "configuration file."
#~ msgstr ""
#~ "`Issue #20053 <https://bugs.python.org/20053>`__: ensurepip (and hence "
#~ "venv) are no longer affected by the settings in the default pip "
#~ "configuration file."

#~ msgid ""
#~ "`Issue #20426 <https://bugs.python.org/20426>`__: When passing the re."
#~ "DEBUG flag, re.compile() displays the debug output every time it is "
#~ "called, regardless of the compilation cache."
#~ msgstr ""
#~ "`Issue #20426 <https://bugs.python.org/20426>`__: When passing the re."
#~ "DEBUG flag, re.compile() displays the debug output every time it is "
#~ "called, regardless of the compilation cache."

#~ msgid ""
#~ "`Issue #20368 <https://bugs.python.org/20368>`__: The null character now "
#~ "correctly passed from Tcl to Python. Improved error handling in variables-"
#~ "related commands."
#~ msgstr ""
#~ "`Issue #20368 <https://bugs.python.org/20368>`__: The null character now "
#~ "correctly passed from Tcl to Python. Improved error handling in variables-"
#~ "related commands."

#~ msgid ""
#~ "`Issue #20435 <https://bugs.python.org/20435>`__: Fix _pyio.StringIO."
#~ "getvalue() to take into account newline translation settings."
#~ msgstr ""
#~ "`Issue #20435 <https://bugs.python.org/20435>`__: Fix _pyio.StringIO."
#~ "getvalue() to take into account newline translation settings."

#~ msgid ""
#~ "`Issue #20354 <https://bugs.python.org/20354>`__: Fix an alignment issue "
#~ "in the tracemalloc module on 64-bit platforms. Bug seen on 64-bit Linux "
#~ "when using \"make profile-opt\"."
#~ msgstr ""
#~ "`Issue #20354 <https://bugs.python.org/20354>`__: Fix an alignment issue "
#~ "in the tracemalloc module on 64-bit platforms. Bug seen on 64-bit Linux "
#~ "when using \"make profile-opt\"."

#~ msgid ""
#~ "`Issue #17159 <https://bugs.python.org/17159>`__: inspect.signature now "
#~ "accepts duck types of functions, which adds support for Cython functions. "
#~ "Initial patch by Stefan Behnel."
#~ msgstr ""
#~ "`Issue #17159 <https://bugs.python.org/17159>`__: inspect.signature now "
#~ "accepts duck types of functions, which adds support for Cython functions. "
#~ "Initial patch by Stefan Behnel."

#~ msgid ""
#~ "`Issue #18801 <https://bugs.python.org/18801>`__: Fix inspect."
#~ "classify_class_attrs to correctly classify object.__new__ and object."
#~ "__init__."
#~ msgstr ""
#~ "`Issue #18801 <https://bugs.python.org/18801>`__: Fix inspect."
#~ "classify_class_attrs to correctly classify object.__new__ and object."
#~ "__init__."

#~ msgid ""
#~ "`Issue #20311 <https://bugs.python.org/20311>`__, #20452: poll and epoll "
#~ "now round the timeout away from zero, instead of rounding towards zero, "
#~ "in select and selectors modules: select.epoll.poll(), selectors."
#~ "PollSelector.poll() and selectors.EpollSelector.poll(). For example, a "
#~ "timeout of one microsecond (1e-6) is now rounded to one millisecondi "
#~ "(1e-3), instead of being rounded to zero.  However, the granularity "
#~ "property and asyncio's resolution feature were removed again."
#~ msgstr ""
#~ "`Issue #20311 <https://bugs.python.org/20311>`__, #20452: poll and epoll "
#~ "now round the timeout away from zero, instead of rounding towards zero, "
#~ "in select and selectors modules: select.epoll.poll(), selectors."
#~ "PollSelector.poll() and selectors.EpollSelector.poll(). For example, a "
#~ "timeout of one microsecond (1e-6) is now rounded to one millisecondi "
#~ "(1e-3), instead of being rounded to zero.  However, the granularity "
#~ "property and asyncio's resolution feature were removed again."

#~ msgid ""
#~ "`Issue #20288 <https://bugs.python.org/20288>`__: fix handling of invalid "
#~ "numeric charrefs in HTMLParser."
#~ msgstr ""
#~ "`Issue #20288 <https://bugs.python.org/20288>`__: fix handling of invalid "
#~ "numeric charrefs in HTMLParser."

#~ msgid ""
#~ "`Issue #20424 <https://bugs.python.org/20424>`__: Python implementation "
#~ "of io.StringIO now supports lone surrogates."
#~ msgstr ""
#~ "`Issue #20424 <https://bugs.python.org/20424>`__: Python implementation "
#~ "of io.StringIO now supports lone surrogates."

#~ msgid ""
#~ "`Issue #20308 <https://bugs.python.org/20308>`__: inspect.signature now "
#~ "works on classes without user-defined __init__ or __new__ methods."
#~ msgstr ""
#~ "`Issue #20308 <https://bugs.python.org/20308>`__: inspect.signature now "
#~ "works on classes without user-defined __init__ or __new__ methods."

#~ msgid ""
#~ "`Issue #20372 <https://bugs.python.org/20372>`__: inspect.getfile (and a "
#~ "bunch of other inspect functions that use it) doesn't crash with "
#~ "unexpected AttributeError on classes defined in C without __module__."
#~ msgstr ""
#~ "`Issue #20372 <https://bugs.python.org/20372>`__: inspect.getfile (and a "
#~ "bunch of other inspect functions that use it) doesn't crash with "
#~ "unexpected AttributeError on classes defined in C without __module__."

#~ msgid ""
#~ "`Issue #20356 <https://bugs.python.org/20356>`__: inspect.signature "
#~ "formatting uses '/' to separate positional-only parameters from others."
#~ msgstr ""
#~ "`Issue #20356 <https://bugs.python.org/20356>`__: inspect.signature "
#~ "formatting uses '/' to separate positional-only parameters from others."

#~ msgid ""
#~ "`Issue #20223 <https://bugs.python.org/20223>`__: inspect.signature now "
#~ "supports methods defined with functools.partialmethods."
#~ msgstr ""
#~ "`Issue #20223 <https://bugs.python.org/20223>`__: inspect.signature now "
#~ "supports methods defined with functools.partialmethods."

#~ msgid ""
#~ "`Issue #19456 <https://bugs.python.org/19456>`__: ntpath.join() now joins "
#~ "relative paths correctly when a drive is present."
#~ msgstr ""
#~ "`Issue #19456 <https://bugs.python.org/19456>`__: ntpath.join() now joins "
#~ "relative paths correctly when a drive is present."

#~ msgid ""
#~ "`Issue #19077 <https://bugs.python.org/19077>`__: tempfile."
#~ "TemporaryDirectory cleanup no longer fails when called during shutdown.  "
#~ "Emitting resource warning in __del__ no longer fails. Original patch by "
#~ "Antoine Pitrou."
#~ msgstr ""
#~ "`Issue #19077 <https://bugs.python.org/19077>`__: tempfile."
#~ "TemporaryDirectory cleanup no longer fails when called during shutdown.  "
#~ "Emitting resource warning in __del__ no longer fails. Original patch by "
#~ "Antoine Pitrou."

#~ msgid ""
#~ "`Issue #20394 <https://bugs.python.org/20394>`__: Silence Coverity "
#~ "warning in audioop module."
#~ msgstr ""
#~ "`Issue #20394 <https://bugs.python.org/20394>`__: Silence Coverity "
#~ "warning in audioop module."

#~ msgid ""
#~ "`Issue #20367 <https://bugs.python.org/20367>`__: Fix behavior of "
#~ "concurrent.futures.as_completed() for duplicate arguments.  Patch by "
#~ "Glenn Langford."
#~ msgstr ""
#~ "`Issue #20367 <https://bugs.python.org/20367>`__: Fix behavior of "
#~ "concurrent.futures.as_completed() for duplicate arguments.  Patch by "
#~ "Glenn Langford."

#~ msgid ""
#~ "`Issue #8260 <https://bugs.python.org/8260>`__: The read(), readline() "
#~ "and readlines() methods of codecs.StreamReader returned incomplete data "
#~ "when were called after readline() or read(size).  Based on patch by "
#~ "Amaury Forgeot d'Arc."
#~ msgstr ""
#~ "`Issue #8260 <https://bugs.python.org/8260>`__: The read(), readline() "
#~ "and readlines() methods of codecs.StreamReader returned incomplete data "
#~ "when were called after readline() or read(size).  Based on patch by "
#~ "Amaury Forgeot d'Arc."

#~ msgid ""
#~ "`Issue #20105 <https://bugs.python.org/20105>`__: the codec exception "
#~ "chaining now correctly sets the traceback of the original exception as "
#~ "its __traceback__ attribute."
#~ msgstr ""
#~ "`Issue #20105 <https://bugs.python.org/20105>`__: the codec exception "
#~ "chaining now correctly sets the traceback of the original exception as "
#~ "its __traceback__ attribute."

#~ msgid ""
#~ "`Issue #17481 <https://bugs.python.org/17481>`__: inspect."
#~ "getfullargspec() now uses inspect.signature() API."
#~ msgstr ""
#~ "`Issue #17481 <https://bugs.python.org/17481>`__: inspect."
#~ "getfullargspec() now uses inspect.signature() API."

#~ msgid ""
#~ "`Issue #15304 <https://bugs.python.org/15304>`__: concurrent.futures."
#~ "wait() can block forever even if Futures have completed. Patch by Glenn "
#~ "Langford."
#~ msgstr ""
#~ "`Issue #15304 <https://bugs.python.org/15304>`__: concurrent.futures."
#~ "wait() can block forever even if Futures have completed. Patch by Glenn "
#~ "Langford."

#~ msgid ""
#~ "`Issue #14455 <https://bugs.python.org/14455>`__: plistlib: fix "
#~ "serializing integers in the range of an unsigned long long but outside of "
#~ "the range of signed long long for binary plist files."
#~ msgstr ""
#~ "`Issue #14455 <https://bugs.python.org/14455>`__: plistlib: fix "
#~ "serializing integers in the range of an unsigned long long but outside of "
#~ "the range of signed long long for binary plist files."

#~ msgid ""
#~ "`Issue #17721 <https://bugs.python.org/17721>`__: Remove non-functional "
#~ "configuration dialog help button until we make it actually gives some "
#~ "help when clicked. Patch by Guilherme Sim√µes."
#~ msgstr ""
#~ "`Issue #17721 <https://bugs.python.org/17721>`__: Remove non-functional "
#~ "configuration dialog help button until we make it actually gives some "
#~ "help when clicked. Patch by Guilherme Sim√µes."

#~ msgid ""
#~ "`Issue #20532 <https://bugs.python.org/20532>`__: Tests which use "
#~ "_testcapi now are marked as CPython only."
#~ msgstr ""
#~ "`Issue #20532 <https://bugs.python.org/20532>`__: Tests which use "
#~ "_testcapi now are marked as CPython only."

#~ msgid ""
#~ "`Issue #19920 <https://bugs.python.org/19920>`__: Added tests for TarFile."
#~ "list().  Based on patch by Vajrasky Kok."
#~ msgstr ""
#~ "`Issue #19920 <https://bugs.python.org/19920>`__: Added tests for TarFile."
#~ "list().  Based on patch by Vajrasky Kok."

#~ msgid ""
#~ "`Issue #19990 <https://bugs.python.org/19990>`__: Added tests for the "
#~ "imghdr module.  Based on patch by Claudiu Popa."
#~ msgstr ""
#~ "`Issue #19990 <https://bugs.python.org/19990>`__: Added tests for the "
#~ "imghdr module.  Based on patch by Claudiu Popa."

#~ msgid ""
#~ "`Issue #20474 <https://bugs.python.org/20474>`__: Fix test_socket "
#~ "\"unexpected success\" failures on OS X 10.7+."
#~ msgstr ""
#~ "`Issue #20474 <https://bugs.python.org/20474>`__: Fix test_socket "
#~ "\"unexpected success\" failures on OS X 10.7+."

#~ msgid ""
#~ "`Issue #20530 <https://bugs.python.org/20530>`__: Argument Clinic's "
#~ "signature format has been revised again. The new syntax is highly human "
#~ "readable while still preventing false positives.  The syntax also extends "
#~ "Python syntax to denote \"self\" and positional-only parameters, allowing "
#~ "inspect.Signature objects to be totally accurate for all supported "
#~ "builtins in Python 3.4."
#~ msgstr ""
#~ "`Issue #20530 <https://bugs.python.org/20530>`__: Argument Clinic's "
#~ "signature format has been revised again. The new syntax is highly human "
#~ "readable while still preventing false positives.  The syntax also extends "
#~ "Python syntax to denote \"self\" and positional-only parameters, allowing "
#~ "inspect.Signature objects to be totally accurate for all supported "
#~ "builtins in Python 3.4."

#~ msgid ""
#~ "`Issue #20456 <https://bugs.python.org/20456>`__: Argument Clinic now "
#~ "observes the C preprocessor conditional compilation statements of the C "
#~ "files it parses.  When a Clinic block is inside a conditional code, it "
#~ "adjusts its output to match, including automatically generating an empty "
#~ "methoddef macro."
#~ msgstr ""
#~ "`Issue #20456 <https://bugs.python.org/20456>`__: Argument Clinic now "
#~ "observes the C preprocessor conditional compilation statements of the C "
#~ "files it parses.  When a Clinic block is inside a conditional code, it "
#~ "adjusts its output to match, including automatically generating an empty "
#~ "methoddef macro."

#~ msgid ""
#~ "`Issue #20456 <https://bugs.python.org/20456>`__: Cloned functions in "
#~ "Argument Clinic now use the correct name, not the name of the function "
#~ "they were cloned from, for text strings inside generated code."
#~ msgstr ""
#~ "`Issue #20456 <https://bugs.python.org/20456>`__: Cloned functions in "
#~ "Argument Clinic now use the correct name, not the name of the function "
#~ "they were cloned from, for text strings inside generated code."

#~ msgid ""
#~ "`Issue #20456 <https://bugs.python.org/20456>`__: Fixed Argument Clinic's "
#~ "test suite and \"--converters\" feature."
#~ msgstr ""
#~ "`Issue #20456 <https://bugs.python.org/20456>`__: Fixed Argument Clinic's "
#~ "test suite and \"--converters\" feature."

#~ msgid ""
#~ "`Issue #20456 <https://bugs.python.org/20456>`__: Argument Clinic now "
#~ "allows specifying different names for a parameter in Python and C, using "
#~ "\"as\" on the parameter line."
#~ msgstr ""
#~ "`Issue #20456 <https://bugs.python.org/20456>`__: Argument Clinic now "
#~ "allows specifying different names for a parameter in Python and C, using "
#~ "\"as\" on the parameter line."

#~ msgid ""
#~ "`Issue #20326 <https://bugs.python.org/20326>`__: Argument Clinic now "
#~ "uses a simple, unique signature to annotate text signatures in "
#~ "docstrings, resulting in fewer false positives.  \"self\" parameters are "
#~ "also explicitly marked, allowing inspect.Signature() to authoritatively "
#~ "detect (and skip) said parameters."
#~ msgstr ""
#~ "`Issue #20326 <https://bugs.python.org/20326>`__: Argument Clinic now "
#~ "uses a simple, unique signature to annotate text signatures in "
#~ "docstrings, resulting in fewer false positives.  \"self\" parameters are "
#~ "also explicitly marked, allowing inspect.Signature() to authoritatively "
#~ "detect (and skip) said parameters."

#~ msgid ""
#~ "`Issue #20326 <https://bugs.python.org/20326>`__: Argument Clinic now "
#~ "generates separate checksums for the input and output sections of the "
#~ "block, allowing external tools to verify that the input has not changed "
#~ "(and thus the output is not out-of-date)."
#~ msgstr ""
#~ "`Issue #20326 <https://bugs.python.org/20326>`__: Argument Clinic now "
#~ "generates separate checksums for the input and output sections of the "
#~ "block, allowing external tools to verify that the input has not changed "
#~ "(and thus the output is not out-of-date)."

#~ msgid ""
#~ "`Issue #20465 <https://bugs.python.org/20465>`__: Update SQLite shipped "
#~ "with OS X installer to 3.8.3."
#~ msgstr ""
#~ "`Issue #20465 <https://bugs.python.org/20465>`__: Update SQLite shipped "
#~ "with OS X installer to 3.8.3."

#~ msgid ""
#~ "`Issue #20517 <https://bugs.python.org/20517>`__: Added new functions "
#~ "allowing OSError exceptions to reference two filenames instead of one: "
#~ "PyErr_SetFromErrnoWithFilenameObjects() and "
#~ "PyErr_SetExcFromWindowsErrWithFilenameObjects()."
#~ msgstr ""
#~ "`Issue #20517 <https://bugs.python.org/20517>`__: Added new functions "
#~ "allowing OSError exceptions to reference two filenames instead of one: "
#~ "PyErr_SetFromErrnoWithFilenameObjects() and "
#~ "PyErr_SetExcFromWindowsErrWithFilenameObjects()."

#~ msgid ""
#~ "`Issue #20488 <https://bugs.python.org/20488>`__: Change wording to say "
#~ "importlib is *the* implementation of import instead of just *an* "
#~ "implementation."
#~ msgstr ""
#~ "`Issue #20488 <https://bugs.python.org/20488>`__: Change wording to say "
#~ "importlib is *the* implementation of import instead of just *an* "
#~ "implementation."

#~ msgid ""
#~ "`Issue #6386 <https://bugs.python.org/6386>`__: Clarify in the tutorial "
#~ "that specifying a symlink to execute means the directory containing the "
#~ "executed script and not the symlink is added to sys.path."
#~ msgstr ""
#~ "`Issue #6386 <https://bugs.python.org/6386>`__: Clarify in the tutorial "
#~ "that specifying a symlink to execute means the directory containing the "
#~ "executed script and not the symlink is added to sys.path."

#~ msgid "Python 3.4.0 Beta 3"
#~ msgstr "Python 3.4.0 Beta 3"

#~ msgid ""
#~ "`Issue #20189 <https://bugs.python.org/20189>`__: Four additional builtin "
#~ "types (PyTypeObject, PyMethodDescr_Type, _PyMethodWrapper_Type, and "
#~ "PyWrapperDescr_Type) have been modified to provide introspection "
#~ "information for builtins."
#~ msgstr ""
#~ "`Issue #20189 <https://bugs.python.org/20189>`__: Four additional builtin "
#~ "types (PyTypeObject, PyMethodDescr_Type, _PyMethodWrapper_Type, and "
#~ "PyWrapperDescr_Type) have been modified to provide introspection "
#~ "information for builtins."

#~ msgid ""
#~ "`Issue #17825 <https://bugs.python.org/17825>`__: Cursor \"^\" is "
#~ "correctly positioned for SyntaxError and IndentationError."
#~ msgstr ""
#~ "`Issue #17825 <https://bugs.python.org/17825>`__: Cursor \"^\" is "
#~ "correctly positioned for SyntaxError and IndentationError."

#~ msgid ""
#~ "`Issue #2382 <https://bugs.python.org/2382>`__: SyntaxError cursor \"^\" "
#~ "is now written at correct position in most cases when multibyte "
#~ "characters are in line (before \"^\").  This still not works correctly "
#~ "with wide East Asian characters."
#~ msgstr ""
#~ "`Issue #2382 <https://bugs.python.org/2382>`__: SyntaxError cursor \"^\" "
#~ "is now written at correct position in most cases when multibyte "
#~ "characters are in line (before \"^\").  This still not works correctly "
#~ "with wide East Asian characters."

#~ msgid ""
#~ "`Issue #18960 <https://bugs.python.org/18960>`__: The first line of "
#~ "Python script could be executed twice when the source encoding was "
#~ "specified on the second line.  Now the source encoding declaration on the "
#~ "second line isn't effective if the first line contains anything except a "
#~ "comment.  'python -x' works now again with files with the source encoding "
#~ "declarations, and can be used to make Python batch files on Windows."
#~ msgstr ""
#~ "`Issue #18960 <https://bugs.python.org/18960>`__: The first line of "
#~ "Python script could be executed twice when the source encoding was "
#~ "specified on the second line.  Now the source encoding declaration on the "
#~ "second line isn't effective if the first line contains anything except a "
#~ "comment.  'python -x' works now again with files with the source encoding "
#~ "declarations, and can be used to make Python batch files on Windows."

#~ msgid ""
#~ "`Issue #20311 <https://bugs.python.org/20311>`__: asyncio: Add a "
#~ "granularity attribute to BaseEventLoop: maximum between the resolution of "
#~ "the BaseEventLoop.time() method and the resolution of the selector. The "
#~ "granuarility is used in the scheduler to round time and deadline."
#~ msgstr ""
#~ "`Issue #20311 <https://bugs.python.org/20311>`__: asyncio: Add a "
#~ "granularity attribute to BaseEventLoop: maximum between the resolution of "
#~ "the BaseEventLoop.time() method and the resolution of the selector. The "
#~ "granuarility is used in the scheduler to round time and deadline."

#~ msgid ""
#~ "`Issue #20311 <https://bugs.python.org/20311>`__: selectors: Add a "
#~ "resolution attribute to BaseSelector."
#~ msgstr ""
#~ "`Issue #20311 <https://bugs.python.org/20311>`__: selectors: Add a "
#~ "resolution attribute to BaseSelector."

#~ msgid ""
#~ "`Issue #20189 <https://bugs.python.org/20189>`__: unittest.mock now no "
#~ "longer assumes that any object for which it could get an inspect."
#~ "Signature is a callable written in Python. Fix courtesy of Michael Foord."
#~ msgstr ""
#~ "`Issue #20189 <https://bugs.python.org/20189>`__: unittest.mock now no "
#~ "longer assumes that any object for which it could get an inspect."
#~ "Signature is a callable written in Python. Fix courtesy of Michael Foord."

#~ msgid ""
#~ "`Issue #20317 <https://bugs.python.org/20317>`__: ExitStack.__exit__ "
#~ "could create a self-referential loop if an exception raised by a cleanup "
#~ "operation already had its context set correctly (for example, by the "
#~ "@contextmanager decorator). The infinite loop this caused is now avoided "
#~ "by checking if the expected context is already set before trying to fix "
#~ "it."
#~ msgstr ""
#~ "`Issue #20317 <https://bugs.python.org/20317>`__: ExitStack.__exit__ "
#~ "could create a self-referential loop if an exception raised by a cleanup "
#~ "operation already had its context set correctly (for example, by the "
#~ "@contextmanager decorator). The infinite loop this caused is now avoided "
#~ "by checking if the expected context is already set before trying to fix "
#~ "it."

#~ msgid ""
#~ "`Issue #20374 <https://bugs.python.org/20374>`__: Fix build with GNU "
#~ "readline >= 6.3."
#~ msgstr ""
#~ "`Issue #20374 <https://bugs.python.org/20374>`__: Fix build with GNU "
#~ "readline >= 6.3."

#~ msgid ""
#~ "`Issue #20262 <https://bugs.python.org/20262>`__: Warnings are raised now "
#~ "when duplicate names are added in the ZIP file or too long ZIP file "
#~ "comment is truncated."
#~ msgstr ""
#~ "`Issue #20262 <https://bugs.python.org/20262>`__: Warnings are raised now "
#~ "when duplicate names are added in the ZIP file or too long ZIP file "
#~ "comment is truncated."

#~ msgid ""
#~ "`Issue #20165 <https://bugs.python.org/20165>`__: The unittest module no "
#~ "longer considers tests marked with @expectedFailure successful if they "
#~ "pass."
#~ msgstr ""
#~ "`Issue #20165 <https://bugs.python.org/20165>`__: The unittest module no "
#~ "longer considers tests marked with @expectedFailure successful if they "
#~ "pass."

#~ msgid ""
#~ "`Issue #18574 <https://bugs.python.org/18574>`__: Added missing newline "
#~ "in 100-Continue reply from http.server.BaseHTTPRequestHandler. Patch by "
#~ "Nikolaus Rath."
#~ msgstr ""
#~ "`Issue #18574 <https://bugs.python.org/18574>`__: Added missing newline "
#~ "in 100-Continue reply from http.server.BaseHTTPRequestHandler. Patch by "
#~ "Nikolaus Rath."

#~ msgid ""
#~ "`Issue #20270 <https://bugs.python.org/20270>`__: urllib.urlparse now "
#~ "supports empty ports."
#~ msgstr ""
#~ "`Issue #20270 <https://bugs.python.org/20270>`__: urllib.urlparse now "
#~ "supports empty ports."

#~ msgid ""
#~ "`Issue #20243 <https://bugs.python.org/20243>`__: TarFile no longer raise "
#~ "ReadError when opened in write mode."
#~ msgstr ""
#~ "`Issue #20243 <https://bugs.python.org/20243>`__: TarFile no longer raise "
#~ "ReadError when opened in write mode."

#~ msgid ""
#~ "`Issue #20245 <https://bugs.python.org/20245>`__: The open functions in "
#~ "the tarfile module now correctly handle empty mode."
#~ msgstr ""
#~ "`Issue #20245 <https://bugs.python.org/20245>`__: The open functions in "
#~ "the tarfile module now correctly handle empty mode."

#~ msgid ""
#~ "`Issue #20242 <https://bugs.python.org/20242>`__: Fixed basicConfig() "
#~ "format strings for the alternative formatting styles. Thanks to "
#~ "kespindler for the bug report and patch."
#~ msgstr ""
#~ "`Issue #20242 <https://bugs.python.org/20242>`__: Fixed basicConfig() "
#~ "format strings for the alternative formatting styles. Thanks to "
#~ "kespindler for the bug report and patch."

#~ msgid ""
#~ "`Issue #20246 <https://bugs.python.org/20246>`__: Fix buffer overflow in "
#~ "socket.recvfrom_into."
#~ msgstr ""
#~ "`Issue #20246 <https://bugs.python.org/20246>`__: Fix buffer overflow in "
#~ "socket.recvfrom_into."

#~ msgid ""
#~ "`Issue #19082 <https://bugs.python.org/19082>`__: Working xmlrpc.server "
#~ "and xmlrpc.client examples. Both in modules and in documentation. Initial "
#~ "patch contributed by Vajrasky Kok."
#~ msgstr ""
#~ "`Issue #19082 <https://bugs.python.org/19082>`__: Working xmlrpc.server "
#~ "and xmlrpc.client examples. Both in modules and in documentation. Initial "
#~ "patch contributed by Vajrasky Kok."

#~ msgid ""
#~ "`Issue #20138 <https://bugs.python.org/20138>`__: The wsgiref."
#~ "application_uri() and wsgiref.request_uri() functions now conform to PEP "
#~ "3333 when handle non-ASCII URLs."
#~ msgstr ""
#~ "`Issue #20138 <https://bugs.python.org/20138>`__: The wsgiref."
#~ "application_uri() and wsgiref.request_uri() functions now conform to PEP "
#~ "3333 when handle non-ASCII URLs."

#~ msgid ""
#~ "`Issue #19097 <https://bugs.python.org/19097>`__: Raise the correct "
#~ "Exception when cgi.FieldStorage is given an invalid fileobj."
#~ msgstr ""
#~ "`Issue #19097 <https://bugs.python.org/19097>`__: Raise the correct "
#~ "Exception when cgi.FieldStorage is given an invalid fileobj."

#~ msgid ""
#~ "`Issue #20152 <https://bugs.python.org/20152>`__: Ported Python/import.c "
#~ "over to Argument Clinic."
#~ msgstr ""
#~ "`Issue #20152 <https://bugs.python.org/20152>`__: Ported Python/import.c "
#~ "over to Argument Clinic."

#~ msgid ""
#~ "`Issue #13107 <https://bugs.python.org/13107>`__: argparse and optparse "
#~ "no longer raises an exception when output a help on environment with too "
#~ "small COLUMNS.  Based on patch by Elazar Gershuni."
#~ msgstr ""
#~ "`Issue #13107 <https://bugs.python.org/13107>`__: argparse and optparse "
#~ "no longer raises an exception when output a help on environment with too "
#~ "small COLUMNS.  Based on patch by Elazar Gershuni."

#~ msgid ""
#~ "`Issue #20207 <https://bugs.python.org/20207>`__: Always disable SSLv2 "
#~ "except when PROTOCOL_SSLv2 is explicitly asked for."
#~ msgstr ""
#~ "`Issue #20207 <https://bugs.python.org/20207>`__: Always disable SSLv2 "
#~ "except when PROTOCOL_SSLv2 is explicitly asked for."

#~ msgid ""
#~ "`Issue #18960 <https://bugs.python.org/18960>`__: The tokenize module now "
#~ "ignore the source encoding declaration on the second line if the first "
#~ "line contains anything except a comment."
#~ msgstr ""
#~ "`Issue #18960 <https://bugs.python.org/18960>`__: The tokenize module now "
#~ "ignore the source encoding declaration on the second line if the first "
#~ "line contains anything except a comment."

#~ msgid ""
#~ "`Issue #20078 <https://bugs.python.org/20078>`__: Reading malformed "
#~ "zipfiles no longer hangs with 100% CPU consumption."
#~ msgstr ""
#~ "`Issue #20078 <https://bugs.python.org/20078>`__: Reading malformed "
#~ "zipfiles no longer hangs with 100% CPU consumption."

#~ msgid ""
#~ "`Issue #20113 <https://bugs.python.org/20113>`__: os.readv() and os."
#~ "writev() now raise an OSError exception on error instead of returning -1."
#~ msgstr ""
#~ "`Issue #20113 <https://bugs.python.org/20113>`__: os.readv() and os."
#~ "writev() now raise an OSError exception on error instead of returning -1."

#~ msgid ""
#~ "`Issue #19719 <https://bugs.python.org/19719>`__: Make importlib.abc."
#~ "MetaPathFinder.find_module(), PathEntryFinder.find_loader(), and Loader."
#~ "load_module() use PEP 451 APIs to help with backwards-compatibility."
#~ msgstr ""
#~ "`Issue #19719 <https://bugs.python.org/19719>`__: Make importlib.abc."
#~ "MetaPathFinder.find_module(), PathEntryFinder.find_loader(), and Loader."
#~ "load_module() use PEP 451 APIs to help with backwards-compatibility."

#~ msgid ""
#~ "`Issue #20144 <https://bugs.python.org/20144>`__: inspect.Signature now "
#~ "supports parsing simple symbolic constants as parameter default values in "
#~ "__text_signature__."
#~ msgstr ""
#~ "`Issue #20144 <https://bugs.python.org/20144>`__: inspect.Signature now "
#~ "supports parsing simple symbolic constants as parameter default values in "
#~ "__text_signature__."

#~ msgid ""
#~ "`Issue #20072 <https://bugs.python.org/20072>`__: Fixed multiple errors "
#~ "in tkinter with wantobjects is False."
#~ msgstr ""
#~ "`Issue #20072 <https://bugs.python.org/20072>`__: Fixed multiple errors "
#~ "in tkinter with wantobjects is False."

#~ msgid ""
#~ "`Issue #20229 <https://bugs.python.org/20229>`__: Avoid plistlib "
#~ "deprecation warning in platform.mac_ver()."
#~ msgstr ""
#~ "`Issue #20229 <https://bugs.python.org/20229>`__: Avoid plistlib "
#~ "deprecation warning in platform.mac_ver()."

#~ msgid ""
#~ "`Issue #14455 <https://bugs.python.org/14455>`__: Fix some problems with "
#~ "the new binary plist support in plistlib."
#~ msgstr ""
#~ "`Issue #14455 <https://bugs.python.org/14455>`__: Fix some problems with "
#~ "the new binary plist support in plistlib."

#~ msgid ""
#~ "`Issue #17390 <https://bugs.python.org/17390>`__: Add Python version to "
#~ "Idle editor window title bar. Original patches by Edmond Burnett and Kent "
#~ "Johnson."
#~ msgstr ""
#~ "`Issue #17390 <https://bugs.python.org/17390>`__: Add Python version to "
#~ "Idle editor window title bar. Original patches by Edmond Burnett and Kent "
#~ "Johnson."

#~ msgid ""
#~ "`Issue #18960 <https://bugs.python.org/18960>`__: IDLE now ignores the "
#~ "source encoding declaration on the second line if the first line contains "
#~ "anything except a comment."
#~ msgstr ""
#~ "`Issue #18960 <https://bugs.python.org/18960>`__: IDLE now ignores the "
#~ "source encoding declaration on the second line if the first line contains "
#~ "anything except a comment."

#~ msgid ""
#~ "`Issue #20358 <https://bugs.python.org/20358>`__: Tests for curses.window."
#~ "overlay and curses.window.overwrite no longer specify min{row,col} > "
#~ "max{row,col}."
#~ msgstr ""
#~ "`Issue #20358 <https://bugs.python.org/20358>`__: Tests for curses.window."
#~ "overlay and curses.window.overwrite no longer specify min{row,col} > "
#~ "max{row,col}."

#~ msgid ""
#~ "`Issue #19804 <https://bugs.python.org/19804>`__: The test_find_mac test "
#~ "in test_uuid is now skipped if the ifconfig executable is not available."
#~ msgstr ""
#~ "`Issue #19804 <https://bugs.python.org/19804>`__: The test_find_mac test "
#~ "in test_uuid is now skipped if the ifconfig executable is not available."

#~ msgid ""
#~ "`Issue #19886 <https://bugs.python.org/19886>`__: Use better estimated "
#~ "memory requirements for bigmem tests."
#~ msgstr ""
#~ "`Issue #19886 <https://bugs.python.org/19886>`__: Use better estimated "
#~ "memory requirements for bigmem tests."

#~ msgid ""
#~ "`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic's \"file"
#~ "\" output preset now defaults to \"{dirname}/clinic/{basename}.h\"."
#~ msgstr ""
#~ "`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic's \"file"
#~ "\" output preset now defaults to \"{dirname}/clinic/{basename}.h\"."

#~ msgid ""
#~ "`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic's "
#~ "\"class\" directive syntax has been extended with two new required "
#~ "arguments: \"typedef\" and \"type_object\"."
#~ msgstr ""
#~ "`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic's "
#~ "\"class\" directive syntax has been extended with two new required "
#~ "arguments: \"typedef\" and \"type_object\"."

#~ msgid ""
#~ "`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic: If "
#~ "__new__ or __init__ functions didn't use kwargs (or args), the "
#~ "PyArg_NoKeywords (or PyArg_NoPositional) calls generated are only run "
#~ "when the type object is an exact match."
#~ msgstr ""
#~ "`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic: If "
#~ "__new__ or __init__ functions didn't use kwargs (or args), the "
#~ "PyArg_NoKeywords (or PyArg_NoPositional) calls generated are only run "
#~ "when the type object is an exact match."

#~ msgid ""
#~ "`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic now "
#~ "fails if you have required parameters after optional parameters."
#~ msgstr ""
#~ "`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic now "
#~ "fails if you have required parameters after optional parameters."

#~ msgid ""
#~ "`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic "
#~ "converters now have a new template they can inject code into: \"modifiers"
#~ "\".  Code put there is run in the parsing function after argument parsing "
#~ "but before the call to the impl."
#~ msgstr ""
#~ "`Issue #20390 <https://bugs.python.org/20390>`__: Argument Clinic "
#~ "converters now have a new template they can inject code into: \"modifiers"
#~ "\".  Code put there is run in the parsing function after argument parsing "
#~ "but before the call to the impl."

#~ msgid ""
#~ "`Issue #20376 <https://bugs.python.org/20376>`__: Argument Clinic now "
#~ "escapes backslashes in docstrings."
#~ msgstr ""
#~ "`Issue #20376 <https://bugs.python.org/20376>`__: Argument Clinic now "
#~ "escapes backslashes in docstrings."

#~ msgid ""
#~ "`Issue #20381 <https://bugs.python.org/20381>`__: Argument Clinic now "
#~ "sanity checks the default argument when c_default is also specified, "
#~ "providing a nice failure message for disallowed values."
#~ msgstr ""
#~ "`Issue #20381 <https://bugs.python.org/20381>`__: Argument Clinic now "
#~ "sanity checks the default argument when c_default is also specified, "
#~ "providing a nice failure message for disallowed values."

#~ msgid ""
#~ "`Issue #20189 <https://bugs.python.org/20189>`__: Argument Clinic now "
#~ "ensures that parser functions for __new__ are always of type newfunc, the "
#~ "type of the tp_new slot. Similarly, parser functions for __init__ are now "
#~ "always of type initproc, the type of tp_init."
#~ msgstr ""
#~ "`Issue #20189 <https://bugs.python.org/20189>`__: Argument Clinic now "
#~ "ensures that parser functions for __new__ are always of type newfunc, the "
#~ "type of the tp_new slot. Similarly, parser functions for __init__ are now "
#~ "always of type initproc, the type of tp_init."

#~ msgid ""
#~ "`Issue #20189 <https://bugs.python.org/20189>`__: Argument Clinic now "
#~ "suppresses the docstring for __new__ and __init__ functions if no "
#~ "docstring is provided in the input."
#~ msgstr ""
#~ "`Issue #20189 <https://bugs.python.org/20189>`__: Argument Clinic now "
#~ "suppresses the docstring for __new__ and __init__ functions if no "
#~ "docstring is provided in the input."

#~ msgid ""
#~ "`Issue #20189 <https://bugs.python.org/20189>`__: Argument Clinic now "
#~ "suppresses the \"self\" parameter in the impl for @staticmethod functions."
#~ msgstr ""
#~ "`Issue #20189 <https://bugs.python.org/20189>`__: Argument Clinic now "
#~ "suppresses the \"self\" parameter in the impl for @staticmethod functions."

#~ msgid ""
#~ "`Issue #20294 <https://bugs.python.org/20294>`__: Argument Clinic now "
#~ "supports argument parsing for __new__ and __init__ functions."
#~ msgstr ""
#~ "`Issue #20294 <https://bugs.python.org/20294>`__: Argument Clinic now "
#~ "supports argument parsing for __new__ and __init__ functions."

#~ msgid ""
#~ "`Issue #20299 <https://bugs.python.org/20299>`__: Argument Clinic custom "
#~ "converters may now change the default value of c_default and py_default "
#~ "with a class member."
#~ msgstr ""
#~ "`Issue #20299 <https://bugs.python.org/20299>`__: Argument Clinic custom "
#~ "converters may now change the default value of c_default and py_default "
#~ "with a class member."

#~ msgid ""
#~ "`Issue #20287 <https://bugs.python.org/20287>`__: Argument Clinic's "
#~ "output is now configurable, allowing delaying its output or even "
#~ "redirecting it to a separate file."
#~ msgstr ""
#~ "`Issue #20287 <https://bugs.python.org/20287>`__: Argument Clinic's "
#~ "output is now configurable, allowing delaying its output or even "
#~ "redirecting it to a separate file."

#~ msgid ""
#~ "`Issue #20226 <https://bugs.python.org/20226>`__: Argument Clinic now "
#~ "permits simple expressions (e.g. \"sys.maxsize - 1\") as default values "
#~ "for parameters."
#~ msgstr ""
#~ "`Issue #20226 <https://bugs.python.org/20226>`__: Argument Clinic now "
#~ "permits simple expressions (e.g. \"sys.maxsize - 1\") as default values "
#~ "for parameters."

#~ msgid ""
#~ "`Issue #19936 <https://bugs.python.org/19936>`__: Added executable bits "
#~ "or shebang lines to Python scripts which requires them.  Disable "
#~ "executable bits and shebang lines in test and benchmark files in order to "
#~ "prevent using a random system python, and in source files of modules "
#~ "which don't provide command line interface.  Fixed shebang lines in the "
#~ "unittestgui and checkpip scripts."
#~ msgstr ""
#~ "`Issue #19936 <https://bugs.python.org/19936>`__: Added executable bits "
#~ "or shebang lines to Python scripts which requires them.  Disable "
#~ "executable bits and shebang lines in test and benchmark files in order to "
#~ "prevent using a random system python, and in source files of modules "
#~ "which don't provide command line interface.  Fixed shebang lines in the "
#~ "unittestgui and checkpip scripts."

#~ msgid ""
#~ "`Issue #20268 <https://bugs.python.org/20268>`__: Argument Clinic now "
#~ "supports cloning the parameters and return converter of existing "
#~ "functions."
#~ msgstr ""
#~ "`Issue #20268 <https://bugs.python.org/20268>`__: Argument Clinic now "
#~ "supports cloning the parameters and return converter of existing "
#~ "functions."

#~ msgid ""
#~ "`Issue #20228 <https://bugs.python.org/20228>`__: Argument Clinic now has "
#~ "special support for class special methods."
#~ msgstr ""
#~ "`Issue #20228 <https://bugs.python.org/20228>`__: Argument Clinic now has "
#~ "special support for class special methods."

#~ msgid ""
#~ "`Issue #20214 <https://bugs.python.org/20214>`__: Fixed a number of small "
#~ "issues and documentation errors in Argument Clinic (see issue for "
#~ "details)."
#~ msgstr ""
#~ "`Issue #20214 <https://bugs.python.org/20214>`__: Fixed a number of small "
#~ "issues and documentation errors in Argument Clinic (see issue for "
#~ "details)."

#~ msgid ""
#~ "`Issue #20196 <https://bugs.python.org/20196>`__: Fixed a bug where "
#~ "Argument Clinic did not generate correct parsing code for functions with "
#~ "positional-only parameters where all arguments are optional."
#~ msgstr ""
#~ "`Issue #20196 <https://bugs.python.org/20196>`__: Fixed a bug where "
#~ "Argument Clinic did not generate correct parsing code for functions with "
#~ "positional-only parameters where all arguments are optional."

#~ msgid ""
#~ "`Issue #18960 <https://bugs.python.org/18960>`__: 2to3 and the "
#~ "findnocoding.py script now ignore the source encoding declaration on the "
#~ "second line if the first line contains anything except a comment."
#~ msgstr ""
#~ "`Issue #18960 <https://bugs.python.org/18960>`__: 2to3 and the "
#~ "findnocoding.py script now ignore the source encoding declaration on the "
#~ "second line if the first line contains anything except a comment."

#~ msgid ""
#~ "`Issue #19723 <https://bugs.python.org/19723>`__: The marker comments "
#~ "Argument Clinic uses have been changed to improve readability."
#~ msgstr ""
#~ "`Issue #19723 <https://bugs.python.org/19723>`__: The marker comments "
#~ "Argument Clinic uses have been changed to improve readability."

#~ msgid ""
#~ "`Issue #20157 <https://bugs.python.org/20157>`__: When Argument Clinic "
#~ "renames a parameter because its name collides with a C keyword, it no "
#~ "longer exposes that rename to PyArg_Parse."
#~ msgstr ""
#~ "`Issue #20157 <https://bugs.python.org/20157>`__: When Argument Clinic "
#~ "renames a parameter because its name collides with a C keyword, it no "
#~ "longer exposes that rename to PyArg_Parse."

#~ msgid ""
#~ "`Issue #20141 <https://bugs.python.org/20141>`__: Improved Argument "
#~ "Clinic's support for the PyArg_Parse \"O!\" format unit."
#~ msgstr ""
#~ "`Issue #20141 <https://bugs.python.org/20141>`__: Improved Argument "
#~ "Clinic's support for the PyArg_Parse \"O!\" format unit."

#~ msgid ""
#~ "`Issue #20144 <https://bugs.python.org/20144>`__: Argument Clinic now "
#~ "supports simple symbolic constants as parameter default values."
#~ msgstr ""
#~ "`Issue #20144 <https://bugs.python.org/20144>`__: Argument Clinic now "
#~ "supports simple symbolic constants as parameter default values."

#~ msgid ""
#~ "`Issue #20143 <https://bugs.python.org/20143>`__: The line numbers "
#~ "reported in Argument Clinic errors are now more accurate."
#~ msgstr ""
#~ "`Issue #20143 <https://bugs.python.org/20143>`__: The line numbers "
#~ "reported in Argument Clinic errors are now more accurate."

#~ msgid ""
#~ "`Issue #20142 <https://bugs.python.org/20142>`__: Py_buffer variables "
#~ "generated by Argument Clinic are now initialized with a default value."
#~ msgstr ""
#~ "`Issue #20142 <https://bugs.python.org/20142>`__: Py_buffer variables "
#~ "generated by Argument Clinic are now initialized with a default value."

#~ msgid ""
#~ "`Issue #12837 <https://bugs.python.org/12837>`__: Silence a tautological "
#~ "comparison warning on OS X under Clang in socketmodule.c."
#~ msgstr ""
#~ "`Issue #12837 <https://bugs.python.org/12837>`__: Silence a tautological "
#~ "comparison warning on OS X under Clang in socketmodule.c."

#~ msgid ""
#~ "`Issue #17432 <https://bugs.python.org/17432>`__: Drop UCS2 from names of "
#~ "Unicode functions in python3.def."
#~ msgstr ""
#~ "`Issue #17432 <https://bugs.python.org/17432>`__: Drop UCS2 from names of "
#~ "Unicode functions in python3.def."

#~ msgid ""
#~ "`Issue #19526 <https://bugs.python.org/19526>`__: Exclude all new API "
#~ "from the stable ABI. Exceptions can be made if a need is demonstrated."
#~ msgstr ""
#~ "`Issue #19526 <https://bugs.python.org/19526>`__: Exclude all new API "
#~ "from the stable ABI. Exceptions can be made if a need is demonstrated."

#~ msgid ""
#~ "`Issue #19969 <https://bugs.python.org/19969>`__: PyBytes_FromFormatV() "
#~ "now raises an OverflowError if \"%c\" argument is not in range [0; 255]."
#~ msgstr ""
#~ "`Issue #19969 <https://bugs.python.org/19969>`__: PyBytes_FromFormatV() "
#~ "now raises an OverflowError if \"%c\" argument is not in range [0; 255]."

#~ msgid ""
#~ "`Issue #19995 <https://bugs.python.org/19995>`__: %c, %o, %x, and %X now "
#~ "issue a DeprecationWarning on non-integer input; reworded docs to clarify "
#~ "that an integer type should define both __int__ and __index__."
#~ msgstr ""
#~ "`Issue #19995 <https://bugs.python.org/19995>`__: %c, %o, %x, and %X now "
#~ "issue a DeprecationWarning on non-integer input; reworded docs to clarify "
#~ "that an integer type should define both __int__ and __index__."

#~ msgid ""
#~ "`Issue #19787 <https://bugs.python.org/19787>`__: "
#~ "PyThread_set_key_value() now always set the value. In Python 3.3, the "
#~ "function did nothing if the key already exists (if the current value is a "
#~ "non-NULL pointer)."
#~ msgstr ""
#~ "`Issue #19787 <https://bugs.python.org/19787>`__: "
#~ "PyThread_set_key_value() now always set the value. In Python 3.3, the "
#~ "function did nothing if the key already exists (if the current value is a "
#~ "non-NULL pointer)."

#~ msgid ""
#~ "`Issue #14432 <https://bugs.python.org/14432>`__: Remove the thread state "
#~ "field from the frame structure. Fix a crash when a generator is created "
#~ "in a C thread that is destroyed while the generator is still used. The "
#~ "issue was that a generator contains a frame, and the frame kept a "
#~ "reference to the Python state of the destroyed C thread. The crash occurs "
#~ "when a trace function is setup."
#~ msgstr ""
#~ "`Issue #14432 <https://bugs.python.org/14432>`__: Remove the thread state "
#~ "field from the frame structure. Fix a crash when a generator is created "
#~ "in a C thread that is destroyed while the generator is still used. The "
#~ "issue was that a generator contains a frame, and the frame kept a "
#~ "reference to the Python state of the destroyed C thread. The crash occurs "
#~ "when a trace function is setup."

#~ msgid ""
#~ "`Issue #19576 <https://bugs.python.org/19576>`__: PyGILState_Ensure() now "
#~ "initializes threads. At startup, Python has no concrete GIL. If "
#~ "PyGILState_Ensure() is called from a new thread for the first time and "
#~ "PyEval_InitThreads() was not called yet, a GIL needs to be created."
#~ msgstr ""
#~ "`Issue #19576 <https://bugs.python.org/19576>`__: PyGILState_Ensure() now "
#~ "initializes threads. At startup, Python has no concrete GIL. If "
#~ "PyGILState_Ensure() is called from a new thread for the first time and "
#~ "PyEval_InitThreads() was not called yet, a GIL needs to be created."

#~ msgid ""
#~ "`Issue #17576 <https://bugs.python.org/17576>`__: Deprecation warning "
#~ "emitted now when __int__() or __index__() return not int instance."
#~ msgstr ""
#~ "`Issue #17576 <https://bugs.python.org/17576>`__: Deprecation warning "
#~ "emitted now when __int__() or __index__() return not int instance."

#~ msgid ""
#~ "`Issue #19932 <https://bugs.python.org/19932>`__: Fix typo in import.h, "
#~ "missing whitespaces in function prototypes."
#~ msgstr ""
#~ "`Issue #19932 <https://bugs.python.org/19932>`__: Fix typo in import.h, "
#~ "missing whitespaces in function prototypes."

#~ msgid ""
#~ "`Issue #19736 <https://bugs.python.org/19736>`__: Add module-level "
#~ "statvfs constants defined for GNU/glibc based systems."
#~ msgstr ""
#~ "`Issue #19736 <https://bugs.python.org/19736>`__: Add module-level "
#~ "statvfs constants defined for GNU/glibc based systems."

#~ msgid ""
#~ "`Issue #20097 <https://bugs.python.org/20097>`__: Fix bad use of \"self\" "
#~ "in importlib's WindowsRegistryFinder."
#~ msgstr ""
#~ "`Issue #20097 <https://bugs.python.org/20097>`__: Fix bad use of \"self\" "
#~ "in importlib's WindowsRegistryFinder."

#~ msgid ""
#~ "`Issue #19729 <https://bugs.python.org/19729>`__: In str.format(), fix "
#~ "recursive expansion in format spec."
#~ msgstr ""
#~ "`Issue #19729 <https://bugs.python.org/19729>`__: In str.format(), fix "
#~ "recursive expansion in format spec."

#~ msgid ""
#~ "`Issue #19638 <https://bugs.python.org/19638>`__: Fix possible crash / "
#~ "undefined behaviour from huge (more than 2 billion characters) input "
#~ "strings in _Py_dg_strtod."
#~ msgstr ""
#~ "`Issue #19638 <https://bugs.python.org/19638>`__: Fix possible crash / "
#~ "undefined behaviour from huge (more than 2 billion characters) input "
#~ "strings in _Py_dg_strtod."

#~ msgid ""
#~ "`Issue #20154 <https://bugs.python.org/20154>`__: Deadlock in asyncio."
#~ "StreamReader.readexactly()."
#~ msgstr ""
#~ "`Issue #20154 <https://bugs.python.org/20154>`__: Deadlock in asyncio."
#~ "StreamReader.readexactly()."

#~ msgid ""
#~ "`Issue #16113 <https://bugs.python.org/16113>`__: Remove sha3 module "
#~ "again."
#~ msgstr ""
#~ "`Issue #16113 <https://bugs.python.org/16113>`__: Remove sha3 module "
#~ "again."

#~ msgid ""
#~ "`Issue #20111 <https://bugs.python.org/20111>`__: pathlib.Path."
#~ "with_suffix() now sanity checks the given suffix."
#~ msgstr ""
#~ "`Issue #20111 <https://bugs.python.org/20111>`__: pathlib.Path."
#~ "with_suffix() now sanity checks the given suffix."

#~ msgid ""
#~ "`Issue #20108 <https://bugs.python.org/20108>`__: Avoid parameter name "
#~ "clash in inspect.getcallargs()."
#~ msgstr ""
#~ "`Issue #20108 <https://bugs.python.org/20108>`__: Avoid parameter name "
#~ "clash in inspect.getcallargs()."

#~ msgid ""
#~ "`Issue #19918 <https://bugs.python.org/19918>`__: Fix PurePath."
#~ "relative_to() under Windows."
#~ msgstr ""
#~ "`Issue #19918 <https://bugs.python.org/19918>`__: Fix PurePath."
#~ "relative_to() under Windows."

#~ msgid ""
#~ "`Issue #19422 <https://bugs.python.org/19422>`__: Explicitly disallow non-"
#~ "SOCK_STREAM sockets in the ssl module, rather than silently let them emit "
#~ "clear text data."
#~ msgstr ""
#~ "`Issue #19422 <https://bugs.python.org/19422>`__: Explicitly disallow non-"
#~ "SOCK_STREAM sockets in the ssl module, rather than silently let them emit "
#~ "clear text data."

#~ msgid ""
#~ "`Issue #20046 <https://bugs.python.org/20046>`__: Locale alias table no "
#~ "longer contains entities which can be calculated.  Generalized support of "
#~ "the euro modifier."
#~ msgstr ""
#~ "`Issue #20046 <https://bugs.python.org/20046>`__: Locale alias table no "
#~ "longer contains entities which can be calculated.  Generalized support of "
#~ "the euro modifier."

#~ msgid ""
#~ "`Issue #20027 <https://bugs.python.org/20027>`__: Fixed locale aliases "
#~ "for devanagari locales."
#~ msgstr ""
#~ "`Issue #20027 <https://bugs.python.org/20027>`__: Fixed locale aliases "
#~ "for devanagari locales."

#~ msgid ""
#~ "`Issue #20067 <https://bugs.python.org/20067>`__: Tkinter variables now "
#~ "work when wantobjects is false."
#~ msgstr ""
#~ "`Issue #20067 <https://bugs.python.org/20067>`__: Tkinter variables now "
#~ "work when wantobjects is false."

#~ msgid ""
#~ "`Issue #19020 <https://bugs.python.org/19020>`__: Tkinter now uses "
#~ "splitlist() instead of split() in configure methods."
#~ msgstr ""
#~ "`Issue #19020 <https://bugs.python.org/19020>`__: Tkinter now uses "
#~ "splitlist() instead of split() in configure methods."

#~ msgid ""
#~ "`Issue #19744 <https://bugs.python.org/19744>`__: ensurepip now provides "
#~ "a better error message when Python is built without SSL/TLS support (pip "
#~ "currently requires that support to run, even if only operating with local "
#~ "wheel files)"
#~ msgstr ""
#~ "`Issue #19744 <https://bugs.python.org/19744>`__: ensurepip now provides "
#~ "a better error message when Python is built without SSL/TLS support (pip "
#~ "currently requires that support to run, even if only operating with local "
#~ "wheel files)"

#~ msgid ""
#~ "`Issue #19734 <https://bugs.python.org/19734>`__: ensurepip now ignores "
#~ "all pip environment variables to avoid odd behaviour based on user "
#~ "configuration settings"
#~ msgstr ""
#~ "`Issue #19734 <https://bugs.python.org/19734>`__: ensurepip now ignores "
#~ "all pip environment variables to avoid odd behaviour based on user "
#~ "configuration settings"

#~ msgid ""
#~ "`Issue #20045 <https://bugs.python.org/20045>`__: Fix \"setup.py register "
#~ "--list-classifiers\"."
#~ msgstr ""
#~ "`Issue #20045 <https://bugs.python.org/20045>`__: Fix \"setup.py register "
#~ "--list-classifiers\"."

#~ msgid ""
#~ "`Issue #18879 <https://bugs.python.org/18879>`__: When a method is looked "
#~ "up on a temporary file, avoid closing the file before the method is "
#~ "possibly called."
#~ msgstr ""
#~ "`Issue #18879 <https://bugs.python.org/18879>`__: When a method is looked "
#~ "up on a temporary file, avoid closing the file before the method is "
#~ "possibly called."

#~ msgid ""
#~ "`Issue #20037 <https://bugs.python.org/20037>`__: Avoid crashes when "
#~ "opening a text file late at interpreter shutdown."
#~ msgstr ""
#~ "`Issue #20037 <https://bugs.python.org/20037>`__: Avoid crashes when "
#~ "opening a text file late at interpreter shutdown."

#~ msgid ""
#~ "`Issue #19967 <https://bugs.python.org/19967>`__: Thanks to the PEP 442, "
#~ "asyncio.Future now uses a destructor to log uncaught exceptions, instead "
#~ "of the dedicated _TracebackLogger class."
#~ msgstr ""
#~ "`Issue #19967 <https://bugs.python.org/19967>`__: Thanks to the PEP 442, "
#~ "asyncio.Future now uses a destructor to log uncaught exceptions, instead "
#~ "of the dedicated _TracebackLogger class."

#~ msgid ""
#~ "`Issue #19850 <https://bugs.python.org/19850>`__: Set SA_RESTART in "
#~ "asyncio when registering a signal handler to limit EINTR occurrences."
#~ msgstr ""
#~ "`Issue #19850 <https://bugs.python.org/19850>`__: Set SA_RESTART in "
#~ "asyncio when registering a signal handler to limit EINTR occurrences."

#~ msgid ""
#~ "`Issue #20034 <https://bugs.python.org/20034>`__: Updated alias mapping "
#~ "to most recent locale.alias file from X.org distribution using "
#~ "makelocalealias.py."
#~ msgstr ""
#~ "`Issue #20034 <https://bugs.python.org/20034>`__: Updated alias mapping "
#~ "to most recent locale.alias file from X.org distribution using "
#~ "makelocalealias.py."

#~ msgid ""
#~ "`Issue #5815 <https://bugs.python.org/5815>`__: Fixed support for locales "
#~ "with modifiers.  Fixed support for locale encodings with hyphens."
#~ msgstr ""
#~ "`Issue #5815 <https://bugs.python.org/5815>`__: Fixed support for locales "
#~ "with modifiers.  Fixed support for locale encodings with hyphens."

#~ msgid ""
#~ "`Issue #20026 <https://bugs.python.org/20026>`__: Fix the sqlite module "
#~ "to handle correctly invalid isolation level (wrong type)."
#~ msgstr ""
#~ "`Issue #20026 <https://bugs.python.org/20026>`__: Fix the sqlite module "
#~ "to handle correctly invalid isolation level (wrong type)."

#~ msgid ""
#~ "`Issue #18829 <https://bugs.python.org/18829>`__: csv.Dialect() now "
#~ "checks type for delimiter, escapechar and quotechar fields.  Original "
#~ "patch by Vajrasky Kok."
#~ msgstr ""
#~ "`Issue #18829 <https://bugs.python.org/18829>`__: csv.Dialect() now "
#~ "checks type for delimiter, escapechar and quotechar fields.  Original "
#~ "patch by Vajrasky Kok."

#~ msgid ""
#~ "`Issue #19855 <https://bugs.python.org/19855>`__: uuid.getnode() on Unix "
#~ "now looks on the PATH for the executables used to find the mac address, "
#~ "with /sbin and /usr/sbin as fallbacks."
#~ msgstr ""
#~ "`Issue #19855 <https://bugs.python.org/19855>`__: uuid.getnode() on Unix "
#~ "now looks on the PATH for the executables used to find the mac address, "
#~ "with /sbin and /usr/sbin as fallbacks."

#~ msgid ""
#~ "`Issue #20007 <https://bugs.python.org/20007>`__: HTTPResponse.read(0) no "
#~ "more prematurely closes connection. Original patch by Simon Sapin."
#~ msgstr ""
#~ "`Issue #20007 <https://bugs.python.org/20007>`__: HTTPResponse.read(0) no "
#~ "more prematurely closes connection. Original patch by Simon Sapin."

#~ msgid ""
#~ "`Issue #19946 <https://bugs.python.org/19946>`__: multiprocessing now "
#~ "uses runpy to initialize __main__ in child processes when necessary, "
#~ "allowing it to correctly handle scripts without suffixes and submodules "
#~ "that use explicit relative imports or otherwise rely on parent modules "
#~ "being correctly imported prior to execution."
#~ msgstr ""
#~ "`Issue #19946 <https://bugs.python.org/19946>`__: multiprocessing now "
#~ "uses runpy to initialize __main__ in child processes when necessary, "
#~ "allowing it to correctly handle scripts without suffixes and submodules "
#~ "that use explicit relative imports or otherwise rely on parent modules "
#~ "being correctly imported prior to execution."

#~ msgid ""
#~ "`Issue #19921 <https://bugs.python.org/19921>`__: When Path.mkdir() is "
#~ "called with parents=True, any missing parent is created with the default "
#~ "permissions, ignoring the mode argument (mimicking the POSIX \"mkdir -p\" "
#~ "command)."
#~ msgstr ""
#~ "`Issue #19921 <https://bugs.python.org/19921>`__: When Path.mkdir() is "
#~ "called with parents=True, any missing parent is created with the default "
#~ "permissions, ignoring the mode argument (mimicking the POSIX \"mkdir -p\" "
#~ "command)."

#~ msgid ""
#~ "`Issue #19887 <https://bugs.python.org/19887>`__: Improve the Path."
#~ "resolve() algorithm to support certain symlink chains."
#~ msgstr ""
#~ "`Issue #19887 <https://bugs.python.org/19887>`__: Improve the Path."
#~ "resolve() algorithm to support certain symlink chains."

#~ msgid ""
#~ "`Issue #19912 <https://bugs.python.org/19912>`__: Fixed numerous bugs in "
#~ "ntpath.splitunc()."
#~ msgstr ""
#~ "`Issue #19912 <https://bugs.python.org/19912>`__: Fixed numerous bugs in "
#~ "ntpath.splitunc()."

#~ msgid ""
#~ "`Issue #19911 <https://bugs.python.org/19911>`__: ntpath.splitdrive() now "
#~ "correctly processes the 'ƒ∞' character (U+0130, LATIN CAPITAL LETTER I "
#~ "WITH DOT ABOVE)."
#~ msgstr ""
#~ "`Issue #19911 <https://bugs.python.org/19911>`__: ntpath.splitdrive() now "
#~ "correctly processes the 'ƒ∞' character (U+0130, LATIN CAPITAL LETTER I "
#~ "WITH DOT ABOVE)."

#~ msgid ""
#~ "`Issue #19532 <https://bugs.python.org/19532>`__: python -m compileall "
#~ "with no filename/directory arguments now respects the -f and -q flags "
#~ "instead of ignoring them."
#~ msgstr ""
#~ "`Issue #19532 <https://bugs.python.org/19532>`__: python -m compileall "
#~ "with no filename/directory arguments now respects the -f and -q flags "
#~ "instead of ignoring them."

#~ msgid ""
#~ "`Issue #19623 <https://bugs.python.org/19623>`__: Fixed writing to "
#~ "unseekable files in the aifc module."
#~ msgstr ""
#~ "`Issue #19623 <https://bugs.python.org/19623>`__: Fixed writing to "
#~ "unseekable files in the aifc module."

#~ msgid ""
#~ "`Issue #19946 <https://bugs.python.org/19946>`__: multiprocessing.spawn "
#~ "now raises ImportError when the module to be used as the main module "
#~ "cannot be imported."
#~ msgstr ""
#~ "`Issue #19946 <https://bugs.python.org/19946>`__: multiprocessing.spawn "
#~ "now raises ImportError when the module to be used as the main module "
#~ "cannot be imported."

#~ msgid ""
#~ "`Issue #17919 <https://bugs.python.org/17919>`__: select.poll.register() "
#~ "again works with poll.POLLNVAL on AIX. Fixed integer overflow in the "
#~ "eventmask parameter."
#~ msgstr ""
#~ "`Issue #17919 <https://bugs.python.org/17919>`__: select.poll.register() "
#~ "again works with poll.POLLNVAL on AIX. Fixed integer overflow in the "
#~ "eventmask parameter."

#~ msgid ""
#~ "`Issue #19063 <https://bugs.python.org/19063>`__: if a Charset's "
#~ "body_encoding was set to None, the email package would generate a message "
#~ "claiming the Content-Transfer-Encoding was 7bit, and produce garbage "
#~ "output for the content.  This now works. A couple of other set_payload "
#~ "mishandlings of non-ASCII are also fixed. In addition, calling "
#~ "set_payload with a string argument without specifying a charset now "
#~ "raises an error (this is a new error in 3.4)."
#~ msgstr ""
#~ "`Issue #19063 <https://bugs.python.org/19063>`__: if a Charset's "
#~ "body_encoding was set to None, the email package would generate a message "
#~ "claiming the Content-Transfer-Encoding was 7bit, and produce garbage "
#~ "output for the content.  This now works. A couple of other set_payload "
#~ "mishandlings of non-ASCII are also fixed. In addition, calling "
#~ "set_payload with a string argument without specifying a charset now "
#~ "raises an error (this is a new error in 3.4)."

#~ msgid ""
#~ "`Issue #15475 <https://bugs.python.org/15475>`__: Add __sizeof__ "
#~ "implementations for itertools objects."
#~ msgstr ""
#~ "`Issue #15475 <https://bugs.python.org/15475>`__: Add __sizeof__ "
#~ "implementations for itertools objects."

#~ msgid ""
#~ "`Issue #19944 <https://bugs.python.org/19944>`__: Fix importlib."
#~ "find_spec() so it imports parents as needed and move the function to "
#~ "importlib.util."
#~ msgstr ""
#~ "`Issue #19944 <https://bugs.python.org/19944>`__: Fix importlib."
#~ "find_spec() so it imports parents as needed and move the function to "
#~ "importlib.util."

#~ msgid ""
#~ "`Issue #19880 <https://bugs.python.org/19880>`__: Fix a reference leak in "
#~ "unittest.TestCase. Explicitly break reference cycles between frames and "
#~ "the _Outcome instance."
#~ msgstr ""
#~ "`Issue #19880 <https://bugs.python.org/19880>`__: Fix a reference leak in "
#~ "unittest.TestCase. Explicitly break reference cycles between frames and "
#~ "the _Outcome instance."

#~ msgid ""
#~ "`Issue #17429 <https://bugs.python.org/17429>`__: platform."
#~ "linux_distribution() now decodes files from the UTF-8 encoding with the "
#~ "surrogateescape error handler, instead of decoding from the locale "
#~ "encoding in strict mode. It fixes the function on Fedora 19 which is "
#~ "probably the first major distribution release with a non-ASCII name. "
#~ "Patch written by Toshio Kuratomi."
#~ msgstr ""
#~ "`Issue #17429 <https://bugs.python.org/17429>`__: platform."
#~ "linux_distribution() now decodes files from the UTF-8 encoding with the "
#~ "surrogateescape error handler, instead of decoding from the locale "
#~ "encoding in strict mode. It fixes the function on Fedora 19 which is "
#~ "probably the first major distribution release with a non-ASCII name. "
#~ "Patch written by Toshio Kuratomi."

#~ msgid ""
#~ "`Issue #19343 <https://bugs.python.org/19343>`__: Expose FreeBSD-specific "
#~ "APIs in resource module.  Original patch by Koobs."
#~ msgstr ""
#~ "`Issue #19343 <https://bugs.python.org/19343>`__: Expose FreeBSD-specific "
#~ "APIs in resource module.  Original patch by Koobs."

#~ msgid ""
#~ "`Issue #19929 <https://bugs.python.org/19929>`__: Call os.read with 32768 "
#~ "within subprocess.Popen.communicate rather than 4096 for efficiency.  A "
#~ "microbenchmark shows Linux and OS X both using ~50% less cpu time this "
#~ "way."
#~ msgstr ""
#~ "`Issue #19929 <https://bugs.python.org/19929>`__: Call os.read with 32768 "
#~ "within subprocess.Popen.communicate rather than 4096 for efficiency.  A "
#~ "microbenchmark shows Linux and OS X both using ~50% less cpu time this "
#~ "way."

#~ msgid ""
#~ "`Issue #19506 <https://bugs.python.org/19506>`__: Use a memoryview to "
#~ "avoid a data copy when piping data to stdin within subprocess.Popen."
#~ "communicate.  5-10% less cpu usage."
#~ msgstr ""
#~ "`Issue #19506 <https://bugs.python.org/19506>`__: Use a memoryview to "
#~ "avoid a data copy when piping data to stdin within subprocess.Popen."
#~ "communicate.  5-10% less cpu usage."

#~ msgid ""
#~ "`Issue #19876 <https://bugs.python.org/19876>`__: selectors unregister() "
#~ "no longer raises ValueError or OSError if the FD is closed (as long as it "
#~ "was registered)."
#~ msgstr ""
#~ "`Issue #19876 <https://bugs.python.org/19876>`__: selectors unregister() "
#~ "no longer raises ValueError or OSError if the FD is closed (as long as it "
#~ "was registered)."

#~ msgid ""
#~ "`Issue #19908 <https://bugs.python.org/19908>`__: pathlib now joins "
#~ "relative Windows paths correctly when a drive is present.  Original patch "
#~ "by Antoine Pitrou."
#~ msgstr ""
#~ "`Issue #19908 <https://bugs.python.org/19908>`__: pathlib now joins "
#~ "relative Windows paths correctly when a drive is present.  Original patch "
#~ "by Antoine Pitrou."

#~ msgid ""
#~ "`Issue #19296 <https://bugs.python.org/19296>`__: Silence compiler "
#~ "warning in dbm_open"
#~ msgstr ""
#~ "`Issue #19296 <https://bugs.python.org/19296>`__: Silence compiler "
#~ "warning in dbm_open"

#~ msgid ""
#~ "`Issue #6784 <https://bugs.python.org/6784>`__: Strings from Python 2 can "
#~ "now be unpickled as bytes objects by setting the encoding argument of "
#~ "Unpickler to be 'bytes'. Initial patch by Merlijn van Deen."
#~ msgstr ""
#~ "`Issue #6784 <https://bugs.python.org/6784>`__: Strings from Python 2 can "
#~ "now be unpickled as bytes objects by setting the encoding argument of "
#~ "Unpickler to be 'bytes'. Initial patch by Merlijn van Deen."

#~ msgid ""
#~ "`Issue #19839 <https://bugs.python.org/19839>`__: Fix regression in bz2 "
#~ "module's handling of non-bzip2 data at EOF, and analogous bug in lzma "
#~ "module."
#~ msgstr ""
#~ "`Issue #19839 <https://bugs.python.org/19839>`__: Fix regression in bz2 "
#~ "module's handling of non-bzip2 data at EOF, and analogous bug in lzma "
#~ "module."

#~ msgid ""
#~ "`Issue #19881 <https://bugs.python.org/19881>`__: Fix pickling bug where "
#~ "cpickle would emit bad pickle data for large bytes string (i.e., with "
#~ "size greater than 2**32-1)."
#~ msgstr ""
#~ "`Issue #19881 <https://bugs.python.org/19881>`__: Fix pickling bug where "
#~ "cpickle would emit bad pickle data for large bytes string (i.e., with "
#~ "size greater than 2**32-1)."

#~ msgid ""
#~ "`Issue #19138 <https://bugs.python.org/19138>`__: doctest's "
#~ "IGNORE_EXCEPTION_DETAIL now allows a match when no exception detail "
#~ "exists (no colon following the exception's name, or a colon does follow "
#~ "but no text follows the colon)."
#~ msgstr ""
#~ "`Issue #19138 <https://bugs.python.org/19138>`__: doctest's "
#~ "IGNORE_EXCEPTION_DETAIL now allows a match when no exception detail "
#~ "exists (no colon following the exception's name, or a colon does follow "
#~ "but no text follows the colon)."

#~ msgid ""
#~ "`Issue #19927 <https://bugs.python.org/19927>`__: Add __eq__ to path-"
#~ "based loaders in importlib."
#~ msgstr ""
#~ "`Issue #19927 <https://bugs.python.org/19927>`__: Add __eq__ to path-"
#~ "based loaders in importlib."

#~ msgid ""
#~ "`Issue #19827 <https://bugs.python.org/19827>`__: On UNIX, setblocking() "
#~ "and settimeout() methods of socket.socket can now avoid a second syscall "
#~ "if the ioctl() function can be used, or if the non-blocking flag of the "
#~ "socket is unchanged."
#~ msgstr ""
#~ "`Issue #19827 <https://bugs.python.org/19827>`__: On UNIX, setblocking() "
#~ "and settimeout() methods of socket.socket can now avoid a second syscall "
#~ "if the ioctl() function can be used, or if the non-blocking flag of the "
#~ "socket is unchanged."

#~ msgid ""
#~ "`Issue #19785 <https://bugs.python.org/19785>`__: smtplib now supports "
#~ "SSLContext.check_hostname and server name indication for TLS/SSL "
#~ "connections."
#~ msgstr ""
#~ "`Issue #19785 <https://bugs.python.org/19785>`__: smtplib now supports "
#~ "SSLContext.check_hostname and server name indication for TLS/SSL "
#~ "connections."

#~ msgid ""
#~ "`Issue #19784 <https://bugs.python.org/19784>`__: poplib now supports "
#~ "SSLContext.check_hostname and server name indication for TLS/SSL "
#~ "connections."
#~ msgstr ""
#~ "`Issue #19784 <https://bugs.python.org/19784>`__: poplib now supports "
#~ "SSLContext.check_hostname and server name indication for TLS/SSL "
#~ "connections."

#~ msgid ""
#~ "`Issue #19783 <https://bugs.python.org/19783>`__: nntplib now supports "
#~ "SSLContext.check_hostname and server name indication for TLS/SSL "
#~ "connections."
#~ msgstr ""
#~ "`Issue #19783 <https://bugs.python.org/19783>`__: nntplib now supports "
#~ "SSLContext.check_hostname and server name indication for TLS/SSL "
#~ "connections."

#~ msgid ""
#~ "`Issue #19782 <https://bugs.python.org/19782>`__: imaplib now supports "
#~ "SSLContext.check_hostname and server name indication for TLS/SSL "
#~ "connections."
#~ msgstr ""
#~ "`Issue #19782 <https://bugs.python.org/19782>`__: imaplib now supports "
#~ "SSLContext.check_hostname and server name indication for TLS/SSL "
#~ "connections."

#~ msgid ""
#~ "`Issue #20123 <https://bugs.python.org/20123>`__: Fix pydoc.synopsis() "
#~ "for \"binary\" modules."
#~ msgstr ""
#~ "`Issue #20123 <https://bugs.python.org/20123>`__: Fix pydoc.synopsis() "
#~ "for \"binary\" modules."

#~ msgid ""
#~ "`Issue #19834 <https://bugs.python.org/19834>`__: Support unpickling of "
#~ "exceptions pickled by Python 2."
#~ msgstr ""
#~ "`Issue #19834 <https://bugs.python.org/19834>`__: Support unpickling of "
#~ "exceptions pickled by Python 2."

#~ msgid ""
#~ "`Issue #19781 <https://bugs.python.org/19781>`__: ftplib now supports "
#~ "SSLContext.check_hostname and server name indication for TLS/SSL "
#~ "connections."
#~ msgstr ""
#~ "`Issue #19781 <https://bugs.python.org/19781>`__: ftplib now supports "
#~ "SSLContext.check_hostname and server name indication for TLS/SSL "
#~ "connections."

#~ msgid ""
#~ "`Issue #19509 <https://bugs.python.org/19509>`__: Add SSLContext."
#~ "check_hostname to match the peer's certificate with server_hostname on "
#~ "handshake."
#~ msgstr ""
#~ "`Issue #19509 <https://bugs.python.org/19509>`__: Add SSLContext."
#~ "check_hostname to match the peer's certificate with server_hostname on "
#~ "handshake."

#~ msgid ""
#~ "`Issue #15798 <https://bugs.python.org/15798>`__: Fixed subprocess."
#~ "Popen() to no longer fail if file descriptor 0, 1 or 2 is closed."
#~ msgstr ""
#~ "`Issue #15798 <https://bugs.python.org/15798>`__: Fixed subprocess."
#~ "Popen() to no longer fail if file descriptor 0, 1 or 2 is closed."

#~ msgid ""
#~ "`Issue #17897 <https://bugs.python.org/17897>`__: Optimized unpickle "
#~ "prefetching."
#~ msgstr ""
#~ "`Issue #17897 <https://bugs.python.org/17897>`__: Optimized unpickle "
#~ "prefetching."

#~ msgid ""
#~ "`Issue #3693 <https://bugs.python.org/3693>`__: Make the error message "
#~ "more helpful when the array.array() constructor is given a str. Move the "
#~ "array module typecode documentation to the docstring of the constructor."
#~ msgstr ""
#~ "`Issue #3693 <https://bugs.python.org/3693>`__: Make the error message "
#~ "more helpful when the array.array() constructor is given a str. Move the "
#~ "array module typecode documentation to the docstring of the constructor."

#~ msgid ""
#~ "`Issue #19088 <https://bugs.python.org/19088>`__: Fixed incorrect caching "
#~ "of the copyreg module in object.__reduce__() and object.__reduce_ex__()."
#~ msgstr ""
#~ "`Issue #19088 <https://bugs.python.org/19088>`__: Fixed incorrect caching "
#~ "of the copyreg module in object.__reduce__() and object.__reduce_ex__()."

#~ msgid ""
#~ "`Issue #19698 <https://bugs.python.org/19698>`__: Removed exec_module() "
#~ "methods from importlib.machinery.BuiltinImporter and ExtensionFileLoader."
#~ msgstr ""
#~ "`Issue #19698 <https://bugs.python.org/19698>`__: Removed exec_module() "
#~ "methods from importlib.machinery.BuiltinImporter and ExtensionFileLoader."

#~ msgid ""
#~ "`Issue #11480 <https://bugs.python.org/11480>`__: Fixed copy.copy to work "
#~ "with classes with custom metaclasses. Patch by Daniel Urban."
#~ msgstr ""
#~ "`Issue #11480 <https://bugs.python.org/11480>`__: Fixed copy.copy to work "
#~ "with classes with custom metaclasses. Patch by Daniel Urban."

#~ msgid ""
#~ "`Issue #6477 <https://bugs.python.org/6477>`__: Added support for "
#~ "pickling the types of built-in singletons (i.e., Ellipsis, "
#~ "NotImplemented, None)."
#~ msgstr ""
#~ "`Issue #6477 <https://bugs.python.org/6477>`__: Added support for "
#~ "pickling the types of built-in singletons (i.e., Ellipsis, "
#~ "NotImplemented, None)."

#~ msgid ""
#~ "`Issue #19713 <https://bugs.python.org/19713>`__: Add remaining PEP 451-"
#~ "related deprecations and move away from using find_module/find_loaer/"
#~ "load_module."
#~ msgstr ""
#~ "`Issue #19713 <https://bugs.python.org/19713>`__: Add remaining PEP 451-"
#~ "related deprecations and move away from using find_module/find_loaer/"
#~ "load_module."

#~ msgid ""
#~ "`Issue #19708 <https://bugs.python.org/19708>`__: Update pkgutil to use "
#~ "the new importer APIs."
#~ msgstr ""
#~ "`Issue #19708 <https://bugs.python.org/19708>`__: Update pkgutil to use "
#~ "the new importer APIs."

#~ msgid ""
#~ "`Issue #19703 <https://bugs.python.org/19703>`__: Update pydoc to use the "
#~ "new importer APIs."
#~ msgstr ""
#~ "`Issue #19703 <https://bugs.python.org/19703>`__: Update pydoc to use the "
#~ "new importer APIs."

#~ msgid ""
#~ "`Issue #19851 <https://bugs.python.org/19851>`__: Fixed a regression in "
#~ "reloading sub-modules."
#~ msgstr ""
#~ "`Issue #19851 <https://bugs.python.org/19851>`__: Fixed a regression in "
#~ "reloading sub-modules."

#~ msgid ""
#~ "`Issue #19802 <https://bugs.python.org/19802>`__: Add socket.SO_PRIORITY."
#~ msgstr ""
#~ "`Issue #19802 <https://bugs.python.org/19802>`__: Add socket.SO_PRIORITY."

#~ msgid ""
#~ "`Issue #11508 <https://bugs.python.org/11508>`__: Fixed uuid.getnode() "
#~ "and uuid.uuid1() on environment with virtual interface.  Original patch "
#~ "by Kent Frazier."
#~ msgstr ""
#~ "`Issue #11508 <https://bugs.python.org/11508>`__: Fixed uuid.getnode() "
#~ "and uuid.uuid1() on environment with virtual interface.  Original patch "
#~ "by Kent Frazier."

#~ msgid ""
#~ "`Issue #11489 <https://bugs.python.org/11489>`__: JSON decoder now "
#~ "accepts lone surrogates."
#~ msgstr ""
#~ "`Issue #11489 <https://bugs.python.org/11489>`__: JSON decoder now "
#~ "accepts lone surrogates."

#~ msgid ""
#~ "`Issue #19545 <https://bugs.python.org/19545>`__: Avoid chained "
#~ "exceptions while passing stray % to time.strptime().  Initial patch by "
#~ "Claudiu Popa."
#~ msgstr ""
#~ "`Issue #19545 <https://bugs.python.org/19545>`__: Avoid chained "
#~ "exceptions while passing stray % to time.strptime().  Initial patch by "
#~ "Claudiu Popa."

#~ msgid ""
#~ "`Issue #20058 <https://bugs.python.org/20058>`__: sys.stdin.readline() in "
#~ "IDLE now always returns only one line."
#~ msgstr ""
#~ "`Issue #20058 <https://bugs.python.org/20058>`__: sys.stdin.readline() in "
#~ "IDLE now always returns only one line."

#~ msgid ""
#~ "`Issue #19481 <https://bugs.python.org/19481>`__: print() of string "
#~ "subclass instance in IDLE no longer hangs."
#~ msgstr ""
#~ "`Issue #19481 <https://bugs.python.org/19481>`__: print() of string "
#~ "subclass instance in IDLE no longer hangs."

#~ msgid ""
#~ "`Issue #18270 <https://bugs.python.org/18270>`__: Prevent possible IDLE "
#~ "AttributeError on OS X when no initial shell window is present."
#~ msgstr ""
#~ "`Issue #18270 <https://bugs.python.org/18270>`__: Prevent possible IDLE "
#~ "AttributeError on OS X when no initial shell window is present."

#~ msgid ""
#~ "`Issue #20055 <https://bugs.python.org/20055>`__: Fix test_shutil under "
#~ "Windows with symlink privileges held. Patch by Vajrasky Kok."
#~ msgstr ""
#~ "`Issue #20055 <https://bugs.python.org/20055>`__: Fix test_shutil under "
#~ "Windows with symlink privileges held. Patch by Vajrasky Kok."

#~ msgid ""
#~ "`Issue #20070 <https://bugs.python.org/20070>`__: Don't run "
#~ "test_urllib2net when network resources are not enabled."
#~ msgstr ""
#~ "`Issue #20070 <https://bugs.python.org/20070>`__: Don't run "
#~ "test_urllib2net when network resources are not enabled."

#~ msgid ""
#~ "`Issue #19938 <https://bugs.python.org/19938>`__: Re-enabled "
#~ "test_bug_1333982 in test_dis, which had been disabled since 3.0 due to "
#~ "the changes in listcomp handling."
#~ msgstr ""
#~ "`Issue #19938 <https://bugs.python.org/19938>`__: Re-enabled "
#~ "test_bug_1333982 in test_dis, which had been disabled since 3.0 due to "
#~ "the changes in listcomp handling."

#~ msgid ""
#~ "`Issue #19320 <https://bugs.python.org/19320>`__: test_tcl no longer "
#~ "fails when wantobjects is false."
#~ msgstr ""
#~ "`Issue #19320 <https://bugs.python.org/19320>`__: test_tcl no longer "
#~ "fails when wantobjects is false."

#~ msgid ""
#~ "`Issue #19919 <https://bugs.python.org/19919>`__: Fix flaky SSL test. "
#~ "connect_ex() sometimes returns EWOULDBLOCK on Windows or VMs hosted on "
#~ "Windows."
#~ msgstr ""
#~ "`Issue #19919 <https://bugs.python.org/19919>`__: Fix flaky SSL test. "
#~ "connect_ex() sometimes returns EWOULDBLOCK on Windows or VMs hosted on "
#~ "Windows."

#~ msgid ""
#~ "`Issue #19912 <https://bugs.python.org/19912>`__: Added tests for ntpath."
#~ "splitunc()."
#~ msgstr ""
#~ "`Issue #19912 <https://bugs.python.org/19912>`__: Added tests for ntpath."
#~ "splitunc()."

#~ msgid ""
#~ "`Issue #19828 <https://bugs.python.org/19828>`__: Fixed test_site when "
#~ "the whole suite is run with -S."
#~ msgstr ""
#~ "`Issue #19828 <https://bugs.python.org/19828>`__: Fixed test_site when "
#~ "the whole suite is run with -S."

#~ msgid ""
#~ "`Issue #19928 <https://bugs.python.org/19928>`__: Implemented a test for "
#~ "repr() of cell objects."
#~ msgstr ""
#~ "`Issue #19928 <https://bugs.python.org/19928>`__: Implemented a test for "
#~ "repr() of cell objects."

#~ msgid ""
#~ "`Issue #19535 <https://bugs.python.org/19535>`__: Fixed test_docxmlrpc, "
#~ "test_functools, test_inspect, and test_statistics when python is run with "
#~ "-OO."
#~ msgstr ""
#~ "`Issue #19535 <https://bugs.python.org/19535>`__: Fixed test_docxmlrpc, "
#~ "test_functools, test_inspect, and test_statistics when python is run with "
#~ "-OO."

#~ msgid ""
#~ "`Issue #19926 <https://bugs.python.org/19926>`__: Removed unneeded "
#~ "test_main from test_abstract_numbers. Patch by Vajrasky Kok."
#~ msgstr ""
#~ "`Issue #19926 <https://bugs.python.org/19926>`__: Removed unneeded "
#~ "test_main from test_abstract_numbers. Patch by Vajrasky Kok."

#~ msgid ""
#~ "`Issue #19572 <https://bugs.python.org/19572>`__: More skipped tests "
#~ "explicitly marked as skipped."
#~ msgstr ""
#~ "`Issue #19572 <https://bugs.python.org/19572>`__: More skipped tests "
#~ "explicitly marked as skipped."

#~ msgid ""
#~ "`Issue #19595 <https://bugs.python.org/19595>`__, #19987: Re-enabled a "
#~ "long-disabled test in test_winsound."
#~ msgstr ""
#~ "`Issue #19595 <https://bugs.python.org/19595>`__, #19987: Re-enabled a "
#~ "long-disabled test in test_winsound."

#~ msgid ""
#~ "`Issue #19588 <https://bugs.python.org/19588>`__: Fixed tests in "
#~ "test_random that were silently skipped most of the time.  Patch by Julian "
#~ "Gindi."
#~ msgstr ""
#~ "`Issue #19588 <https://bugs.python.org/19588>`__: Fixed tests in "
#~ "test_random that were silently skipped most of the time.  Patch by Julian "
#~ "Gindi."

#~ msgid ""
#~ "`Issue #19728 <https://bugs.python.org/19728>`__: Enable pip installation "
#~ "by default on Windows."
#~ msgstr ""
#~ "`Issue #19728 <https://bugs.python.org/19728>`__: Enable pip installation "
#~ "by default on Windows."

#~ msgid "`Issue #16136 <https://bugs.python.org/16136>`__: Remove VMS support"
#~ msgstr ""
#~ "`Issue #16136 <https://bugs.python.org/16136>`__: Remove VMS support"

#~ msgid ""
#~ "`Issue #18215 <https://bugs.python.org/18215>`__: Add script Tools/ssl/"
#~ "test_multiple_versions.py to compile and run Python's unit tests with "
#~ "multiple versions of OpenSSL."
#~ msgstr ""
#~ "`Issue #18215 <https://bugs.python.org/18215>`__: Add script Tools/ssl/"
#~ "test_multiple_versions.py to compile and run Python's unit tests with "
#~ "multiple versions of OpenSSL."

#~ msgid ""
#~ "`Issue #19922 <https://bugs.python.org/19922>`__: define "
#~ "_INCLUDE__STDC_A1_SOURCE in HP-UX to include mbstate_t for mbrtowc()."
#~ msgstr ""
#~ "`Issue #19922 <https://bugs.python.org/19922>`__: define "
#~ "_INCLUDE__STDC_A1_SOURCE in HP-UX to include mbstate_t for mbrtowc()."

#~ msgid ""
#~ "`Issue #19788 <https://bugs.python.org/19788>`__: kill_python(_d).exe is "
#~ "now run as a PreBuildEvent on the pythoncore sub-project.  This should "
#~ "prevent build errors due a previous build's python(_d).exe still running."
#~ msgstr ""
#~ "`Issue #19788 <https://bugs.python.org/19788>`__: kill_python(_d).exe is "
#~ "now run as a PreBuildEvent on the pythoncore sub-project.  This should "
#~ "prevent build errors due a previous build's python(_d).exe still running."

#~ msgid ""
#~ "`Issue #20265 <https://bugs.python.org/20265>`__: Updated some parts of "
#~ "the Using Windows document."
#~ msgstr ""
#~ "`Issue #20265 <https://bugs.python.org/20265>`__: Updated some parts of "
#~ "the Using Windows document."

#~ msgid ""
#~ "`Issue #20255 <https://bugs.python.org/20255>`__: Updated the about and "
#~ "bugs pages."
#~ msgstr ""
#~ "`Issue #20255 <https://bugs.python.org/20255>`__: Updated the about and "
#~ "bugs pages."

#~ msgid ""
#~ "`Issue #20253 <https://bugs.python.org/20253>`__: Fixed a typo in the "
#~ "ipaddress docs that advertised an illegal attribute name.  Found by INADA "
#~ "Naoki."
#~ msgstr ""
#~ "`Issue #20253 <https://bugs.python.org/20253>`__: Fixed a typo in the "
#~ "ipaddress docs that advertised an illegal attribute name.  Found by INADA "
#~ "Naoki."

#~ msgid ""
#~ "`Issue #18840 <https://bugs.python.org/18840>`__: Introduce the json "
#~ "module in the tutorial, and de-emphasize the pickle module."
#~ msgstr ""
#~ "`Issue #18840 <https://bugs.python.org/18840>`__: Introduce the json "
#~ "module in the tutorial, and de-emphasize the pickle module."

#~ msgid ""
#~ "`Issue #19845 <https://bugs.python.org/19845>`__: Updated the Compiling "
#~ "Python on Windows section."
#~ msgstr ""
#~ "`Issue #19845 <https://bugs.python.org/19845>`__: Updated the Compiling "
#~ "Python on Windows section."

#~ msgid ""
#~ "`Issue #19795 <https://bugs.python.org/19795>`__: Improved markup of True/"
#~ "False constants."
#~ msgstr ""
#~ "`Issue #19795 <https://bugs.python.org/19795>`__: Improved markup of True/"
#~ "False constants."

#~ msgid ""
#~ "`Issue #19659 <https://bugs.python.org/19659>`__: Added documentation for "
#~ "Argument Clinic."
#~ msgstr ""
#~ "`Issue #19659 <https://bugs.python.org/19659>`__: Added documentation for "
#~ "Argument Clinic."

#~ msgid ""
#~ "`Issue #19976 <https://bugs.python.org/19976>`__: Argument Clinic "
#~ "METH_NOARGS functions now always take two parameters."
#~ msgstr ""
#~ "`Issue #19976 <https://bugs.python.org/19976>`__: Argument Clinic "
#~ "METH_NOARGS functions now always take two parameters."

#~ msgid "Python 3.4.0 Beta 1"
#~ msgstr "Python 3.4.0 Beta 1"

#~ msgid ""
#~ "`Issue #19619 <https://bugs.python.org/19619>`__: str.encode, bytes."
#~ "decode and bytearray.decode now use an internal API to throw LookupError "
#~ "for known non-text encodings, rather than attempting the encoding or "
#~ "decoding operation and then throwing a TypeError for an unexpected output "
#~ "type. (The latter mechanism remains in place for third party non-text "
#~ "encodings)"
#~ msgstr ""
#~ "`Issue #19619 <https://bugs.python.org/19619>`__: str.encode, bytes."
#~ "decode and bytearray.decode now use an internal API to throw LookupError "
#~ "for known non-text encodings, rather than attempting the encoding or "
#~ "decoding operation and then throwing a TypeError for an unexpected output "
#~ "type. (The latter mechanism remains in place for third party non-text "
#~ "encodings)"

#~ msgid ""
#~ "`Issue #19183 <https://bugs.python.org/19183>`__: Implement PEP 456 "
#~ "'secure and interchangeable hash algorithm'. Python now uses SipHash24 on "
#~ "all major platforms."
#~ msgstr ""
#~ "`Issue #19183 <https://bugs.python.org/19183>`__: Implement PEP 456 "
#~ "'secure and interchangeable hash algorithm'. Python now uses SipHash24 on "
#~ "all major platforms."

#~ msgid ""
#~ "`Issue #12892 <https://bugs.python.org/12892>`__: The utf-16* and utf-32* "
#~ "encoders no longer allow surrogate code points (U+D800-U+DFFF) to be "
#~ "encoded.  The utf-32* decoders no longer decode byte sequences that "
#~ "correspond to surrogate code points.  The surrogatepass error handler now "
#~ "works with the utf-16* and utf-32* codecs.  Based on patches by Victor "
#~ "Stinner and Kang-Hao (Kenny) Lu."
#~ msgstr ""
#~ "`Issue #12892 <https://bugs.python.org/12892>`__: The utf-16* and utf-32* "
#~ "encoders no longer allow surrogate code points (U+D800-U+DFFF) to be "
#~ "encoded.  The utf-32* decoders no longer decode byte sequences that "
#~ "correspond to surrogate code points.  The surrogatepass error handler now "
#~ "works with the utf-16* and utf-32* codecs.  Based on patches by Victor "
#~ "Stinner and Kang-Hao (Kenny) Lu."

#~ msgid ""
#~ "`Issue #17806 <https://bugs.python.org/17806>`__: Added keyword-argument "
#~ "support for \"tabsize\" to str/bytes.expandtabs()."
#~ msgstr ""
#~ "`Issue #17806 <https://bugs.python.org/17806>`__: Added keyword-argument "
#~ "support for \"tabsize\" to str/bytes.expandtabs()."

#~ msgid ""
#~ "`Issue #17828 <https://bugs.python.org/17828>`__: Output type errors in "
#~ "str.encode(), bytes.decode() and bytearray.decode() now direct users to "
#~ "codecs.encode() or codecs.decode() as appropriate."
#~ msgstr ""
#~ "`Issue #17828 <https://bugs.python.org/17828>`__: Output type errors in "
#~ "str.encode(), bytes.decode() and bytearray.decode() now direct users to "
#~ "codecs.encode() or codecs.decode() as appropriate."

#~ msgid ""
#~ "`Issue #17828 <https://bugs.python.org/17828>`__: The interpreter now "
#~ "attempts to chain errors that occur in codec processing with a "
#~ "replacement exception of the same type that includes the codec name in "
#~ "the error message. It ensures it only does this when the creation of the "
#~ "replacement exception won't lose any information."
#~ msgstr ""
#~ "`Issue #17828 <https://bugs.python.org/17828>`__: The interpreter now "
#~ "attempts to chain errors that occur in codec processing with a "
#~ "replacement exception of the same type that includes the codec name in "
#~ "the error message. It ensures it only does this when the creation of the "
#~ "replacement exception won't lose any information."

#~ msgid ""
#~ "`Issue #19466 <https://bugs.python.org/19466>`__: Clear the frames of "
#~ "daemon threads earlier during the Python shutdown to call object "
#~ "destructors. So \"unclosed file\" resource warnings are now correctly "
#~ "emitted for daemon threads."
#~ msgstr ""
#~ "`Issue #19466 <https://bugs.python.org/19466>`__: Clear the frames of "
#~ "daemon threads earlier during the Python shutdown to call object "
#~ "destructors. So \"unclosed file\" resource warnings are now correctly "
#~ "emitted for daemon threads."

#~ msgid ""
#~ "`Issue #19514 <https://bugs.python.org/19514>`__: Deduplicate some "
#~ "_Py_IDENTIFIER declarations. Patch by Andrei Dorian Duma."
#~ msgstr ""
#~ "`Issue #19514 <https://bugs.python.org/19514>`__: Deduplicate some "
#~ "_Py_IDENTIFIER declarations. Patch by Andrei Dorian Duma."

#~ msgid ""
#~ "`Issue #17936 <https://bugs.python.org/17936>`__: Fix O(n**2) behaviour "
#~ "when adding or removing many subclasses of a given type."
#~ msgstr ""
#~ "`Issue #17936 <https://bugs.python.org/17936>`__: Fix O(n**2) behaviour "
#~ "when adding or removing many subclasses of a given type."

#~ msgid ""
#~ "`Issue #19428 <https://bugs.python.org/19428>`__: zipimport now handles "
#~ "errors when reading truncated or invalid ZIP archive."
#~ msgstr ""
#~ "`Issue #19428 <https://bugs.python.org/19428>`__: zipimport now handles "
#~ "errors when reading truncated or invalid ZIP archive."

#~ msgid ""
#~ "`Issue #18408 <https://bugs.python.org/18408>`__: Add a new "
#~ "PyFrame_FastToLocalsWithError() function to handle exceptions when "
#~ "merging fast locals into f_locals of a frame. PyEval_GetLocals() now "
#~ "raises an exception and return NULL on failure."
#~ msgstr ""
#~ "`Issue #18408 <https://bugs.python.org/18408>`__: Add a new "
#~ "PyFrame_FastToLocalsWithError() function to handle exceptions when "
#~ "merging fast locals into f_locals of a frame. PyEval_GetLocals() now "
#~ "raises an exception and return NULL on failure."

#~ msgid ""
#~ "`Issue #19369 <https://bugs.python.org/19369>`__: Optimized the usage of "
#~ "__length_hint__()."
#~ msgstr ""
#~ "`Issue #19369 <https://bugs.python.org/19369>`__: Optimized the usage of "
#~ "__length_hint__()."

#~ msgid ""
#~ "`Issue #28026 <https://bugs.python.org/28026>`__: Raise ImportError when "
#~ "exec_module() exists but create_module() is missing."
#~ msgstr ""
#~ "`Issue #28026 <https://bugs.python.org/28026>`__: Raise ImportError when "
#~ "exec_module() exists but create_module() is missing."

#~ msgid ""
#~ "`Issue #18603 <https://bugs.python.org/18603>`__: Ensure that "
#~ "PyOS_mystricmp and PyOS_mystrnicmp are in the Python executable and not "
#~ "removed by the linker's optimizer."
#~ msgstr ""
#~ "`Issue #18603 <https://bugs.python.org/18603>`__: Ensure that "
#~ "PyOS_mystricmp and PyOS_mystrnicmp are in the Python executable and not "
#~ "removed by the linker's optimizer."

#~ msgid ""
#~ "`Issue #19306 <https://bugs.python.org/19306>`__: Add extra hints to the "
#~ "faulthandler module's stack dumps that these are \"upside down\"."
#~ msgstr ""
#~ "`Issue #19306 <https://bugs.python.org/19306>`__: Add extra hints to the "
#~ "faulthandler module's stack dumps that these are \"upside down\"."

#~ msgid ""
#~ "`Issue #3158 <https://bugs.python.org/3158>`__: doctest can now find "
#~ "doctests in functions and methods written in C."
#~ msgstr ""
#~ "`Issue #3158 <https://bugs.python.org/3158>`__: doctest can now find "
#~ "doctests in functions and methods written in C."

#~ msgid ""
#~ "`Issue #13477 <https://bugs.python.org/13477>`__: Added command line "
#~ "interface to the tarfile module. Original patch by Berker Peksag."
#~ msgstr ""
#~ "`Issue #13477 <https://bugs.python.org/13477>`__: Added command line "
#~ "interface to the tarfile module. Original patch by Berker Peksag."

#~ msgid ""
#~ "`Issue #19674 <https://bugs.python.org/19674>`__: inspect.signature() now "
#~ "produces a correct signature for some builtins."
#~ msgstr ""
#~ "`Issue #19674 <https://bugs.python.org/19674>`__: inspect.signature() now "
#~ "produces a correct signature for some builtins."

#~ msgid ""
#~ "`Issue #19722 <https://bugs.python.org/19722>`__: Added opcode."
#~ "stack_effect(), which computes the stack effect of bytecode instructions."
#~ msgstr ""
#~ "`Issue #19722 <https://bugs.python.org/19722>`__: Added opcode."
#~ "stack_effect(), which computes the stack effect of bytecode instructions."

#~ msgid ""
#~ "`Issue #19735 <https://bugs.python.org/19735>`__: Implement private "
#~ "function ssl._create_stdlib_context() to create SSLContext objects in "
#~ "Python's stdlib module. It provides a single configuration point and "
#~ "makes use of SSLContext.load_default_certs()."
#~ msgstr ""
#~ "`Issue #19735 <https://bugs.python.org/19735>`__: Implement private "
#~ "function ssl._create_stdlib_context() to create SSLContext objects in "
#~ "Python's stdlib module. It provides a single configuration point and "
#~ "makes use of SSLContext.load_default_certs()."

#~ msgid ""
#~ "`Issue #16203 <https://bugs.python.org/16203>`__: Add re.fullmatch() "
#~ "function and regex.fullmatch() method, which anchor the pattern at both "
#~ "ends of the string to match. Original patch by Matthew Barnett."
#~ msgstr ""
#~ "`Issue #16203 <https://bugs.python.org/16203>`__: Add re.fullmatch() "
#~ "function and regex.fullmatch() method, which anchor the pattern at both "
#~ "ends of the string to match. Original patch by Matthew Barnett."

#~ msgid ""
#~ "`Issue #13592 <https://bugs.python.org/13592>`__: Improved the repr for "
#~ "regular expression pattern objects. Based on patch by Hugo Lopes Tavares."
#~ msgstr ""
#~ "`Issue #13592 <https://bugs.python.org/13592>`__: Improved the repr for "
#~ "regular expression pattern objects. Based on patch by Hugo Lopes Tavares."

#~ msgid ""
#~ "`Issue #19641 <https://bugs.python.org/19641>`__: Added the audioop."
#~ "byteswap() function to convert big-endian samples to little-endian and "
#~ "vice versa."
#~ msgstr ""
#~ "`Issue #19641 <https://bugs.python.org/19641>`__: Added the audioop."
#~ "byteswap() function to convert big-endian samples to little-endian and "
#~ "vice versa."

#~ msgid ""
#~ "`Issue #15204 <https://bugs.python.org/15204>`__: Deprecated the 'U' mode "
#~ "in file-like objects."
#~ msgstr ""
#~ "`Issue #15204 <https://bugs.python.org/15204>`__: Deprecated the 'U' mode "
#~ "in file-like objects."

#~ msgid ""
#~ "`Issue #17810 <https://bugs.python.org/17810>`__: Implement PEP 3154, "
#~ "pickle protocol 4."
#~ msgstr ""
#~ "`Issue #17810 <https://bugs.python.org/17810>`__: Implement PEP 3154, "
#~ "pickle protocol 4."

#~ msgid ""
#~ "`Issue #19668 <https://bugs.python.org/19668>`__: Added support for the "
#~ "cp1125 encoding."
#~ msgstr ""
#~ "`Issue #19668 <https://bugs.python.org/19668>`__: Added support for the "
#~ "cp1125 encoding."

#~ msgid ""
#~ "`Issue #19689 <https://bugs.python.org/19689>`__: Add ssl."
#~ "create_default_context() factory function. It creates a new SSLContext "
#~ "object with secure default settings."
#~ msgstr ""
#~ "`Issue #19689 <https://bugs.python.org/19689>`__: Add ssl."
#~ "create_default_context() factory function. It creates a new SSLContext "
#~ "object with secure default settings."

#~ msgid ""
#~ "`Issue #19727 <https://bugs.python.org/19727>`__: os.utime(..., None) is "
#~ "now potentially more precise under Windows."
#~ msgstr ""
#~ "`Issue #19727 <https://bugs.python.org/19727>`__: os.utime(..., None) is "
#~ "now potentially more precise under Windows."

#~ msgid ""
#~ "`Issue #17201 <https://bugs.python.org/17201>`__: ZIP64 extensions now "
#~ "are enabled by default.  Patch by William Mallard."
#~ msgstr ""
#~ "`Issue #17201 <https://bugs.python.org/17201>`__: ZIP64 extensions now "
#~ "are enabled by default.  Patch by William Mallard."

#~ msgid ""
#~ "`Issue #19292 <https://bugs.python.org/19292>`__: Add SSLContext."
#~ "load_default_certs() to load default root CA certificates from default "
#~ "stores or system stores. By default the method loads CA certs for "
#~ "authentication of server certs."
#~ msgstr ""
#~ "`Issue #19292 <https://bugs.python.org/19292>`__: Add SSLContext."
#~ "load_default_certs() to load default root CA certificates from default "
#~ "stores or system stores. By default the method loads CA certs for "
#~ "authentication of server certs."

#~ msgid ""
#~ "`Issue #19673 <https://bugs.python.org/19673>`__: Add pathlib to the "
#~ "stdlib as a provisional module (PEP 428)."
#~ msgstr ""
#~ "`Issue #19673 <https://bugs.python.org/19673>`__: Add pathlib to the "
#~ "stdlib as a provisional module (PEP 428)."

#~ msgid ""
#~ "`Issue #16596 <https://bugs.python.org/16596>`__: pdb in a generator now "
#~ "properly skips over yield and yield from rather than stepping out of the "
#~ "generator into its caller.  (This is essential for stepping through "
#~ "asyncio coroutines.)"
#~ msgstr ""
#~ "`Issue #16596 <https://bugs.python.org/16596>`__: pdb in a generator now "
#~ "properly skips over yield and yield from rather than stepping out of the "
#~ "generator into its caller.  (This is essential for stepping through "
#~ "asyncio coroutines.)"

#~ msgid ""
#~ "`Issue #17916 <https://bugs.python.org/17916>`__: Added dis.Bytecode."
#~ "from_traceback() and dis.Bytecode.current_offset to easily display "
#~ "\"current instruction\" markers in the new disassembly API (Patch by "
#~ "Claudiu Popa)."
#~ msgstr ""
#~ "`Issue #17916 <https://bugs.python.org/17916>`__: Added dis.Bytecode."
#~ "from_traceback() and dis.Bytecode.current_offset to easily display "
#~ "\"current instruction\" markers in the new disassembly API (Patch by "
#~ "Claudiu Popa)."

#~ msgid ""
#~ "`Issue #19552 <https://bugs.python.org/19552>`__: venv now supports "
#~ "bootstrapping pip into virtual environments"
#~ msgstr ""
#~ "`Issue #19552 <https://bugs.python.org/19552>`__: venv now supports "
#~ "bootstrapping pip into virtual environments"

#~ msgid ""
#~ "`Issue #17134 <https://bugs.python.org/17134>`__: Finalize interface to "
#~ "Windows' certificate store. Cert and CRL enumeration are now two "
#~ "functions. enum_certificates() also returns purpose flags as set of OIDs."
#~ msgstr ""
#~ "`Issue #17134 <https://bugs.python.org/17134>`__: Finalize interface to "
#~ "Windows' certificate store. Cert and CRL enumeration are now two "
#~ "functions. enum_certificates() also returns purpose flags as set of OIDs."

#~ msgid ""
#~ "`Issue #19555 <https://bugs.python.org/19555>`__: Restore sysconfig."
#~ "get_config_var('SO'), (and the distutils equivalent) with a "
#~ "DeprecationWarning pointing people at $EXT_SUFFIX."
#~ msgstr ""
#~ "`Issue #19555 <https://bugs.python.org/19555>`__: Restore sysconfig."
#~ "get_config_var('SO'), (and the distutils equivalent) with a "
#~ "DeprecationWarning pointing people at $EXT_SUFFIX."

#~ msgid ""
#~ "`Issue #8813 <https://bugs.python.org/8813>`__: Add SSLContext."
#~ "verify_flags to change the verification flags of the context in order to "
#~ "enable certification revocation list (CRL) checks or strict X509 rules."
#~ msgstr ""
#~ "`Issue #8813 <https://bugs.python.org/8813>`__: Add SSLContext."
#~ "verify_flags to change the verification flags of the context in order to "
#~ "enable certification revocation list (CRL) checks or strict X509 rules."

#~ msgid ""
#~ "`Issue #18294 <https://bugs.python.org/18294>`__: Fix the zlib module to "
#~ "make it 64-bit safe."
#~ msgstr ""
#~ "`Issue #18294 <https://bugs.python.org/18294>`__: Fix the zlib module to "
#~ "make it 64-bit safe."

#~ msgid ""
#~ "`Issue #19682 <https://bugs.python.org/19682>`__: Fix compatibility issue "
#~ "with old version of OpenSSL that was introduced by `Issue #18379 <https://"
#~ "bugs.python.org/18379>`__."
#~ msgstr ""
#~ "`Issue #19682 <https://bugs.python.org/19682>`__: Fix compatibility issue "
#~ "with old version of OpenSSL that was introduced by `Issue #18379 <https://"
#~ "bugs.python.org/18379>`__."

#~ msgid ""
#~ "`Issue #14455 <https://bugs.python.org/14455>`__: plistlib now supports "
#~ "binary plists and has an updated API."
#~ msgstr ""
#~ "`Issue #14455 <https://bugs.python.org/14455>`__: plistlib now supports "
#~ "binary plists and has an updated API."

#~ msgid ""
#~ "`Issue #19633 <https://bugs.python.org/19633>`__: Fixed writing not "
#~ "compressed 16- and 32-bit wave files on big-endian platforms."
#~ msgstr ""
#~ "`Issue #19633 <https://bugs.python.org/19633>`__: Fixed writing not "
#~ "compressed 16- and 32-bit wave files on big-endian platforms."

#~ msgid ""
#~ "`Issue #18379 <https://bugs.python.org/18379>`__: SSLSocket.getpeercert() "
#~ "returns CA issuer AIA fields, OCSP and CRL distribution points."
#~ msgstr ""
#~ "`Issue #18379 <https://bugs.python.org/18379>`__: SSLSocket.getpeercert() "
#~ "returns CA issuer AIA fields, OCSP and CRL distribution points."

#~ msgid ""
#~ "`Issue #18138 <https://bugs.python.org/18138>`__: Implement cadata "
#~ "argument of SSLContext.load_verify_location() to load CA certificates and "
#~ "CRL from memory. It supports PEM and DER encoded strings."
#~ msgstr ""
#~ "`Issue #18138 <https://bugs.python.org/18138>`__: Implement cadata "
#~ "argument of SSLContext.load_verify_location() to load CA certificates and "
#~ "CRL from memory. It supports PEM and DER encoded strings."

#~ msgid ""
#~ "`Issue #18775 <https://bugs.python.org/18775>`__: Add name and block_size "
#~ "attribute to HMAC object. They now provide the same API elements as non-"
#~ "keyed cryptographic hash functions."
#~ msgstr ""
#~ "`Issue #18775 <https://bugs.python.org/18775>`__: Add name and block_size "
#~ "attribute to HMAC object. They now provide the same API elements as non-"
#~ "keyed cryptographic hash functions."

#~ msgid ""
#~ "`Issue #17276 <https://bugs.python.org/17276>`__: MD5 as default "
#~ "digestmod for HMAC is deprecated. The HMAC module supports digestmod "
#~ "names, e.g. hmac.HMAC('sha1')."
#~ msgstr ""
#~ "`Issue #17276 <https://bugs.python.org/17276>`__: MD5 as default "
#~ "digestmod for HMAC is deprecated. The HMAC module supports digestmod "
#~ "names, e.g. hmac.HMAC('sha1')."

#~ msgid ""
#~ "`Issue #19449 <https://bugs.python.org/19449>`__: in csv's writerow, "
#~ "handle non-string keys when generating the error message that certain "
#~ "keys are not in the 'fieldnames' list."
#~ msgstr ""
#~ "`Issue #19449 <https://bugs.python.org/19449>`__: in csv's writerow, "
#~ "handle non-string keys when generating the error message that certain "
#~ "keys are not in the 'fieldnames' list."

#~ msgid ""
#~ "`Issue #13633 <https://bugs.python.org/13633>`__: Added a new "
#~ "convert_charrefs keyword arg to HTMLParser that, when True, automatically "
#~ "converts all character references."
#~ msgstr ""
#~ "`Issue #13633 <https://bugs.python.org/13633>`__: Added a new "
#~ "convert_charrefs keyword arg to HTMLParser that, when True, automatically "
#~ "converts all character references."

#~ msgid ""
#~ "`Issue #2927 <https://bugs.python.org/2927>`__: Added the unescape() "
#~ "function to the html module."
#~ msgstr ""
#~ "`Issue #2927 <https://bugs.python.org/2927>`__: Added the unescape() "
#~ "function to the html module."

#~ msgid ""
#~ "`Issue #8402 <https://bugs.python.org/8402>`__: Added the escape() "
#~ "function to the glob module."
#~ msgstr ""
#~ "`Issue #8402 <https://bugs.python.org/8402>`__: Added the escape() "
#~ "function to the glob module."

#~ msgid ""
#~ "`Issue #17618 <https://bugs.python.org/17618>`__: Add Base85 and Ascii85 "
#~ "encoding/decoding to the base64 module."
#~ msgstr ""
#~ "`Issue #17618 <https://bugs.python.org/17618>`__: Add Base85 and Ascii85 "
#~ "encoding/decoding to the base64 module."

#~ msgid ""
#~ "`Issue #19634 <https://bugs.python.org/19634>`__: time.strftime(\"%y\") "
#~ "now raises a ValueError on AIX when given a year before 1900."
#~ msgstr ""
#~ "`Issue #19634 <https://bugs.python.org/19634>`__: time.strftime(\"%y\") "
#~ "now raises a ValueError on AIX when given a year before 1900."

#~ msgid ""
#~ "`Issue #19448 <https://bugs.python.org/19448>`__: Add private API to SSL "
#~ "module to lookup ASN.1 objects by OID, NID, short name and long name."
#~ msgstr ""
#~ "`Issue #19448 <https://bugs.python.org/19448>`__: Add private API to SSL "
#~ "module to lookup ASN.1 objects by OID, NID, short name and long name."

#~ msgid ""
#~ "`Issue #19282 <https://bugs.python.org/19282>`__: dbm.open now supports "
#~ "the context management protocol. (Initial patch by Claudiu Popa)"
#~ msgstr ""
#~ "`Issue #19282 <https://bugs.python.org/19282>`__: dbm.open now supports "
#~ "the context management protocol. (Initial patch by Claudiu Popa)"

#~ msgid ""
#~ "`Issue #8311 <https://bugs.python.org/8311>`__: Added support for writing "
#~ "any bytes-like objects in the aifc, sunau, and wave modules."
#~ msgstr ""
#~ "`Issue #8311 <https://bugs.python.org/8311>`__: Added support for writing "
#~ "any bytes-like objects in the aifc, sunau, and wave modules."

#~ msgid ""
#~ "`Issue #5202 <https://bugs.python.org/5202>`__: Added support for "
#~ "unseekable files in the wave module."
#~ msgstr ""
#~ "`Issue #5202 <https://bugs.python.org/5202>`__: Added support for "
#~ "unseekable files in the wave module."

#~ msgid ""
#~ "`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #1180 "
#~ "<https://bugs.python.org/1180>`__: Restore global option to ignore ~/."
#~ "pydistutils.cfg in Distutils, accidentally removed in backout of "
#~ "distutils2 changes."
#~ msgstr ""
#~ "`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #1180 "
#~ "<https://bugs.python.org/1180>`__: Restore global option to ignore ~/."
#~ "pydistutils.cfg in Distutils, accidentally removed in backout of "
#~ "distutils2 changes."

#~ msgid ""
#~ "`Issue #19523 <https://bugs.python.org/19523>`__: Closed FileHandler leak "
#~ "which occurred when delay was set."
#~ msgstr ""
#~ "`Issue #19523 <https://bugs.python.org/19523>`__: Closed FileHandler leak "
#~ "which occurred when delay was set."

#~ msgid ""
#~ "`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #6516 "
#~ "<https://bugs.python.org/6516>`__: Restore support for --user and --group "
#~ "parameters to sdist command accidentally rolled back as part of the "
#~ "distutils2 rollback."
#~ msgstr ""
#~ "`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #6516 "
#~ "<https://bugs.python.org/6516>`__: Restore support for --user and --group "
#~ "parameters to sdist command accidentally rolled back as part of the "
#~ "distutils2 rollback."

#~ msgid ""
#~ "`Issue #13674 <https://bugs.python.org/13674>`__: Prevented time.strftime "
#~ "from crashing on Windows when given a year before 1900 and a format of %y."
#~ msgstr ""
#~ "`Issue #13674 <https://bugs.python.org/13674>`__: Prevented time.strftime "
#~ "from crashing on Windows when given a year before 1900 and a format of %y."

#~ msgid ""
#~ "`Issue #19406 <https://bugs.python.org/19406>`__: implementation of the "
#~ "ensurepip module (part of PEP 453). Patch by Donald Stufft and Nick "
#~ "Coghlan."
#~ msgstr ""
#~ "`Issue #19406 <https://bugs.python.org/19406>`__: implementation of the "
#~ "ensurepip module (part of PEP 453). Patch by Donald Stufft and Nick "
#~ "Coghlan."

#~ msgid ""
#~ "`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #6286 "
#~ "<https://bugs.python.org/6286>`__: Restore use of urllib over http "
#~ "allowing use of http_proxy for Distutils upload command, a feature "
#~ "accidentally lost in the rollback of distutils2."
#~ msgstr ""
#~ "`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #6286 "
#~ "<https://bugs.python.org/6286>`__: Restore use of urllib over http "
#~ "allowing use of http_proxy for Distutils upload command, a feature "
#~ "accidentally lost in the rollback of distutils2."

#~ msgid ""
#~ "`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #7457 "
#~ "<https://bugs.python.org/7457>`__: Restore the read_pkg_file method to "
#~ "distutils.dist.DistributionMetadata accidentally removed in the undo of "
#~ "distutils2."
#~ msgstr ""
#~ "`Issue #19544 <https://bugs.python.org/19544>`__ and `Issue #7457 "
#~ "<https://bugs.python.org/7457>`__: Restore the read_pkg_file method to "
#~ "distutils.dist.DistributionMetadata accidentally removed in the undo of "
#~ "distutils2."

#~ msgid ""
#~ "`Issue #16685 <https://bugs.python.org/16685>`__: Added support for any "
#~ "bytes-like objects in the audioop module. Removed support for strings."
#~ msgstr ""
#~ "`Issue #16685 <https://bugs.python.org/16685>`__: Added support for any "
#~ "bytes-like objects in the audioop module. Removed support for strings."

#~ msgid ""
#~ "`Issue #7171 <https://bugs.python.org/7171>`__: Add Windows "
#~ "implementation of ``inet_ntop`` and ``inet_pton`` to socket module. Patch "
#~ "by Atsuo Ishimoto."
#~ msgstr ""
#~ "`Issue #7171 <https://bugs.python.org/7171>`__: Add Windows "
#~ "implementation of ``inet_ntop`` and ``inet_pton`` to socket module. Patch "
#~ "by Atsuo Ishimoto."

#~ msgid ""
#~ "`Issue #19261 <https://bugs.python.org/19261>`__: Added support for "
#~ "writing 24-bit samples in the sunau module."
#~ msgstr ""
#~ "`Issue #19261 <https://bugs.python.org/19261>`__: Added support for "
#~ "writing 24-bit samples in the sunau module."

#~ msgid ""
#~ "`Issue #1097797 <https://bugs.python.org/1097797>`__: Added CP273 "
#~ "encoding, used on IBM mainframes in Germany and Austria.  Mapping "
#~ "provided by Michael Bierenfeld."
#~ msgstr ""
#~ "`Issue #1097797 <https://bugs.python.org/1097797>`__: Added CP273 "
#~ "encoding, used on IBM mainframes in Germany and Austria.  Mapping "
#~ "provided by Michael Bierenfeld."

#~ msgid ""
#~ "`Issue #1575020 <https://bugs.python.org/1575020>`__: Fixed support of 24-"
#~ "bit wave files on big-endian platforms."
#~ msgstr ""
#~ "`Issue #1575020 <https://bugs.python.org/1575020>`__: Fixed support of 24-"
#~ "bit wave files on big-endian platforms."

#~ msgid ""
#~ "`Issue #19378 <https://bugs.python.org/19378>`__: Fixed a number of cases "
#~ "in the dis module where the new \"file\" parameter was not being honoured "
#~ "correctly"
#~ msgstr ""
#~ "`Issue #19378 <https://bugs.python.org/19378>`__: Fixed a number of cases "
#~ "in the dis module where the new \"file\" parameter was not being honoured "
#~ "correctly"

#~ msgid ""
#~ "`Issue #19378 <https://bugs.python.org/19378>`__: Removed the \"dis."
#~ "Bytecode.show_info\" method"
#~ msgstr ""
#~ "`Issue #19378 <https://bugs.python.org/19378>`__: Removed the \"dis."
#~ "Bytecode.show_info\" method"

#~ msgid ""
#~ "`Issue #19378 <https://bugs.python.org/19378>`__: Renamed the \"dis."
#~ "Bytecode.display_code\" method to \"dis.Bytecode.dis\" and converted it "
#~ "to returning a string rather than printing output."
#~ msgstr ""
#~ "`Issue #19378 <https://bugs.python.org/19378>`__: Renamed the \"dis."
#~ "Bytecode.display_code\" method to \"dis.Bytecode.dis\" and converted it "
#~ "to returning a string rather than printing output."

#~ msgid ""
#~ "`Issue #19378 <https://bugs.python.org/19378>`__: the \"line_offset\" "
#~ "parameter in the new \"dis.get_instructions\" API has been renamed to "
#~ "\"first_line\" (and the default value and usage changed accordingly). "
#~ "This should reduce confusion with the more common use of \"offset\" in "
#~ "the dis docs to refer to bytecode offsets."
#~ msgstr ""
#~ "`Issue #19378 <https://bugs.python.org/19378>`__: the \"line_offset\" "
#~ "parameter in the new \"dis.get_instructions\" API has been renamed to "
#~ "\"first_line\" (and the default value and usage changed accordingly). "
#~ "This should reduce confusion with the more common use of \"offset\" in "
#~ "the dis docs to refer to bytecode offsets."

#~ msgid ""
#~ "`Issue #18678 <https://bugs.python.org/18678>`__: Corrected spwd struct "
#~ "member names in spwd module: sp_nam->sp_namp, and sp_pwd->sp_pwdp.  The "
#~ "old names are kept as extra structseq members, for backward compatibility."
#~ msgstr ""
#~ "`Issue #18678 <https://bugs.python.org/18678>`__: Corrected spwd struct "
#~ "member names in spwd module: sp_nam->sp_namp, and sp_pwd->sp_pwdp.  The "
#~ "old names are kept as extra structseq members, for backward compatibility."

#~ msgid ""
#~ "`Issue #6157 <https://bugs.python.org/6157>`__: Fixed tkinter.Text."
#~ "debug().  tkinter.Text.bbox() now raises TypeError instead of TclError on "
#~ "wrong number of arguments.  Original patch by Guilherme Polo."
#~ msgstr ""
#~ "`Issue #6157 <https://bugs.python.org/6157>`__: Fixed tkinter.Text."
#~ "debug().  tkinter.Text.bbox() now raises TypeError instead of TclError on "
#~ "wrong number of arguments.  Original patch by Guilherme Polo."

#~ msgid ""
#~ "`Issue #10197 <https://bugs.python.org/10197>`__: Rework subprocess."
#~ "get[status]output to use subprocess functionality and thus to work on "
#~ "Windows. Patch by Nick Coghlan"
#~ msgstr ""
#~ "`Issue #10197 <https://bugs.python.org/10197>`__: Rework subprocess."
#~ "get[status]output to use subprocess functionality and thus to work on "
#~ "Windows. Patch by Nick Coghlan"

#~ msgid ""
#~ "`Issue #6160 <https://bugs.python.org/6160>`__: The bbox() method of "
#~ "tkinter.Spinbox now returns a tuple of integers instead of a string.  "
#~ "Based on patch by Guilherme Polo."
#~ msgstr ""
#~ "`Issue #6160 <https://bugs.python.org/6160>`__: The bbox() method of "
#~ "tkinter.Spinbox now returns a tuple of integers instead of a string.  "
#~ "Based on patch by Guilherme Polo."

#~ msgid ""
#~ "`Issue #19403 <https://bugs.python.org/19403>`__: contextlib."
#~ "redirect_stdout is now reentrant"
#~ msgstr ""
#~ "`Issue #19403 <https://bugs.python.org/19403>`__: contextlib."
#~ "redirect_stdout is now reentrant"

#~ msgid ""
#~ "`Issue #19286 <https://bugs.python.org/19286>`__: Directories in "
#~ "``package_data`` are no longer added to the filelist, preventing failure "
#~ "outlined in the ticket."
#~ msgstr ""
#~ "`Issue #19286 <https://bugs.python.org/19286>`__: Directories in "
#~ "``package_data`` are no longer added to the filelist, preventing failure "
#~ "outlined in the ticket."

#~ msgid ""
#~ "`Issue #19480 <https://bugs.python.org/19480>`__: HTMLParser now accepts "
#~ "all valid start-tag names as defined by the HTML5 standard."
#~ msgstr ""
#~ "`Issue #19480 <https://bugs.python.org/19480>`__: HTMLParser now accepts "
#~ "all valid start-tag names as defined by the HTML5 standard."

#~ msgid ""
#~ "`Issue #15114 <https://bugs.python.org/15114>`__: The html.parser module "
#~ "now raises a DeprecationWarning when the strict argument of HTMLParser or "
#~ "the HTMLParser.error method are used."
#~ msgstr ""
#~ "`Issue #15114 <https://bugs.python.org/15114>`__: The html.parser module "
#~ "now raises a DeprecationWarning when the strict argument of HTMLParser or "
#~ "the HTMLParser.error method are used."

#~ msgid ""
#~ "`Issue #19410 <https://bugs.python.org/19410>`__: Undo the special-casing "
#~ "removal of '' for importlib.machinery.FileFinder."
#~ msgstr ""
#~ "`Issue #19410 <https://bugs.python.org/19410>`__: Undo the special-casing "
#~ "removal of '' for importlib.machinery.FileFinder."

#~ msgid ""
#~ "`Issue #19424 <https://bugs.python.org/19424>`__: Fix the warnings module "
#~ "to accept filename containing surrogate characters."
#~ msgstr ""
#~ "`Issue #19424 <https://bugs.python.org/19424>`__: Fix the warnings module "
#~ "to accept filename containing surrogate characters."

#~ msgid ""
#~ "`Issue #19435 <https://bugs.python.org/19435>`__: Fix directory traversal "
#~ "attack on CGIHttpRequestHandler."
#~ msgstr ""
#~ "`Issue #19435 <https://bugs.python.org/19435>`__: Fix directory traversal "
#~ "attack on CGIHttpRequestHandler."

#~ msgid ""
#~ "`Issue #19227 <https://bugs.python.org/19227>`__: Remove pthread_atfork() "
#~ "handler. The handler was added to solve #18747 but has caused issues."
#~ msgstr ""
#~ "`Issue #19227 <https://bugs.python.org/19227>`__: Remove pthread_atfork() "
#~ "handler. The handler was added to solve #18747 but has caused issues."

#~ msgid ""
#~ "`Issue #19420 <https://bugs.python.org/19420>`__: Fix reference leak in "
#~ "module initialization code of _hashopenssl.c"
#~ msgstr ""
#~ "`Issue #19420 <https://bugs.python.org/19420>`__: Fix reference leak in "
#~ "module initialization code of _hashopenssl.c"

#~ msgid ""
#~ "`Issue #19329 <https://bugs.python.org/19329>`__: Optimized compiling "
#~ "charsets in regular expressions."
#~ msgstr ""
#~ "`Issue #19329 <https://bugs.python.org/19329>`__: Optimized compiling "
#~ "charsets in regular expressions."

#~ msgid ""
#~ "`Issue #19227 <https://bugs.python.org/19227>`__: Try to fix deadlocks "
#~ "caused by re-seeding then OpenSSL pseudo-random number generator on "
#~ "fork()."
#~ msgstr ""
#~ "`Issue #19227 <https://bugs.python.org/19227>`__: Try to fix deadlocks "
#~ "caused by re-seeding then OpenSSL pseudo-random number generator on "
#~ "fork()."

#~ msgid ""
#~ "`Issue #16037 <https://bugs.python.org/16037>`__: HTTPMessage."
#~ "readheaders() raises an HTTPException when more than 100 headers are "
#~ "read.  Adapted from patch by Jyrki Pulliainen."
#~ msgstr ""
#~ "`Issue #16037 <https://bugs.python.org/16037>`__: HTTPMessage."
#~ "readheaders() raises an HTTPException when more than 100 headers are "
#~ "read.  Adapted from patch by Jyrki Pulliainen."

#~ msgid ""
#~ "`Issue #16040 <https://bugs.python.org/16040>`__: CVE-2013-1752: nntplib: "
#~ "Limit maximum line lengths to 2048 to prevent readline() calls from "
#~ "consuming too much memory.  Patch by Jyrki Pulliainen."
#~ msgstr ""
#~ "`Issue #16040 <https://bugs.python.org/16040>`__: CVE-2013-1752: nntplib: "
#~ "Limit maximum line lengths to 2048 to prevent readline() calls from "
#~ "consuming too much memory.  Patch by Jyrki Pulliainen."

#~ msgid ""
#~ "`Issue #16041 <https://bugs.python.org/16041>`__: CVE-2013-1752: poplib: "
#~ "Limit maximum line lengths to 2048 to prevent readline() calls from "
#~ "consuming too much memory.  Patch by Jyrki Pulliainen."
#~ msgstr ""
#~ "`Issue #16041 <https://bugs.python.org/16041>`__: CVE-2013-1752: poplib: "
#~ "Limit maximum line lengths to 2048 to prevent readline() calls from "
#~ "consuming too much memory.  Patch by Jyrki Pulliainen."

#~ msgid ""
#~ "`Issue #17997 <https://bugs.python.org/17997>`__: Change behavior of "
#~ "``ssl.match_hostname()`` to follow RFC 6125, for security reasons.  It "
#~ "now doesn't match multiple wildcards nor wildcards inside IDN fragments."
#~ msgstr ""
#~ "`Issue #17997 <https://bugs.python.org/17997>`__: Change behavior of "
#~ "``ssl.match_hostname()`` to follow RFC 6125, for security reasons.  It "
#~ "now doesn't match multiple wildcards nor wildcards inside IDN fragments."

#~ msgid ""
#~ "`Issue #16039 <https://bugs.python.org/16039>`__: CVE-2013-1752: Change "
#~ "use of readline in imaplib module to limit line length.  Patch by Emil "
#~ "Lind."
#~ msgstr ""
#~ "`Issue #16039 <https://bugs.python.org/16039>`__: CVE-2013-1752: Change "
#~ "use of readline in imaplib module to limit line length.  Patch by Emil "
#~ "Lind."

#~ msgid ""
#~ "`Issue #19330 <https://bugs.python.org/19330>`__: the unnecessary wrapper "
#~ "functions have been removed from the implementations of the new "
#~ "contextlib.redirect_stdout and contextlib.suppress context managers, "
#~ "which also ensures they provide reasonable help() output on instances"
#~ msgstr ""
#~ "`Issue #19330 <https://bugs.python.org/19330>`__: the unnecessary wrapper "
#~ "functions have been removed from the implementations of the new "
#~ "contextlib.redirect_stdout and contextlib.suppress context managers, "
#~ "which also ensures they provide reasonable help() output on instances"

#~ msgid ""
#~ "`Issue #19393 <https://bugs.python.org/19393>`__: Fix symtable.symtable "
#~ "function to not be confused when there are functions or classes named "
#~ "\"top\"."
#~ msgstr ""
#~ "`Issue #19393 <https://bugs.python.org/19393>`__: Fix symtable.symtable "
#~ "function to not be confused when there are functions or classes named "
#~ "\"top\"."

#~ msgid ""
#~ "`Issue #18685 <https://bugs.python.org/18685>`__: Restore re performance "
#~ "to pre-PEP 393 levels."
#~ msgstr ""
#~ "`Issue #18685 <https://bugs.python.org/18685>`__: Restore re performance "
#~ "to pre-PEP 393 levels."

#~ msgid ""
#~ "`Issue #19339 <https://bugs.python.org/19339>`__: telnetlib module is now "
#~ "using time.monotonic() when available to compute timeout."
#~ msgstr ""
#~ "`Issue #19339 <https://bugs.python.org/19339>`__: telnetlib module is now "
#~ "using time.monotonic() when available to compute timeout."

#~ msgid ""
#~ "`Issue #19399 <https://bugs.python.org/19399>`__: fix sporadic "
#~ "test_subprocess failure."
#~ msgstr ""
#~ "`Issue #19399 <https://bugs.python.org/19399>`__: fix sporadic "
#~ "test_subprocess failure."

#~ msgid ""
#~ "`Issue #13234 <https://bugs.python.org/13234>`__: Fix os.listdir to work "
#~ "with extended paths on Windows. Patch by Santoso Wijaya."
#~ msgstr ""
#~ "`Issue #13234 <https://bugs.python.org/13234>`__: Fix os.listdir to work "
#~ "with extended paths on Windows. Patch by Santoso Wijaya."

#~ msgid ""
#~ "`Issue #19375 <https://bugs.python.org/19375>`__: The site module adding "
#~ "a \"site-python\" directory to sys.path, if it exists, is now deprecated."
#~ msgstr ""
#~ "`Issue #19375 <https://bugs.python.org/19375>`__: The site module adding "
#~ "a \"site-python\" directory to sys.path, if it exists, is now deprecated."

#~ msgid ""
#~ "`Issue #19379 <https://bugs.python.org/19379>`__: Lazily import linecache "
#~ "in the warnings module, to make startup with warnings faster until a "
#~ "warning gets printed."
#~ msgstr ""
#~ "`Issue #19379 <https://bugs.python.org/19379>`__: Lazily import linecache "
#~ "in the warnings module, to make startup with warnings faster until a "
#~ "warning gets printed."

#~ msgid ""
#~ "`Issue #19288 <https://bugs.python.org/19288>`__: Fixed the \"in\" "
#~ "operator of dbm.gnu databases for string argument.  Original patch by "
#~ "Arfrever Frehtes Taifersar Arahesis."
#~ msgstr ""
#~ "`Issue #19288 <https://bugs.python.org/19288>`__: Fixed the \"in\" "
#~ "operator of dbm.gnu databases for string argument.  Original patch by "
#~ "Arfrever Frehtes Taifersar Arahesis."

#~ msgid ""
#~ "`Issue #19287 <https://bugs.python.org/19287>`__: Fixed the \"in\" "
#~ "operator of dbm.ndbm databases for string argument.  Original patch by "
#~ "Arfrever Frehtes Taifersar Arahesis."
#~ msgstr ""
#~ "`Issue #19287 <https://bugs.python.org/19287>`__: Fixed the \"in\" "
#~ "operator of dbm.ndbm databases for string argument.  Original patch by "
#~ "Arfrever Frehtes Taifersar Arahesis."

#~ msgid ""
#~ "`Issue #19327 <https://bugs.python.org/19327>`__: Fixed the working of "
#~ "regular expressions with too big charset."
#~ msgstr ""
#~ "`Issue #19327 <https://bugs.python.org/19327>`__: Fixed the working of "
#~ "regular expressions with too big charset."

#~ msgid ""
#~ "`Issue #17400 <https://bugs.python.org/17400>`__: New 'is_global' "
#~ "attribute for ipaddress to tell if an address is allocated by IANA for "
#~ "global or private networks."
#~ msgstr ""
#~ "`Issue #17400 <https://bugs.python.org/17400>`__: New 'is_global' "
#~ "attribute for ipaddress to tell if an address is allocated by IANA for "
#~ "global or private networks."

#~ msgid ""
#~ "`Issue #19350 <https://bugs.python.org/19350>`__: Increasing the test "
#~ "coverage of macurl2path. Patch by Colin Williams."
#~ msgstr ""
#~ "`Issue #19350 <https://bugs.python.org/19350>`__: Increasing the test "
#~ "coverage of macurl2path. Patch by Colin Williams."

#~ msgid ""
#~ "`Issue #19365 <https://bugs.python.org/19365>`__: Optimized the parsing "
#~ "of long replacement string in re.sub*() functions."
#~ msgstr ""
#~ "`Issue #19365 <https://bugs.python.org/19365>`__: Optimized the parsing "
#~ "of long replacement string in re.sub*() functions."

#~ msgid ""
#~ "`Issue #19352 <https://bugs.python.org/19352>`__: Fix unittest discovery "
#~ "when a module can be reached through several paths (e.g. under Debian/"
#~ "Ubuntu with virtualenv)."
#~ msgstr ""
#~ "`Issue #19352 <https://bugs.python.org/19352>`__: Fix unittest discovery "
#~ "when a module can be reached through several paths (e.g. under Debian/"
#~ "Ubuntu with virtualenv)."

#~ msgid ""
#~ "`Issue #15207 <https://bugs.python.org/15207>`__: Fix mimetypes to read "
#~ "from correct part of Windows registry Original patch by Dave Chambers"
#~ msgstr ""
#~ "`Issue #15207 <https://bugs.python.org/15207>`__: Fix mimetypes to read "
#~ "from correct part of Windows registry Original patch by Dave Chambers"

#~ msgid ""
#~ "`Issue #16595 <https://bugs.python.org/16595>`__: Add prlimit() to "
#~ "resource module."
#~ msgstr ""
#~ "`Issue #16595 <https://bugs.python.org/16595>`__: Add prlimit() to "
#~ "resource module."

#~ msgid ""
#~ "`Issue #19324 <https://bugs.python.org/19324>`__: Expose Linux-specific "
#~ "constants in resource module."
#~ msgstr ""
#~ "`Issue #19324 <https://bugs.python.org/19324>`__: Expose Linux-specific "
#~ "constants in resource module."

#~ msgid ""
#~ "`Issue #18527 <https://bugs.python.org/18527>`__: Upgrade internal copy "
#~ "of zlib to 1.2.8."
#~ msgstr ""
#~ "`Issue #18527 <https://bugs.python.org/18527>`__: Upgrade internal copy "
#~ "of zlib to 1.2.8."

#~ msgid ""
#~ "`Issue #19274 <https://bugs.python.org/19274>`__: Add a filterfunc "
#~ "parameter to PyZipFile.writepy."
#~ msgstr ""
#~ "`Issue #19274 <https://bugs.python.org/19274>`__: Add a filterfunc "
#~ "parameter to PyZipFile.writepy."

#~ msgid ""
#~ "`Issue #8964 <https://bugs.python.org/8964>`__: fix platform._sys_version "
#~ "to handle IronPython 2.6+. Patch by Martin Matusiak."
#~ msgstr ""
#~ "`Issue #8964 <https://bugs.python.org/8964>`__: fix platform._sys_version "
#~ "to handle IronPython 2.6+. Patch by Martin Matusiak."

#~ msgid ""
#~ "`Issue #19413 <https://bugs.python.org/19413>`__: Restore pre-3.3 "
#~ "reload() semantics of re-finding modules."
#~ msgstr ""
#~ "`Issue #19413 <https://bugs.python.org/19413>`__: Restore pre-3.3 "
#~ "reload() semantics of re-finding modules."

#~ msgid ""
#~ "`Issue #18958 <https://bugs.python.org/18958>`__: Improve error message "
#~ "for json.load(s) while passing a string that starts with a UTF-8 BOM."
#~ msgstr ""
#~ "`Issue #18958 <https://bugs.python.org/18958>`__: Improve error message "
#~ "for json.load(s) while passing a string that starts with a UTF-8 BOM."

#~ msgid ""
#~ "`Issue #16038 <https://bugs.python.org/16038>`__: CVE-2013-1752: ftplib: "
#~ "Limit amount of data read by limiting the call to readline().  Original "
#~ "patch by Micha≈Ç Jastrzƒôbski and Giampaolo Rodola."
#~ msgstr ""
#~ "`Issue #16038 <https://bugs.python.org/16038>`__: CVE-2013-1752: ftplib: "
#~ "Limit amount of data read by limiting the call to readline().  Original "
#~ "patch by Micha≈Ç Jastrzƒôbski and Giampaolo Rodola."

#~ msgid ""
#~ "`Issue #17087 <https://bugs.python.org/17087>`__: Improved the repr for "
#~ "regular expression match objects."
#~ msgstr ""
#~ "`Issue #17087 <https://bugs.python.org/17087>`__: Improved the repr for "
#~ "regular expression match objects."

#~ msgid ""
#~ "`Issue #19664 <https://bugs.python.org/19664>`__: test_userdict's repr "
#~ "test no longer depends on the order of dict elements."
#~ msgstr ""
#~ "`Issue #19664 <https://bugs.python.org/19664>`__: test_userdict's repr "
#~ "test no longer depends on the order of dict elements."

#~ msgid ""
#~ "`Issue #19440 <https://bugs.python.org/19440>`__: Clean up test_capi by "
#~ "removing an unnecessary __future__ import, converting from test_main to "
#~ "unittest.main, and running the _testcapi module tests as subTests of a "
#~ "unittest TestCase method."
#~ msgstr ""
#~ "`Issue #19440 <https://bugs.python.org/19440>`__: Clean up test_capi by "
#~ "removing an unnecessary __future__ import, converting from test_main to "
#~ "unittest.main, and running the _testcapi module tests as subTests of a "
#~ "unittest TestCase method."

#~ msgid ""
#~ "`Issue #19378 <https://bugs.python.org/19378>`__: the main dis module "
#~ "tests are now run with both stdout redirection *and* passing an explicit "
#~ "file parameter"
#~ msgstr ""
#~ "`Issue #19378 <https://bugs.python.org/19378>`__: the main dis module "
#~ "tests are now run with both stdout redirection *and* passing an explicit "
#~ "file parameter"

#~ msgid ""
#~ "`Issue #19378 <https://bugs.python.org/19378>`__: removed the not-"
#~ "actually-helpful assertInstructionMatches and "
#~ "assertBytecodeExactlyMatches helpers from bytecode_helper"
#~ msgstr ""
#~ "`Issue #19378 <https://bugs.python.org/19378>`__: removed the not-"
#~ "actually-helpful assertInstructionMatches and "
#~ "assertBytecodeExactlyMatches helpers from bytecode_helper"

#~ msgid ""
#~ "`Issue #18702 <https://bugs.python.org/18702>`__: All skipped tests now "
#~ "reported as skipped."
#~ msgstr ""
#~ "`Issue #18702 <https://bugs.python.org/18702>`__: All skipped tests now "
#~ "reported as skipped."

#~ msgid ""
#~ "`Issue #19439 <https://bugs.python.org/19439>`__: interpreter embedding "
#~ "tests are now executed on Windows (Patch by Zachary Ware)"
#~ msgstr ""
#~ "`Issue #19439 <https://bugs.python.org/19439>`__: interpreter embedding "
#~ "tests are now executed on Windows (Patch by Zachary Ware)"

#~ msgid ""
#~ "`Issue #19085 <https://bugs.python.org/19085>`__: Added basic tests for "
#~ "all tkinter widget options."
#~ msgstr ""
#~ "`Issue #19085 <https://bugs.python.org/19085>`__: Added basic tests for "
#~ "all tkinter widget options."

#~ msgid ""
#~ "`Issue #19384 <https://bugs.python.org/19384>`__: Fix test_py_compile for "
#~ "root user, patch by Claudiu Popa."
#~ msgstr ""
#~ "`Issue #19384 <https://bugs.python.org/19384>`__: Fix test_py_compile for "
#~ "root user, patch by Claudiu Popa."

#~ msgid ""
#~ "`Issue #18326 <https://bugs.python.org/18326>`__: Clarify that list."
#~ "sort's arguments are keyword-only.  Also, attempt to reduce confusion in "
#~ "the glossary by not saying there are different \"types\" of arguments and "
#~ "parameters."
#~ msgstr ""
#~ "`Issue #18326 <https://bugs.python.org/18326>`__: Clarify that list."
#~ "sort's arguments are keyword-only.  Also, attempt to reduce confusion in "
#~ "the glossary by not saying there are different \"types\" of arguments and "
#~ "parameters."

#~ msgid ""
#~ "`Issue #19358 <https://bugs.python.org/19358>`__: \"make clinic\" now "
#~ "runs the Argument Clinic preprocessor over all CPython source files."
#~ msgstr ""
#~ "`Issue #19358 <https://bugs.python.org/19358>`__: \"make clinic\" now "
#~ "runs the Argument Clinic preprocessor over all CPython source files."

#~ msgid ""
#~ "`Issue #16632 <https://bugs.python.org/16632>`__: Enable DEP and ASLR on "
#~ "Windows."
#~ msgstr ""
#~ "`Issue #16632 <https://bugs.python.org/16632>`__: Enable DEP and ASLR on "
#~ "Windows."

#~ msgid ""
#~ "`Issue #17791 <https://bugs.python.org/17791>`__: Drop PREFIX and "
#~ "EXEC_PREFIX definitions from PC/pyconfig.h"
#~ msgstr ""
#~ "`Issue #17791 <https://bugs.python.org/17791>`__: Drop PREFIX and "
#~ "EXEC_PREFIX definitions from PC/pyconfig.h"

#~ msgid ""
#~ "`Issue #19550 <https://bugs.python.org/19550>`__: Implement Windows "
#~ "installer changes of PEP 453 (ensurepip)."
#~ msgstr ""
#~ "`Issue #19550 <https://bugs.python.org/19550>`__: Implement Windows "
#~ "installer changes of PEP 453 (ensurepip)."

#~ msgid ""
#~ "`Issue #19520 <https://bugs.python.org/19520>`__: Fix compiler warning in "
#~ "the _sha3 module on 32bit Windows."
#~ msgstr ""
#~ "`Issue #19520 <https://bugs.python.org/19520>`__: Fix compiler warning in "
#~ "the _sha3 module on 32bit Windows."

#~ msgid ""
#~ "`Issue #19356 <https://bugs.python.org/19356>`__: Avoid using a C "
#~ "variabled named \"_self\", it's a reserved word in some C compilers."
#~ msgstr ""
#~ "`Issue #19356 <https://bugs.python.org/19356>`__: Avoid using a C "
#~ "variabled named \"_self\", it's a reserved word in some C compilers."

#~ msgid ""
#~ "`Issue #15792 <https://bugs.python.org/15792>`__: Correct build options "
#~ "on Win64. Patch by Jeremy Kloth."
#~ msgstr ""
#~ "`Issue #15792 <https://bugs.python.org/15792>`__: Correct build options "
#~ "on Win64. Patch by Jeremy Kloth."

#~ msgid ""
#~ "`Issue #19373 <https://bugs.python.org/19373>`__: Apply upstream change "
#~ "to Tk 8.5.15 fixing OS X 10.9 screen refresh problem for OS X installer "
#~ "build."
#~ msgstr ""
#~ "`Issue #19373 <https://bugs.python.org/19373>`__: Apply upstream change "
#~ "to Tk 8.5.15 fixing OS X 10.9 screen refresh problem for OS X installer "
#~ "build."

#~ msgid ""
#~ "`Issue #19649 <https://bugs.python.org/19649>`__: On OS X, the same set "
#~ "of file names are now installed in bin directories for all "
#~ "configurations: non-framework vs framework, and single arch vs universal "
#~ "builds.  pythonx.y-32 is now always installed for 64-bit/32-bit universal "
#~ "builds.  The obsolete and undocumented pythonw* symlinks are no longer "
#~ "installed anywhere."
#~ msgstr ""
#~ "`Issue #19649 <https://bugs.python.org/19649>`__: On OS X, the same set "
#~ "of file names are now installed in bin directories for all "
#~ "configurations: non-framework vs framework, and single arch vs universal "
#~ "builds.  pythonx.y-32 is now always installed for 64-bit/32-bit universal "
#~ "builds.  The obsolete and undocumented pythonw* symlinks are no longer "
#~ "installed anywhere."

#~ msgid ""
#~ "`Issue #19553 <https://bugs.python.org/19553>`__: PEP 453 - \"make install"
#~ "\" and \"make altinstall\" now install or upgrade pip by default, using "
#~ "the bundled pip provided by the new ensurepip module.  A new configure "
#~ "option, --with-ensurepip[=upgrade|install|no], is available to override "
#~ "the default ensurepip \"--upgrade\" option.  The option can also be set "
#~ "with \"make [alt]install ENSUREPIP=[upgrade|install|no]\"."
#~ msgstr ""
#~ "`Issue #19553 <https://bugs.python.org/19553>`__: PEP 453 - \"make install"
#~ "\" and \"make altinstall\" now install or upgrade pip by default, using "
#~ "the bundled pip provided by the new ensurepip module.  A new configure "
#~ "option, --with-ensurepip[=upgrade|install|no], is available to override "
#~ "the default ensurepip \"--upgrade\" option.  The option can also be set "
#~ "with \"make [alt]install ENSUREPIP=[upgrade|install|no]\"."

#~ msgid ""
#~ "`Issue #19551 <https://bugs.python.org/19551>`__: PEP 453 - the OS X "
#~ "installer now installs pip by default."
#~ msgstr ""
#~ "`Issue #19551 <https://bugs.python.org/19551>`__: PEP 453 - the OS X "
#~ "installer now installs pip by default."

#~ msgid ""
#~ "`Issue #15663 <https://bugs.python.org/15663>`__: Revert OS X installer "
#~ "built-in Tcl/Tk support for 3.4.0b1. Some third-party projects, such as "
#~ "Matplotlib and PIL/Pillow, depended on being able to build with Tcl and "
#~ "Tk frameworks in /Library/Frameworks."
#~ msgstr ""
#~ "`Issue #15663 <https://bugs.python.org/15663>`__: Revert OS X installer "
#~ "built-in Tcl/Tk support for 3.4.0b1. Some third-party projects, such as "
#~ "Matplotlib and PIL/Pillow, depended on being able to build with Tcl and "
#~ "Tk frameworks in /Library/Frameworks."

#~ msgid ""
#~ "`Issue #19730 <https://bugs.python.org/19730>`__: Argument Clinic now "
#~ "supports all the existing PyArg \"format units\" as legacy converters, as "
#~ "well as two new features: \"self converters\" and the \"version\" "
#~ "directive."
#~ msgstr ""
#~ "`Issue #19730 <https://bugs.python.org/19730>`__: Argument Clinic now "
#~ "supports all the existing PyArg \"format units\" as legacy converters, as "
#~ "well as two new features: \"self converters\" and the \"version\" "
#~ "directive."

#~ msgid ""
#~ "`Issue #19552 <https://bugs.python.org/19552>`__: pyvenv now bootstraps "
#~ "pip into virtual environments by default (pass --without-pip to request "
#~ "the old behaviour)"
#~ msgstr ""
#~ "`Issue #19552 <https://bugs.python.org/19552>`__: pyvenv now bootstraps "
#~ "pip into virtual environments by default (pass --without-pip to request "
#~ "the old behaviour)"

#~ msgid ""
#~ "`Issue #19390 <https://bugs.python.org/19390>`__: Argument Clinic no "
#~ "longer accepts malformed Python and C ids."
#~ msgstr ""
#~ "`Issue #19390 <https://bugs.python.org/19390>`__: Argument Clinic no "
#~ "longer accepts malformed Python and C ids."

#~ msgid "Python 3.4.0 Alpha 4"
#~ msgstr "Python 3.4.0 Alpha 4"

#~ msgid ""
#~ "`Issue #19301 <https://bugs.python.org/19301>`__: Give classes and "
#~ "functions that are explicitly marked global a global qualname."
#~ msgstr ""
#~ "`Issue #19301 <https://bugs.python.org/19301>`__: Give classes and "
#~ "functions that are explicitly marked global a global qualname."

#~ msgid ""
#~ "`Issue #19279 <https://bugs.python.org/19279>`__: UTF-7 decoder no longer "
#~ "produces illegal strings."
#~ msgstr ""
#~ "`Issue #19279 <https://bugs.python.org/19279>`__: UTF-7 decoder no longer "
#~ "produces illegal strings."

#~ msgid ""
#~ "`Issue #16612 <https://bugs.python.org/16612>`__: Add \"Argument Clinic"
#~ "\", a compile-time preprocessor for C files to generate argument parsing "
#~ "code.  (See PEP 436.)"
#~ msgstr ""
#~ "`Issue #16612 <https://bugs.python.org/16612>`__: Add \"Argument Clinic"
#~ "\", a compile-time preprocessor for C files to generate argument parsing "
#~ "code.  (See PEP 436.)"

#~ msgid ""
#~ "`Issue #18810 <https://bugs.python.org/18810>`__: Shift stat calls in "
#~ "importlib.machinery.FileFinder such that the code is optimistic that if "
#~ "something exists in a directory named exactly like the possible package "
#~ "being searched for that it's in actuality a directory."
#~ msgstr ""
#~ "`Issue #18810 <https://bugs.python.org/18810>`__: Shift stat calls in "
#~ "importlib.machinery.FileFinder such that the code is optimistic that if "
#~ "something exists in a directory named exactly like the possible package "
#~ "being searched for that it's in actuality a directory."

#~ msgid ""
#~ "`Issue #18416 <https://bugs.python.org/18416>`__: importlib.machinery."
#~ "PathFinder now treats '' as the cwd and importlib.machinery.FileFinder no "
#~ "longer special-cases '' to '.'. This leads to modules imported from cwd "
#~ "to now possess an absolute file path for __file__ (this does not affect "
#~ "modules specified by path on the CLI but it does affect -m/runpy). It "
#~ "also allows FileFinder to be more consistent by not having an edge case."
#~ msgstr ""
#~ "`Issue #18416 <https://bugs.python.org/18416>`__: importlib.machinery."
#~ "PathFinder now treats '' as the cwd and importlib.machinery.FileFinder no "
#~ "longer special-cases '' to '.'. This leads to modules imported from cwd "
#~ "to now possess an absolute file path for __file__ (this does not affect "
#~ "modules specified by path on the CLI but it does affect -m/runpy). It "
#~ "also allows FileFinder to be more consistent by not having an edge case."

#~ msgid ""
#~ "`Issue #4555 <https://bugs.python.org/4555>`__: All exported C symbols "
#~ "are now prefixed with either \"Py\" or \"_Py\"."
#~ msgstr ""
#~ "`Issue #4555 <https://bugs.python.org/4555>`__: All exported C symbols "
#~ "are now prefixed with either \"Py\" or \"_Py\"."

#~ msgid ""
#~ "`Issue #19219 <https://bugs.python.org/19219>`__: Speed up marshal."
#~ "loads(), and make pyc files slightly (5% to 10%) smaller."
#~ msgstr ""
#~ "`Issue #19219 <https://bugs.python.org/19219>`__: Speed up marshal."
#~ "loads(), and make pyc files slightly (5% to 10%) smaller."

#~ msgid ""
#~ "`Issue #19221 <https://bugs.python.org/19221>`__: Upgrade Unicode "
#~ "database to version 6.3.0."
#~ msgstr ""
#~ "`Issue #19221 <https://bugs.python.org/19221>`__: Upgrade Unicode "
#~ "database to version 6.3.0."

#~ msgid ""
#~ "`Issue #16742 <https://bugs.python.org/16742>`__: The result of the C "
#~ "callback PyOS_ReadlineFunctionPointer must now be a string allocated by "
#~ "PyMem_RawMalloc() or PyMem_RawRealloc() (or NULL if an error occurred), "
#~ "instead of a string allocated by PyMem_Malloc() or PyMem_Realloc()."
#~ msgstr ""
#~ "`Issue #16742 <https://bugs.python.org/16742>`__: The result of the C "
#~ "callback PyOS_ReadlineFunctionPointer must now be a string allocated by "
#~ "PyMem_RawMalloc() or PyMem_RawRealloc() (or NULL if an error occurred), "
#~ "instead of a string allocated by PyMem_Malloc() or PyMem_Realloc()."

#~ msgid ""
#~ "`Issue #19199 <https://bugs.python.org/19199>`__: Remove ``PyThreadState."
#~ "tick_counter`` field"
#~ msgstr ""
#~ "`Issue #19199 <https://bugs.python.org/19199>`__: Remove ``PyThreadState."
#~ "tick_counter`` field"

#~ msgid ""
#~ "`Issue #19087 <https://bugs.python.org/19087>`__: Improve bytearray "
#~ "allocation in order to allow cheap popping of data at the front (slice "
#~ "deletion)."
#~ msgstr ""
#~ "`Issue #19087 <https://bugs.python.org/19087>`__: Improve bytearray "
#~ "allocation in order to allow cheap popping of data at the front (slice "
#~ "deletion)."

#~ msgid ""
#~ "`Issue #19014 <https://bugs.python.org/19014>`__: memoryview.cast() is "
#~ "now allowed on zero-length views."
#~ msgstr ""
#~ "`Issue #19014 <https://bugs.python.org/19014>`__: memoryview.cast() is "
#~ "now allowed on zero-length views."

#~ msgid ""
#~ "`Issue #18690 <https://bugs.python.org/18690>`__: memoryview is now "
#~ "automatically registered with collections.abc.Sequence"
#~ msgstr ""
#~ "`Issue #18690 <https://bugs.python.org/18690>`__: memoryview is now "
#~ "automatically registered with collections.abc.Sequence"

#~ msgid ""
#~ "`Issue #19078 <https://bugs.python.org/19078>`__: memoryview now "
#~ "correctly supports the reversed builtin (Patch by Claudiu Popa)"
#~ msgstr ""
#~ "`Issue #19078 <https://bugs.python.org/19078>`__: memoryview now "
#~ "correctly supports the reversed builtin (Patch by Claudiu Popa)"

#~ msgid ""
#~ "`Issue #17457 <https://bugs.python.org/17457>`__: unittest test discovery "
#~ "now works with namespace packages. Patch by Claudiu Popa."
#~ msgstr ""
#~ "`Issue #17457 <https://bugs.python.org/17457>`__: unittest test discovery "
#~ "now works with namespace packages. Patch by Claudiu Popa."

#~ msgid ""
#~ "`Issue #18235 <https://bugs.python.org/18235>`__: Fix the sysconfig "
#~ "variables LDSHARED and BLDSHARED under AIX. Patch by David Edelsohn."
#~ msgstr ""
#~ "`Issue #18235 <https://bugs.python.org/18235>`__: Fix the sysconfig "
#~ "variables LDSHARED and BLDSHARED under AIX. Patch by David Edelsohn."

#~ msgid ""
#~ "`Issue #18606 <https://bugs.python.org/18606>`__: Add the new \"statistics"
#~ "\" module (PEP 450).  Contributed by Steven D'Aprano."
#~ msgstr ""
#~ "`Issue #18606 <https://bugs.python.org/18606>`__: Add the new \"statistics"
#~ "\" module (PEP 450).  Contributed by Steven D'Aprano."

#~ msgid ""
#~ "`Issue #12866 <https://bugs.python.org/12866>`__: The audioop module now "
#~ "supports 24-bit samples."
#~ msgstr ""
#~ "`Issue #12866 <https://bugs.python.org/12866>`__: The audioop module now "
#~ "supports 24-bit samples."

#~ msgid ""
#~ "`Issue #19254 <https://bugs.python.org/19254>`__: Provide an optimized "
#~ "Python implementation of pbkdf2_hmac."
#~ msgstr ""
#~ "`Issue #19254 <https://bugs.python.org/19254>`__: Provide an optimized "
#~ "Python implementation of pbkdf2_hmac."

#~ msgid ""
#~ "`Issue #19262 <https://bugs.python.org/19262>`__: Initial check in of the "
#~ "'asyncio' package (a.k.a. Tulip, a.k.a. PEP 3156).  There are no docs "
#~ "yet, and the PEP is slightly out of date with the code.  This module will "
#~ "have *provisional* status in Python 3.4."
#~ msgstr ""
#~ "`Issue #19262 <https://bugs.python.org/19262>`__: Initial check in of the "
#~ "'asyncio' package (a.k.a. Tulip, a.k.a. PEP 3156).  There are no docs "
#~ "yet, and the PEP is slightly out of date with the code.  This module will "
#~ "have *provisional* status in Python 3.4."

#~ msgid ""
#~ "`Issue #19276 <https://bugs.python.org/19276>`__: Fixed the wave module "
#~ "on 64-bit big-endian platforms."
#~ msgstr ""
#~ "`Issue #19276 <https://bugs.python.org/19276>`__: Fixed the wave module "
#~ "on 64-bit big-endian platforms."

#~ msgid ""
#~ "`Issue #19266 <https://bugs.python.org/19266>`__: Rename the new-in-3.4 "
#~ "``contextlib.ignore`` context manager to ``contextlib.suppress`` in order "
#~ "to be more consistent with existing descriptions of that operation "
#~ "elsewhere in the language and standard library documentation (Patch by "
#~ "Zero Piraeus)."
#~ msgstr ""
#~ "`Issue #19266 <https://bugs.python.org/19266>`__: Rename the new-in-3.4 "
#~ "``contextlib.ignore`` context manager to ``contextlib.suppress`` in order "
#~ "to be more consistent with existing descriptions of that operation "
#~ "elsewhere in the language and standard library documentation (Patch by "
#~ "Zero Piraeus)."

#~ msgid ""
#~ "`Issue #18891 <https://bugs.python.org/18891>`__: Completed the new email "
#~ "package (provisional) API additions by adding new classes EmailMessage, "
#~ "MIMEPart, and ContentManager."
#~ msgstr ""
#~ "`Issue #18891 <https://bugs.python.org/18891>`__: Completed the new email "
#~ "package (provisional) API additions by adding new classes EmailMessage, "
#~ "MIMEPart, and ContentManager."

#~ msgid ""
#~ "`Issue #18281 <https://bugs.python.org/18281>`__: Unused stat constants "
#~ "removed from `tarfile`."
#~ msgstr ""
#~ "`Issue #18281 <https://bugs.python.org/18281>`__: Unused stat constants "
#~ "removed from `tarfile`."

#~ msgid ""
#~ "`Issue #18999 <https://bugs.python.org/18999>`__: Multiprocessing now "
#~ "supports 'contexts' with the same API as the module, but bound to "
#~ "specified start methods."
#~ msgstr ""
#~ "`Issue #18999 <https://bugs.python.org/18999>`__: Multiprocessing now "
#~ "supports 'contexts' with the same API as the module, but bound to "
#~ "specified start methods."

#~ msgid ""
#~ "`Issue #18468 <https://bugs.python.org/18468>`__: The re.split, re."
#~ "findall, and re.sub functions and the group() and groups() methods of "
#~ "match object now always return a string or a bytes object."
#~ msgstr ""
#~ "`Issue #18468 <https://bugs.python.org/18468>`__: The re.split, re."
#~ "findall, and re.sub functions and the group() and groups() methods of "
#~ "match object now always return a string or a bytes object."

#~ msgid ""
#~ "`Issue #18725 <https://bugs.python.org/18725>`__: The textwrap module now "
#~ "supports truncating multiline text."
#~ msgstr ""
#~ "`Issue #18725 <https://bugs.python.org/18725>`__: The textwrap module now "
#~ "supports truncating multiline text."

#~ msgid ""
#~ "`Issue #18776 <https://bugs.python.org/18776>`__: atexit callbacks now "
#~ "display their full traceback when they raise an exception."
#~ msgstr ""
#~ "`Issue #18776 <https://bugs.python.org/18776>`__: atexit callbacks now "
#~ "display their full traceback when they raise an exception."

#~ msgid ""
#~ "`Issue #17827 <https://bugs.python.org/17827>`__: Add the missing "
#~ "documentation for ``codecs.encode`` and ``codecs.decode``."
#~ msgstr ""
#~ "`Issue #17827 <https://bugs.python.org/17827>`__: Add the missing "
#~ "documentation for ``codecs.encode`` and ``codecs.decode``."

#~ msgid ""
#~ "`Issue #19218 <https://bugs.python.org/19218>`__: Rename collections.abc "
#~ "to _collections_abc in order to speed up interpreter start."
#~ msgstr ""
#~ "`Issue #19218 <https://bugs.python.org/19218>`__: Rename collections.abc "
#~ "to _collections_abc in order to speed up interpreter start."

#~ msgid ""
#~ "`Issue #18582 <https://bugs.python.org/18582>`__: Add 'pbkdf2_hmac' to "
#~ "the hashlib module. It implements PKCS#5 password-based key derivation "
#~ "functions with HMAC as pseudorandom function."
#~ msgstr ""
#~ "`Issue #18582 <https://bugs.python.org/18582>`__: Add 'pbkdf2_hmac' to "
#~ "the hashlib module. It implements PKCS#5 password-based key derivation "
#~ "functions with HMAC as pseudorandom function."

#~ msgid ""
#~ "`Issue #19131 <https://bugs.python.org/19131>`__: The aifc module now "
#~ "correctly reads and writes sampwidth of compressed streams."
#~ msgstr ""
#~ "`Issue #19131 <https://bugs.python.org/19131>`__: The aifc module now "
#~ "correctly reads and writes sampwidth of compressed streams."

#~ msgid ""
#~ "`Issue #19209 <https://bugs.python.org/19209>`__: Remove import of "
#~ "copyreg from the os module to speed up interpreter startup. stat_result "
#~ "and statvfs_result are now hard-coded to reside in the os module."
#~ msgstr ""
#~ "`Issue #19209 <https://bugs.python.org/19209>`__: Remove import of "
#~ "copyreg from the os module to speed up interpreter startup. stat_result "
#~ "and statvfs_result are now hard-coded to reside in the os module."

#~ msgid ""
#~ "`Issue #19205 <https://bugs.python.org/19205>`__: Don't import the 're' "
#~ "module in site and sysconfig module to speed up interpreter start."
#~ msgstr ""
#~ "`Issue #19205 <https://bugs.python.org/19205>`__: Don't import the 're' "
#~ "module in site and sysconfig module to speed up interpreter start."

#~ msgid ""
#~ "`Issue #9548 <https://bugs.python.org/9548>`__: Add a minimal "
#~ "\"_bootlocale\" module that is imported by the _io module instead of the "
#~ "full locale module."
#~ msgstr ""
#~ "`Issue #9548 <https://bugs.python.org/9548>`__: Add a minimal "
#~ "\"_bootlocale\" module that is imported by the _io module instead of the "
#~ "full locale module."

#~ msgid ""
#~ "`Issue #18764 <https://bugs.python.org/18764>`__: Remove the 'print' "
#~ "alias for the PDB 'p' command so that it no longer shadows the print "
#~ "function."
#~ msgstr ""
#~ "`Issue #18764 <https://bugs.python.org/18764>`__: Remove the 'print' "
#~ "alias for the PDB 'p' command so that it no longer shadows the print "
#~ "function."

#~ msgid ""
#~ "`Issue #19158 <https://bugs.python.org/19158>`__: A rare race in "
#~ "BoundedSemaphore could allow .release() too often."
#~ msgstr ""
#~ "`Issue #19158 <https://bugs.python.org/19158>`__: A rare race in "
#~ "BoundedSemaphore could allow .release() too often."

#~ msgid ""
#~ "`Issue #15805 <https://bugs.python.org/15805>`__: Add contextlib."
#~ "redirect_stdout()."
#~ msgstr ""
#~ "`Issue #15805 <https://bugs.python.org/15805>`__: Add contextlib."
#~ "redirect_stdout()."

#~ msgid ""
#~ "`Issue #18716 <https://bugs.python.org/18716>`__: Deprecate the formatter "
#~ "module."
#~ msgstr ""
#~ "`Issue #18716 <https://bugs.python.org/18716>`__: Deprecate the formatter "
#~ "module."

#~ msgid ""
#~ "`Issue #10712 <https://bugs.python.org/10712>`__: 2to3 has a new \"asserts"
#~ "\" fixer that replaces deprecated names of unittest methods (e.g. "
#~ "failUnlessEqual -> assertEqual)."
#~ msgstr ""
#~ "`Issue #10712 <https://bugs.python.org/10712>`__: 2to3 has a new \"asserts"
#~ "\" fixer that replaces deprecated names of unittest methods (e.g. "
#~ "failUnlessEqual -> assertEqual)."

#~ msgid ""
#~ "`Issue #17839 <https://bugs.python.org/17839>`__: base64.decodebytes and "
#~ "base64.encodebytes now accept any object that exports a 1 dimensional "
#~ "array of bytes (this means the same is now also true for base64_codec)"
#~ msgstr ""
#~ "`Issue #17839 <https://bugs.python.org/17839>`__: base64.decodebytes and "
#~ "base64.encodebytes now accept any object that exports a 1 dimensional "
#~ "array of bytes (this means the same is now also true for base64_codec)"

#~ msgid ""
#~ "`Issue #19132 <https://bugs.python.org/19132>`__: The pprint module now "
#~ "supports compact mode."
#~ msgstr ""
#~ "`Issue #19132 <https://bugs.python.org/19132>`__: The pprint module now "
#~ "supports compact mode."

#~ msgid ""
#~ "`Issue #19137 <https://bugs.python.org/19137>`__: The pprint module now "
#~ "correctly formats instances of set and frozenset subclasses."
#~ msgstr ""
#~ "`Issue #19137 <https://bugs.python.org/19137>`__: The pprint module now "
#~ "correctly formats instances of set and frozenset subclasses."

#~ msgid ""
#~ "`Issue #10042 <https://bugs.python.org/10042>`__: functools."
#~ "total_ordering now correctly handles NotImplemented being returned by the "
#~ "underlying comparison function (Patch by Katie Miller)"
#~ msgstr ""
#~ "`Issue #10042 <https://bugs.python.org/10042>`__: functools."
#~ "total_ordering now correctly handles NotImplemented being returned by the "
#~ "underlying comparison function (Patch by Katie Miller)"

#~ msgid ""
#~ "`Issue #19092 <https://bugs.python.org/19092>`__: contextlib.ExitStack "
#~ "now correctly reraises exceptions from the __exit__ callbacks of inner "
#~ "context managers (Patch by Hrvoje Nik≈°iƒá)"
#~ msgstr ""
#~ "`Issue #19092 <https://bugs.python.org/19092>`__: contextlib.ExitStack "
#~ "now correctly reraises exceptions from the __exit__ callbacks of inner "
#~ "context managers (Patch by Hrvoje Nik≈°iƒá)"

#~ msgid ""
#~ "`Issue #12641 <https://bugs.python.org/12641>`__: Avoid passing \"-mno-"
#~ "cygwin\" to the mingw32 compiler, except when necessary.  Patch by Oscar "
#~ "Benjamin."
#~ msgstr ""
#~ "`Issue #12641 <https://bugs.python.org/12641>`__: Avoid passing \"-mno-"
#~ "cygwin\" to the mingw32 compiler, except when necessary.  Patch by Oscar "
#~ "Benjamin."

#~ msgid ""
#~ "`Issue #5845 <https://bugs.python.org/5845>`__: In site.py, only load "
#~ "readline history from ~/.python_history if no history has been read "
#~ "already.  This avoids double writes to the history file at shutdown."
#~ msgstr ""
#~ "`Issue #5845 <https://bugs.python.org/5845>`__: In site.py, only load "
#~ "readline history from ~/.python_history if no history has been read "
#~ "already.  This avoids double writes to the history file at shutdown."

#~ msgid ""
#~ "`Issue #19095 <https://bugs.python.org/19095>`__: SSLSocket.getpeercert() "
#~ "now raises ValueError when the SSL handshake hasn't been done."
#~ msgstr ""
#~ "`Issue #19095 <https://bugs.python.org/19095>`__: SSLSocket.getpeercert() "
#~ "now raises ValueError when the SSL handshake hasn't been done."

#~ msgid ""
#~ "`Issue #4366 <https://bugs.python.org/4366>`__: Fix building extensions "
#~ "on all platforms when --enable-shared is used."
#~ msgstr ""
#~ "`Issue #4366 <https://bugs.python.org/4366>`__: Fix building extensions "
#~ "on all platforms when --enable-shared is used."

#~ msgid ""
#~ "`Issue #19030 <https://bugs.python.org/19030>`__: Fixed `inspect."
#~ "getmembers` and `inspect.classify_class_attrs` to attempt activating "
#~ "descriptors before falling back to a __dict__ search for faulty "
#~ "descriptors.  `inspect.classify_class_attrs` no longer returns Attributes "
#~ "whose home class is None."
#~ msgstr ""
#~ "`Issue #19030 <https://bugs.python.org/19030>`__: Fixed `inspect."
#~ "getmembers` and `inspect.classify_class_attrs` to attempt activating "
#~ "descriptors before falling back to a __dict__ search for faulty "
#~ "descriptors.  `inspect.classify_class_attrs` no longer returns Attributes "
#~ "whose home class is None."

#~ msgid ""
#~ "`Issue #1772673 <https://bugs.python.org/1772673>`__: The type of `char*` "
#~ "arguments now changed to `const char*`."
#~ msgstr ""
#~ "`Issue #1772673 <https://bugs.python.org/1772673>`__: The type of `char*` "
#~ "arguments now changed to `const char*`."

#~ msgid ""
#~ "`Issue #16129 <https://bugs.python.org/16129>`__: Added a "
#~ "`Py_SetStandardStreamEncoding` pre-initialization API to allow embedding "
#~ "applications like Blender to force a particular encoding and error "
#~ "handler for the standard IO streams (initial patch by Bastien Montagne)"
#~ msgstr ""
#~ "`Issue #16129 <https://bugs.python.org/16129>`__: Added a "
#~ "`Py_SetStandardStreamEncoding` pre-initialization API to allow embedding "
#~ "applications like Blender to force a particular encoding and error "
#~ "handler for the standard IO streams (initial patch by Bastien Montagne)"

#~ msgid ""
#~ "`Issue #19275 <https://bugs.python.org/19275>`__: Fix test_site on AMD64 "
#~ "Snow Leopard"
#~ msgstr ""
#~ "`Issue #19275 <https://bugs.python.org/19275>`__: Fix test_site on AMD64 "
#~ "Snow Leopard"

#~ msgid ""
#~ "`Issue #14407 <https://bugs.python.org/14407>`__: Fix unittest test "
#~ "discovery in test_concurrent_futures."
#~ msgstr ""
#~ "`Issue #14407 <https://bugs.python.org/14407>`__: Fix unittest test "
#~ "discovery in test_concurrent_futures."

#~ msgid ""
#~ "`Issue #18919 <https://bugs.python.org/18919>`__: Unified and extended "
#~ "tests for audio modules: aifc, sunau and wave."
#~ msgstr ""
#~ "`Issue #18919 <https://bugs.python.org/18919>`__: Unified and extended "
#~ "tests for audio modules: aifc, sunau and wave."

#~ msgid ""
#~ "`Issue #18714 <https://bugs.python.org/18714>`__: Added tests for ``pdb."
#~ "find_function()``."
#~ msgstr ""
#~ "`Issue #18714 <https://bugs.python.org/18714>`__: Added tests for ``pdb."
#~ "find_function()``."

#~ msgid ""
#~ "`Issue #18758 <https://bugs.python.org/18758>`__: Fixed and improved "
#~ "cross-references."
#~ msgstr ""
#~ "`Issue #18758 <https://bugs.python.org/18758>`__: Fixed and improved "
#~ "cross-references."

#~ msgid ""
#~ "`Issue #18972 <https://bugs.python.org/18972>`__: Modernize email "
#~ "examples and use the argparse module in them."
#~ msgstr ""
#~ "`Issue #18972 <https://bugs.python.org/18972>`__: Modernize email "
#~ "examples and use the argparse module in them."

#~ msgid ""
#~ "`Issue #19130 <https://bugs.python.org/19130>`__: Correct PCbuild/readme."
#~ "txt, Python 3.3 and 3.4 require VS 2010."
#~ msgstr ""
#~ "`Issue #19130 <https://bugs.python.org/19130>`__: Correct PCbuild/readme."
#~ "txt, Python 3.3 and 3.4 require VS 2010."

#~ msgid ""
#~ "`Issue #15663 <https://bugs.python.org/15663>`__: Update OS X 10.6+ "
#~ "installer to use Tcl/Tk 8.5.15."
#~ msgstr ""
#~ "`Issue #15663 <https://bugs.python.org/15663>`__: Update OS X 10.6+ "
#~ "installer to use Tcl/Tk 8.5.15."

#~ msgid ""
#~ "`Issue #14499 <https://bugs.python.org/14499>`__: Fix several problems "
#~ "with OS X universal build support:"
#~ msgstr ""
#~ "`Issue #14499 <https://bugs.python.org/14499>`__: Fix several problems "
#~ "with OS X universal build support:"

#~ msgid ""
#~ "`Issue #19019 <https://bugs.python.org/19019>`__: Change the OS X "
#~ "installer build script to use CFLAGS instead of OPT for special build "
#~ "options.  By setting OPT, some compiler-specific options like -fwrapv "
#~ "were overridden and thus not used, which could result in broken "
#~ "interpreters when building with clang."
#~ msgstr ""
#~ "`Issue #19019 <https://bugs.python.org/19019>`__: Change the OS X "
#~ "installer build script to use CFLAGS instead of OPT for special build "
#~ "options.  By setting OPT, some compiler-specific options like -fwrapv "
#~ "were overridden and thus not used, which could result in broken "
#~ "interpreters when building with clang."

#~ msgid "Python 3.4.0 Alpha 3"
#~ msgstr "Python 3.4.0 Alpha 3"

#~ msgid "Release date: 2013-09-29"
#~ msgstr "Date de sortie¬†: 29-09-2013"

#~ msgid ""
#~ "`Issue #18818 <https://bugs.python.org/18818>`__: The \"encodingname\" "
#~ "part of PYTHONIOENCODING is now optional."
#~ msgstr ""
#~ "`Issue #18818 <https://bugs.python.org/18818>`__: The \"encodingname\" "
#~ "part of PYTHONIOENCODING is now optional."

#~ msgid ""
#~ "`Issue #19098 <https://bugs.python.org/19098>`__: Prevent overflow in the "
#~ "compiler when the recursion limit is set absurdly high."
#~ msgstr ""
#~ "`Issue #19098 <https://bugs.python.org/19098>`__: Prevent overflow in the "
#~ "compiler when the recursion limit is set absurdly high."

#~ msgid ""
#~ "`Issue #18929 <https://bugs.python.org/18929>`__: `inspect."
#~ "classify_class_attrs()` now correctly finds class attributes returned by "
#~ "`dir()` that are located in the metaclass."
#~ msgstr ""
#~ "`Issue #18929 <https://bugs.python.org/18929>`__: `inspect."
#~ "classify_class_attrs()` now correctly finds class attributes returned by "
#~ "`dir()` that are located in the metaclass."

#~ msgid ""
#~ "`Issue #18950 <https://bugs.python.org/18950>`__: Fix miscellaneous bugs "
#~ "in the sunau module. Au_read.readframes() now updates current file "
#~ "position and reads correct number of frames from multichannel stream.  "
#~ "Au_write.writeframesraw() now correctly updates current file position.  "
#~ "Au_read.getnframes() now returns an integer (as in Python 2).  Au_read "
#~ "and Au_write now correctly works with file object if start file position "
#~ "is not a zero."
#~ msgstr ""
#~ "`Issue #18950 <https://bugs.python.org/18950>`__: Fix miscellaneous bugs "
#~ "in the sunau module. Au_read.readframes() now updates current file "
#~ "position and reads correct number of frames from multichannel stream.  "
#~ "Au_write.writeframesraw() now correctly updates current file position.  "
#~ "Au_read.getnframes() now returns an integer (as in Python 2).  Au_read "
#~ "and Au_write now correctly works with file object if start file position "
#~ "is not a zero."

#~ msgid ""
#~ "`Issue #18594 <https://bugs.python.org/18594>`__: The fast path for "
#~ "collections.Counter() was never taken due to an over-restrictive type "
#~ "check."
#~ msgstr ""
#~ "`Issue #18594 <https://bugs.python.org/18594>`__: The fast path for "
#~ "collections.Counter() was never taken due to an over-restrictive type "
#~ "check."

#~ msgid ""
#~ "`Issue #19053 <https://bugs.python.org/19053>`__: ZipExtFile.read1() with "
#~ "non-zero argument no more returns empty bytes until end of data."
#~ msgstr ""
#~ "`Issue #19053 <https://bugs.python.org/19053>`__: ZipExtFile.read1() with "
#~ "non-zero argument no more returns empty bytes until end of data."

#~ msgid ""
#~ "`Issue #18996 <https://bugs.python.org/18996>`__: TestCase.assertEqual() "
#~ "now more cleverly shorten differing strings in error report."
#~ msgstr ""
#~ "`Issue #18996 <https://bugs.python.org/18996>`__: TestCase.assertEqual() "
#~ "now more cleverly shorten differing strings in error report."

#~ msgid ""
#~ "`Issue #19034 <https://bugs.python.org/19034>`__: repr() for tkinter."
#~ "Tcl_Obj now exposes string reperesentation."
#~ msgstr ""
#~ "`Issue #19034 <https://bugs.python.org/19034>`__: repr() for tkinter."
#~ "Tcl_Obj now exposes string reperesentation."

#~ msgid ""
#~ "`Issue #18978 <https://bugs.python.org/18978>`__: ``urllib.request."
#~ "Request`` now allows the method to be indicated on the class and no "
#~ "longer sets it to None in ``__init__``."
#~ msgstr ""
#~ "`Issue #18978 <https://bugs.python.org/18978>`__: ``urllib.request."
#~ "Request`` now allows the method to be indicated on the class and no "
#~ "longer sets it to None in ``__init__``."

#~ msgid ""
#~ "`Issue #18626 <https://bugs.python.org/18626>`__: the inspect module now "
#~ "offers a basic command line introspection interface (Initial patch by "
#~ "Claudiu Popa)"
#~ msgstr ""
#~ "`Issue #18626 <https://bugs.python.org/18626>`__: the inspect module now "
#~ "offers a basic command line introspection interface (Initial patch by "
#~ "Claudiu Popa)"

#~ msgid ""
#~ "`Issue #3015 <https://bugs.python.org/3015>`__: Fixed tkinter with "
#~ "wantobject=False.  Any Tcl command call returned empty string."
#~ msgstr ""
#~ "`Issue #3015 <https://bugs.python.org/3015>`__: Fixed tkinter with "
#~ "wantobject=False.  Any Tcl command call returned empty string."

#~ msgid ""
#~ "`Issue #19037 <https://bugs.python.org/19037>`__: The mailbox module now "
#~ "makes all changes to maildir files before moving them into place, to "
#~ "avoid race conditions with other programs that may be accessing the "
#~ "maildir directory."
#~ msgstr ""
#~ "`Issue #19037 <https://bugs.python.org/19037>`__: The mailbox module now "
#~ "makes all changes to maildir files before moving them into place, to "
#~ "avoid race conditions with other programs that may be accessing the "
#~ "maildir directory."

#~ msgid ""
#~ "`Issue #14984 <https://bugs.python.org/14984>`__: On POSIX systems, when "
#~ "netrc is called without a filename argument (and therefore is reading the "
#~ "user's $HOME/.netrc file), it now enforces the same security rules as "
#~ "typical ftp clients: the .netrc file must be owned by the user that owns "
#~ "the process and must not be readable by any other user."
#~ msgstr ""
#~ "`Issue #14984 <https://bugs.python.org/14984>`__: On POSIX systems, when "
#~ "netrc is called without a filename argument (and therefore is reading the "
#~ "user's $HOME/.netrc file), it now enforces the same security rules as "
#~ "typical ftp clients: the .netrc file must be owned by the user that owns "
#~ "the process and must not be readable by any other user."

#~ msgid ""
#~ "`Issue #18873 <https://bugs.python.org/18873>`__: The tokenize module now "
#~ "detects Python source code encoding only in comment lines."
#~ msgstr ""
#~ "`Issue #18873 <https://bugs.python.org/18873>`__: The tokenize module now "
#~ "detects Python source code encoding only in comment lines."

#~ msgid ""
#~ "`Issue #17764 <https://bugs.python.org/17764>`__: Enable http.server to "
#~ "bind to a user specified network interface.  Patch contributed by Malte "
#~ "Swart."
#~ msgstr ""
#~ "`Issue #17764 <https://bugs.python.org/17764>`__: Enable http.server to "
#~ "bind to a user specified network interface.  Patch contributed by Malte "
#~ "Swart."

#~ msgid ""
#~ "`Issue #18937 <https://bugs.python.org/18937>`__: Add an assertLogs() "
#~ "context manager to unittest.TestCase to ensure that a block of code emits "
#~ "a message using the logging module."
#~ msgstr ""
#~ "`Issue #18937 <https://bugs.python.org/18937>`__: Add an assertLogs() "
#~ "context manager to unittest.TestCase to ensure that a block of code emits "
#~ "a message using the logging module."

#~ msgid ""
#~ "`Issue #17324 <https://bugs.python.org/17324>`__: Fix http.server's "
#~ "request handling case on trailing '/'. Patch contributed by Vajrasky Kok."
#~ msgstr ""
#~ "`Issue #17324 <https://bugs.python.org/17324>`__: Fix http.server's "
#~ "request handling case on trailing '/'. Patch contributed by Vajrasky Kok."

#~ msgid ""
#~ "`Issue #19018 <https://bugs.python.org/19018>`__: The heapq.merge() "
#~ "function no longer suppresses IndexError in the underlying iterables."
#~ msgstr ""
#~ "`Issue #19018 <https://bugs.python.org/19018>`__: The heapq.merge() "
#~ "function no longer suppresses IndexError in the underlying iterables."

#~ msgid ""
#~ "`Issue #18784 <https://bugs.python.org/18784>`__: The uuid module no "
#~ "longer attempts to load libc via ctypes.CDLL if all the necessary "
#~ "functions have already been found in libuuid.  Patch by Evgeny Sologubov."
#~ msgstr ""
#~ "`Issue #18784 <https://bugs.python.org/18784>`__: The uuid module no "
#~ "longer attempts to load libc via ctypes.CDLL if all the necessary "
#~ "functions have already been found in libuuid.  Patch by Evgeny Sologubov."

#~ msgid ""
#~ "`Issue #1565525 <https://bugs.python.org/1565525>`__: New function "
#~ "``traceback.clear_frames`` will clear the local variables of all the "
#~ "stack frames referenced by a traceback object."
#~ msgstr ""
#~ "`Issue #1565525 <https://bugs.python.org/1565525>`__: New function "
#~ "``traceback.clear_frames`` will clear the local variables of all the "
#~ "stack frames referenced by a traceback object."

#~ msgid ""
#~ "`Issue #18952 <https://bugs.python.org/18952>`__: Fix regression in "
#~ "support data downloads introduced when test.support was converted to a "
#~ "package. Regression noticed by Zachary Ware."
#~ msgstr ""
#~ "`Issue #18952 <https://bugs.python.org/18952>`__: Fix regression in "
#~ "support data downloads introduced when test.support was converted to a "
#~ "package. Regression noticed by Zachary Ware."

#~ msgid ""
#~ "`Issue #18873 <https://bugs.python.org/18873>`__: IDLE now detects Python "
#~ "source code encoding only in comment lines."
#~ msgstr ""
#~ "`Issue #18873 <https://bugs.python.org/18873>`__: IDLE now detects Python "
#~ "source code encoding only in comment lines."

#~ msgid ""
#~ "`Issue #18988 <https://bugs.python.org/18988>`__: The \"Tab\" key now "
#~ "works when a word is already autocompleted."
#~ msgstr ""
#~ "`Issue #18988 <https://bugs.python.org/18988>`__: The \"Tab\" key now "
#~ "works when a word is already autocompleted."

#~ msgid ""
#~ "`Issue #17003 <https://bugs.python.org/17003>`__: Unified the size "
#~ "argument names in the io module with common practice."
#~ msgstr ""
#~ "`Issue #17003 <https://bugs.python.org/17003>`__: Unified the size "
#~ "argument names in the io module with common practice."

#~ msgid ""
#~ "`Issue #18596 <https://bugs.python.org/18596>`__: Support the use of "
#~ "address sanity checking in recent versions of clang and GCC by "
#~ "appropriately marking known false alarms in the small object allocator. "
#~ "Patch contributed by Dhiru Kholia."
#~ msgstr ""
#~ "`Issue #18596 <https://bugs.python.org/18596>`__: Support the use of "
#~ "address sanity checking in recent versions of clang and GCC by "
#~ "appropriately marking known false alarms in the small object allocator. "
#~ "Patch contributed by Dhiru Kholia."

#~ msgid ""
#~ "`Issue #18873 <https://bugs.python.org/18873>`__: 2to3 and the "
#~ "findnocoding.py script now detect Python source code encoding only in "
#~ "comment lines."
#~ msgstr ""
#~ "`Issue #18873 <https://bugs.python.org/18873>`__: 2to3 and the "
#~ "findnocoding.py script now detect Python source code encoding only in "
#~ "comment lines."

#~ msgid "Python 3.4.0 Alpha 2"
#~ msgstr "Python 3.4.0 Alpha 2"

#~ msgid "Release date: 2013-09-09"
#~ msgstr "Date de sortie¬†: 09-09-2013"

#~ msgid ""
#~ "`Issue #18942 <https://bugs.python.org/18942>`__: sys._debugmallocstats() "
#~ "output was damaged on Windows."
#~ msgstr ""
#~ "`Issue #18942 <https://bugs.python.org/18942>`__: sys._debugmallocstats() "
#~ "output was damaged on Windows."

#~ msgid ""
#~ "`Issue #18571 <https://bugs.python.org/18571>`__: Implementation of the "
#~ "PEP 446: file descriptors and file handles are now created non-"
#~ "inheritable; add functions os.get/set_inheritable(), os.get/"
#~ "set_handle_inheritable() and socket.socket.get/set_inheritable()."
#~ msgstr ""
#~ "`Issue #18571 <https://bugs.python.org/18571>`__: Implementation of the "
#~ "PEP 446: file descriptors and file handles are now created non-"
#~ "inheritable; add functions os.get/set_inheritable(), os.get/"
#~ "set_handle_inheritable() and socket.socket.get/set_inheritable()."

#~ msgid ""
#~ "`Issue #11619 <https://bugs.python.org/11619>`__: The parser and the "
#~ "import machinery do not encode Unicode filenames anymore on Windows."
#~ msgstr ""
#~ "`Issue #11619 <https://bugs.python.org/11619>`__: The parser and the "
#~ "import machinery do not encode Unicode filenames anymore on Windows."

#~ msgid ""
#~ "`Issue #18808 <https://bugs.python.org/18808>`__: Non-daemon threads are "
#~ "now automatically joined when a sub-interpreter is shutdown (it would "
#~ "previously dump a fatal error)."
#~ msgstr ""
#~ "`Issue #18808 <https://bugs.python.org/18808>`__: Non-daemon threads are "
#~ "now automatically joined when a sub-interpreter is shutdown (it would "
#~ "previously dump a fatal error)."

#~ msgid ""
#~ "`Issue #18774 <https://bugs.python.org/18774>`__: Remove last bits of GNU "
#~ "PTH thread code and thread_pth.h."
#~ msgstr ""
#~ "`Issue #18774 <https://bugs.python.org/18774>`__: Remove last bits of GNU "
#~ "PTH thread code and thread_pth.h."

#~ msgid ""
#~ "`Issue #18771 <https://bugs.python.org/18771>`__: Add optimization to set "
#~ "object lookups to reduce the cost of hash collisions.  The core idea is "
#~ "to inspect a second key/hash pair for each cache line retrieved."
#~ msgstr ""
#~ "`Issue #18771 <https://bugs.python.org/18771>`__: Add optimization to set "
#~ "object lookups to reduce the cost of hash collisions.  The core idea is "
#~ "to inspect a second key/hash pair for each cache line retrieved."

#~ msgid ""
#~ "`Issue #16105 <https://bugs.python.org/16105>`__: When a signal handler "
#~ "fails to write to the file descriptor registered with ``signal."
#~ "set_wakeup_fd()``, report an exception instead of ignoring the error."
#~ msgstr ""
#~ "`Issue #16105 <https://bugs.python.org/16105>`__: When a signal handler "
#~ "fails to write to the file descriptor registered with ``signal."
#~ "set_wakeup_fd()``, report an exception instead of ignoring the error."

#~ msgid ""
#~ "`Issue #18722 <https://bugs.python.org/18722>`__: Remove uses of the "
#~ "\"register\" keyword in C code."
#~ msgstr ""
#~ "`Issue #18722 <https://bugs.python.org/18722>`__: Remove uses of the "
#~ "\"register\" keyword in C code."

#~ msgid ""
#~ "`Issue #18667 <https://bugs.python.org/18667>`__: Add missing "
#~ "\"HAVE_FCHOWNAT\" symbol to posix._have_functions."
#~ msgstr ""
#~ "`Issue #18667 <https://bugs.python.org/18667>`__: Add missing "
#~ "\"HAVE_FCHOWNAT\" symbol to posix._have_functions."

#~ msgid ""
#~ "`Issue #16499 <https://bugs.python.org/16499>`__: Add command line option "
#~ "for isolated mode."
#~ msgstr ""
#~ "`Issue #16499 <https://bugs.python.org/16499>`__: Add command line option "
#~ "for isolated mode."

#~ msgid ""
#~ "`Issue #15301 <https://bugs.python.org/15301>`__: Parsing fd, uid, and "
#~ "gid parameters for builtins in Modules/posixmodule.c is now far more "
#~ "robust."
#~ msgstr ""
#~ "`Issue #15301 <https://bugs.python.org/15301>`__: Parsing fd, uid, and "
#~ "gid parameters for builtins in Modules/posixmodule.c is now far more "
#~ "robust."

#~ msgid ""
#~ "`Issue #18368 <https://bugs.python.org/18368>`__: PyOS_StdioReadline() no "
#~ "longer leaks memory when realloc() fail."
#~ msgstr ""
#~ "`Issue #18368 <https://bugs.python.org/18368>`__: PyOS_StdioReadline() no "
#~ "longer leaks memory when realloc() fail."

#~ msgid ""
#~ "`Issue #17934 <https://bugs.python.org/17934>`__: Add a clear() method to "
#~ "frame objects, to help clean up expensive details (local variables) and "
#~ "break reference cycles."
#~ msgstr ""
#~ "`Issue #17934 <https://bugs.python.org/17934>`__: Add a clear() method to "
#~ "frame objects, to help clean up expensive details (local variables) and "
#~ "break reference cycles."

#~ msgid ""
#~ "`Issue #18780 <https://bugs.python.org/18780>`__: %-formatting codes %d, "
#~ "%i, and %u now treat int-subclasses as int (displays value of int-"
#~ "subclass instead of str(int-subclass) )."
#~ msgstr ""
#~ "`Issue #18780 <https://bugs.python.org/18780>`__: %-formatting codes %d, "
#~ "%i, and %u now treat int-subclasses as int (displays value of int-"
#~ "subclass instead of str(int-subclass) )."

#~ msgid ""
#~ "`Issue #18808 <https://bugs.python.org/18808>`__: Thread.join() now waits "
#~ "for the underlying thread state to be destroyed before returning.  This "
#~ "prevents unpredictable aborts in Py_EndInterpreter() when some non-daemon "
#~ "threads are still running."
#~ msgstr ""
#~ "`Issue #18808 <https://bugs.python.org/18808>`__: Thread.join() now waits "
#~ "for the underlying thread state to be destroyed before returning.  This "
#~ "prevents unpredictable aborts in Py_EndInterpreter() when some non-daemon "
#~ "threads are still running."

#~ msgid ""
#~ "`Issue #18458 <https://bugs.python.org/18458>`__: Prevent crashes with "
#~ "newer versions of libedit.  Its readline emulation has changed from 0-"
#~ "based indexing to 1-based like gnu readline."
#~ msgstr ""
#~ "`Issue #18458 <https://bugs.python.org/18458>`__: Prevent crashes with "
#~ "newer versions of libedit.  Its readline emulation has changed from 0-"
#~ "based indexing to 1-based like gnu readline."

#~ msgid ""
#~ "`Issue #18852 <https://bugs.python.org/18852>`__: Handle case of "
#~ "``readline.__doc__`` being ``None`` in the new readline activation code "
#~ "in ``site.py``."
#~ msgstr ""
#~ "`Issue #18852 <https://bugs.python.org/18852>`__: Handle case of "
#~ "``readline.__doc__`` being ``None`` in the new readline activation code "
#~ "in ``site.py``."

#~ msgid ""
#~ "`Issue #18672 <https://bugs.python.org/18672>`__: Fixed format specifiers "
#~ "for Py_ssize_t in debugging output in the _sre module."
#~ msgstr ""
#~ "`Issue #18672 <https://bugs.python.org/18672>`__: Fixed format specifiers "
#~ "for Py_ssize_t in debugging output in the _sre module."

#~ msgid ""
#~ "`Issue #18830 <https://bugs.python.org/18830>`__: inspect.getclasstree() "
#~ "no longer produces duplicate entries even when input list contains "
#~ "duplicates."
#~ msgstr ""
#~ "`Issue #18830 <https://bugs.python.org/18830>`__: inspect.getclasstree() "
#~ "no longer produces duplicate entries even when input list contains "
#~ "duplicates."

#~ msgid ""
#~ "`Issue #18878 <https://bugs.python.org/18878>`__: sunau.open now supports "
#~ "the context management protocol.  Based on patches by Claudiu Popa and R. "
#~ "David Murray."
#~ msgstr ""
#~ "`Issue #18878 <https://bugs.python.org/18878>`__: sunau.open now supports "
#~ "the context management protocol.  Based on patches by Claudiu Popa and R. "
#~ "David Murray."

#~ msgid ""
#~ "`Issue #18909 <https://bugs.python.org/18909>`__: Fix _tkinter.tkapp."
#~ "interpaddr() on Windows 64-bit, don't cast 64-bit pointer to long (32 "
#~ "bits)."
#~ msgstr ""
#~ "`Issue #18909 <https://bugs.python.org/18909>`__: Fix _tkinter.tkapp."
#~ "interpaddr() on Windows 64-bit, don't cast 64-bit pointer to long (32 "
#~ "bits)."

#~ msgid ""
#~ "`Issue #18876 <https://bugs.python.org/18876>`__: The FileIO.mode "
#~ "attribute now better reflects the actual mode under which the file was "
#~ "opened.  Patch by Erik Bray."
#~ msgstr ""
#~ "`Issue #18876 <https://bugs.python.org/18876>`__: The FileIO.mode "
#~ "attribute now better reflects the actual mode under which the file was "
#~ "opened.  Patch by Erik Bray."

#~ msgid ""
#~ "`Issue #16853 <https://bugs.python.org/16853>`__: Add new selectors "
#~ "module."
#~ msgstr ""
#~ "`Issue #16853 <https://bugs.python.org/16853>`__: Add new selectors "
#~ "module."

#~ msgid ""
#~ "`Issue #18882 <https://bugs.python.org/18882>`__: Add threading."
#~ "main_thread() function."
#~ msgstr ""
#~ "`Issue #18882 <https://bugs.python.org/18882>`__: Add threading."
#~ "main_thread() function."

#~ msgid ""
#~ "`Issue #18901 <https://bugs.python.org/18901>`__: The sunau getparams "
#~ "method now returns a namedtuple rather than a plain tuple.  Patch by "
#~ "Claudiu Popa."
#~ msgstr ""
#~ "`Issue #18901 <https://bugs.python.org/18901>`__: The sunau getparams "
#~ "method now returns a namedtuple rather than a plain tuple.  Patch by "
#~ "Claudiu Popa."

#~ msgid ""
#~ "`Issue #17487 <https://bugs.python.org/17487>`__: The result of the wave "
#~ "getparams method now is pickleable again. Patch by Claudiu Popa."
#~ msgstr ""
#~ "`Issue #17487 <https://bugs.python.org/17487>`__: The result of the wave "
#~ "getparams method now is pickleable again. Patch by Claudiu Popa."

#~ msgid ""
#~ "`Issue #18756 <https://bugs.python.org/18756>`__: os.urandom() now uses a "
#~ "lazily-opened persistent file descriptor, so as to avoid using many file "
#~ "descriptors when run in parallel from multiple threads."
#~ msgstr ""
#~ "`Issue #18756 <https://bugs.python.org/18756>`__: os.urandom() now uses a "
#~ "lazily-opened persistent file descriptor, so as to avoid using many file "
#~ "descriptors when run in parallel from multiple threads."

#~ msgid ""
#~ "`Issue #18418 <https://bugs.python.org/18418>`__: After fork(), reinit "
#~ "all threads states, not only active ones. Patch by A. Jesse Jiryu Davis."
#~ msgstr ""
#~ "`Issue #18418 <https://bugs.python.org/18418>`__: After fork(), reinit "
#~ "all threads states, not only active ones. Patch by A. Jesse Jiryu Davis."

#~ msgid ""
#~ "`Issue #17974 <https://bugs.python.org/17974>`__: Switch unittest from "
#~ "using getopt to using argparse."
#~ msgstr ""
#~ "`Issue #17974 <https://bugs.python.org/17974>`__: Switch unittest from "
#~ "using getopt to using argparse."

#~ msgid ""
#~ "`Issue #11798 <https://bugs.python.org/11798>`__: TestSuite now drops "
#~ "references to own tests after execution."
#~ msgstr ""
#~ "`Issue #11798 <https://bugs.python.org/11798>`__: TestSuite now drops "
#~ "references to own tests after execution."

#~ msgid ""
#~ "`Issue #16611 <https://bugs.python.org/16611>`__: http.cookie now "
#~ "correctly parses the 'secure' and 'httponly' cookie flags."
#~ msgstr ""
#~ "`Issue #16611 <https://bugs.python.org/16611>`__: http.cookie now "
#~ "correctly parses the 'secure' and 'httponly' cookie flags."

#~ msgid ""
#~ "`Issue #11973 <https://bugs.python.org/11973>`__: Fix a problem in "
#~ "kevent. The flags and fflags fields are now properly handled as unsigned."
#~ msgstr ""
#~ "`Issue #11973 <https://bugs.python.org/11973>`__: Fix a problem in "
#~ "kevent. The flags and fflags fields are now properly handled as unsigned."

#~ msgid ""
#~ "`Issue #18807 <https://bugs.python.org/18807>`__: ``pyvenv`` now takes a "
#~ "--copies argument allowing copies instead of symlinks even where symlinks "
#~ "are available and the default."
#~ msgstr ""
#~ "`Issue #18807 <https://bugs.python.org/18807>`__: ``pyvenv`` now takes a "
#~ "--copies argument allowing copies instead of symlinks even where symlinks "
#~ "are available and the default."

#~ msgid ""
#~ "`Issue #18538 <https://bugs.python.org/18538>`__: ``python -m dis`` now "
#~ "uses argparse for argument processing. Patch by Michele Orr√π."
#~ msgstr ""
#~ "`Issue #18538 <https://bugs.python.org/18538>`__: ``python -m dis`` now "
#~ "uses argparse for argument processing. Patch by Michele Orr√π."

#~ msgid ""
#~ "`Issue #18394 <https://bugs.python.org/18394>`__: Close cgi."
#~ "FieldStorage's optional file."
#~ msgstr ""
#~ "`Issue #18394 <https://bugs.python.org/18394>`__: Close cgi."
#~ "FieldStorage's optional file."

#~ msgid ""
#~ "`Issue #17702 <https://bugs.python.org/17702>`__: On error, os.environb "
#~ "now suppresses the exception context when raising a new KeyError with the "
#~ "original key."
#~ msgstr ""
#~ "`Issue #17702 <https://bugs.python.org/17702>`__: On error, os.environb "
#~ "now suppresses the exception context when raising a new KeyError with the "
#~ "original key."

#~ msgid ""
#~ "`Issue #16809 <https://bugs.python.org/16809>`__: Fixed some tkinter "
#~ "incompabilities with Tcl/Tk 8.6."
#~ msgstr ""
#~ "`Issue #16809 <https://bugs.python.org/16809>`__: Fixed some tkinter "
#~ "incompabilities with Tcl/Tk 8.6."

#~ msgid ""
#~ "`Issue #16809 <https://bugs.python.org/16809>`__: Tkinter's splitlist() "
#~ "and split() methods now accept Tcl_Obj argument."
#~ msgstr ""
#~ "`Issue #16809 <https://bugs.python.org/16809>`__: Tkinter's splitlist() "
#~ "and split() methods now accept Tcl_Obj argument."

#~ msgid ""
#~ "`Issue #17211 <https://bugs.python.org/17211>`__: Yield a namedtuple in "
#~ "pkgutil. Patch by Ramchandra Apte."
#~ msgstr ""
#~ "`Issue #17211 <https://bugs.python.org/17211>`__: Yield a namedtuple in "
#~ "pkgutil. Patch by Ramchandra Apte."

#~ msgid ""
#~ "`Issue #18324 <https://bugs.python.org/18324>`__: set_payload now "
#~ "correctly handles binary input.  This also supersedes the previous fixes "
#~ "for #14360, #1717, and #16564."
#~ msgstr ""
#~ "`Issue #18324 <https://bugs.python.org/18324>`__: set_payload now "
#~ "correctly handles binary input.  This also supersedes the previous fixes "
#~ "for #14360, #1717, and #16564."

#~ msgid ""
#~ "`Issue #18794 <https://bugs.python.org/18794>`__: Add a fileno() method "
#~ "and a closed attribute to select.devpoll objects."
#~ msgstr ""
#~ "`Issue #18794 <https://bugs.python.org/18794>`__: Add a fileno() method "
#~ "and a closed attribute to select.devpoll objects."

#~ msgid ""
#~ "`Issue #17119 <https://bugs.python.org/17119>`__: Fixed integer overflows "
#~ "when processing large strings and tuples in the tkinter module."
#~ msgstr ""
#~ "`Issue #17119 <https://bugs.python.org/17119>`__: Fixed integer overflows "
#~ "when processing large strings and tuples in the tkinter module."

#~ msgid ""
#~ "`Issue #15352 <https://bugs.python.org/15352>`__: Rebuild frozen modules "
#~ "when marshal.c is changed."
#~ msgstr ""
#~ "`Issue #15352 <https://bugs.python.org/15352>`__: Rebuild frozen modules "
#~ "when marshal.c is changed."

#~ msgid ""
#~ "`Issue #18747 <https://bugs.python.org/18747>`__: Re-seed OpenSSL's "
#~ "pseudo-random number generator after fork. A pthread_atfork() parent "
#~ "handler is used to seed the PRNG with pid, time and some stack data."
#~ msgstr ""
#~ "`Issue #18747 <https://bugs.python.org/18747>`__: Re-seed OpenSSL's "
#~ "pseudo-random number generator after fork. A pthread_atfork() parent "
#~ "handler is used to seed the PRNG with pid, time and some stack data."

#~ msgid ""
#~ "`Issue #8865 <https://bugs.python.org/8865>`__: Concurrent invocation of "
#~ "select.poll.poll() now raises a RuntimeError exception.  Patch by "
#~ "Christian Schubert."
#~ msgstr ""
#~ "`Issue #8865 <https://bugs.python.org/8865>`__: Concurrent invocation of "
#~ "select.poll.poll() now raises a RuntimeError exception.  Patch by "
#~ "Christian Schubert."

#~ msgid ""
#~ "`Issue #18777 <https://bugs.python.org/18777>`__: The ssl module now uses "
#~ "the new CRYPTO_THREADID API of OpenSSL 1.0.0+ instead of the deprecated "
#~ "CRYPTO id callback function."
#~ msgstr ""
#~ "`Issue #18777 <https://bugs.python.org/18777>`__: The ssl module now uses "
#~ "the new CRYPTO_THREADID API of OpenSSL 1.0.0+ instead of the deprecated "
#~ "CRYPTO id callback function."

#~ msgid ""
#~ "`Issue #18768 <https://bugs.python.org/18768>`__: Correct doc string of "
#~ "RAND_edg(). Patch by Vajrasky Kok."
#~ msgstr ""
#~ "`Issue #18768 <https://bugs.python.org/18768>`__: Correct doc string of "
#~ "RAND_edg(). Patch by Vajrasky Kok."

#~ msgid ""
#~ "`Issue #18178 <https://bugs.python.org/18178>`__: Fix ctypes on BSD. "
#~ "dlmalloc.c was compiled twice which broke malloc weak symbols."
#~ msgstr ""
#~ "`Issue #18178 <https://bugs.python.org/18178>`__: Fix ctypes on BSD. "
#~ "dlmalloc.c was compiled twice which broke malloc weak symbols."

#~ msgid ""
#~ "`Issue #18709 <https://bugs.python.org/18709>`__: Fix CVE-2013-4238. The "
#~ "SSL module now handles NULL bytes inside subjectAltName correctly. "
#~ "Formerly the module has used OpenSSL's GENERAL_NAME_print() function to "
#~ "get the string representation of ASN.1 strings for ``rfc822Name`` "
#~ "(email), ``dNSName`` (DNS) and ``uniformResourceIdentifier`` (URI)."
#~ msgstr ""
#~ "`Issue #18709 <https://bugs.python.org/18709>`__: Fix CVE-2013-4238. The "
#~ "SSL module now handles NULL bytes inside subjectAltName correctly. "
#~ "Formerly the module has used OpenSSL's GENERAL_NAME_print() function to "
#~ "get the string representation of ASN.1 strings for ``rfc822Name`` "
#~ "(email), ``dNSName`` (DNS) and ``uniformResourceIdentifier`` (URI)."

#~ msgid ""
#~ "`Issue #18701 <https://bugs.python.org/18701>`__: Remove support of old "
#~ "CPython versions (<3.0) from C code."
#~ msgstr ""
#~ "`Issue #18701 <https://bugs.python.org/18701>`__: Remove support of old "
#~ "CPython versions (<3.0) from C code."

#~ msgid ""
#~ "`Issue #18756 <https://bugs.python.org/18756>`__: Improve error reporting "
#~ "in os.urandom() when the failure is due to something else than /dev/"
#~ "urandom not existing (for example, exhausting the file descriptor limit)."
#~ msgstr ""
#~ "`Issue #18756 <https://bugs.python.org/18756>`__: Improve error reporting "
#~ "in os.urandom() when the failure is due to something else than /dev/"
#~ "urandom not existing (for example, exhausting the file descriptor limit)."

#~ msgid ""
#~ "`Issue #18673 <https://bugs.python.org/18673>`__: Add O_TMPFILE to os "
#~ "module. O_TMPFILE requires Linux kernel 3.11 or newer. It's only defined "
#~ "on system with 3.11 uapi headers, too."
#~ msgstr ""
#~ "`Issue #18673 <https://bugs.python.org/18673>`__: Add O_TMPFILE to os "
#~ "module. O_TMPFILE requires Linux kernel 3.11 or newer. It's only defined "
#~ "on system with 3.11 uapi headers, too."

#~ msgid ""
#~ "`Issue #18532 <https://bugs.python.org/18532>`__: Change the builtin hash "
#~ "algorithms' names to lower case names as promised by hashlib's "
#~ "documentation."
#~ msgstr ""
#~ "`Issue #18532 <https://bugs.python.org/18532>`__: Change the builtin hash "
#~ "algorithms' names to lower case names as promised by hashlib's "
#~ "documentation."

#~ msgid ""
#~ "`Issue #8713 <https://bugs.python.org/8713>`__: add new spwan and "
#~ "forkserver start methods, and new functions get_all_start_methods, "
#~ "get_start_method, and set_start_method, to multiprocessing."
#~ msgstr ""
#~ "`Issue #8713 <https://bugs.python.org/8713>`__: add new spwan and "
#~ "forkserver start methods, and new functions get_all_start_methods, "
#~ "get_start_method, and set_start_method, to multiprocessing."

#~ msgid ""
#~ "`Issue #18405 <https://bugs.python.org/18405>`__: Improve the entropy of "
#~ "crypt.mksalt()."
#~ msgstr ""
#~ "`Issue #18405 <https://bugs.python.org/18405>`__: Improve the entropy of "
#~ "crypt.mksalt()."

#~ msgid ""
#~ "`Issue #12015 <https://bugs.python.org/12015>`__: The tempfile module now "
#~ "uses a suffix of 8 random characters instead of 6, to reduce the risk of "
#~ "filename collision. The entropy was reduced when uppercase letters were "
#~ "removed from the charset used to generate random characters."
#~ msgstr ""
#~ "`Issue #12015 <https://bugs.python.org/12015>`__: The tempfile module now "
#~ "uses a suffix of 8 random characters instead of 6, to reduce the risk of "
#~ "filename collision. The entropy was reduced when uppercase letters were "
#~ "removed from the charset used to generate random characters."

#~ msgid ""
#~ "`Issue #18585 <https://bugs.python.org/18585>`__: Add :func:`textwrap."
#~ "shorten` to collapse and truncate a piece of text to a given length."
#~ msgstr ""
#~ "`Issue #18585 <https://bugs.python.org/18585>`__: Add :func:`textwrap."
#~ "shorten` to collapse and truncate a piece of text to a given length."

#~ msgid ""
#~ "`Issue #18598 <https://bugs.python.org/18598>`__: Tweak exception message "
#~ "for importlib.import_module() to include the module name when a key "
#~ "argument is missing."
#~ msgstr ""
#~ "`Issue #18598 <https://bugs.python.org/18598>`__: Tweak exception message "
#~ "for importlib.import_module() to include the module name when a key "
#~ "argument is missing."

#~ msgid ""
#~ "`Issue #19151 <https://bugs.python.org/19151>`__: Fix docstring and use "
#~ "of _get_supported_file_loaders() to reflect 2-tuples."
#~ msgstr ""
#~ "`Issue #19151 <https://bugs.python.org/19151>`__: Fix docstring and use "
#~ "of _get_supported_file_loaders() to reflect 2-tuples."

#~ msgid ""
#~ "`Issue #19152 <https://bugs.python.org/19152>`__: Add ExtensionFileLoader."
#~ "get_filename()."
#~ msgstr ""
#~ "`Issue #19152 <https://bugs.python.org/19152>`__: Add ExtensionFileLoader."
#~ "get_filename()."

#~ msgid ""
#~ "`Issue #18676 <https://bugs.python.org/18676>`__: Change 'positive' to "
#~ "'non-negative' in queue.py put and get docstrings and ValueError "
#~ "messages. Patch by Zhongyue Luo"
#~ msgstr ""
#~ "`Issue #18676 <https://bugs.python.org/18676>`__: Change 'positive' to "
#~ "'non-negative' in queue.py put and get docstrings and ValueError "
#~ "messages. Patch by Zhongyue Luo"

#~ msgid ""
#~ "`Issue #8112 <https://bugs.python.org/8112>`__: xlmrpc.server's "
#~ "DocXMLRPCServer server no longer raises an error if methods have "
#~ "annotations; it now correctly displays the annotations."
#~ msgstr ""
#~ "`Issue #8112 <https://bugs.python.org/8112>`__: xlmrpc.server's "
#~ "DocXMLRPCServer server no longer raises an error if methods have "
#~ "annotations; it now correctly displays the annotations."

#~ msgid ""
#~ "`Issue #18600 <https://bugs.python.org/18600>`__: Added policy argument "
#~ "to email.message.Message.as_string, and as_bytes and __bytes__ methods to "
#~ "Message."
#~ msgstr ""
#~ "`Issue #18600 <https://bugs.python.org/18600>`__: Added policy argument "
#~ "to email.message.Message.as_string, and as_bytes and __bytes__ methods to "
#~ "Message."

#~ msgid ""
#~ "`Issue #18671 <https://bugs.python.org/18671>`__: Output more information "
#~ "when logging exceptions occur."
#~ msgstr ""
#~ "`Issue #18671 <https://bugs.python.org/18671>`__: Output more information "
#~ "when logging exceptions occur."

#~ msgid ""
#~ "`Issue #18621 <https://bugs.python.org/18621>`__: Prevent the site "
#~ "module's patched builtins from keeping too many references alive for too "
#~ "long."
#~ msgstr ""
#~ "`Issue #18621 <https://bugs.python.org/18621>`__: Prevent the site "
#~ "module's patched builtins from keeping too many references alive for too "
#~ "long."

#~ msgid ""
#~ "`Issue #4885 <https://bugs.python.org/4885>`__: Add weakref support to "
#~ "mmap objects.  Patch by Valerie Lambert."
#~ msgstr ""
#~ "`Issue #4885 <https://bugs.python.org/4885>`__: Add weakref support to "
#~ "mmap objects.  Patch by Valerie Lambert."

#~ msgid ""
#~ "`Issue #8860 <https://bugs.python.org/8860>`__: Fixed rounding in "
#~ "timedelta constructor."
#~ msgstr ""
#~ "`Issue #8860 <https://bugs.python.org/8860>`__: Fixed rounding in "
#~ "timedelta constructor."

#~ msgid ""
#~ "`Issue #18849 <https://bugs.python.org/18849>`__: Fixed a Windows-"
#~ "specific tempfile bug where collision with an existing directory caused "
#~ "mkstemp and related APIs to fail instead of retrying. Report and fix by "
#~ "Vlad Shcherbina."
#~ msgstr ""
#~ "`Issue #18849 <https://bugs.python.org/18849>`__: Fixed a Windows-"
#~ "specific tempfile bug where collision with an existing directory caused "
#~ "mkstemp and related APIs to fail instead of retrying. Report and fix by "
#~ "Vlad Shcherbina."

#~ msgid ""
#~ "`Issue #18920 <https://bugs.python.org/18920>`__: argparse's default "
#~ "destination for the version action (-v, --version) has also been changed "
#~ "to stdout, to match the Python executable."
#~ msgstr ""
#~ "`Issue #18920 <https://bugs.python.org/18920>`__: argparse's default "
#~ "destination for the version action (-v, --version) has also been changed "
#~ "to stdout, to match the Python executable."

#~ msgid ""
#~ "`Issue #18623 <https://bugs.python.org/18623>`__: Factor out the "
#~ "_SuppressCoreFiles context manager into test.support.  Patch by Valerie "
#~ "Lambert."
#~ msgstr ""
#~ "`Issue #18623 <https://bugs.python.org/18623>`__: Factor out the "
#~ "_SuppressCoreFiles context manager into test.support.  Patch by Valerie "
#~ "Lambert."

#~ msgid ""
#~ "`Issue #12037 <https://bugs.python.org/12037>`__: Fix test_email for "
#~ "desktop Windows."
#~ msgstr ""
#~ "`Issue #12037 <https://bugs.python.org/12037>`__: Fix test_email for "
#~ "desktop Windows."

#~ msgid ""
#~ "`Issue #15507 <https://bugs.python.org/15507>`__: test_subprocess's "
#~ "test_send_signal could fail if the test runner were run in an environment "
#~ "where the process inherited an ignore setting for SIGINT.  Restore the "
#~ "SIGINT handler to the desired KeyboardInterrupt raising one during that "
#~ "test."
#~ msgstr ""
#~ "`Issue #15507 <https://bugs.python.org/15507>`__: test_subprocess's "
#~ "test_send_signal could fail if the test runner were run in an environment "
#~ "where the process inherited an ignore setting for SIGINT.  Restore the "
#~ "SIGINT handler to the desired KeyboardInterrupt raising one during that "
#~ "test."

#~ msgid ""
#~ "`Issue #16799 <https://bugs.python.org/16799>`__: Switched from getopt to "
#~ "argparse style in regrtest's argument parsing.  Added more tests for "
#~ "regrtest's argument parsing."
#~ msgstr ""
#~ "`Issue #16799 <https://bugs.python.org/16799>`__: Switched from getopt to "
#~ "argparse style in regrtest's argument parsing.  Added more tests for "
#~ "regrtest's argument parsing."

#~ msgid ""
#~ "`Issue #18792 <https://bugs.python.org/18792>`__: Use \"127.0.0.1\" or "
#~ "\"::1\" instead of \"localhost\" as much as possible, since \"localhost\" "
#~ "goes through a DNS lookup under recent Windows versions."
#~ msgstr ""
#~ "`Issue #18792 <https://bugs.python.org/18792>`__: Use \"127.0.0.1\" or "
#~ "\"::1\" instead of \"localhost\" as much as possible, since \"localhost\" "
#~ "goes through a DNS lookup under recent Windows versions."

#~ msgid ""
#~ "`Issue #18489 <https://bugs.python.org/18489>`__: Add tests for "
#~ "SearchEngine. Original patch by Phil Webster."
#~ msgstr ""
#~ "`Issue #18489 <https://bugs.python.org/18489>`__: Add tests for "
#~ "SearchEngine. Original patch by Phil Webster."

#~ msgid ""
#~ "`Issue #18743 <https://bugs.python.org/18743>`__: Fix references to non-"
#~ "existent \"StringIO\" module."
#~ msgstr ""
#~ "`Issue #18743 <https://bugs.python.org/18743>`__: Fix references to non-"
#~ "existent \"StringIO\" module."

#~ msgid ""
#~ "`Issue #18783 <https://bugs.python.org/18783>`__: Removed existing "
#~ "mentions of Python long type in docstrings, error messages and comments."
#~ msgstr ""
#~ "`Issue #18783 <https://bugs.python.org/18783>`__: Removed existing "
#~ "mentions of Python long type in docstrings, error messages and comments."

#~ msgid ""
#~ "`Issue #1584 <https://bugs.python.org/1584>`__: Provide configure options "
#~ "to override default search paths for Tcl and Tk when building _tkinter."
#~ msgstr ""
#~ "`Issue #1584 <https://bugs.python.org/1584>`__: Provide configure options "
#~ "to override default search paths for Tcl and Tk when building _tkinter."

#~ msgid ""
#~ "`Issue #15663 <https://bugs.python.org/15663>`__: Tcl/Tk 8.5.14 is now "
#~ "included with the OS X 10.6+ 64-/32-bit installer.  It is no longer "
#~ "necessary to install a third-party version of Tcl/Tk 8.5 to work around "
#~ "the problems in the Apple-supplied Tcl/Tk 8.5 shipped in OS X 10.6 and "
#~ "later releases."
#~ msgstr ""
#~ "`Issue #15663 <https://bugs.python.org/15663>`__: Tcl/Tk 8.5.14 is now "
#~ "included with the OS X 10.6+ 64-/32-bit installer.  It is no longer "
#~ "necessary to install a third-party version of Tcl/Tk 8.5 to work around "
#~ "the problems in the Apple-supplied Tcl/Tk 8.5 shipped in OS X 10.6 and "
#~ "later releases."

#~ msgid ""
#~ "`Issue #18922 <https://bugs.python.org/18922>`__: Now The Lib/smtpd.py "
#~ "and Tools/i18n/msgfmt.py scripts write their version strings to stdout, "
#~ "and not to sderr."
#~ msgstr ""
#~ "`Issue #18922 <https://bugs.python.org/18922>`__: Now The Lib/smtpd.py "
#~ "and Tools/i18n/msgfmt.py scripts write their version strings to stdout, "
#~ "and not to sderr."

#~ msgid "Python 3.4.0 Alpha 1"
#~ msgstr "Python 3.4.0 Alpha 1"

#~ msgid "Release date: 2013-08-03"
#~ msgstr "Date de sortie¬†: 2013-08-03"

#~ msgid ""
#~ "`Issue #16741 <https://bugs.python.org/16741>`__: Fix an error reporting "
#~ "in int()."
#~ msgstr ""
#~ "`Issue #16741 <https://bugs.python.org/16741>`__: Fix an error reporting "
#~ "in int()."

#~ msgid ""
#~ "`Issue #17899 <https://bugs.python.org/17899>`__: Fix rare file "
#~ "descriptor leak in os.listdir()."
#~ msgstr ""
#~ "`Issue #17899 <https://bugs.python.org/17899>`__: Fix rare file "
#~ "descriptor leak in os.listdir()."

#~ msgid ""
#~ "`Issue #10241 <https://bugs.python.org/10241>`__: Clear extension module "
#~ "dict copies at interpreter shutdown. Patch by Neil Schemenauer, minimally "
#~ "modified."
#~ msgstr ""
#~ "`Issue #10241 <https://bugs.python.org/10241>`__: Clear extension module "
#~ "dict copies at interpreter shutdown. Patch by Neil Schemenauer, minimally "
#~ "modified."

#~ msgid ""
#~ "`Issue #9035 <https://bugs.python.org/9035>`__: ismount now recognises "
#~ "volumes mounted below a drive root on Windows. Original patch by Atsuo "
#~ "Ishimoto."
#~ msgstr ""
#~ "`Issue #9035 <https://bugs.python.org/9035>`__: ismount now recognises "
#~ "volumes mounted below a drive root on Windows. Original patch by Atsuo "
#~ "Ishimoto."

#~ msgid ""
#~ "`Issue #18214 <https://bugs.python.org/18214>`__: Improve finalization of "
#~ "Python modules to avoid setting their globals to None, in most cases."
#~ msgstr ""
#~ "`Issue #18214 <https://bugs.python.org/18214>`__: Improve finalization of "
#~ "Python modules to avoid setting their globals to None, in most cases."

#~ msgid ""
#~ "`Issue #18112 <https://bugs.python.org/18112>`__: PEP 442 implementation "
#~ "(safe object finalization)."
#~ msgstr ""
#~ "`Issue #18112 <https://bugs.python.org/18112>`__: PEP 442 implementation "
#~ "(safe object finalization)."

#~ msgid ""
#~ "`Issue #18552 <https://bugs.python.org/18552>`__: Check return value of "
#~ "PyArena_AddPyObject() in obj2ast_object()."
#~ msgstr ""
#~ "`Issue #18552 <https://bugs.python.org/18552>`__: Check return value of "
#~ "PyArena_AddPyObject() in obj2ast_object()."

#~ msgid ""
#~ "`Issue #18560 <https://bugs.python.org/18560>`__: Fix potential NULL "
#~ "pointer dereference in sum()."
#~ msgstr ""
#~ "`Issue #18560 <https://bugs.python.org/18560>`__: Fix potential NULL "
#~ "pointer dereference in sum()."

#~ msgid ""
#~ "`Issue #18520 <https://bugs.python.org/18520>`__: Add a new "
#~ "PyStructSequence_InitType2() function, same than "
#~ "PyStructSequence_InitType() except that it has a return value (0 on "
#~ "success, -1 on error)."
#~ msgstr ""
#~ "`Issue #18520 <https://bugs.python.org/18520>`__: Add a new "
#~ "PyStructSequence_InitType2() function, same than "
#~ "PyStructSequence_InitType() except that it has a return value (0 on "
#~ "success, -1 on error)."

#~ msgid ""
#~ "`Issue #15905 <https://bugs.python.org/15905>`__: Fix theoretical buffer "
#~ "overflow in handling of sys.argv[0], prefix and exec_prefix if the "
#~ "operation system does not obey MAXPATHLEN."
#~ msgstr ""
#~ "`Issue #15905 <https://bugs.python.org/15905>`__: Fix theoretical buffer "
#~ "overflow in handling of sys.argv[0], prefix and exec_prefix if the "
#~ "operation system does not obey MAXPATHLEN."

#~ msgid ""
#~ "`Issue #18408 <https://bugs.python.org/18408>`__: Fix many various bugs "
#~ "in code handling errors, especially on memory allocation failure "
#~ "(MemoryError)."
#~ msgstr ""
#~ "`Issue #18408 <https://bugs.python.org/18408>`__: Fix many various bugs "
#~ "in code handling errors, especially on memory allocation failure "
#~ "(MemoryError)."

#~ msgid ""
#~ "`Issue #18344 <https://bugs.python.org/18344>`__: Fix potential ref-leaks "
#~ "in _bufferedreader_read_all()."
#~ msgstr ""
#~ "`Issue #18344 <https://bugs.python.org/18344>`__: Fix potential ref-leaks "
#~ "in _bufferedreader_read_all()."

#~ msgid ""
#~ "`Issue #18342 <https://bugs.python.org/18342>`__: Use the repr of a "
#~ "module name when an import fails when using ``from ... import ...``."
#~ msgstr ""
#~ "`Issue #18342 <https://bugs.python.org/18342>`__: Use the repr of a "
#~ "module name when an import fails when using ``from ... import ...``."

#~ msgid ""
#~ "`Issue #17872 <https://bugs.python.org/17872>`__: Fix a segfault in "
#~ "marshal.load() when input stream returns more bytes than requested."
#~ msgstr ""
#~ "`Issue #17872 <https://bugs.python.org/17872>`__: Fix a segfault in "
#~ "marshal.load() when input stream returns more bytes than requested."

#~ msgid ""
#~ "`Issue #18338 <https://bugs.python.org/18338>`__: `python --version` now "
#~ "prints version string to stdout, and not to stderr.  Patch by Berker "
#~ "Peksag and Michael Dickens."
#~ msgstr ""
#~ "`Issue #18338 <https://bugs.python.org/18338>`__: `python --version` now "
#~ "prints version string to stdout, and not to stderr.  Patch by Berker "
#~ "Peksag and Michael Dickens."

#~ msgid ""
#~ "`Issue #18426 <https://bugs.python.org/18426>`__: Fix NULL pointer "
#~ "dereference in C extension import when PyModule_GetDef() returns an error."
#~ msgstr ""
#~ "`Issue #18426 <https://bugs.python.org/18426>`__: Fix NULL pointer "
#~ "dereference in C extension import when PyModule_GetDef() returns an error."

#~ msgid ""
#~ "`Issue #17206 <https://bugs.python.org/17206>`__: On Windows, increase "
#~ "the stack size from 2 MB to 4.2 MB to fix a stack overflow in the marshal "
#~ "module (fix a crash in test_marshal). Patch written by Jeremy Kloth."
#~ msgstr ""
#~ "`Issue #17206 <https://bugs.python.org/17206>`__: On Windows, increase "
#~ "the stack size from 2 MB to 4.2 MB to fix a stack overflow in the marshal "
#~ "module (fix a crash in test_marshal). Patch written by Jeremy Kloth."

#~ msgid ""
#~ "`Issue #3329 <https://bugs.python.org/3329>`__: Implement the PEP 445: "
#~ "Add new APIs to customize Python memory allocators."
#~ msgstr ""
#~ "`Issue #3329 <https://bugs.python.org/3329>`__: Implement the PEP 445: "
#~ "Add new APIs to customize Python memory allocators."

#~ msgid ""
#~ "`Issue #18328 <https://bugs.python.org/18328>`__: Reorder ops in "
#~ "PyThreadState_Delete*() functions. Now the tstate is first removed from "
#~ "TLS and then deallocated."
#~ msgstr ""
#~ "`Issue #18328 <https://bugs.python.org/18328>`__: Reorder ops in "
#~ "PyThreadState_Delete*() functions. Now the tstate is first removed from "
#~ "TLS and then deallocated."

#~ msgid ""
#~ "`Issue #13483 <https://bugs.python.org/13483>`__: Use VirtualAlloc in "
#~ "obmalloc on Windows."
#~ msgstr ""
#~ "`Issue #13483 <https://bugs.python.org/13483>`__: Use VirtualAlloc in "
#~ "obmalloc on Windows."

#~ msgid ""
#~ "`Issue #18184 <https://bugs.python.org/18184>`__: PyUnicode_FromFormat() "
#~ "and PyUnicode_FromFormatV() now raise OverflowError when an argument of "
#~ "%c format is out of range."
#~ msgstr ""
#~ "`Issue #18184 <https://bugs.python.org/18184>`__: PyUnicode_FromFormat() "
#~ "and PyUnicode_FromFormatV() now raise OverflowError when an argument of "
#~ "%c format is out of range."

#~ msgid ""
#~ "`Issue #18111 <https://bugs.python.org/18111>`__: The min() and max() "
#~ "functions now support a default argument to be returned instead of "
#~ "raising a ValueError on an empty sequence. (Contributed by Julian Berman.)"
#~ msgstr ""
#~ "`Issue #18111 <https://bugs.python.org/18111>`__: The min() and max() "
#~ "functions now support a default argument to be returned instead of "
#~ "raising a ValueError on an empty sequence. (Contributed by Julian Berman.)"

#~ msgid ""
#~ "`Issue #18137 <https://bugs.python.org/18137>`__: Detect integer overflow "
#~ "on precision in float.__format__() and complex.__format__()."
#~ msgstr ""
#~ "`Issue #18137 <https://bugs.python.org/18137>`__: Detect integer overflow "
#~ "on precision in float.__format__() and complex.__format__()."

#~ msgid ""
#~ "`Issue #15767 <https://bugs.python.org/15767>`__: Introduce "
#~ "ModuleNotFoundError which is raised when a module could not be found."
#~ msgstr ""
#~ "`Issue #15767 <https://bugs.python.org/15767>`__: Introduce "
#~ "ModuleNotFoundError which is raised when a module could not be found."

#~ msgid ""
#~ "`Issue #18183 <https://bugs.python.org/18183>`__: Fix various unicode "
#~ "operations on strings with large unicode codepoints."
#~ msgstr ""
#~ "`Issue #18183 <https://bugs.python.org/18183>`__: Fix various unicode "
#~ "operations on strings with large unicode codepoints."

#~ msgid ""
#~ "`Issue #18180 <https://bugs.python.org/18180>`__: Fix ref leak in "
#~ "_PyImport_GetDynLoadWindows()."
#~ msgstr ""
#~ "`Issue #18180 <https://bugs.python.org/18180>`__: Fix ref leak in "
#~ "_PyImport_GetDynLoadWindows()."

#~ msgid ""
#~ "`Issue #18038 <https://bugs.python.org/18038>`__: SyntaxError raised "
#~ "during compilation sources with illegal encoding now always contains an "
#~ "encoding name."
#~ msgstr ""
#~ "`Issue #18038 <https://bugs.python.org/18038>`__: SyntaxError raised "
#~ "during compilation sources with illegal encoding now always contains an "
#~ "encoding name."

#~ msgid ""
#~ "`Issue #17931 <https://bugs.python.org/17931>`__: Resolve confusion on "
#~ "Windows between pids and process handles."
#~ msgstr ""
#~ "`Issue #17931 <https://bugs.python.org/17931>`__: Resolve confusion on "
#~ "Windows between pids and process handles."

#~ msgid ""
#~ "`Issue #17932 <https://bugs.python.org/17932>`__: Fix an integer overflow "
#~ "issue on Windows 64-bit in iterators: change the C type of seqiterobject."
#~ "it_index from long to Py_ssize_t."
#~ msgstr ""
#~ "`Issue #17932 <https://bugs.python.org/17932>`__: Fix an integer overflow "
#~ "issue on Windows 64-bit in iterators: change the C type of seqiterobject."
#~ "it_index from long to Py_ssize_t."

#~ msgid ""
#~ "`Issue #18065 <https://bugs.python.org/18065>`__: Don't set __path__ to "
#~ "the package name for frozen packages."
#~ msgstr ""
#~ "`Issue #18065 <https://bugs.python.org/18065>`__: Don't set __path__ to "
#~ "the package name for frozen packages."

#~ msgid ""
#~ "`Issue #18088 <https://bugs.python.org/18088>`__: When reloading a "
#~ "module, unconditionally reset all relevant attributes on the module (e.g. "
#~ "__name__, __loader__, __package__, __file__, __cached__)."
#~ msgstr ""
#~ "`Issue #18088 <https://bugs.python.org/18088>`__: When reloading a "
#~ "module, unconditionally reset all relevant attributes on the module (e.g. "
#~ "__name__, __loader__, __package__, __file__, __cached__)."

#~ msgid ""
#~ "`Issue #17937 <https://bugs.python.org/17937>`__: Try harder to collect "
#~ "cyclic garbage at shutdown."
#~ msgstr ""
#~ "`Issue #17937 <https://bugs.python.org/17937>`__: Try harder to collect "
#~ "cyclic garbage at shutdown."

#~ msgid ""
#~ "`Issue #12370 <https://bugs.python.org/12370>`__: Prevent class bodies "
#~ "from interfering with the __class__ closure."
#~ msgstr ""
#~ "`Issue #12370 <https://bugs.python.org/12370>`__: Prevent class bodies "
#~ "from interfering with the __class__ closure."

#~ msgid ""
#~ "`Issue #17237 <https://bugs.python.org/17237>`__: Fix crash in the ASCII "
#~ "decoder on m68k."
#~ msgstr ""
#~ "`Issue #17237 <https://bugs.python.org/17237>`__: Fix crash in the ASCII "
#~ "decoder on m68k."

#~ msgid ""
#~ "`Issue #17927 <https://bugs.python.org/17927>`__: Frame objects kept "
#~ "arguments alive if they had been copied into a cell, even if the cell was "
#~ "cleared."
#~ msgstr ""
#~ "`Issue #17927 <https://bugs.python.org/17927>`__: Frame objects kept "
#~ "arguments alive if they had been copied into a cell, even if the cell was "
#~ "cleared."

#~ msgid ""
#~ "`Issue #1545463 <https://bugs.python.org/1545463>`__: At shutdown, defer "
#~ "finalization of codec modules so that stderr remains usable."
#~ msgstr ""
#~ "`Issue #1545463 <https://bugs.python.org/1545463>`__: At shutdown, defer "
#~ "finalization of codec modules so that stderr remains usable."

#~ msgid ""
#~ "`Issue #7330 <https://bugs.python.org/7330>`__: Implement width and "
#~ "precision (ex: \"%5.3s\") for the format string of PyUnicode_FromFormat() "
#~ "function, original patch written by Ysj Ray."
#~ msgstr ""
#~ "`Issue #7330 <https://bugs.python.org/7330>`__: Implement width and "
#~ "precision (ex: \"%5.3s\") for the format string of PyUnicode_FromFormat() "
#~ "function, original patch written by Ysj Ray."

#~ msgid ""
#~ "`Issue #1545463 <https://bugs.python.org/1545463>`__: Global variables "
#~ "caught in reference cycles are now garbage-collected at shutdown."
#~ msgstr ""
#~ "`Issue #1545463 <https://bugs.python.org/1545463>`__: Global variables "
#~ "caught in reference cycles are now garbage-collected at shutdown."

#~ msgid ""
#~ "`Issue #17094 <https://bugs.python.org/17094>`__: Clear stale thread "
#~ "states after fork().  Note that this is a potentially disruptive change "
#~ "since it may release some system resources which would otherwise remain "
#~ "perpetually alive (e.g. database connections kept in thread-local "
#~ "storage)."
#~ msgstr ""
#~ "`Issue #17094 <https://bugs.python.org/17094>`__: Clear stale thread "
#~ "states after fork().  Note that this is a potentially disruptive change "
#~ "since it may release some system resources which would otherwise remain "
#~ "perpetually alive (e.g. database connections kept in thread-local "
#~ "storage)."

#~ msgid ""
#~ "`Issue #17408 <https://bugs.python.org/17408>`__: Avoid using an obsolete "
#~ "instance of the copyreg module when the interpreter is shutdown and then "
#~ "started again."
#~ msgstr ""
#~ "`Issue #17408 <https://bugs.python.org/17408>`__: Avoid using an obsolete "
#~ "instance of the copyreg module when the interpreter is shutdown and then "
#~ "started again."

#~ msgid ""
#~ "`Issue #5845 <https://bugs.python.org/5845>`__: Enable tab-completion in "
#~ "the interactive interpreter by default, thanks to a new sys."
#~ "__interactivehook__."
#~ msgstr ""
#~ "`Issue #5845 <https://bugs.python.org/5845>`__: Enable tab-completion in "
#~ "the interactive interpreter by default, thanks to a new sys."
#~ "__interactivehook__."

#~ msgid ""
#~ "`Issue #17115 <https://bugs.python.org/17115>`__,17116: Module "
#~ "initialization now includes setting __package__ and __loader__ attributes "
#~ "to None."
#~ msgstr ""
#~ "`Issue #17115 <https://bugs.python.org/17115>`__,17116: Module "
#~ "initialization now includes setting __package__ and __loader__ attributes "
#~ "to None."

#~ msgid ""
#~ "`Issue #17853 <https://bugs.python.org/17853>`__: Ensure locals of a "
#~ "class that shadow free variables always win over the closures."
#~ msgstr ""
#~ "`Issue #17853 <https://bugs.python.org/17853>`__: Ensure locals of a "
#~ "class that shadow free variables always win over the closures."

#~ msgid ""
#~ "`Issue #17863 <https://bugs.python.org/17863>`__: In the interactive "
#~ "console, don't loop forever if the encoding can't be fetched from stdin."
#~ msgstr ""
#~ "`Issue #17863 <https://bugs.python.org/17863>`__: In the interactive "
#~ "console, don't loop forever if the encoding can't be fetched from stdin."

#~ msgid ""
#~ "`Issue #17867 <https://bugs.python.org/17867>`__: Raise an ImportError if "
#~ "__import__ is not found in __builtins__."
#~ msgstr ""
#~ "`Issue #17867 <https://bugs.python.org/17867>`__: Raise an ImportError if "
#~ "__import__ is not found in __builtins__."

#~ msgid ""
#~ "`Issue #18698 <https://bugs.python.org/18698>`__: Ensure importlib."
#~ "reload() returns the module out of sys.modules."
#~ msgstr ""
#~ "`Issue #18698 <https://bugs.python.org/18698>`__: Ensure importlib."
#~ "reload() returns the module out of sys.modules."

#~ msgid ""
#~ "`Issue #17857 <https://bugs.python.org/17857>`__: Prevent build failures "
#~ "with pre-3.5.0 versions of sqlite3, such as was shipped with Centos 5 and "
#~ "Mac OS X 10.4."
#~ msgstr ""
#~ "`Issue #17857 <https://bugs.python.org/17857>`__: Prevent build failures "
#~ "with pre-3.5.0 versions of sqlite3, such as was shipped with Centos 5 and "
#~ "Mac OS X 10.4."

#~ msgid ""
#~ "`Issue #17413 <https://bugs.python.org/17413>`__: sys.settrace callbacks "
#~ "were being passed a string instead of an exception instance for the "
#~ "'value' element of the arg tuple if the exception originated from C code; "
#~ "now an exception instance is always provided."
#~ msgstr ""
#~ "`Issue #17413 <https://bugs.python.org/17413>`__: sys.settrace callbacks "
#~ "were being passed a string instead of an exception instance for the "
#~ "'value' element of the arg tuple if the exception originated from C code; "
#~ "now an exception instance is always provided."

#~ msgid ""
#~ "`Issue #17782 <https://bugs.python.org/17782>`__: Fix undefined behaviour "
#~ "on platforms where ``struct timespec``'s \"tv_nsec\" member is not a C "
#~ "long."
#~ msgstr ""
#~ "`Issue #17782 <https://bugs.python.org/17782>`__: Fix undefined behaviour "
#~ "on platforms where ``struct timespec``'s \"tv_nsec\" member is not a C "
#~ "long."

#~ msgid ""
#~ "`Issue #17722 <https://bugs.python.org/17722>`__: When looking up "
#~ "__round__, resolve descriptors."
#~ msgstr ""
#~ "`Issue #17722 <https://bugs.python.org/17722>`__: When looking up "
#~ "__round__, resolve descriptors."

#~ msgid ""
#~ "`Issue #16061 <https://bugs.python.org/16061>`__: Speed up str.replace() "
#~ "for replacing 1-character strings."
#~ msgstr ""
#~ "`Issue #16061 <https://bugs.python.org/16061>`__: Speed up str.replace() "
#~ "for replacing 1-character strings."

#~ msgid ""
#~ "`Issue #17715 <https://bugs.python.org/17715>`__: Fix segmentation fault "
#~ "from raising an exception in a __trunc__ method."
#~ msgstr ""
#~ "`Issue #17715 <https://bugs.python.org/17715>`__: Fix segmentation fault "
#~ "from raising an exception in a __trunc__ method."

#~ msgid ""
#~ "`Issue #17643 <https://bugs.python.org/17643>`__: Add __callback__ "
#~ "attribute to weakref.ref."
#~ msgstr ""
#~ "`Issue #17643 <https://bugs.python.org/17643>`__: Add __callback__ "
#~ "attribute to weakref.ref."

#~ msgid ""
#~ "`Issue #16447 <https://bugs.python.org/16447>`__: Fixed potential "
#~ "segmentation fault when setting __name__ on a class."
#~ msgstr ""
#~ "`Issue #16447 <https://bugs.python.org/16447>`__: Fixed potential "
#~ "segmentation fault when setting __name__ on a class."

#~ msgid ""
#~ "`Issue #17669 <https://bugs.python.org/17669>`__: Fix crash involving "
#~ "finalization of generators using yield from."
#~ msgstr ""
#~ "`Issue #17669 <https://bugs.python.org/17669>`__: Fix crash involving "
#~ "finalization of generators using yield from."

#~ msgid ""
#~ "`Issue #14439 <https://bugs.python.org/14439>`__: Python now prints the "
#~ "traceback on runpy failure at startup."
#~ msgstr ""
#~ "`Issue #14439 <https://bugs.python.org/14439>`__: Python now prints the "
#~ "traceback on runpy failure at startup."

#~ msgid ""
#~ "`Issue #17469 <https://bugs.python.org/17469>`__: Fix "
#~ "_Py_GetAllocatedBlocks() and sys.getallocatedblocks() when running on "
#~ "valgrind."
#~ msgstr ""
#~ "`Issue #17469 <https://bugs.python.org/17469>`__: Fix "
#~ "_Py_GetAllocatedBlocks() and sys.getallocatedblocks() when running on "
#~ "valgrind."

#~ msgid ""
#~ "`Issue #17619 <https://bugs.python.org/17619>`__: Make input() check for "
#~ "Ctrl-C correctly on Windows."
#~ msgstr ""
#~ "`Issue #17619 <https://bugs.python.org/17619>`__: Make input() check for "
#~ "Ctrl-C correctly on Windows."

#~ msgid ""
#~ "`Issue #17357 <https://bugs.python.org/17357>`__: Add missing verbosity "
#~ "messages for -v/-vv that were lost during the importlib transition."
#~ msgstr ""
#~ "`Issue #17357 <https://bugs.python.org/17357>`__: Add missing verbosity "
#~ "messages for -v/-vv that were lost during the importlib transition."

#~ msgid ""
#~ "`Issue #17610 <https://bugs.python.org/17610>`__: Don't rely on non-"
#~ "standard behavior of the C qsort() function."
#~ msgstr ""
#~ "`Issue #17610 <https://bugs.python.org/17610>`__: Don't rely on non-"
#~ "standard behavior of the C qsort() function."

#~ msgid ""
#~ "`Issue #17323 <https://bugs.python.org/17323>`__: The \"[X refs, Y "
#~ "blocks]\" printed by debug builds has been disabled by default.  It can "
#~ "be re-enabled with the `-X showrefcount` option."
#~ msgstr ""
#~ "`Issue #17323 <https://bugs.python.org/17323>`__: The \"[X refs, Y "
#~ "blocks]\" printed by debug builds has been disabled by default.  It can "
#~ "be re-enabled with the `-X showrefcount` option."

#~ msgid ""
#~ "`Issue #17328 <https://bugs.python.org/17328>`__: Fix possible refleak in "
#~ "dict.setdefault."
#~ msgstr ""
#~ "`Issue #17328 <https://bugs.python.org/17328>`__: Fix possible refleak in "
#~ "dict.setdefault."

#~ msgid ""
#~ "`Issue #17275 <https://bugs.python.org/17275>`__: Corrected class name in "
#~ "init error messages of the C version of BufferedWriter and BufferedRandom."
#~ msgstr ""
#~ "`Issue #17275 <https://bugs.python.org/17275>`__: Corrected class name in "
#~ "init error messages of the C version of BufferedWriter and BufferedRandom."

#~ msgid ""
#~ "`Issue #8745 <https://bugs.python.org/8745>`__: Small speed up zipimport "
#~ "on Windows. Patch by Catalin Iacob."
#~ msgstr ""
#~ "`Issue #8745 <https://bugs.python.org/8745>`__: Small speed up zipimport "
#~ "on Windows. Patch by Catalin Iacob."

#~ msgid ""
#~ "`Issue #5308 <https://bugs.python.org/5308>`__: Raise ValueError when "
#~ "marshalling too large object (a sequence with size >= 2**31), instead of "
#~ "producing illegal marshal data."
#~ msgstr ""
#~ "`Issue #5308 <https://bugs.python.org/5308>`__: Raise ValueError when "
#~ "marshalling too large object (a sequence with size >= 2**31), instead of "
#~ "producing illegal marshal data."

#~ msgid ""
#~ "`Issue #12983 <https://bugs.python.org/12983>`__: Bytes literals with "
#~ "invalid ``\\x`` escape now raise a SyntaxError and a full traceback "
#~ "including line number."
#~ msgstr ""
#~ "`Issue #12983 <https://bugs.python.org/12983>`__: Bytes literals with "
#~ "invalid ``\\x`` escape now raise a SyntaxError and a full traceback "
#~ "including line number."

#~ msgid ""
#~ "`Issue #16967 <https://bugs.python.org/16967>`__: In function definition, "
#~ "evaluate positional defaults before keyword-only defaults."
#~ msgstr ""
#~ "`Issue #16967 <https://bugs.python.org/16967>`__: In function definition, "
#~ "evaluate positional defaults before keyword-only defaults."

#~ msgid ""
#~ "`Issue #17173 <https://bugs.python.org/17173>`__: Remove uses of locale-"
#~ "dependent C functions (isalpha() etc.) in the interpreter."
#~ msgstr ""
#~ "`Issue #17173 <https://bugs.python.org/17173>`__: Remove uses of locale-"
#~ "dependent C functions (isalpha() etc.) in the interpreter."

#~ msgid ""
#~ "`Issue #17137 <https://bugs.python.org/17137>`__: When a Unicode string "
#~ "is resized, the internal wide character string (wstr) format is now "
#~ "cleared."
#~ msgstr ""
#~ "`Issue #17137 <https://bugs.python.org/17137>`__: When a Unicode string "
#~ "is resized, the internal wide character string (wstr) format is now "
#~ "cleared."

#~ msgid ""
#~ "`Issue #17043 <https://bugs.python.org/17043>`__: The unicode-internal "
#~ "decoder no longer read past the end of input buffer."
#~ msgstr ""
#~ "`Issue #17043 <https://bugs.python.org/17043>`__: The unicode-internal "
#~ "decoder no longer read past the end of input buffer."

#~ msgid ""
#~ "`Issue #17098 <https://bugs.python.org/17098>`__: All modules now have "
#~ "__loader__ set even if they pre-exist the bootstrapping of importlib."
#~ msgstr ""
#~ "`Issue #17098 <https://bugs.python.org/17098>`__: All modules now have "
#~ "__loader__ set even if they pre-exist the bootstrapping of importlib."

#~ msgid ""
#~ "`Issue #16979 <https://bugs.python.org/16979>`__: Fix error handling bugs "
#~ "in the unicode-escape-decode decoder."
#~ msgstr ""
#~ "`Issue #16979 <https://bugs.python.org/16979>`__: Fix error handling bugs "
#~ "in the unicode-escape-decode decoder."

#~ msgid ""
#~ "`Issue #16772 <https://bugs.python.org/16772>`__: The base argument to "
#~ "the int constructor no longer accepts floats, or other non-integer "
#~ "objects with an __int__ method.  Objects with an __index__ method are now "
#~ "accepted."
#~ msgstr ""
#~ "`Issue #16772 <https://bugs.python.org/16772>`__: The base argument to "
#~ "the int constructor no longer accepts floats, or other non-integer "
#~ "objects with an __int__ method.  Objects with an __index__ method are now "
#~ "accepted."

#~ msgid ""
#~ "`Issue #10156 <https://bugs.python.org/10156>`__: In the interpreter's "
#~ "initialization phase, unicode globals are now initialized dynamically as "
#~ "needed."
#~ msgstr ""
#~ "`Issue #10156 <https://bugs.python.org/10156>`__: In the interpreter's "
#~ "initialization phase, unicode globals are now initialized dynamically as "
#~ "needed."

#~ msgid ""
#~ "`Issue #16980 <https://bugs.python.org/16980>`__: Fix processing of "
#~ "escaped non-ascii bytes in the unicode-escape-decode decoder."
#~ msgstr ""
#~ "`Issue #16980 <https://bugs.python.org/16980>`__: Fix processing of "
#~ "escaped non-ascii bytes in the unicode-escape-decode decoder."

#~ msgid ""
#~ "`Issue #16975 <https://bugs.python.org/16975>`__: Fix error handling bug "
#~ "in the escape-decode bytes decoder."
#~ msgstr ""
#~ "`Issue #16975 <https://bugs.python.org/16975>`__: Fix error handling bug "
#~ "in the escape-decode bytes decoder."

#~ msgid ""
#~ "`Issue #14850 <https://bugs.python.org/14850>`__: Now a charmap decoder "
#~ "treats U+FFFE as \"undefined mapping\" in any mapping, not only in a "
#~ "string."
#~ msgstr ""
#~ "`Issue #14850 <https://bugs.python.org/14850>`__: Now a charmap decoder "
#~ "treats U+FFFE as \"undefined mapping\" in any mapping, not only in a "
#~ "string."

#~ msgid ""
#~ "`Issue #16613 <https://bugs.python.org/16613>`__: Add *m* argument to "
#~ "``collections.Chainmap.new_child`` to allow the new child map to be "
#~ "specified explicitly."
#~ msgstr ""
#~ "`Issue #16613 <https://bugs.python.org/16613>`__: Add *m* argument to "
#~ "``collections.Chainmap.new_child`` to allow the new child map to be "
#~ "specified explicitly."

#~ msgid ""
#~ "`Issue #16730 <https://bugs.python.org/16730>`__: importlib.machinery."
#~ "FileFinder now no longers raises an exception when trying to populate its "
#~ "cache and it finds out the directory is unreadable or has turned into a "
#~ "file. Reported and diagnosed by David Pritchard."
#~ msgstr ""
#~ "`Issue #16730 <https://bugs.python.org/16730>`__: importlib.machinery."
#~ "FileFinder now no longers raises an exception when trying to populate its "
#~ "cache and it finds out the directory is unreadable or has turned into a "
#~ "file. Reported and diagnosed by David Pritchard."

#~ msgid ""
#~ "`Issue #16906 <https://bugs.python.org/16906>`__: Fix a logic error that "
#~ "prevented most static strings from being cleared."
#~ msgstr ""
#~ "`Issue #16906 <https://bugs.python.org/16906>`__: Fix a logic error that "
#~ "prevented most static strings from being cleared."

#~ msgid ""
#~ "`Issue #11461 <https://bugs.python.org/11461>`__: Fix the incremental "
#~ "UTF-16 decoder. Original patch by Amaury Forgeot d'Arc."
#~ msgstr ""
#~ "`Issue #11461 <https://bugs.python.org/11461>`__: Fix the incremental "
#~ "UTF-16 decoder. Original patch by Amaury Forgeot d'Arc."

#~ msgid ""
#~ "`Issue #16856 <https://bugs.python.org/16856>`__: Fix a segmentation "
#~ "fault from calling repr() on a dict with a key whose repr raise an "
#~ "exception."
#~ msgstr ""
#~ "`Issue #16856 <https://bugs.python.org/16856>`__: Fix a segmentation "
#~ "fault from calling repr() on a dict with a key whose repr raise an "
#~ "exception."

#~ msgid ""
#~ "`Issue #16367 <https://bugs.python.org/16367>`__: Fix FileIO.readall() on "
#~ "Windows for files larger than 2 GB."
#~ msgstr ""
#~ "`Issue #16367 <https://bugs.python.org/16367>`__: Fix FileIO.readall() on "
#~ "Windows for files larger than 2 GB."

#~ msgid ""
#~ "`Issue #16761 <https://bugs.python.org/16761>`__: Calling int() with base "
#~ "argument only now raises TypeError."
#~ msgstr ""
#~ "`Issue #16761 <https://bugs.python.org/16761>`__: Calling int() with base "
#~ "argument only now raises TypeError."

#~ msgid ""
#~ "`Issue #16759 <https://bugs.python.org/16759>`__: Support the full DWORD "
#~ "(unsigned long) range in Reg2Py when retrieving a REG_DWORD value. This "
#~ "corrects functions like winreg.QueryValueEx that may have been returning "
#~ "truncated values."
#~ msgstr ""
#~ "`Issue #16759 <https://bugs.python.org/16759>`__: Support the full DWORD "
#~ "(unsigned long) range in Reg2Py when retrieving a REG_DWORD value. This "
#~ "corrects functions like winreg.QueryValueEx that may have been returning "
#~ "truncated values."

#~ msgid ""
#~ "`Issue #14420 <https://bugs.python.org/14420>`__: Support the full DWORD "
#~ "(unsigned long) range in Py2Reg when passed a REG_DWORD value. Fixes "
#~ "OverflowError in winreg.SetValueEx."
#~ msgstr ""
#~ "`Issue #14420 <https://bugs.python.org/14420>`__: Support the full DWORD "
#~ "(unsigned long) range in Py2Reg when passed a REG_DWORD value. Fixes "
#~ "OverflowError in winreg.SetValueEx."

#~ msgid ""
#~ "`Issue #11939 <https://bugs.python.org/11939>`__: Set the st_dev "
#~ "attribute of stat_result to allow Windows to take advantage of the os."
#~ "path.samefile/sameopenfile/samestat implementations used by other "
#~ "platforms."
#~ msgstr ""
#~ "`Issue #11939 <https://bugs.python.org/11939>`__: Set the st_dev "
#~ "attribute of stat_result to allow Windows to take advantage of the os."
#~ "path.samefile/sameopenfile/samestat implementations used by other "
#~ "platforms."

#~ msgid ""
#~ "`Issue #16772 <https://bugs.python.org/16772>`__: The int() constructor's "
#~ "second argument (base) no longer accepts non integer values.  Consistent "
#~ "with the behavior in Python 2."
#~ msgstr ""
#~ "`Issue #16772 <https://bugs.python.org/16772>`__: The int() constructor's "
#~ "second argument (base) no longer accepts non integer values.  Consistent "
#~ "with the behavior in Python 2."

#~ msgid ""
#~ "`Issue #14470 <https://bugs.python.org/14470>`__: Remove w9xpopen support "
#~ "per PEP 11."
#~ msgstr ""
#~ "`Issue #14470 <https://bugs.python.org/14470>`__: Remove w9xpopen support "
#~ "per PEP 11."

#~ msgid ""
#~ "`Issue #9856 <https://bugs.python.org/9856>`__: Replace deprecation "
#~ "warning with raising TypeError in object.__format__. Patch by Florent "
#~ "Xicluna."
#~ msgstr ""
#~ "`Issue #9856 <https://bugs.python.org/9856>`__: Replace deprecation "
#~ "warning with raising TypeError in object.__format__. Patch by Florent "
#~ "Xicluna."

#~ msgid ""
#~ "`Issue #16597 <https://bugs.python.org/16597>`__: In buffered and text "
#~ "IO, call close() on the underlying stream if invoking flush() fails."
#~ msgstr ""
#~ "`Issue #16597 <https://bugs.python.org/16597>`__: In buffered and text "
#~ "IO, call close() on the underlying stream if invoking flush() fails."

#~ msgid ""
#~ "`Issue #16722 <https://bugs.python.org/16722>`__: In the bytes() "
#~ "constructor, try to call __bytes__ on the argument before __index__."
#~ msgstr ""
#~ "`Issue #16722 <https://bugs.python.org/16722>`__: In the bytes() "
#~ "constructor, try to call __bytes__ on the argument before __index__."

#~ msgid ""
#~ "`Issue #16421 <https://bugs.python.org/16421>`__: loading multiple "
#~ "modules from one shared object is now handled correctly (previously, the "
#~ "first module loaded from that file was silently returned). Patch by "
#~ "V√°clav ≈†milauer."
#~ msgstr ""
#~ "`Issue #16421 <https://bugs.python.org/16421>`__: loading multiple "
#~ "modules from one shared object is now handled correctly (previously, the "
#~ "first module loaded from that file was silently returned). Patch by "
#~ "V√°clav ≈†milauer."

#~ msgid ""
#~ "`Issue #16602 <https://bugs.python.org/16602>`__: When a weakref's target "
#~ "was part of a long deallocation chain, the object could remain reachable "
#~ "through its weakref even though its refcount had dropped to zero."
#~ msgstr ""
#~ "`Issue #16602 <https://bugs.python.org/16602>`__: When a weakref's target "
#~ "was part of a long deallocation chain, the object could remain reachable "
#~ "through its weakref even though its refcount had dropped to zero."

#~ msgid ""
#~ "`Issue #16495 <https://bugs.python.org/16495>`__: Remove extraneous NULL "
#~ "encoding check from bytes_decode()."
#~ msgstr ""
#~ "`Issue #16495 <https://bugs.python.org/16495>`__: Remove extraneous NULL "
#~ "encoding check from bytes_decode()."

#~ msgid ""
#~ "`Issue #16619 <https://bugs.python.org/16619>`__: Create NameConstant AST "
#~ "class to represent None, True, and False literals. As a result, these "
#~ "constants are never loaded at runtime from builtins."
#~ msgstr ""
#~ "`Issue #16619 <https://bugs.python.org/16619>`__: Create NameConstant AST "
#~ "class to represent None, True, and False literals. As a result, these "
#~ "constants are never loaded at runtime from builtins."

#~ msgid ""
#~ "`Issue #16455 <https://bugs.python.org/16455>`__: On FreeBSD and Solaris, "
#~ "if the locale is C, the ASCII/surrogateescape codec is now used (instead "
#~ "of the locale encoding) to decode the command line arguments. This change "
#~ "fixes inconsistencies with os.fsencode() and os.fsdecode(), because these "
#~ "operating systems announce an ASCII locale encoding, but actually use the "
#~ "ISO-8859-1 encoding in practice."
#~ msgstr ""
#~ "`Issue #16455 <https://bugs.python.org/16455>`__: On FreeBSD and Solaris, "
#~ "if the locale is C, the ASCII/surrogateescape codec is now used (instead "
#~ "of the locale encoding) to decode the command line arguments. This change "
#~ "fixes inconsistencies with os.fsencode() and os.fsdecode(), because these "
#~ "operating systems announce an ASCII locale encoding, but actually use the "
#~ "ISO-8859-1 encoding in practice."

#~ msgid ""
#~ "`Issue #16562 <https://bugs.python.org/16562>`__: Optimize dict equality "
#~ "testing.  Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16562 <https://bugs.python.org/16562>`__: Optimize dict equality "
#~ "testing.  Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16588 <https://bugs.python.org/16588>`__: Silence unused-but-set "
#~ "warnings in Python/thread_pthread"
#~ msgstr ""
#~ "`Issue #16588 <https://bugs.python.org/16588>`__: Silence unused-but-set "
#~ "warnings in Python/thread_pthread"

#~ msgid ""
#~ "`Issue #16592 <https://bugs.python.org/16592>`__: stringlib_bytes_join "
#~ "doesn't raise MemoryError on allocation failure."
#~ msgstr ""
#~ "`Issue #16592 <https://bugs.python.org/16592>`__: stringlib_bytes_join "
#~ "doesn't raise MemoryError on allocation failure."

#~ msgid ""
#~ "`Issue #16546 <https://bugs.python.org/16546>`__: Fix: ast.YieldFrom "
#~ "argument is now mandatory."
#~ msgstr ""
#~ "`Issue #16546 <https://bugs.python.org/16546>`__: Fix: ast.YieldFrom "
#~ "argument is now mandatory."

#~ msgid ""
#~ "`Issue #16514 <https://bugs.python.org/16514>`__: Fix regression causing "
#~ "a traceback when sys.path[0] is None (actually, any non-string or non-"
#~ "bytes type)."
#~ msgstr ""
#~ "`Issue #16514 <https://bugs.python.org/16514>`__: Fix regression causing "
#~ "a traceback when sys.path[0] is None (actually, any non-string or non-"
#~ "bytes type)."

#~ msgid ""
#~ "`Issue #16306 <https://bugs.python.org/16306>`__: Fix multiple error "
#~ "messages when unknown command line parameters where passed to the "
#~ "interpreter.  Patch by Hieu Nguyen."
#~ msgstr ""
#~ "`Issue #16306 <https://bugs.python.org/16306>`__: Fix multiple error "
#~ "messages when unknown command line parameters where passed to the "
#~ "interpreter.  Patch by Hieu Nguyen."

#~ msgid ""
#~ "`Issue #16215 <https://bugs.python.org/16215>`__: Fix potential double "
#~ "memory free in str.replace().  Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16215 <https://bugs.python.org/16215>`__: Fix potential double "
#~ "memory free in str.replace().  Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16290 <https://bugs.python.org/16290>`__: A float return value "
#~ "from the __complex__ special method is no longer accepted in the "
#~ "complex() constructor."
#~ msgstr ""
#~ "`Issue #16290 <https://bugs.python.org/16290>`__: A float return value "
#~ "from the __complex__ special method is no longer accepted in the "
#~ "complex() constructor."

#~ msgid ""
#~ "`Issue #16453 <https://bugs.python.org/16453>`__: Fix equality testing of "
#~ "dead weakref objects."
#~ msgstr ""
#~ "`Issue #16453 <https://bugs.python.org/16453>`__: Fix equality testing of "
#~ "dead weakref objects."

#~ msgid ""
#~ "`Issue #9535 <https://bugs.python.org/9535>`__: Fix pending signals that "
#~ "have been received but not yet handled by Python to not persist after os."
#~ "fork() in the child process."
#~ msgstr ""
#~ "`Issue #9535 <https://bugs.python.org/9535>`__: Fix pending signals that "
#~ "have been received but not yet handled by Python to not persist after os."
#~ "fork() in the child process."

#~ msgid ""
#~ "`Issue #14794 <https://bugs.python.org/14794>`__: Fix slice.indices to "
#~ "return correct results for huge values, rather than raising OverflowError."
#~ msgstr ""
#~ "`Issue #14794 <https://bugs.python.org/14794>`__: Fix slice.indices to "
#~ "return correct results for huge values, rather than raising OverflowError."

#~ msgid ""
#~ "`Issue #15001 <https://bugs.python.org/15001>`__: fix segfault on \"del "
#~ "sys.modules['__main__']\". Patch by Victor Stinner."
#~ msgstr ""
#~ "`Issue #15001 <https://bugs.python.org/15001>`__: fix segfault on \"del "
#~ "sys.modules['__main__']\". Patch by Victor Stinner."

#~ msgid ""
#~ "`Issue #8271 <https://bugs.python.org/8271>`__: the utf-8 decoder now "
#~ "outputs the correct number of U+FFFD characters when used with the "
#~ "'replace' error handler on invalid utf-8 sequences.  Patch by Serhiy "
#~ "Storchaka, tests by Ezio Melotti."
#~ msgstr ""
#~ "`Issue #8271 <https://bugs.python.org/8271>`__: the utf-8 decoder now "
#~ "outputs the correct number of U+FFFD characters when used with the "
#~ "'replace' error handler on invalid utf-8 sequences.  Patch by Serhiy "
#~ "Storchaka, tests by Ezio Melotti."

#~ msgid ""
#~ "`Issue #5765 <https://bugs.python.org/5765>`__: Apply a hard recursion "
#~ "limit in the compiler instead of blowing the stack and segfaulting. "
#~ "Initial patch by Andrea Griffini."
#~ msgstr ""
#~ "`Issue #5765 <https://bugs.python.org/5765>`__: Apply a hard recursion "
#~ "limit in the compiler instead of blowing the stack and segfaulting. "
#~ "Initial patch by Andrea Griffini."

#~ msgid ""
#~ "`Issue #16402 <https://bugs.python.org/16402>`__: When slicing a range, "
#~ "fix shadowing of exceptions from __index__."
#~ msgstr ""
#~ "`Issue #16402 <https://bugs.python.org/16402>`__: When slicing a range, "
#~ "fix shadowing of exceptions from __index__."

#~ msgid ""
#~ "`Issue #16336 <https://bugs.python.org/16336>`__: fix input checking in "
#~ "the surrogatepass error handler. Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16336 <https://bugs.python.org/16336>`__: fix input checking in "
#~ "the surrogatepass error handler. Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #8401 <https://bugs.python.org/8401>`__: assigning an int to a "
#~ "bytearray slice (e.g. b[3:4] = 5) now raises an error."
#~ msgstr ""
#~ "`Issue #8401 <https://bugs.python.org/8401>`__: assigning an int to a "
#~ "bytearray slice (e.g. b[3:4] = 5) now raises an error."

#~ msgid ""
#~ "`Issue #7317 <https://bugs.python.org/7317>`__: Display full tracebacks "
#~ "when an error occurs asynchronously. Patch by Alon Horev with update by "
#~ "Alexey Kachayev."
#~ msgstr ""
#~ "`Issue #7317 <https://bugs.python.org/7317>`__: Display full tracebacks "
#~ "when an error occurs asynchronously. Patch by Alon Horev with update by "
#~ "Alexey Kachayev."

#~ msgid ""
#~ "`Issue #16309 <https://bugs.python.org/16309>`__: Make PYTHONPATH=\"\" "
#~ "behavior the same as if PYTHONPATH not set at all."
#~ msgstr ""
#~ "`Issue #16309 <https://bugs.python.org/16309>`__: Make PYTHONPATH=\"\" "
#~ "behavior the same as if PYTHONPATH not set at all."

#~ msgid ""
#~ "`Issue #10189 <https://bugs.python.org/10189>`__: Improve the error "
#~ "reporting of SyntaxErrors related to global and nonlocal statements."
#~ msgstr ""
#~ "`Issue #10189 <https://bugs.python.org/10189>`__: Improve the error "
#~ "reporting of SyntaxErrors related to global and nonlocal statements."

#~ msgid ""
#~ "`Issue #14625 <https://bugs.python.org/14625>`__: Rewrite the UTF-32 "
#~ "decoder. It is now 3x to 4x faster. Patch written by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #14625 <https://bugs.python.org/14625>`__: Rewrite the UTF-32 "
#~ "decoder. It is now 3x to 4x faster. Patch written by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16345 <https://bugs.python.org/16345>`__: Fix an infinite loop "
#~ "when ``fromkeys`` on a dict subclass received a nonempty dict from the "
#~ "constructor."
#~ msgstr ""
#~ "`Issue #16345 <https://bugs.python.org/16345>`__: Fix an infinite loop "
#~ "when ``fromkeys`` on a dict subclass received a nonempty dict from the "
#~ "constructor."

#~ msgid ""
#~ "`Issue #16271 <https://bugs.python.org/16271>`__: Fix strange bugs that "
#~ "resulted from __qualname__ appearing in a class's __dict__ and on type."
#~ msgstr ""
#~ "`Issue #16271 <https://bugs.python.org/16271>`__: Fix strange bugs that "
#~ "resulted from __qualname__ appearing in a class's __dict__ and on type."

#~ msgid ""
#~ "`Issue #12805 <https://bugs.python.org/12805>`__: Make bytes.join and "
#~ "bytearray.join faster when the separator is empty.  Patch by Serhiy "
#~ "Storchaka."
#~ msgstr ""
#~ "`Issue #12805 <https://bugs.python.org/12805>`__: Make bytes.join and "
#~ "bytearray.join faster when the separator is empty.  Patch by Serhiy "
#~ "Storchaka."

#~ msgid ""
#~ "`Issue #6074 <https://bugs.python.org/6074>`__: Ensure cached bytecode "
#~ "files can always be updated by the user that created them, even when the "
#~ "source file is read-only."
#~ msgstr ""
#~ "`Issue #6074 <https://bugs.python.org/6074>`__: Ensure cached bytecode "
#~ "files can always be updated by the user that created them, even when the "
#~ "source file is read-only."

#~ msgid ""
#~ "`Issue #15958 <https://bugs.python.org/15958>`__: bytes.join and "
#~ "bytearray.join now accept arbitrary buffer objects."
#~ msgstr ""
#~ "`Issue #15958 <https://bugs.python.org/15958>`__: bytes.join and "
#~ "bytearray.join now accept arbitrary buffer objects."

#~ msgid ""
#~ "`Issue #14783 <https://bugs.python.org/14783>`__: Improve int() docstring "
#~ "and switch docstrings for str(), range(), and slice() to use multi-line "
#~ "signatures."
#~ msgstr ""
#~ "`Issue #14783 <https://bugs.python.org/14783>`__: Improve int() docstring "
#~ "and switch docstrings for str(), range(), and slice() to use multi-line "
#~ "signatures."

#~ msgid ""
#~ "`Issue #16160 <https://bugs.python.org/16160>`__: Subclass support now "
#~ "works for types.SimpleNamespace."
#~ msgstr ""
#~ "`Issue #16160 <https://bugs.python.org/16160>`__: Subclass support now "
#~ "works for types.SimpleNamespace."

#~ msgid ""
#~ "`Issue #16148 <https://bugs.python.org/16148>`__: Implement PEP 424, "
#~ "adding operator.length_hint and PyObject_LengthHint."
#~ msgstr ""
#~ "`Issue #16148 <https://bugs.python.org/16148>`__: Implement PEP 424, "
#~ "adding operator.length_hint and PyObject_LengthHint."

#~ msgid ""
#~ "`Issue #15379 <https://bugs.python.org/15379>`__: Fix passing of non-BMP "
#~ "characters as integers for the charmap decoder (already working as "
#~ "unicode strings).  Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #15379 <https://bugs.python.org/15379>`__: Fix passing of non-BMP "
#~ "characters as integers for the charmap decoder (already working as "
#~ "unicode strings).  Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #15144 <https://bugs.python.org/15144>`__: Fix possible integer "
#~ "overflow when handling pointers as integer values, by using "
#~ "`Py_uintptr_t` instead of `size_t`.  Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #15144 <https://bugs.python.org/15144>`__: Fix possible integer "
#~ "overflow when handling pointers as integer values, by using "
#~ "`Py_uintptr_t` instead of `size_t`.  Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #15965 <https://bugs.python.org/15965>`__: Explicitly cast "
#~ "`AT_FDCWD` as (int).  Required on Solaris 10 (which defines `AT_FDCWD` as "
#~ "``0xffd19553``), harmless on other platforms."
#~ msgstr ""
#~ "`Issue #15965 <https://bugs.python.org/15965>`__: Explicitly cast "
#~ "`AT_FDCWD` as (int).  Required on Solaris 10 (which defines `AT_FDCWD` as "
#~ "``0xffd19553``), harmless on other platforms."

#~ msgid ""
#~ "`Issue #15839 <https://bugs.python.org/15839>`__: Convert SystemErrors in "
#~ "`super()` to RuntimeErrors."
#~ msgstr ""
#~ "`Issue #15839 <https://bugs.python.org/15839>`__: Convert SystemErrors in "
#~ "`super()` to RuntimeErrors."

#~ msgid ""
#~ "`Issue #15448 <https://bugs.python.org/15448>`__: Buffered IO now frees "
#~ "the buffer when closed, instead of when deallocating."
#~ msgstr ""
#~ "`Issue #15448 <https://bugs.python.org/15448>`__: Buffered IO now frees "
#~ "the buffer when closed, instead of when deallocating."

#~ msgid ""
#~ "`Issue #15846 <https://bugs.python.org/15846>`__: Fix SystemError which "
#~ "happened when using `ast.parse()` in an exception handler on code with "
#~ "syntax errors."
#~ msgstr ""
#~ "`Issue #15846 <https://bugs.python.org/15846>`__: Fix SystemError which "
#~ "happened when using `ast.parse()` in an exception handler on code with "
#~ "syntax errors."

#~ msgid ""
#~ "`Issue #15897 <https://bugs.python.org/15897>`__: zipimport.c doesn't "
#~ "check return value of fseek(). Patch by Felipe Cruz."
#~ msgstr ""
#~ "`Issue #15897 <https://bugs.python.org/15897>`__: zipimport.c doesn't "
#~ "check return value of fseek(). Patch by Felipe Cruz."

#~ msgid ""
#~ "`Issue #15801 <https://bugs.python.org/15801>`__: Make sure mappings "
#~ "passed to '%' formatting are actually subscriptable."
#~ msgstr ""
#~ "`Issue #15801 <https://bugs.python.org/15801>`__: Make sure mappings "
#~ "passed to '%' formatting are actually subscriptable."

#~ msgid ""
#~ "`Issue #15111 <https://bugs.python.org/15111>`__: __import__ should "
#~ "propagate ImportError when raised as a side-effect of a module triggered "
#~ "from using fromlist."
#~ msgstr ""
#~ "`Issue #15111 <https://bugs.python.org/15111>`__: __import__ should "
#~ "propagate ImportError when raised as a side-effect of a module triggered "
#~ "from using fromlist."

#~ msgid ""
#~ "`Issue #15022 <https://bugs.python.org/15022>`__: Add pickle and "
#~ "comparison support to types.SimpleNamespace."
#~ msgstr ""
#~ "`Issue #15022 <https://bugs.python.org/15022>`__: Add pickle and "
#~ "comparison support to types.SimpleNamespace."

#~ msgid ""
#~ "`Issue #4331 <https://bugs.python.org/4331>`__: Added functools."
#~ "partialmethod (Initial patch by Alon Horev)"
#~ msgstr ""
#~ "`Issue #4331 <https://bugs.python.org/4331>`__: Added functools."
#~ "partialmethod (Initial patch by Alon Horev)"

#~ msgid ""
#~ "`Issue #13461 <https://bugs.python.org/13461>`__: Fix a crash in the "
#~ "TextIOWrapper.tell method on 64-bit platforms.  Patch by Yogesh Chaudhari."
#~ msgstr ""
#~ "`Issue #13461 <https://bugs.python.org/13461>`__: Fix a crash in the "
#~ "TextIOWrapper.tell method on 64-bit platforms.  Patch by Yogesh Chaudhari."

#~ msgid ""
#~ "`Issue #18681 <https://bugs.python.org/18681>`__: Fix a NameError in "
#~ "importlib.reload() (noticed by Weizhao Li)."
#~ msgstr ""
#~ "`Issue #18681 <https://bugs.python.org/18681>`__: Fix a NameError in "
#~ "importlib.reload() (noticed by Weizhao Li)."

#~ msgid ""
#~ "`Issue #14323 <https://bugs.python.org/14323>`__: Expanded the number of "
#~ "digits in the coefficients for the RGB -- YIQ conversions so that they "
#~ "match the FCC NTSC versions."
#~ msgstr ""
#~ "`Issue #14323 <https://bugs.python.org/14323>`__: Expanded the number of "
#~ "digits in the coefficients for the RGB -- YIQ conversions so that they "
#~ "match the FCC NTSC versions."

#~ msgid ""
#~ "`Issue #17998 <https://bugs.python.org/17998>`__: Fix an internal error "
#~ "in regular expression engine."
#~ msgstr ""
#~ "`Issue #17998 <https://bugs.python.org/17998>`__: Fix an internal error "
#~ "in regular expression engine."

#~ msgid ""
#~ "`Issue #17557 <https://bugs.python.org/17557>`__: Fix os.getgroups() to "
#~ "work with the modified behavior of getgroups(2) on OS X 10.8.  Original "
#~ "patch by Mateusz Lenik."
#~ msgstr ""
#~ "`Issue #17557 <https://bugs.python.org/17557>`__: Fix os.getgroups() to "
#~ "work with the modified behavior of getgroups(2) on OS X 10.8.  Original "
#~ "patch by Mateusz Lenik."

#~ msgid ""
#~ "`Issue #18608 <https://bugs.python.org/18608>`__: Avoid keeping a strong "
#~ "reference to the locale module inside the _io module."
#~ msgstr ""
#~ "`Issue #18608 <https://bugs.python.org/18608>`__: Avoid keeping a strong "
#~ "reference to the locale module inside the _io module."

#~ msgid ""
#~ "`Issue #18619 <https://bugs.python.org/18619>`__: Fix atexit leaking "
#~ "callbacks registered from sub-interpreters, and make it GC-aware."
#~ msgstr ""
#~ "`Issue #18619 <https://bugs.python.org/18619>`__: Fix atexit leaking "
#~ "callbacks registered from sub-interpreters, and make it GC-aware."

#~ msgid ""
#~ "`Issue #15699 <https://bugs.python.org/15699>`__: The readline module now "
#~ "uses PEP 3121-style module initialization, so as to reclaim allocated "
#~ "resources (Python callbacks) at shutdown.  Original patch by Robin "
#~ "Schreiber."
#~ msgstr ""
#~ "`Issue #15699 <https://bugs.python.org/15699>`__: The readline module now "
#~ "uses PEP 3121-style module initialization, so as to reclaim allocated "
#~ "resources (Python callbacks) at shutdown.  Original patch by Robin "
#~ "Schreiber."

#~ msgid ""
#~ "`Issue #17616 <https://bugs.python.org/17616>`__: wave.open now supports "
#~ "the context management protocol."
#~ msgstr ""
#~ "`Issue #17616 <https://bugs.python.org/17616>`__: wave.open now supports "
#~ "the context management protocol."

#~ msgid ""
#~ "`Issue #18599 <https://bugs.python.org/18599>`__: Fix name attribute of "
#~ "_sha1.sha1() object. It now returns 'SHA1' instead of 'SHA'."
#~ msgstr ""
#~ "`Issue #18599 <https://bugs.python.org/18599>`__: Fix name attribute of "
#~ "_sha1.sha1() object. It now returns 'SHA1' instead of 'SHA'."

#~ msgid ""
#~ "`Issue #13266 <https://bugs.python.org/13266>`__: Added inspect.unwrap to "
#~ "easily unravel __wrapped__ chains (initial patch by Daniel Urban and "
#~ "Aaron Iles)"
#~ msgstr ""
#~ "`Issue #13266 <https://bugs.python.org/13266>`__: Added inspect.unwrap to "
#~ "easily unravel __wrapped__ chains (initial patch by Daniel Urban and "
#~ "Aaron Iles)"

#~ msgid ""
#~ "`Issue #18561 <https://bugs.python.org/18561>`__: Skip name in ctypes' "
#~ "_build_callargs() if name is NULL."
#~ msgstr ""
#~ "`Issue #18561 <https://bugs.python.org/18561>`__: Skip name in ctypes' "
#~ "_build_callargs() if name is NULL."

#~ msgid ""
#~ "`Issue #18559 <https://bugs.python.org/18559>`__: Fix NULL pointer "
#~ "dereference error in _pickle module"
#~ msgstr ""
#~ "`Issue #18559 <https://bugs.python.org/18559>`__: Fix NULL pointer "
#~ "dereference error in _pickle module"

#~ msgid ""
#~ "`Issue #18556 <https://bugs.python.org/18556>`__: Check the return type "
#~ "of PyUnicode_AsWideChar() in ctype's U_set()."
#~ msgstr ""
#~ "`Issue #18556 <https://bugs.python.org/18556>`__: Check the return type "
#~ "of PyUnicode_AsWideChar() in ctype's U_set()."

#~ msgid ""
#~ "`Issue #17818 <https://bugs.python.org/17818>`__: aifc.getparams now "
#~ "returns a namedtuple."
#~ msgstr ""
#~ "`Issue #17818 <https://bugs.python.org/17818>`__: aifc.getparams now "
#~ "returns a namedtuple."

#~ msgid ""
#~ "`Issue #18549 <https://bugs.python.org/18549>`__: Eliminate dead code in "
#~ "socket_ntohl()"
#~ msgstr ""
#~ "`Issue #18549 <https://bugs.python.org/18549>`__: Eliminate dead code in "
#~ "socket_ntohl()"

#~ msgid ""
#~ "`Issue #18530 <https://bugs.python.org/18530>`__: Remove additional stat "
#~ "call from posixpath.ismount. Patch by Alex Gaynor."
#~ msgstr ""
#~ "`Issue #18530 <https://bugs.python.org/18530>`__: Remove additional stat "
#~ "call from posixpath.ismount. Patch by Alex Gaynor."

#~ msgid ""
#~ "`Issue #18514 <https://bugs.python.org/18514>`__: Fix unreachable "
#~ "Py_DECREF() call in PyCData_FromBaseObj()"
#~ msgstr ""
#~ "`Issue #18514 <https://bugs.python.org/18514>`__: Fix unreachable "
#~ "Py_DECREF() call in PyCData_FromBaseObj()"

#~ msgid ""
#~ "`Issue #9177 <https://bugs.python.org/9177>`__: Calling read() or write() "
#~ "now raises ValueError, not AttributeError, on a closed SSL socket.  Patch "
#~ "by Senko Rasic."
#~ msgstr ""
#~ "`Issue #9177 <https://bugs.python.org/9177>`__: Calling read() or write() "
#~ "now raises ValueError, not AttributeError, on a closed SSL socket.  Patch "
#~ "by Senko Rasic."

#~ msgid ""
#~ "`Issue #18513 <https://bugs.python.org/18513>`__: Fix behaviour of cmath."
#~ "rect w.r.t. signed zeros on OS X 10.8 + gcc."
#~ msgstr ""
#~ "`Issue #18513 <https://bugs.python.org/18513>`__: Fix behaviour of cmath."
#~ "rect w.r.t. signed zeros on OS X 10.8 + gcc."

#~ msgid ""
#~ "`Issue #18479 <https://bugs.python.org/18479>`__: Changed venv Activate."
#~ "ps1 to make deactivate a function, and removed Deactivate.ps1."
#~ msgstr ""
#~ "`Issue #18479 <https://bugs.python.org/18479>`__: Changed venv Activate."
#~ "ps1 to make deactivate a function, and removed Deactivate.ps1."

#~ msgid ""
#~ "`Issue #18480 <https://bugs.python.org/18480>`__: Add missing call to "
#~ "PyType_Ready to the _elementtree extension."
#~ msgstr ""
#~ "`Issue #18480 <https://bugs.python.org/18480>`__: Add missing call to "
#~ "PyType_Ready to the _elementtree extension."

#~ msgid ""
#~ "`Issue #17778 <https://bugs.python.org/17778>`__: Fix test discovery for "
#~ "test_multiprocessing. (Patch by Zachary Ware.)"
#~ msgstr ""
#~ "`Issue #17778 <https://bugs.python.org/17778>`__: Fix test discovery for "
#~ "test_multiprocessing. (Patch by Zachary Ware.)"

#~ msgid ""
#~ "`Issue #18393 <https://bugs.python.org/18393>`__: The private module "
#~ "_gestalt and private functions platform._mac_ver_gestalt, platform."
#~ "_mac_ver_lookup and platform._bcd2str have been removed. This does not "
#~ "affect the public interface of the platform module."
#~ msgstr ""
#~ "`Issue #18393 <https://bugs.python.org/18393>`__: The private module "
#~ "_gestalt and private functions platform._mac_ver_gestalt, platform."
#~ "_mac_ver_lookup and platform._bcd2str have been removed. This does not "
#~ "affect the public interface of the platform module."

#~ msgid ""
#~ "`Issue #17482 <https://bugs.python.org/17482>`__: functools."
#~ "update_wrapper (and functools.wraps) now set the __wrapped__ attribute "
#~ "correctly even if the underlying function has a __wrapped__ attribute set."
#~ msgstr ""
#~ "`Issue #17482 <https://bugs.python.org/17482>`__: functools."
#~ "update_wrapper (and functools.wraps) now set the __wrapped__ attribute "
#~ "correctly even if the underlying function has a __wrapped__ attribute set."

#~ msgid ""
#~ "`Issue #18431 <https://bugs.python.org/18431>`__: The new email header "
#~ "parser now decodes RFC2047 encoded words in structured headers."
#~ msgstr ""
#~ "`Issue #18431 <https://bugs.python.org/18431>`__: The new email header "
#~ "parser now decodes RFC2047 encoded words in structured headers."

#~ msgid ""
#~ "`Issue #18432 <https://bugs.python.org/18432>`__: The sched module's "
#~ "queue method was incorrectly returning an iterator instead of a list."
#~ msgstr ""
#~ "`Issue #18432 <https://bugs.python.org/18432>`__: The sched module's "
#~ "queue method was incorrectly returning an iterator instead of a list."

#~ msgid ""
#~ "`Issue #18044 <https://bugs.python.org/18044>`__: The new email header "
#~ "parser was mis-parsing encoded words where an encoded character "
#~ "immediately followed the '?' that follows the CTE character, resulting in "
#~ "a decoding failure.  They are now decoded correctly."
#~ msgstr ""
#~ "`Issue #18044 <https://bugs.python.org/18044>`__: The new email header "
#~ "parser was mis-parsing encoded words where an encoded character "
#~ "immediately followed the '?' that follows the CTE character, resulting in "
#~ "a decoding failure.  They are now decoded correctly."

#~ msgid ""
#~ "`Issue #18101 <https://bugs.python.org/18101>`__: Tcl.split() now process "
#~ "strings nested in a tuple as it do with byte strings."
#~ msgstr ""
#~ "`Issue #18101 <https://bugs.python.org/18101>`__: Tcl.split() now process "
#~ "strings nested in a tuple as it do with byte strings."

#~ msgid ""
#~ "`Issue #18116 <https://bugs.python.org/18116>`__: getpass was always "
#~ "getting an error when testing /dev/tty, and thus was always falling back "
#~ "to stdin, and would then raise an exception if stdin could not be used "
#~ "(such as /dev/null).  It also leaked an open file. All of these issues "
#~ "are now fixed."
#~ msgstr ""
#~ "`Issue #18116 <https://bugs.python.org/18116>`__: getpass was always "
#~ "getting an error when testing /dev/tty, and thus was always falling back "
#~ "to stdin, and would then raise an exception if stdin could not be used "
#~ "(such as /dev/null).  It also leaked an open file. All of these issues "
#~ "are now fixed."

#~ msgid ""
#~ "`Issue #17198 <https://bugs.python.org/17198>`__: Fix a NameError in the "
#~ "dbm module.  Patch by Valentina Mukhamedzhanova."
#~ msgstr ""
#~ "`Issue #17198 <https://bugs.python.org/17198>`__: Fix a NameError in the "
#~ "dbm module.  Patch by Valentina Mukhamedzhanova."

#~ msgid ""
#~ "`Issue #18013 <https://bugs.python.org/18013>`__: Fix cgi.FieldStorage to "
#~ "parse the W3C sample form."
#~ msgstr ""
#~ "`Issue #18013 <https://bugs.python.org/18013>`__: Fix cgi.FieldStorage to "
#~ "parse the W3C sample form."

#~ msgid ""
#~ "`Issue #18020 <https://bugs.python.org/18020>`__: improve html.escape "
#~ "speed by an order of magnitude. Patch by Matt Bryant."
#~ msgstr ""
#~ "`Issue #18020 <https://bugs.python.org/18020>`__: improve html.escape "
#~ "speed by an order of magnitude. Patch by Matt Bryant."

#~ msgid ""
#~ "`Issue #18347 <https://bugs.python.org/18347>`__: ElementTree's html "
#~ "serializer now preserves the case of closing tags."
#~ msgstr ""
#~ "`Issue #18347 <https://bugs.python.org/18347>`__: ElementTree's html "
#~ "serializer now preserves the case of closing tags."

#~ msgid ""
#~ "`Issue #17261 <https://bugs.python.org/17261>`__: Ensure "
#~ "multiprocessing's proxies use proper address."
#~ msgstr ""
#~ "`Issue #17261 <https://bugs.python.org/17261>`__: Ensure "
#~ "multiprocessing's proxies use proper address."

#~ msgid ""
#~ "`Issue #18343 <https://bugs.python.org/18343>`__: faulthandler.register() "
#~ "now keeps the previous signal handler when the function is called twice, "
#~ "so faulthandler.unregister() restores correctly the original signal "
#~ "handler."
#~ msgstr ""
#~ "`Issue #18343 <https://bugs.python.org/18343>`__: faulthandler.register() "
#~ "now keeps the previous signal handler when the function is called twice, "
#~ "so faulthandler.unregister() restores correctly the original signal "
#~ "handler."

#~ msgid ""
#~ "`Issue #17097 <https://bugs.python.org/17097>`__: Make multiprocessing "
#~ "ignore EINTR."
#~ msgstr ""
#~ "`Issue #17097 <https://bugs.python.org/17097>`__: Make multiprocessing "
#~ "ignore EINTR."

#~ msgid ""
#~ "`Issue #18339 <https://bugs.python.org/18339>`__: Negative ints keys in "
#~ "unpickler.memo dict no longer cause a segfault inside the _pickle C "
#~ "extension."
#~ msgstr ""
#~ "`Issue #18339 <https://bugs.python.org/18339>`__: Negative ints keys in "
#~ "unpickler.memo dict no longer cause a segfault inside the _pickle C "
#~ "extension."

#~ msgid ""
#~ "`Issue #18240 <https://bugs.python.org/18240>`__: The HMAC module is no "
#~ "longer restricted to bytes and accepts any bytes-like object, e.g. "
#~ "memoryview. Original patch by Jonas Borgstr√∂m."
#~ msgstr ""
#~ "`Issue #18240 <https://bugs.python.org/18240>`__: The HMAC module is no "
#~ "longer restricted to bytes and accepts any bytes-like object, e.g. "
#~ "memoryview. Original patch by Jonas Borgstr√∂m."

#~ msgid ""
#~ "`Issue #18224 <https://bugs.python.org/18224>`__: Removed pydoc script "
#~ "from created venv, as it causes problems on Windows and adds no value "
#~ "over and above python -m pydoc ..."
#~ msgstr ""
#~ "`Issue #18224 <https://bugs.python.org/18224>`__: Removed pydoc script "
#~ "from created venv, as it causes problems on Windows and adds no value "
#~ "over and above python -m pydoc ..."

#~ msgid ""
#~ "`Issue #18155 <https://bugs.python.org/18155>`__: The csv module now "
#~ "correctly handles csv files that use a delimiter character that has a "
#~ "special meaning in regexes, instead of throwing an exception."
#~ msgstr ""
#~ "`Issue #18155 <https://bugs.python.org/18155>`__: The csv module now "
#~ "correctly handles csv files that use a delimiter character that has a "
#~ "special meaning in regexes, instead of throwing an exception."

#~ msgid ""
#~ "`Issue #14360 <https://bugs.python.org/14360>`__: encode_quopri can now "
#~ "be successfully used as an encoder when constructing a MIMEApplication "
#~ "object."
#~ msgstr ""
#~ "`Issue #14360 <https://bugs.python.org/14360>`__: encode_quopri can now "
#~ "be successfully used as an encoder when constructing a MIMEApplication "
#~ "object."

#~ msgid ""
#~ "`Issue #11390 <https://bugs.python.org/11390>`__: Add -o and -f command "
#~ "line options to the doctest CLI to specify doctest options (and convert "
#~ "it to using argparse)."
#~ msgstr ""
#~ "`Issue #11390 <https://bugs.python.org/11390>`__: Add -o and -f command "
#~ "line options to the doctest CLI to specify doctest options (and convert "
#~ "it to using argparse)."

#~ msgid ""
#~ "`Issue #18135 <https://bugs.python.org/18135>`__: ssl.SSLSocket.write() "
#~ "now raises an OverflowError if the input string in longer than 2 "
#~ "gigabytes, and ssl.SSLContext.load_cert_chain() raises a ValueError if "
#~ "the password is longer than 2 gigabytes. The ssl module does not support "
#~ "partial write."
#~ msgstr ""
#~ "`Issue #18135 <https://bugs.python.org/18135>`__: ssl.SSLSocket.write() "
#~ "now raises an OverflowError if the input string in longer than 2 "
#~ "gigabytes, and ssl.SSLContext.load_cert_chain() raises a ValueError if "
#~ "the password is longer than 2 gigabytes. The ssl module does not support "
#~ "partial write."

#~ msgid ""
#~ "`Issue #11016 <https://bugs.python.org/11016>`__: Add C implementation of "
#~ "the stat module as _stat."
#~ msgstr ""
#~ "`Issue #11016 <https://bugs.python.org/11016>`__: Add C implementation of "
#~ "the stat module as _stat."

#~ msgid ""
#~ "`Issue #18248 <https://bugs.python.org/18248>`__: Fix libffi build on AIX."
#~ msgstr ""
#~ "`Issue #18248 <https://bugs.python.org/18248>`__: Fix libffi build on AIX."

#~ msgid ""
#~ "`Issue #18259 <https://bugs.python.org/18259>`__: Declare sethostname in "
#~ "socketmodule.c for AIX"
#~ msgstr ""
#~ "`Issue #18259 <https://bugs.python.org/18259>`__: Declare sethostname in "
#~ "socketmodule.c for AIX"

#~ msgid ""
#~ "`Issue #18147 <https://bugs.python.org/18147>`__: Add diagnostic "
#~ "functions to ssl.SSLContext(). get_ca_list() lists all loaded CA "
#~ "certificates and cert_store_stats() returns amount of loaded X.509 certs, "
#~ "X.509 CA certs and CRLs."
#~ msgstr ""
#~ "`Issue #18147 <https://bugs.python.org/18147>`__: Add diagnostic "
#~ "functions to ssl.SSLContext(). get_ca_list() lists all loaded CA "
#~ "certificates and cert_store_stats() returns amount of loaded X.509 certs, "
#~ "X.509 CA certs and CRLs."

#~ msgid ""
#~ "`Issue #18167 <https://bugs.python.org/18167>`__: cgi.FieldStorage no "
#~ "longer fails to handle multipart/form-data when ``\\r\\n`` appears at end "
#~ "of 65535 bytes without other newlines."
#~ msgstr ""
#~ "`Issue #18167 <https://bugs.python.org/18167>`__: cgi.FieldStorage no "
#~ "longer fails to handle multipart/form-data when ``\\r\\n`` appears at end "
#~ "of 65535 bytes without other newlines."

#~ msgid ""
#~ "`Issue #18076 <https://bugs.python.org/18076>`__: Introduce importlib."
#~ "util.decode_source()."
#~ msgstr ""
#~ "`Issue #18076 <https://bugs.python.org/18076>`__: Introduce importlib."
#~ "util.decode_source()."

#~ msgid ""
#~ "`Issue #18357 <https://bugs.python.org/18357>`__: add tests for dictview "
#~ "set difference. Patch by Fraser Tweedale."
#~ msgstr ""
#~ "`Issue #18357 <https://bugs.python.org/18357>`__: add tests for dictview "
#~ "set difference. Patch by Fraser Tweedale."

#~ msgid ""
#~ "`Issue #18058 <https://bugs.python.org/18058>`__, 18057: Make the "
#~ "namespace package loader meet the importlib.abc.InspectLoader ABC, "
#~ "allowing for namespace packages to work with runpy."
#~ msgstr ""
#~ "`Issue #18058 <https://bugs.python.org/18058>`__, 18057: Make the "
#~ "namespace package loader meet the importlib.abc.InspectLoader ABC, "
#~ "allowing for namespace packages to work with runpy."

#~ msgid ""
#~ "`Issue #17177 <https://bugs.python.org/17177>`__: The imp module is "
#~ "pending deprecation."
#~ msgstr ""
#~ "`Issue #17177 <https://bugs.python.org/17177>`__: The imp module is "
#~ "pending deprecation."

#~ msgid ""
#~ "`Issue #18194 <https://bugs.python.org/18194>`__: Introduce importlib."
#~ "util.cache_from_source() and source_from_cache() while documenting the "
#~ "equivalent functions in imp as deprecated."
#~ msgstr ""
#~ "`Issue #18194 <https://bugs.python.org/18194>`__: Introduce importlib."
#~ "util.cache_from_source() and source_from_cache() while documenting the "
#~ "equivalent functions in imp as deprecated."

#~ msgid ""
#~ "`Issue #17907 <https://bugs.python.org/17907>`__: Document imp."
#~ "new_module() as deprecated in favour of types.ModuleType."
#~ msgstr ""
#~ "`Issue #17907 <https://bugs.python.org/17907>`__: Document imp."
#~ "new_module() as deprecated in favour of types.ModuleType."

#~ msgid ""
#~ "`Issue #18192 <https://bugs.python.org/18192>`__: Introduce importlib."
#~ "util.MAGIC_NUMBER and document as deprecated imp.get_magic()."
#~ msgstr ""
#~ "`Issue #18192 <https://bugs.python.org/18192>`__: Introduce importlib."
#~ "util.MAGIC_NUMBER and document as deprecated imp.get_magic()."

#~ msgid ""
#~ "`Issue #18149 <https://bugs.python.org/18149>`__: Add filecmp."
#~ "clear_cache() to manually clear the filecmp cache. Patch by Mark Levitt"
#~ msgstr ""
#~ "`Issue #18149 <https://bugs.python.org/18149>`__: Add filecmp."
#~ "clear_cache() to manually clear the filecmp cache. Patch by Mark Levitt"

#~ msgid ""
#~ "`Issue #18193 <https://bugs.python.org/18193>`__: Add importlib.reload()."
#~ msgstr ""
#~ "`Issue #18193 <https://bugs.python.org/18193>`__: Add importlib.reload()."

#~ msgid ""
#~ "`Issue #18157 <https://bugs.python.org/18157>`__: Stop using imp."
#~ "load_module() in pydoc."
#~ msgstr ""
#~ "`Issue #18157 <https://bugs.python.org/18157>`__: Stop using imp."
#~ "load_module() in pydoc."

#~ msgid ""
#~ "`Issue #16102 <https://bugs.python.org/16102>`__: Make uuid."
#~ "_netbios_getnode() work again on Python 3."
#~ msgstr ""
#~ "`Issue #16102 <https://bugs.python.org/16102>`__: Make uuid."
#~ "_netbios_getnode() work again on Python 3."

#~ msgid ""
#~ "`Issue #17134 <https://bugs.python.org/17134>`__: Add ssl."
#~ "enum_cert_store() as interface to Windows' cert store."
#~ msgstr ""
#~ "`Issue #17134 <https://bugs.python.org/17134>`__: Add ssl."
#~ "enum_cert_store() as interface to Windows' cert store."

#~ msgid ""
#~ "`Issue #18143 <https://bugs.python.org/18143>`__: Implement ssl."
#~ "get_default_verify_paths() in order to debug the default locations for "
#~ "cafile and capath."
#~ msgstr ""
#~ "`Issue #18143 <https://bugs.python.org/18143>`__: Implement ssl."
#~ "get_default_verify_paths() in order to debug the default locations for "
#~ "cafile and capath."

#~ msgid ""
#~ "`Issue #17314 <https://bugs.python.org/17314>`__: Move multiprocessing."
#~ "forking over to importlib."
#~ msgstr ""
#~ "`Issue #17314 <https://bugs.python.org/17314>`__: Move multiprocessing."
#~ "forking over to importlib."

#~ msgid ""
#~ "`Issue #11959 <https://bugs.python.org/11959>`__: SMTPServer and "
#~ "SMTPChannel now take an optional map, use of which avoids affecting "
#~ "global state."
#~ msgstr ""
#~ "`Issue #11959 <https://bugs.python.org/11959>`__: SMTPServer and "
#~ "SMTPChannel now take an optional map, use of which avoids affecting "
#~ "global state."

#~ msgid ""
#~ "`Issue #18109 <https://bugs.python.org/18109>`__: os.uname() now decodes "
#~ "fields from the locale encoding, and socket.gethostname() now decodes the "
#~ "hostname from the locale encoding, instead of using the UTF-8 encoding in "
#~ "strict mode."
#~ msgstr ""
#~ "`Issue #18109 <https://bugs.python.org/18109>`__: os.uname() now decodes "
#~ "fields from the locale encoding, and socket.gethostname() now decodes the "
#~ "hostname from the locale encoding, instead of using the UTF-8 encoding in "
#~ "strict mode."

#~ msgid ""
#~ "`Issue #18089 <https://bugs.python.org/18089>`__: Implement importlib.abc."
#~ "InspectLoader.load_module."
#~ msgstr ""
#~ "`Issue #18089 <https://bugs.python.org/18089>`__: Implement importlib.abc."
#~ "InspectLoader.load_module."

#~ msgid ""
#~ "`Issue #18088 <https://bugs.python.org/18088>`__: Introduce importlib.abc."
#~ "Loader.init_module_attrs for setting module attributes. Leads to the "
#~ "pending deprecation of importlib.util.module_for_loader."
#~ msgstr ""
#~ "`Issue #18088 <https://bugs.python.org/18088>`__: Introduce importlib.abc."
#~ "Loader.init_module_attrs for setting module attributes. Leads to the "
#~ "pending deprecation of importlib.util.module_for_loader."

#~ msgid ""
#~ "`Issue #17403 <https://bugs.python.org/17403>`__: urllib.parse."
#~ "robotparser normalizes the urls before adding to ruleline. This helps in "
#~ "handling certain types invalid urls in a conservative manner. Patch "
#~ "contributed by Mher Movsisyan."
#~ msgstr ""
#~ "`Issue #17403 <https://bugs.python.org/17403>`__: urllib.parse."
#~ "robotparser normalizes the urls before adding to ruleline. This helps in "
#~ "handling certain types invalid urls in a conservative manner. Patch "
#~ "contributed by Mher Movsisyan."

#~ msgid ""
#~ "`Issue #18070 <https://bugs.python.org/18070>`__: Have importlib.util."
#~ "module_for_loader() set attributes unconditionally in order to properly "
#~ "support reloading."
#~ msgstr ""
#~ "`Issue #18070 <https://bugs.python.org/18070>`__: Have importlib.util."
#~ "module_for_loader() set attributes unconditionally in order to properly "
#~ "support reloading."

#~ msgid ""
#~ "`Issue #18025 <https://bugs.python.org/18025>`__: Fixed a segfault in io."
#~ "BufferedIOBase.readinto() when raw stream's read() returns more bytes "
#~ "than requested."
#~ msgstr ""
#~ "`Issue #18025 <https://bugs.python.org/18025>`__: Fixed a segfault in io."
#~ "BufferedIOBase.readinto() when raw stream's read() returns more bytes "
#~ "than requested."

#~ msgid ""
#~ "`Issue #18011 <https://bugs.python.org/18011>`__: As was originally "
#~ "intended, base64.b32decode() now raises a binascii.Error if there are non-"
#~ "b32-alphabet characters present in the input string, instead of a "
#~ "TypeError."
#~ msgstr ""
#~ "`Issue #18011 <https://bugs.python.org/18011>`__: As was originally "
#~ "intended, base64.b32decode() now raises a binascii.Error if there are non-"
#~ "b32-alphabet characters present in the input string, instead of a "
#~ "TypeError."

#~ msgid ""
#~ "`Issue #18072 <https://bugs.python.org/18072>`__: Implement importlib.abc."
#~ "InspectLoader.get_code() and importlib.abc.ExecutionLoader.get_code()."
#~ msgstr ""
#~ "`Issue #18072 <https://bugs.python.org/18072>`__: Implement importlib.abc."
#~ "InspectLoader.get_code() and importlib.abc.ExecutionLoader.get_code()."

#~ msgid ""
#~ "`Issue #8240 <https://bugs.python.org/8240>`__: Set the "
#~ "SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER flag on SSL sockets."
#~ msgstr ""
#~ "`Issue #8240 <https://bugs.python.org/8240>`__: Set the "
#~ "SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER flag on SSL sockets."

#~ msgid ""
#~ "`Issue #17269 <https://bugs.python.org/17269>`__: Workaround for socket."
#~ "getaddrinfo crash on MacOS X with port None or \"0\" and flags "
#~ "AI_NUMERICSERV."
#~ msgstr ""
#~ "`Issue #17269 <https://bugs.python.org/17269>`__: Workaround for socket."
#~ "getaddrinfo crash on MacOS X with port None or \"0\" and flags "
#~ "AI_NUMERICSERV."

#~ msgid ""
#~ "`Issue #16986 <https://bugs.python.org/16986>`__: ElementTree now "
#~ "correctly works with string input when the internal XML encoding is not "
#~ "UTF-8 or US-ASCII."
#~ msgstr ""
#~ "`Issue #16986 <https://bugs.python.org/16986>`__: ElementTree now "
#~ "correctly works with string input when the internal XML encoding is not "
#~ "UTF-8 or US-ASCII."

#~ msgid ""
#~ "`Issue #17996 <https://bugs.python.org/17996>`__: socket module now "
#~ "exposes AF_LINK constant on BSD and OSX."
#~ msgstr ""
#~ "`Issue #17996 <https://bugs.python.org/17996>`__: socket module now "
#~ "exposes AF_LINK constant on BSD and OSX."

#~ msgid ""
#~ "`Issue #17900 <https://bugs.python.org/17900>`__: Allowed pickling of "
#~ "recursive OrderedDicts.  Decreased pickled size and pickling time."
#~ msgstr ""
#~ "`Issue #17900 <https://bugs.python.org/17900>`__: Allowed pickling of "
#~ "recursive OrderedDicts.  Decreased pickled size and pickling time."

#~ msgid ""
#~ "`Issue #17914 <https://bugs.python.org/17914>`__: Add os.cpu_count(). "
#~ "Patch by Yogesh Chaudhari, based on an initial patch by Trent Nelson."
#~ msgstr ""
#~ "`Issue #17914 <https://bugs.python.org/17914>`__: Add os.cpu_count(). "
#~ "Patch by Yogesh Chaudhari, based on an initial patch by Trent Nelson."

#~ msgid ""
#~ "`Issue #17812 <https://bugs.python.org/17812>`__: Fixed quadratic "
#~ "complexity of base64.b32encode(). Optimize base64.b32encode() and base64."
#~ "b32decode() (speed up to 3x)."
#~ msgstr ""
#~ "`Issue #17812 <https://bugs.python.org/17812>`__: Fixed quadratic "
#~ "complexity of base64.b32encode(). Optimize base64.b32encode() and base64."
#~ "b32decode() (speed up to 3x)."

#~ msgid ""
#~ "`Issue #17980 <https://bugs.python.org/17980>`__: Fix possible abuse of "
#~ "ssl.match_hostname() for denial of service using certificates with many "
#~ "wildcards (CVE-2013-2099)."
#~ msgstr ""
#~ "`Issue #17980 <https://bugs.python.org/17980>`__: Fix possible abuse of "
#~ "ssl.match_hostname() for denial of service using certificates with many "
#~ "wildcards (CVE-2013-2099)."

#~ msgid ""
#~ "`Issue #15758 <https://bugs.python.org/15758>`__: Fix FileIO.readall() so "
#~ "it no longer has O(n**2) complexity."
#~ msgstr ""
#~ "`Issue #15758 <https://bugs.python.org/15758>`__: Fix FileIO.readall() so "
#~ "it no longer has O(n**2) complexity."

#~ msgid ""
#~ "`Issue #14596 <https://bugs.python.org/14596>`__: The struct.Struct() "
#~ "objects now use a more compact implementation."
#~ msgstr ""
#~ "`Issue #14596 <https://bugs.python.org/14596>`__: The struct.Struct() "
#~ "objects now use a more compact implementation."

#~ msgid ""
#~ "`Issue #17981 <https://bugs.python.org/17981>`__: logging's SysLogHandler "
#~ "now closes the socket when it catches socket OSErrors."
#~ msgstr ""
#~ "`Issue #17981 <https://bugs.python.org/17981>`__: logging's SysLogHandler "
#~ "now closes the socket when it catches socket OSErrors."

#~ msgid ""
#~ "`Issue #17964 <https://bugs.python.org/17964>`__: Fix os.sysconf(): the "
#~ "return type of the C sysconf() function is long, not int."
#~ msgstr ""
#~ "`Issue #17964 <https://bugs.python.org/17964>`__: Fix os.sysconf(): the "
#~ "return type of the C sysconf() function is long, not int."

#~ msgid ""
#~ "`Issue #17754 <https://bugs.python.org/17754>`__: Make ctypes.util."
#~ "find_library() independent of the locale."
#~ msgstr ""
#~ "`Issue #17754 <https://bugs.python.org/17754>`__: Make ctypes.util."
#~ "find_library() independent of the locale."

#~ msgid ""
#~ "`Issue #17606 <https://bugs.python.org/17606>`__: Fixed support of "
#~ "encoded byte strings in the XMLGenerator characters() and "
#~ "ignorableWhitespace() methods.  Original patch by Sebastian Ortiz Vasquez."
#~ msgstr ""
#~ "`Issue #17606 <https://bugs.python.org/17606>`__: Fixed support of "
#~ "encoded byte strings in the XMLGenerator characters() and "
#~ "ignorableWhitespace() methods.  Original patch by Sebastian Ortiz Vasquez."

#~ msgid ""
#~ "`Issue #17732 <https://bugs.python.org/17732>`__: Ignore distutils.cfg "
#~ "options pertaining to install paths if a virtual environment is active."
#~ msgstr ""
#~ "`Issue #17732 <https://bugs.python.org/17732>`__: Ignore distutils.cfg "
#~ "options pertaining to install paths if a virtual environment is active."

#~ msgid ""
#~ "`Issue #17915 <https://bugs.python.org/17915>`__: Fix interoperability of "
#~ "xml.sax with file objects returned by codecs.open()."
#~ msgstr ""
#~ "`Issue #17915 <https://bugs.python.org/17915>`__: Fix interoperability of "
#~ "xml.sax with file objects returned by codecs.open()."

#~ msgid ""
#~ "`Issue #16601 <https://bugs.python.org/16601>`__: Restarting iteration "
#~ "over tarfile really restarts rather than continuing from where it left "
#~ "off.  Patch by Michael Birtwell."
#~ msgstr ""
#~ "`Issue #16601 <https://bugs.python.org/16601>`__: Restarting iteration "
#~ "over tarfile really restarts rather than continuing from where it left "
#~ "off.  Patch by Michael Birtwell."

#~ msgid ""
#~ "`Issue #17289 <https://bugs.python.org/17289>`__: The readline module now "
#~ "plays nicer with external modules or applications changing the "
#~ "rl_completer_word_break_characters global variable.  Initial patch by "
#~ "Bradley Froehle."
#~ msgstr ""
#~ "`Issue #17289 <https://bugs.python.org/17289>`__: The readline module now "
#~ "plays nicer with external modules or applications changing the "
#~ "rl_completer_word_break_characters global variable.  Initial patch by "
#~ "Bradley Froehle."

#~ msgid ""
#~ "`Issue #12181 <https://bugs.python.org/12181>`__: select module: Fix "
#~ "struct kevent definition on OpenBSD 64-bit platforms. Patch by Federico "
#~ "Schwindt."
#~ msgstr ""
#~ "`Issue #12181 <https://bugs.python.org/12181>`__: select module: Fix "
#~ "struct kevent definition on OpenBSD 64-bit platforms. Patch by Federico "
#~ "Schwindt."

#~ msgid ""
#~ "`Issue #11816 <https://bugs.python.org/11816>`__: multiple improvements "
#~ "to the dis module: get_instructions generator, ability to redirect output "
#~ "to a file, Bytecode and Instruction abstractions. Patch by Nick Coghlan, "
#~ "Ryan Kelly and Thomas Kluyver."
#~ msgstr ""
#~ "`Issue #11816 <https://bugs.python.org/11816>`__: multiple improvements "
#~ "to the dis module: get_instructions generator, ability to redirect output "
#~ "to a file, Bytecode and Instruction abstractions. Patch by Nick Coghlan, "
#~ "Ryan Kelly and Thomas Kluyver."

#~ msgid ""
#~ "`Issue #13831 <https://bugs.python.org/13831>`__: Embed stringification "
#~ "of remote traceback in local traceback raised when pool task raises an "
#~ "exception."
#~ msgstr ""
#~ "`Issue #13831 <https://bugs.python.org/13831>`__: Embed stringification "
#~ "of remote traceback in local traceback raised when pool task raises an "
#~ "exception."

#~ msgid ""
#~ "`Issue #15528 <https://bugs.python.org/15528>`__: Add weakref.finalize to "
#~ "support finalization using weakref callbacks."
#~ msgstr ""
#~ "`Issue #15528 <https://bugs.python.org/15528>`__: Add weakref.finalize to "
#~ "support finalization using weakref callbacks."

#~ msgid ""
#~ "`Issue #14173 <https://bugs.python.org/14173>`__: Avoid crashing when "
#~ "reading a signal handler during interpreter shutdown."
#~ msgstr ""
#~ "`Issue #14173 <https://bugs.python.org/14173>`__: Avoid crashing when "
#~ "reading a signal handler during interpreter shutdown."

#~ msgid ""
#~ "`Issue #15902 <https://bugs.python.org/15902>`__: Fix imp.load_module() "
#~ "accepting None as a file when loading an extension module."
#~ msgstr ""
#~ "`Issue #15902 <https://bugs.python.org/15902>`__: Fix imp.load_module() "
#~ "accepting None as a file when loading an extension module."

#~ msgid ""
#~ "`Issue #13721 <https://bugs.python.org/13721>`__: SSLSocket.getpeercert() "
#~ "and SSLSocket.do_handshake() now raise an OSError with ENOTCONN, instead "
#~ "of an AttributeError, when the SSLSocket is not connected."
#~ msgstr ""
#~ "`Issue #13721 <https://bugs.python.org/13721>`__: SSLSocket.getpeercert() "
#~ "and SSLSocket.do_handshake() now raise an OSError with ENOTCONN, instead "
#~ "of an AttributeError, when the SSLSocket is not connected."

#~ msgid ""
#~ "`Issue #14679 <https://bugs.python.org/14679>`__: add an __all__ (that "
#~ "contains only HTMLParser) to html.parser."
#~ msgstr ""
#~ "`Issue #14679 <https://bugs.python.org/14679>`__: add an __all__ (that "
#~ "contains only HTMLParser) to html.parser."

#~ msgid ""
#~ "`Issue #17802 <https://bugs.python.org/17802>`__: Fix an "
#~ "UnboundLocalError in html.parser.  Initial tests by Thomas Barlow."
#~ msgstr ""
#~ "`Issue #17802 <https://bugs.python.org/17802>`__: Fix an "
#~ "UnboundLocalError in html.parser.  Initial tests by Thomas Barlow."

#~ msgid ""
#~ "`Issue #17358 <https://bugs.python.org/17358>`__: Modules loaded by imp."
#~ "load_source() and load_compiled() (and by extension load_module()) now "
#~ "have a better chance of working when reloaded."
#~ msgstr ""
#~ "`Issue #17358 <https://bugs.python.org/17358>`__: Modules loaded by imp."
#~ "load_source() and load_compiled() (and by extension load_module()) now "
#~ "have a better chance of working when reloaded."

#~ msgid ""
#~ "`Issue #17804 <https://bugs.python.org/17804>`__: New function ``struct."
#~ "iter_unpack`` allows for streaming struct unpacking."
#~ msgstr ""
#~ "`Issue #17804 <https://bugs.python.org/17804>`__: New function ``struct."
#~ "iter_unpack`` allows for streaming struct unpacking."

#~ msgid ""
#~ "`Issue #17830 <https://bugs.python.org/17830>`__: When keyword.py is used "
#~ "to update a keyword file, it now preserves the line endings of the "
#~ "original file."
#~ msgstr ""
#~ "`Issue #17830 <https://bugs.python.org/17830>`__: When keyword.py is used "
#~ "to update a keyword file, it now preserves the line endings of the "
#~ "original file."

#~ msgid ""
#~ "`Issue #17272 <https://bugs.python.org/17272>`__: Making the urllib."
#~ "request's Request.full_url a descriptor. Fixes bugs with assignment to "
#~ "full_url. Patch by Demian Brecht."
#~ msgstr ""
#~ "`Issue #17272 <https://bugs.python.org/17272>`__: Making the urllib."
#~ "request's Request.full_url a descriptor. Fixes bugs with assignment to "
#~ "full_url. Patch by Demian Brecht."

#~ msgid ""
#~ "`Issue #17353 <https://bugs.python.org/17353>`__: Plistlib emitted empty "
#~ "data tags with deeply nested datastructures"
#~ msgstr ""
#~ "`Issue #17353 <https://bugs.python.org/17353>`__: Plistlib emitted empty "
#~ "data tags with deeply nested datastructures"

#~ msgid ""
#~ "`Issue #11714 <https://bugs.python.org/11714>`__: Use 'with' statements "
#~ "to assure a Semaphore releases a condition variable.  Original patch by "
#~ "Thomas Rachel."
#~ msgstr ""
#~ "`Issue #11714 <https://bugs.python.org/11714>`__: Use 'with' statements "
#~ "to assure a Semaphore releases a condition variable.  Original patch by "
#~ "Thomas Rachel."

#~ msgid ""
#~ "`Issue #16624 <https://bugs.python.org/16624>`__: `subprocess."
#~ "check_output` now accepts an `input` argument, allowing the subprocess's "
#~ "stdin to be provided as a (byte) string. Patch by Zack Weinberg."
#~ msgstr ""
#~ "`Issue #16624 <https://bugs.python.org/16624>`__: `subprocess."
#~ "check_output` now accepts an `input` argument, allowing the subprocess's "
#~ "stdin to be provided as a (byte) string. Patch by Zack Weinberg."

#~ msgid ""
#~ "`Issue #17795 <https://bugs.python.org/17795>`__: Reverted backwards-"
#~ "incompatible change in SysLogHandler with Unix domain sockets."
#~ msgstr ""
#~ "`Issue #17795 <https://bugs.python.org/17795>`__: Reverted backwards-"
#~ "incompatible change in SysLogHandler with Unix domain sockets."

#~ msgid ""
#~ "`Issue #16694 <https://bugs.python.org/16694>`__: Add a pure Python "
#~ "implementation of the operator module. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #16694 <https://bugs.python.org/16694>`__: Add a pure Python "
#~ "implementation of the operator module. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #11182 <https://bugs.python.org/11182>`__: remove the unused and "
#~ "undocumented pydoc.Scanner class. Patch by Martin Morrison."
#~ msgstr ""
#~ "`Issue #11182 <https://bugs.python.org/11182>`__: remove the unused and "
#~ "undocumented pydoc.Scanner class. Patch by Martin Morrison."

#~ msgid ""
#~ "`Issue #17741 <https://bugs.python.org/17741>`__: Add ElementTree."
#~ "XMLPullParser, an event-driven parser for non-blocking applications."
#~ msgstr ""
#~ "`Issue #17741 <https://bugs.python.org/17741>`__: Add ElementTree."
#~ "XMLPullParser, an event-driven parser for non-blocking applications."

#~ msgid ""
#~ "`Issue #17555 <https://bugs.python.org/17555>`__: Fix ForkAwareThreadLock "
#~ "so that size of after fork registry does not grow exponentially with "
#~ "generation of process."
#~ msgstr ""
#~ "`Issue #17555 <https://bugs.python.org/17555>`__: Fix ForkAwareThreadLock "
#~ "so that size of after fork registry does not grow exponentially with "
#~ "generation of process."

#~ msgid ""
#~ "`Issue #17707 <https://bugs.python.org/17707>`__: fix regression in "
#~ "multiprocessing.Queue's get() method where it did not block for short "
#~ "timeouts."
#~ msgstr ""
#~ "`Issue #17707 <https://bugs.python.org/17707>`__: fix regression in "
#~ "multiprocessing.Queue's get() method where it did not block for short "
#~ "timeouts."

#~ msgid ""
#~ "`Issue #17720 <https://bugs.python.org/17720>`__: Fix the Python "
#~ "implementation of pickle.Unpickler to correctly process the APPENDS "
#~ "opcode when it is used on non-list objects."
#~ msgstr ""
#~ "`Issue #17720 <https://bugs.python.org/17720>`__: Fix the Python "
#~ "implementation of pickle.Unpickler to correctly process the APPENDS "
#~ "opcode when it is used on non-list objects."

#~ msgid ""
#~ "`Issue #17012 <https://bugs.python.org/17012>`__: shutil.which() no "
#~ "longer falls back to the PATH environment variable if an empty path "
#~ "argument is specified.  Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #17012 <https://bugs.python.org/17012>`__: shutil.which() no "
#~ "longer falls back to the PATH environment variable if an empty path "
#~ "argument is specified.  Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #17710 <https://bugs.python.org/17710>`__: Fix pickle raising a "
#~ "SystemError on bogus input."
#~ msgstr ""
#~ "`Issue #17710 <https://bugs.python.org/17710>`__: Fix pickle raising a "
#~ "SystemError on bogus input."

#~ msgid ""
#~ "`Issue #17341 <https://bugs.python.org/17341>`__: Include the invalid "
#~ "name in the error messages from re about invalid group names."
#~ msgstr ""
#~ "`Issue #17341 <https://bugs.python.org/17341>`__: Include the invalid "
#~ "name in the error messages from re about invalid group names."

#~ msgid ""
#~ "`Issue #17702 <https://bugs.python.org/17702>`__: os.environ now raises "
#~ "KeyError with the original environment variable name (str on UNIX), "
#~ "instead of using the encoded name (bytes on UNIX)."
#~ msgstr ""
#~ "`Issue #17702 <https://bugs.python.org/17702>`__: os.environ now raises "
#~ "KeyError with the original environment variable name (str on UNIX), "
#~ "instead of using the encoded name (bytes on UNIX)."

#~ msgid ""
#~ "`Issue #16163 <https://bugs.python.org/16163>`__: Make the importlib "
#~ "based version of pkgutil.iter_importers work for submodules. Initial "
#~ "patch by Berker Peksag."
#~ msgstr ""
#~ "`Issue #16163 <https://bugs.python.org/16163>`__: Make the importlib "
#~ "based version of pkgutil.iter_importers work for submodules. Initial "
#~ "patch by Berker Peksag."

#~ msgid ""
#~ "`Issue #16804 <https://bugs.python.org/16804>`__: Fix a bug in the 'site' "
#~ "module that caused running 'python -S -m site' to incorrectly throw an "
#~ "exception."
#~ msgstr ""
#~ "`Issue #16804 <https://bugs.python.org/16804>`__: Fix a bug in the 'site' "
#~ "module that caused running 'python -S -m site' to incorrectly throw an "
#~ "exception."

#~ msgid ""
#~ "`Issue #15480 <https://bugs.python.org/15480>`__: Remove the deprecated "
#~ "and unused TYPE_INT64 code from marshal. Initial patch by Daniel Riti."
#~ msgstr ""
#~ "`Issue #15480 <https://bugs.python.org/15480>`__: Remove the deprecated "
#~ "and unused TYPE_INT64 code from marshal. Initial patch by Daniel Riti."

#~ msgid ""
#~ "`Issue #2118 <https://bugs.python.org/2118>`__: SMTPException is now a "
#~ "subclass of OSError."
#~ msgstr ""
#~ "`Issue #2118 <https://bugs.python.org/2118>`__: SMTPException is now a "
#~ "subclass of OSError."

#~ msgid ""
#~ "`Issue #17016 <https://bugs.python.org/17016>`__: Get rid of possible "
#~ "pointer wraparounds and integer overflows in the re module.  Patch by "
#~ "Nickolai Zeldovich."
#~ msgstr ""
#~ "`Issue #17016 <https://bugs.python.org/17016>`__: Get rid of possible "
#~ "pointer wraparounds and integer overflows in the re module.  Patch by "
#~ "Nickolai Zeldovich."

#~ msgid ""
#~ "`Issue #16658 <https://bugs.python.org/16658>`__: add missing return to "
#~ "HTTPConnection.send(). Patch by Jeff Knupp."
#~ msgstr ""
#~ "`Issue #16658 <https://bugs.python.org/16658>`__: add missing return to "
#~ "HTTPConnection.send(). Patch by Jeff Knupp."

#~ msgid ""
#~ "`Issue #9556 <https://bugs.python.org/9556>`__: the logging package now "
#~ "allows specifying a time-of-day for a TimedRotatingFileHandler to rotate."
#~ msgstr ""
#~ "`Issue #9556 <https://bugs.python.org/9556>`__: the logging package now "
#~ "allows specifying a time-of-day for a TimedRotatingFileHandler to rotate."

#~ msgid ""
#~ "`Issue #14971 <https://bugs.python.org/14971>`__: unittest test discovery "
#~ "no longer gets confused when a function has a different __name__ than its "
#~ "name in the TestCase class dictionary."
#~ msgstr ""
#~ "`Issue #14971 <https://bugs.python.org/14971>`__: unittest test discovery "
#~ "no longer gets confused when a function has a different __name__ than its "
#~ "name in the TestCase class dictionary."

#~ msgid ""
#~ "`Issue #17487 <https://bugs.python.org/17487>`__: The wave getparams "
#~ "method now returns a namedtuple rather than a plain tuple."
#~ msgstr ""
#~ "`Issue #17487 <https://bugs.python.org/17487>`__: The wave getparams "
#~ "method now returns a namedtuple rather than a plain tuple."

#~ msgid ""
#~ "`Issue #17675 <https://bugs.python.org/17675>`__: socket repr() provides "
#~ "local and remote addresses (if any). Patch by Giampaolo Rodola'"
#~ msgstr ""
#~ "`Issue #17675 <https://bugs.python.org/17675>`__: socket repr() provides "
#~ "local and remote addresses (if any). Patch by Giampaolo Rodola'"

#~ msgid ""
#~ "`Issue #17093 <https://bugs.python.org/17093>`__: Make the ABCs in "
#~ "importlib.abc provide default values or raise reasonable exceptions for "
#~ "their methods to make them more amenable to super() calls."
#~ msgstr ""
#~ "`Issue #17093 <https://bugs.python.org/17093>`__: Make the ABCs in "
#~ "importlib.abc provide default values or raise reasonable exceptions for "
#~ "their methods to make them more amenable to super() calls."

#~ msgid ""
#~ "`Issue #17566 <https://bugs.python.org/17566>`__: Make importlib.abc."
#~ "Loader.module_repr() optional instead of an abstractmethod; now it raises "
#~ "NotImplementedError so as to be ignored by default."
#~ msgstr ""
#~ "`Issue #17566 <https://bugs.python.org/17566>`__: Make importlib.abc."
#~ "Loader.module_repr() optional instead of an abstractmethod; now it raises "
#~ "NotImplementedError so as to be ignored by default."

#~ msgid ""
#~ "`Issue #17678 <https://bugs.python.org/17678>`__: Remove the use of "
#~ "deprecated method in http/cookiejar.py by changing the call to "
#~ "get_origin_req_host() to origin_req_host."
#~ msgstr ""
#~ "`Issue #17678 <https://bugs.python.org/17678>`__: Remove the use of "
#~ "deprecated method in http/cookiejar.py by changing the call to "
#~ "get_origin_req_host() to origin_req_host."

#~ msgid ""
#~ "`Issue #17666 <https://bugs.python.org/17666>`__: Fix reading gzip files "
#~ "with an extra field."
#~ msgstr ""
#~ "`Issue #17666 <https://bugs.python.org/17666>`__: Fix reading gzip files "
#~ "with an extra field."

#~ msgid ""
#~ "`Issue #16475 <https://bugs.python.org/16475>`__: Support object "
#~ "instancing, recursion and interned strings in marshal"
#~ msgstr ""
#~ "`Issue #16475 <https://bugs.python.org/16475>`__: Support object "
#~ "instancing, recursion and interned strings in marshal"

#~ msgid ""
#~ "`Issue #17502 <https://bugs.python.org/17502>`__: Process DEFAULT values "
#~ "in mock side_effect that returns iterator."
#~ msgstr ""
#~ "`Issue #17502 <https://bugs.python.org/17502>`__: Process DEFAULT values "
#~ "in mock side_effect that returns iterator."

#~ msgid ""
#~ "`Issue #16795 <https://bugs.python.org/16795>`__: On the ast.arguments "
#~ "object, unify vararg with varargannotation and kwarg and kwargannotation. "
#~ "Change the column offset of ast.Attribute to be at the attribute name."
#~ msgstr ""
#~ "`Issue #16795 <https://bugs.python.org/16795>`__: On the ast.arguments "
#~ "object, unify vararg with varargannotation and kwarg and kwargannotation. "
#~ "Change the column offset of ast.Attribute to be at the attribute name."

#~ msgid ""
#~ "`Issue #17434 <https://bugs.python.org/17434>`__: Properly raise a "
#~ "SyntaxError when a string occurs between future imports."
#~ msgstr ""
#~ "`Issue #17434 <https://bugs.python.org/17434>`__: Properly raise a "
#~ "SyntaxError when a string occurs between future imports."

#~ msgid ""
#~ "`Issue #17117 <https://bugs.python.org/17117>`__: Import and @importlib."
#~ "util.set_loader now set __loader__ when it has a value of None or the "
#~ "attribute doesn't exist."
#~ msgstr ""
#~ "`Issue #17117 <https://bugs.python.org/17117>`__: Import and @importlib."
#~ "util.set_loader now set __loader__ when it has a value of None or the "
#~ "attribute doesn't exist."

#~ msgid ""
#~ "`Issue #17032 <https://bugs.python.org/17032>`__: The \"global\" in the "
#~ "\"NameError: global name 'x' is not defined\" error message has been "
#~ "removed.  Patch by Ram Rachum."
#~ msgstr ""
#~ "`Issue #17032 <https://bugs.python.org/17032>`__: The \"global\" in the "
#~ "\"NameError: global name 'x' is not defined\" error message has been "
#~ "removed.  Patch by Ram Rachum."

#~ msgid ""
#~ "`Issue #18080 <https://bugs.python.org/18080>`__: When building a C "
#~ "extension module on OS X, if the compiler is overridden with the CC "
#~ "environment variable, use the new compiler as the default for linking if "
#~ "LDSHARED is not also overridden.  This restores Distutils behavior "
#~ "introduced in 3.2.3 and inadvertently dropped in 3.3.0."
#~ msgstr ""
#~ "`Issue #18080 <https://bugs.python.org/18080>`__: When building a C "
#~ "extension module on OS X, if the compiler is overridden with the CC "
#~ "environment variable, use the new compiler as the default for linking if "
#~ "LDSHARED is not also overridden.  This restores Distutils behavior "
#~ "introduced in 3.2.3 and inadvertently dropped in 3.3.0."

#~ msgid ""
#~ "`Issue #18113 <https://bugs.python.org/18113>`__: Fixed a refcount leak "
#~ "in the curses.panel module's set_userptr() method.  Reported by Atsuo "
#~ "Ishimoto."
#~ msgstr ""
#~ "`Issue #18113 <https://bugs.python.org/18113>`__: Fixed a refcount leak "
#~ "in the curses.panel module's set_userptr() method.  Reported by Atsuo "
#~ "Ishimoto."

#~ msgid ""
#~ "`Issue #15596 <https://bugs.python.org/15596>`__: Faster pickling of "
#~ "unicode strings."
#~ msgstr ""
#~ "`Issue #15596 <https://bugs.python.org/15596>`__: Faster pickling of "
#~ "unicode strings."

#~ msgid ""
#~ "`Issue #17572 <https://bugs.python.org/17572>`__: Avoid chained "
#~ "exceptions when passing bad directives to time.strptime().  Initial patch "
#~ "by Claudiu Popa."
#~ msgstr ""
#~ "`Issue #17572 <https://bugs.python.org/17572>`__: Avoid chained "
#~ "exceptions when passing bad directives to time.strptime().  Initial patch "
#~ "by Claudiu Popa."

#~ msgid ""
#~ "`Issue #17435 <https://bugs.python.org/17435>`__: threading.Timer's "
#~ "__init__ method no longer uses mutable default values for the args and "
#~ "kwargs parameters."
#~ msgstr ""
#~ "`Issue #17435 <https://bugs.python.org/17435>`__: threading.Timer's "
#~ "__init__ method no longer uses mutable default values for the args and "
#~ "kwargs parameters."

#~ msgid ""
#~ "`Issue #17526 <https://bugs.python.org/17526>`__: fix an IndexError "
#~ "raised while passing code without filename to inspect.findsource().  "
#~ "Initial patch by Tyler Doyle."
#~ msgstr ""
#~ "`Issue #17526 <https://bugs.python.org/17526>`__: fix an IndexError "
#~ "raised while passing code without filename to inspect.findsource().  "
#~ "Initial patch by Tyler Doyle."

#~ msgid ""
#~ "`Issue #17540 <https://bugs.python.org/17540>`__: Added style parameter "
#~ "to logging formatter configuration by dict."
#~ msgstr ""
#~ "`Issue #17540 <https://bugs.python.org/17540>`__: Added style parameter "
#~ "to logging formatter configuration by dict."

#~ msgid ""
#~ "`Issue #16692 <https://bugs.python.org/16692>`__: The ssl module now "
#~ "supports TLS 1.1 and TLS 1.2.  Initial patch by Michele Orr√π."
#~ msgstr ""
#~ "`Issue #16692 <https://bugs.python.org/16692>`__: The ssl module now "
#~ "supports TLS 1.1 and TLS 1.2.  Initial patch by Michele Orr√π."

#~ msgid ""
#~ "`Issue #17025 <https://bugs.python.org/17025>`__: multiprocessing: Reduce "
#~ "Queue and SimpleQueue contention."
#~ msgstr ""
#~ "`Issue #17025 <https://bugs.python.org/17025>`__: multiprocessing: Reduce "
#~ "Queue and SimpleQueue contention."

#~ msgid ""
#~ "`Issue #17536 <https://bugs.python.org/17536>`__: Add to webbrowser's "
#~ "browser list: www-browser, x-www-browser, iceweasel, iceape."
#~ msgstr ""
#~ "`Issue #17536 <https://bugs.python.org/17536>`__: Add to webbrowser's "
#~ "browser list: www-browser, x-www-browser, iceweasel, iceape."

#~ msgid ""
#~ "`Issue #17150 <https://bugs.python.org/17150>`__: pprint now uses line "
#~ "continuations to wrap long string literals."
#~ msgstr ""
#~ "`Issue #17150 <https://bugs.python.org/17150>`__: pprint now uses line "
#~ "continuations to wrap long string literals."

#~ msgid ""
#~ "`Issue #17488 <https://bugs.python.org/17488>`__: Change the subprocess."
#~ "Popen bufsize parameter default value from unbuffered (0) to buffering "
#~ "(-1) to match the behavior existing code expects and match the behavior "
#~ "of the subprocess module in Python 2 to avoid introducing hard to track "
#~ "down bugs."
#~ msgstr ""
#~ "`Issue #17488 <https://bugs.python.org/17488>`__: Change the subprocess."
#~ "Popen bufsize parameter default value from unbuffered (0) to buffering "
#~ "(-1) to match the behavior existing code expects and match the behavior "
#~ "of the subprocess module in Python 2 to avoid introducing hard to track "
#~ "down bugs."

#~ msgid ""
#~ "`Issue #17521 <https://bugs.python.org/17521>`__: Corrected non-enabling "
#~ "of logger following two calls to fileConfig()."
#~ msgstr ""
#~ "`Issue #17521 <https://bugs.python.org/17521>`__: Corrected non-enabling "
#~ "of logger following two calls to fileConfig()."

#~ msgid ""
#~ "`Issue #17508 <https://bugs.python.org/17508>`__: Corrected logging "
#~ "MemoryHandler configuration in dictConfig() where the target handler "
#~ "wasn't configured first."
#~ msgstr ""
#~ "`Issue #17508 <https://bugs.python.org/17508>`__: Corrected logging "
#~ "MemoryHandler configuration in dictConfig() where the target handler "
#~ "wasn't configured first."

#~ msgid ""
#~ "`Issue #17209 <https://bugs.python.org/17209>`__: curses.window.get_wch() "
#~ "now correctly handles KeyboardInterrupt (CTRL+c)."
#~ msgstr ""
#~ "`Issue #17209 <https://bugs.python.org/17209>`__: curses.window.get_wch() "
#~ "now correctly handles KeyboardInterrupt (CTRL+c)."

#~ msgid ""
#~ "`Issue #5713 <https://bugs.python.org/5713>`__: smtplib now handles 421 "
#~ "(closing connection) error codes when sending mail by closing the socket "
#~ "and reporting the 421 error code via the exception appropriate to the "
#~ "command that received the error response."
#~ msgstr ""
#~ "`Issue #5713 <https://bugs.python.org/5713>`__: smtplib now handles 421 "
#~ "(closing connection) error codes when sending mail by closing the socket "
#~ "and reporting the 421 error code via the exception appropriate to the "
#~ "command that received the error response."

#~ msgid ""
#~ "`Issue #16997 <https://bugs.python.org/16997>`__: unittest.TestCase now "
#~ "provides a subTest() context manager to procedurally generate, in an easy "
#~ "way, small test instances."
#~ msgstr ""
#~ "`Issue #16997 <https://bugs.python.org/16997>`__: unittest.TestCase now "
#~ "provides a subTest() context manager to procedurally generate, in an easy "
#~ "way, small test instances."

#~ msgid ""
#~ "`Issue #17485 <https://bugs.python.org/17485>`__: Also delete the Request "
#~ "Content-Length header if the data attribute is deleted.  (Follow on to "
#~ "issue `Issue #16464 <https://bugs.python.org/16464>`__)."
#~ msgstr ""
#~ "`Issue #17485 <https://bugs.python.org/17485>`__: Also delete the Request "
#~ "Content-Length header if the data attribute is deleted.  (Follow on to "
#~ "issue `Issue #16464 <https://bugs.python.org/16464>`__)."

#~ msgid ""
#~ "`Issue #15927 <https://bugs.python.org/15927>`__: CVS now correctly "
#~ "parses escaped newlines and carriage when parsing with quoting turned off."
#~ msgstr ""
#~ "`Issue #15927 <https://bugs.python.org/15927>`__: CVS now correctly "
#~ "parses escaped newlines and carriage when parsing with quoting turned off."

#~ msgid ""
#~ "`Issue #17467 <https://bugs.python.org/17467>`__: add readline and "
#~ "readlines support to mock_open in unittest.mock."
#~ msgstr ""
#~ "`Issue #17467 <https://bugs.python.org/17467>`__: add readline and "
#~ "readlines support to mock_open in unittest.mock."

#~ msgid ""
#~ "`Issue #13248 <https://bugs.python.org/13248>`__: removed deprecated and "
#~ "undocumented difflib.isbjunk, isbpopular."
#~ msgstr ""
#~ "`Issue #13248 <https://bugs.python.org/13248>`__: removed deprecated and "
#~ "undocumented difflib.isbjunk, isbpopular."

#~ msgid ""
#~ "`Issue #17192 <https://bugs.python.org/17192>`__: Update the ctypes "
#~ "module's libffi to v3.0.13.  This specifically addresses a stack "
#~ "misalignment issue on x86 and issues on some more recent platforms."
#~ msgstr ""
#~ "`Issue #17192 <https://bugs.python.org/17192>`__: Update the ctypes "
#~ "module's libffi to v3.0.13.  This specifically addresses a stack "
#~ "misalignment issue on x86 and issues on some more recent platforms."

#~ msgid ""
#~ "`Issue #8862 <https://bugs.python.org/8862>`__: Fixed curses cleanup when "
#~ "getkey is interrupted by a signal."
#~ msgstr ""
#~ "`Issue #8862 <https://bugs.python.org/8862>`__: Fixed curses cleanup when "
#~ "getkey is interrupted by a signal."

#~ msgid ""
#~ "`Issue #17443 <https://bugs.python.org/17443>`__: imaplib.IMAP4_stream "
#~ "was using the default unbuffered IO in subprocess, but the imap code "
#~ "assumes buffered IO.  In Python2 this worked by accident.  IMAP4_stream "
#~ "now explicitly uses buffered IO."
#~ msgstr ""
#~ "`Issue #17443 <https://bugs.python.org/17443>`__: imaplib.IMAP4_stream "
#~ "was using the default unbuffered IO in subprocess, but the imap code "
#~ "assumes buffered IO.  In Python2 this worked by accident.  IMAP4_stream "
#~ "now explicitly uses buffered IO."

#~ msgid ""
#~ "`Issue #17476 <https://bugs.python.org/17476>`__: Fixed regression "
#~ "relative to Python2 in undocumented pydoc 'allmethods'; it was missing "
#~ "unbound methods on the class."
#~ msgstr ""
#~ "`Issue #17476 <https://bugs.python.org/17476>`__: Fixed regression "
#~ "relative to Python2 in undocumented pydoc 'allmethods'; it was missing "
#~ "unbound methods on the class."

#~ msgid ""
#~ "`Issue #17474 <https://bugs.python.org/17474>`__: Remove the deprecated "
#~ "methods of Request class."
#~ msgstr ""
#~ "`Issue #17474 <https://bugs.python.org/17474>`__: Remove the deprecated "
#~ "methods of Request class."

#~ msgid ""
#~ "`Issue #16709 <https://bugs.python.org/16709>`__: unittest discover order "
#~ "is no-longer filesystem specific. Patch by Jeff Ramnani."
#~ msgstr ""
#~ "`Issue #16709 <https://bugs.python.org/16709>`__: unittest discover order "
#~ "is no-longer filesystem specific. Patch by Jeff Ramnani."

#~ msgid ""
#~ "`Issue #5024 <https://bugs.python.org/5024>`__: sndhdr.whichhdr now "
#~ "returns the frame count for WAV files rather than -1."
#~ msgstr ""
#~ "`Issue #5024 <https://bugs.python.org/5024>`__: sndhdr.whichhdr now "
#~ "returns the frame count for WAV files rather than -1."

#~ msgid ""
#~ "`Issue #17460 <https://bugs.python.org/17460>`__: Remove the strict "
#~ "argument of HTTPConnection and removing the DeprecationWarning being "
#~ "issued from 3.2 onwards."
#~ msgstr ""
#~ "`Issue #17460 <https://bugs.python.org/17460>`__: Remove the strict "
#~ "argument of HTTPConnection and removing the DeprecationWarning being "
#~ "issued from 3.2 onwards."

#~ msgid ""
#~ "`Issue #16880 <https://bugs.python.org/16880>`__: Do not assume _imp."
#~ "load_dynamic() is defined in the imp module."
#~ msgstr ""
#~ "`Issue #16880 <https://bugs.python.org/16880>`__: Do not assume _imp."
#~ "load_dynamic() is defined in the imp module."

#~ msgid ""
#~ "`Issue #16389 <https://bugs.python.org/16389>`__: Fixed a performance "
#~ "regression relative to Python 3.1 in the caching of compiled regular "
#~ "expressions."
#~ msgstr ""
#~ "`Issue #16389 <https://bugs.python.org/16389>`__: Fixed a performance "
#~ "regression relative to Python 3.1 in the caching of compiled regular "
#~ "expressions."

#~ msgid ""
#~ "`Issue #17431 <https://bugs.python.org/17431>`__: Fix missing import of "
#~ "BytesFeedParser in email.parser."
#~ msgstr ""
#~ "`Issue #17431 <https://bugs.python.org/17431>`__: Fix missing import of "
#~ "BytesFeedParser in email.parser."

#~ msgid ""
#~ "`Issue #12921 <https://bugs.python.org/12921>`__: http.server's "
#~ "send_error takes an explain argument to send more information in "
#~ "response. Patch contributed by Karl."
#~ msgstr ""
#~ "`Issue #12921 <https://bugs.python.org/12921>`__: http.server's "
#~ "send_error takes an explain argument to send more information in "
#~ "response. Patch contributed by Karl."

#~ msgid ""
#~ "`Issue #17414 <https://bugs.python.org/17414>`__: Add timeit, repeat, and "
#~ "default_timer to timeit.__all__."
#~ msgstr ""
#~ "`Issue #17414 <https://bugs.python.org/17414>`__: Add timeit, repeat, and "
#~ "default_timer to timeit.__all__."

#~ msgid ""
#~ "`Issue #1285086 <https://bugs.python.org/1285086>`__: Get rid of the "
#~ "refcounting hack and speed up urllib.parse.unquote() and urllib.parse."
#~ "unquote_to_bytes()."
#~ msgstr ""
#~ "`Issue #1285086 <https://bugs.python.org/1285086>`__: Get rid of the "
#~ "refcounting hack and speed up urllib.parse.unquote() and urllib.parse."
#~ "unquote_to_bytes()."

#~ msgid ""
#~ "`Issue #17099 <https://bugs.python.org/17099>`__: Have importlib."
#~ "find_loader() raise ValueError when __loader__ is not set, harmonizing "
#~ "with what happens when the attribute is set to None."
#~ msgstr ""
#~ "`Issue #17099 <https://bugs.python.org/17099>`__: Have importlib."
#~ "find_loader() raise ValueError when __loader__ is not set, harmonizing "
#~ "with what happens when the attribute is set to None."

#~ msgid ""
#~ "`Issue #17368 <https://bugs.python.org/17368>`__: Fix an off-by-one error "
#~ "in the Python JSON decoder that caused a failure while decoding empty "
#~ "object literals when object_pairs_hook was specified."
#~ msgstr ""
#~ "`Issue #17368 <https://bugs.python.org/17368>`__: Fix an off-by-one error "
#~ "in the Python JSON decoder that caused a failure while decoding empty "
#~ "object literals when object_pairs_hook was specified."

#~ msgid ""
#~ "`Issue #17385 <https://bugs.python.org/17385>`__: Fix quadratic behavior "
#~ "in threading.Condition.  The FIFO queue now uses a deque instead of a "
#~ "list."
#~ msgstr ""
#~ "`Issue #17385 <https://bugs.python.org/17385>`__: Fix quadratic behavior "
#~ "in threading.Condition.  The FIFO queue now uses a deque instead of a "
#~ "list."

#~ msgid ""
#~ "`Issue #15806 <https://bugs.python.org/15806>`__: Add contextlib."
#~ "ignore().  This creates a context manager to ignore specified exceptions, "
#~ "replacing the \"except SomeException: pass\" idiom."
#~ msgstr ""
#~ "`Issue #15806 <https://bugs.python.org/15806>`__: Add contextlib."
#~ "ignore().  This creates a context manager to ignore specified exceptions, "
#~ "replacing the \"except SomeException: pass\" idiom."

#~ msgid ""
#~ "`Issue #14645 <https://bugs.python.org/14645>`__: The email generator "
#~ "classes now produce output using the specified linesep throughout.  "
#~ "Previously if the prolog, epilog, or body were stored with a different "
#~ "linesep, that linesep was used.  This fix corrects an RFC non-compliance "
#~ "issue with smtplib.send_message."
#~ msgstr ""
#~ "`Issue #14645 <https://bugs.python.org/14645>`__: The email generator "
#~ "classes now produce output using the specified linesep throughout.  "
#~ "Previously if the prolog, epilog, or body were stored with a different "
#~ "linesep, that linesep was used.  This fix corrects an RFC non-compliance "
#~ "issue with smtplib.send_message."

#~ msgid ""
#~ "`Issue #17278 <https://bugs.python.org/17278>`__: Fix a crash in heapq."
#~ "heappush() and heapq.heappop() when the list is being resized "
#~ "concurrently."
#~ msgstr ""
#~ "`Issue #17278 <https://bugs.python.org/17278>`__: Fix a crash in heapq."
#~ "heappush() and heapq.heappop() when the list is being resized "
#~ "concurrently."

#~ msgid ""
#~ "`Issue #16962 <https://bugs.python.org/16962>`__: Use getdents64 instead "
#~ "of the obsolete getdents syscall in the subprocess module on Linux."
#~ msgstr ""
#~ "`Issue #16962 <https://bugs.python.org/16962>`__: Use getdents64 instead "
#~ "of the obsolete getdents syscall in the subprocess module on Linux."

#~ msgid ""
#~ "`Issue #16935 <https://bugs.python.org/16935>`__: unittest now counts the "
#~ "module as skipped if it raises SkipTest, instead of counting it as an "
#~ "error.  Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #16935 <https://bugs.python.org/16935>`__: unittest now counts the "
#~ "module as skipped if it raises SkipTest, instead of counting it as an "
#~ "error.  Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17018 <https://bugs.python.org/17018>`__: Make Process.join() "
#~ "retry if os.waitpid() fails with EINTR."
#~ msgstr ""
#~ "`Issue #17018 <https://bugs.python.org/17018>`__: Make Process.join() "
#~ "retry if os.waitpid() fails with EINTR."

#~ msgid ""
#~ "`Issue #17223 <https://bugs.python.org/17223>`__: array module: Fix a "
#~ "crasher when converting an array containing invalid characters (outside "
#~ "range [U+0000; U+10ffff]) to Unicode: repr(array), str(array) and array."
#~ "tounicode(). Patch written by Manuel Jacob."
#~ msgstr ""
#~ "`Issue #17223 <https://bugs.python.org/17223>`__: array module: Fix a "
#~ "crasher when converting an array containing invalid characters (outside "
#~ "range [U+0000; U+10ffff]) to Unicode: repr(array), str(array) and array."
#~ "tounicode(). Patch written by Manuel Jacob."

#~ msgid ""
#~ "`Issue #17197 <https://bugs.python.org/17197>`__: profile/cProfile "
#~ "modules refactored so that code of run() and runctx() utility functions "
#~ "is not duplicated in both modules."
#~ msgstr ""
#~ "`Issue #17197 <https://bugs.python.org/17197>`__: profile/cProfile "
#~ "modules refactored so that code of run() and runctx() utility functions "
#~ "is not duplicated in both modules."

#~ msgid ""
#~ "`Issue #14720 <https://bugs.python.org/14720>`__: sqlite3: Convert "
#~ "datetime microseconds correctly. Patch by Lowe Thiderman."
#~ msgstr ""
#~ "`Issue #14720 <https://bugs.python.org/14720>`__: sqlite3: Convert "
#~ "datetime microseconds correctly. Patch by Lowe Thiderman."

#~ msgid ""
#~ "`Issue #15132 <https://bugs.python.org/15132>`__: Allow a list for the "
#~ "defaultTest argument of unittest.TestProgram. Patch by Jyrki Pulliainen."
#~ msgstr ""
#~ "`Issue #15132 <https://bugs.python.org/15132>`__: Allow a list for the "
#~ "defaultTest argument of unittest.TestProgram. Patch by Jyrki Pulliainen."

#~ msgid ""
#~ "`Issue #17225 <https://bugs.python.org/17225>`__: JSON decoder now counts "
#~ "columns in the first line starting with 1, as in other lines."
#~ msgstr ""
#~ "`Issue #17225 <https://bugs.python.org/17225>`__: JSON decoder now counts "
#~ "columns in the first line starting with 1, as in other lines."

#~ msgid ""
#~ "`Issue #6623 <https://bugs.python.org/6623>`__: Added explicit "
#~ "DeprecationWarning for ftplib.netrc, which has been deprecated and "
#~ "undocumented for a long time."
#~ msgstr ""
#~ "`Issue #6623 <https://bugs.python.org/6623>`__: Added explicit "
#~ "DeprecationWarning for ftplib.netrc, which has been deprecated and "
#~ "undocumented for a long time."

#~ msgid ""
#~ "`Issue #13700 <https://bugs.python.org/13700>`__: Fix byte/string "
#~ "handling in imaplib authentication when an authobject is specified."
#~ msgstr ""
#~ "`Issue #13700 <https://bugs.python.org/13700>`__: Fix byte/string "
#~ "handling in imaplib authentication when an authobject is specified."

#~ msgid ""
#~ "`Issue #13153 <https://bugs.python.org/13153>`__: Tkinter functions now "
#~ "raise TclError instead of ValueError when a string argument contains non-"
#~ "BMP character."
#~ msgstr ""
#~ "`Issue #13153 <https://bugs.python.org/13153>`__: Tkinter functions now "
#~ "raise TclError instead of ValueError when a string argument contains non-"
#~ "BMP character."

#~ msgid ""
#~ "`Issue #9669 <https://bugs.python.org/9669>`__: Protect re against "
#~ "infinite loops on zero-width matching in non-greedy repeat.  Patch by "
#~ "Matthew Barnett."
#~ msgstr ""
#~ "`Issue #9669 <https://bugs.python.org/9669>`__: Protect re against "
#~ "infinite loops on zero-width matching in non-greedy repeat.  Patch by "
#~ "Matthew Barnett."

#~ msgid ""
#~ "`Issue #13169 <https://bugs.python.org/13169>`__: The maximal repetition "
#~ "number in a regular expression has been increased from 65534 to "
#~ "2147483647 (on 32-bit platform) or 4294967294 (on 64-bit)."
#~ msgstr ""
#~ "`Issue #13169 <https://bugs.python.org/13169>`__: The maximal repetition "
#~ "number in a regular expression has been increased from 65534 to "
#~ "2147483647 (on 32-bit platform) or 4294967294 (on 64-bit)."

#~ msgid ""
#~ "`Issue #17143 <https://bugs.python.org/17143>`__: Fix a missing import in "
#~ "the trace module.  Initial patch by Berker Peksag."
#~ msgstr ""
#~ "`Issue #17143 <https://bugs.python.org/17143>`__: Fix a missing import in "
#~ "the trace module.  Initial patch by Berker Peksag."

#~ msgid ""
#~ "`Issue #15220 <https://bugs.python.org/15220>`__: email.feedparser's line "
#~ "splitting algorithm is now simpler and faster."
#~ msgstr ""
#~ "`Issue #15220 <https://bugs.python.org/15220>`__: email.feedparser's line "
#~ "splitting algorithm is now simpler and faster."

#~ msgid ""
#~ "`Issue #16743 <https://bugs.python.org/16743>`__: Fix mmap overflow check "
#~ "on 32 bit Windows."
#~ msgstr ""
#~ "`Issue #16743 <https://bugs.python.org/16743>`__: Fix mmap overflow check "
#~ "on 32 bit Windows."

#~ msgid ""
#~ "`Issue #16996 <https://bugs.python.org/16996>`__: webbrowser module now "
#~ "uses shutil.which() to find a web-browser on the executable search path."
#~ msgstr ""
#~ "`Issue #16996 <https://bugs.python.org/16996>`__: webbrowser module now "
#~ "uses shutil.which() to find a web-browser on the executable search path."

#~ msgid ""
#~ "`Issue #16800 <https://bugs.python.org/16800>`__: tempfile.gettempdir() "
#~ "no longer left temporary files when the disk is full.  Original patch by "
#~ "Amir Szekely."
#~ msgstr ""
#~ "`Issue #16800 <https://bugs.python.org/16800>`__: tempfile.gettempdir() "
#~ "no longer left temporary files when the disk is full.  Original patch by "
#~ "Amir Szekely."

#~ msgid ""
#~ "`Issue #17192 <https://bugs.python.org/17192>`__: Import libffi-3.0.12."
#~ msgstr ""
#~ "`Issue #17192 <https://bugs.python.org/17192>`__: Import libffi-3.0.12."

#~ msgid ""
#~ "`Issue #16564 <https://bugs.python.org/16564>`__: Fixed regression "
#~ "relative to Python2 in the operation of email.encoders.encode_7or8bit "
#~ "when used with binary data."
#~ msgstr ""
#~ "`Issue #16564 <https://bugs.python.org/16564>`__: Fixed regression "
#~ "relative to Python2 in the operation of email.encoders.encode_7or8bit "
#~ "when used with binary data."

#~ msgid ""
#~ "`Issue #17052 <https://bugs.python.org/17052>`__: unittest discovery "
#~ "should use self.testLoader."
#~ msgstr ""
#~ "`Issue #17052 <https://bugs.python.org/17052>`__: unittest discovery "
#~ "should use self.testLoader."

#~ msgid ""
#~ "`Issue #4591 <https://bugs.python.org/4591>`__: Uid and gid values larger "
#~ "than 2**31 are supported now."
#~ msgstr ""
#~ "`Issue #4591 <https://bugs.python.org/4591>`__: Uid and gid values larger "
#~ "than 2**31 are supported now."

#~ msgid ""
#~ "`Issue #17141 <https://bugs.python.org/17141>`__: random."
#~ "vonmisesvariate() no longer hangs for large kappas."
#~ msgstr ""
#~ "`Issue #17141 <https://bugs.python.org/17141>`__: random."
#~ "vonmisesvariate() no longer hangs for large kappas."

#~ msgid ""
#~ "`Issue #17149 <https://bugs.python.org/17149>`__: Fix random."
#~ "vonmisesvariate to always return results in [0, 2*math.pi]."
#~ msgstr ""
#~ "`Issue #17149 <https://bugs.python.org/17149>`__: Fix random."
#~ "vonmisesvariate to always return results in [0, 2*math.pi]."

#~ msgid ""
#~ "`Issue #1470548 <https://bugs.python.org/1470548>`__: XMLGenerator now "
#~ "works with binary output streams."
#~ msgstr ""
#~ "`Issue #1470548 <https://bugs.python.org/1470548>`__: XMLGenerator now "
#~ "works with binary output streams."

#~ msgid ""
#~ "`Issue #6975 <https://bugs.python.org/6975>`__: os.path.realpath() now "
#~ "correctly resolves multiple nested symlinks on POSIX platforms."
#~ msgstr ""
#~ "`Issue #6975 <https://bugs.python.org/6975>`__: os.path.realpath() now "
#~ "correctly resolves multiple nested symlinks on POSIX platforms."

#~ msgid ""
#~ "`Issue #13773 <https://bugs.python.org/13773>`__: sqlite3.connect() gets "
#~ "a new `uri` parameter to pass the filename as a URI, allowing custom "
#~ "options to be passed."
#~ msgstr ""
#~ "`Issue #13773 <https://bugs.python.org/13773>`__: sqlite3.connect() gets "
#~ "a new `uri` parameter to pass the filename as a URI, allowing custom "
#~ "options to be passed."

#~ msgid ""
#~ "`Issue #16564 <https://bugs.python.org/16564>`__: Fixed regression "
#~ "relative to Python2 in the operation of email.encoders.encode_noop when "
#~ "used with binary data."
#~ msgstr ""
#~ "`Issue #16564 <https://bugs.python.org/16564>`__: Fixed regression "
#~ "relative to Python2 in the operation of email.encoders.encode_noop when "
#~ "used with binary data."

#~ msgid ""
#~ "`Issue #10355 <https://bugs.python.org/10355>`__: The mode, name, "
#~ "encoding and newlines properties now work on SpooledTemporaryFile objects "
#~ "even when they have not yet rolled over. Obsolete method xreadline (which "
#~ "has never worked in Python 3) has been removed."
#~ msgstr ""
#~ "`Issue #10355 <https://bugs.python.org/10355>`__: The mode, name, "
#~ "encoding and newlines properties now work on SpooledTemporaryFile objects "
#~ "even when they have not yet rolled over. Obsolete method xreadline (which "
#~ "has never worked in Python 3) has been removed."

#~ msgid ""
#~ "`Issue #16686 <https://bugs.python.org/16686>`__: Fixed a lot of bugs in "
#~ "audioop module.  Fixed crashes in avgpp(), maxpp() and ratecv().  Fixed "
#~ "an integer overflow in add(), bias(), and ratecv().  reverse(), lin2lin() "
#~ "and ratecv() no more lose precision for 32-bit samples.  max() and rms() "
#~ "no more returns a negative result and various other functions now work "
#~ "correctly with 32-bit sample -0x80000000."
#~ msgstr ""
#~ "`Issue #16686 <https://bugs.python.org/16686>`__: Fixed a lot of bugs in "
#~ "audioop module.  Fixed crashes in avgpp(), maxpp() and ratecv().  Fixed "
#~ "an integer overflow in add(), bias(), and ratecv().  reverse(), lin2lin() "
#~ "and ratecv() no more lose precision for 32-bit samples.  max() and rms() "
#~ "no more returns a negative result and various other functions now work "
#~ "correctly with 32-bit sample -0x80000000."

#~ msgid ""
#~ "`Issue #17073 <https://bugs.python.org/17073>`__: Fix some integer "
#~ "overflows in sqlite3 module."
#~ msgstr ""
#~ "`Issue #17073 <https://bugs.python.org/17073>`__: Fix some integer "
#~ "overflows in sqlite3 module."

#~ msgid ""
#~ "`Issue #16723 <https://bugs.python.org/16723>`__: httplib.HTTPResponse no "
#~ "longer marked closed when the connection is automatically closed."
#~ msgstr ""
#~ "`Issue #16723 <https://bugs.python.org/16723>`__: httplib.HTTPResponse no "
#~ "longer marked closed when the connection is automatically closed."

#~ msgid ""
#~ "`Issue #15359 <https://bugs.python.org/15359>`__: Add CAN_BCM protocol "
#~ "support to the socket module. Patch by Brian Thorne."
#~ msgstr ""
#~ "`Issue #15359 <https://bugs.python.org/15359>`__: Add CAN_BCM protocol "
#~ "support to the socket module. Patch by Brian Thorne."

#~ msgid ""
#~ "`Issue #16948 <https://bugs.python.org/16948>`__: Fix quoted printable "
#~ "body encoding for non-latin1 character sets in the email package."
#~ msgstr ""
#~ "`Issue #16948 <https://bugs.python.org/16948>`__: Fix quoted printable "
#~ "body encoding for non-latin1 character sets in the email package."

#~ msgid ""
#~ "`Issue #16811 <https://bugs.python.org/16811>`__: Fix folding of headers "
#~ "with no value in the provisional email policies."
#~ msgstr ""
#~ "`Issue #16811 <https://bugs.python.org/16811>`__: Fix folding of headers "
#~ "with no value in the provisional email policies."

#~ msgid ""
#~ "`Issue #17132 <https://bugs.python.org/17132>`__: Update symbol for "
#~ "\"yield from\" grammar changes."
#~ msgstr ""
#~ "`Issue #17132 <https://bugs.python.org/17132>`__: Update symbol for "
#~ "\"yield from\" grammar changes."

#~ msgid ""
#~ "`Issue #17076 <https://bugs.python.org/17076>`__: Make copying of xattrs "
#~ "more tolerant of missing FS support. Patch by Thomas Wouters."
#~ msgstr ""
#~ "`Issue #17076 <https://bugs.python.org/17076>`__: Make copying of xattrs "
#~ "more tolerant of missing FS support. Patch by Thomas Wouters."

#~ msgid ""
#~ "`Issue #17089 <https://bugs.python.org/17089>`__: Expat parser now "
#~ "correctly works with string input when the internal XML encoding is not "
#~ "UTF-8 or US-ASCII.  It also now accepts bytes and strings larger than 2 "
#~ "GiB."
#~ msgstr ""
#~ "`Issue #17089 <https://bugs.python.org/17089>`__: Expat parser now "
#~ "correctly works with string input when the internal XML encoding is not "
#~ "UTF-8 or US-ASCII.  It also now accepts bytes and strings larger than 2 "
#~ "GiB."

#~ msgid ""
#~ "`Issue #6083 <https://bugs.python.org/6083>`__: Fix multiple segmentation "
#~ "faults occurred when PyArg_ParseTuple parses nested mutating sequence."
#~ msgstr ""
#~ "`Issue #6083 <https://bugs.python.org/6083>`__: Fix multiple segmentation "
#~ "faults occurred when PyArg_ParseTuple parses nested mutating sequence."

#~ msgid ""
#~ "`Issue #5289 <https://bugs.python.org/5289>`__: Fix ctypes.util."
#~ "find_library on Solaris."
#~ msgstr ""
#~ "`Issue #5289 <https://bugs.python.org/5289>`__: Fix ctypes.util."
#~ "find_library on Solaris."

#~ msgid ""
#~ "`Issue #17106 <https://bugs.python.org/17106>`__: Fix a segmentation "
#~ "fault in io.TextIOWrapper when an underlying stream or a decoder produces "
#~ "data of an unexpected type (i.e. when io.TextIOWrapper initialized with "
#~ "text stream or use bytes-to-bytes codec)."
#~ msgstr ""
#~ "`Issue #17106 <https://bugs.python.org/17106>`__: Fix a segmentation "
#~ "fault in io.TextIOWrapper when an underlying stream or a decoder produces "
#~ "data of an unexpected type (i.e. when io.TextIOWrapper initialized with "
#~ "text stream or use bytes-to-bytes codec)."

#~ msgid ""
#~ "`Issue #17015 <https://bugs.python.org/17015>`__: When it has a spec, a "
#~ "Mock object now inspects its signature when matching calls, so that "
#~ "arguments can be matched positionally or by name."
#~ msgstr ""
#~ "`Issue #17015 <https://bugs.python.org/17015>`__: When it has a spec, a "
#~ "Mock object now inspects its signature when matching calls, so that "
#~ "arguments can be matched positionally or by name."

#~ msgid ""
#~ "`Issue #15633 <https://bugs.python.org/15633>`__: httplib.HTTPResponse is "
#~ "now mark closed when the server sends less than the advertised Content-"
#~ "Length."
#~ msgstr ""
#~ "`Issue #15633 <https://bugs.python.org/15633>`__: httplib.HTTPResponse is "
#~ "now mark closed when the server sends less than the advertised Content-"
#~ "Length."

#~ msgid ""
#~ "`Issue #12268 <https://bugs.python.org/12268>`__: The io module file "
#~ "object write methods no longer abort early when one of its write system "
#~ "calls is interrupted (EINTR)."
#~ msgstr ""
#~ "`Issue #12268 <https://bugs.python.org/12268>`__: The io module file "
#~ "object write methods no longer abort early when one of its write system "
#~ "calls is interrupted (EINTR)."

#~ msgid ""
#~ "`Issue #6972 <https://bugs.python.org/6972>`__: The zipfile module no "
#~ "longer overwrites files outside of its destination path when extracting "
#~ "malicious zip files."
#~ msgstr ""
#~ "`Issue #6972 <https://bugs.python.org/6972>`__: The zipfile module no "
#~ "longer overwrites files outside of its destination path when extracting "
#~ "malicious zip files."

#~ msgid ""
#~ "`Issue #4844 <https://bugs.python.org/4844>`__: ZipFile now raises "
#~ "BadZipFile when opens a ZIP file with an incomplete \"End of Central "
#~ "Directory\" record.  Original patch by Guilherme Polo and Alan McIntyre."
#~ msgstr ""
#~ "`Issue #4844 <https://bugs.python.org/4844>`__: ZipFile now raises "
#~ "BadZipFile when opens a ZIP file with an incomplete \"End of Central "
#~ "Directory\" record.  Original patch by Guilherme Polo and Alan McIntyre."

#~ msgid ""
#~ "`Issue #17071 <https://bugs.python.org/17071>`__: Signature.bind() now "
#~ "works when one of the keyword arguments is named ``self``."
#~ msgstr ""
#~ "`Issue #17071 <https://bugs.python.org/17071>`__: Signature.bind() now "
#~ "works when one of the keyword arguments is named ``self``."

#~ msgid ""
#~ "`Issue #16972 <https://bugs.python.org/16972>`__: Have site.addpackage() "
#~ "consider already known paths even when none are explicitly passed in. Bug "
#~ "report and fix by Kirill."
#~ msgstr ""
#~ "`Issue #16972 <https://bugs.python.org/16972>`__: Have site.addpackage() "
#~ "consider already known paths even when none are explicitly passed in. Bug "
#~ "report and fix by Kirill."

#~ msgid ""
#~ "`Issue #1602133 <https://bugs.python.org/1602133>`__: on Mac OS X a "
#~ "shared library build (``--enable-shared``) now fills the ``os.environ`` "
#~ "variable correctly."
#~ msgstr ""
#~ "`Issue #1602133 <https://bugs.python.org/1602133>`__: on Mac OS X a "
#~ "shared library build (``--enable-shared``) now fills the ``os.environ`` "
#~ "variable correctly."

#~ msgid ""
#~ "`Issue #15505 <https://bugs.python.org/15505>`__: `unittest."
#~ "installHandler` no longer assumes SIGINT handler is set to a callable "
#~ "object."
#~ msgstr ""
#~ "`Issue #15505 <https://bugs.python.org/15505>`__: `unittest."
#~ "installHandler` no longer assumes SIGINT handler is set to a callable "
#~ "object."

#~ msgid ""
#~ "`Issue #13454 <https://bugs.python.org/13454>`__: Fix a crash when "
#~ "deleting an iterator created by itertools.tee() if all other iterators "
#~ "were very advanced before."
#~ msgstr ""
#~ "`Issue #13454 <https://bugs.python.org/13454>`__: Fix a crash when "
#~ "deleting an iterator created by itertools.tee() if all other iterators "
#~ "were very advanced before."

#~ msgid ""
#~ "`Issue #12411 <https://bugs.python.org/12411>`__: Fix to cgi."
#~ "parse_multipart to correctly use bytes boundaries and bytes data. Patch "
#~ "by Jonas Wagner."
#~ msgstr ""
#~ "`Issue #12411 <https://bugs.python.org/12411>`__: Fix to cgi."
#~ "parse_multipart to correctly use bytes boundaries and bytes data. Patch "
#~ "by Jonas Wagner."

#~ msgid ""
#~ "`Issue #16957 <https://bugs.python.org/16957>`__: shutil.which() no "
#~ "longer searches a bare file name in the current directory on Unix and no "
#~ "longer searches a relative file path with a directory part in PATH "
#~ "directories.  Patch by Thomas Kluyver."
#~ msgstr ""
#~ "`Issue #16957 <https://bugs.python.org/16957>`__: shutil.which() no "
#~ "longer searches a bare file name in the current directory on Unix and no "
#~ "longer searches a relative file path with a directory part in PATH "
#~ "directories.  Patch by Thomas Kluyver."

#~ msgid ""
#~ "`Issue #1159051 <https://bugs.python.org/1159051>`__: GzipFile now raises "
#~ "EOFError when reading a corrupted file with truncated header or footer."
#~ msgstr ""
#~ "`Issue #1159051 <https://bugs.python.org/1159051>`__: GzipFile now raises "
#~ "EOFError when reading a corrupted file with truncated header or footer."

#~ msgid ""
#~ "`Issue #16993 <https://bugs.python.org/16993>`__: shutil.which() now "
#~ "preserves the case of the path and extension on Windows."
#~ msgstr ""
#~ "`Issue #16993 <https://bugs.python.org/16993>`__: shutil.which() now "
#~ "preserves the case of the path and extension on Windows."

#~ msgid ""
#~ "`Issue #16992 <https://bugs.python.org/16992>`__: On Windows in signal."
#~ "set_wakeup_fd, validate the file descriptor argument."
#~ msgstr ""
#~ "`Issue #16992 <https://bugs.python.org/16992>`__: On Windows in signal."
#~ "set_wakeup_fd, validate the file descriptor argument."

#~ msgid ""
#~ "`Issue #16422 <https://bugs.python.org/16422>`__: For compatibility with "
#~ "the Python version, the C version of decimal now uses strings instead of "
#~ "integers for rounding mode constants."
#~ msgstr ""
#~ "`Issue #16422 <https://bugs.python.org/16422>`__: For compatibility with "
#~ "the Python version, the C version of decimal now uses strings instead of "
#~ "integers for rounding mode constants."

#~ msgid ""
#~ "`Issue #15861 <https://bugs.python.org/15861>`__: tkinter now correctly "
#~ "works with lists and tuples containing strings with whitespaces, "
#~ "backslashes or unbalanced braces."
#~ msgstr ""
#~ "`Issue #15861 <https://bugs.python.org/15861>`__: tkinter now correctly "
#~ "works with lists and tuples containing strings with whitespaces, "
#~ "backslashes or unbalanced braces."

#~ msgid ""
#~ "`Issue #16955 <https://bugs.python.org/16955>`__: Fix the poll() method "
#~ "for multiprocessing's socket connections on Windows."
#~ msgstr ""
#~ "`Issue #16955 <https://bugs.python.org/16955>`__: Fix the poll() method "
#~ "for multiprocessing's socket connections on Windows."

#~ msgid ""
#~ "`Issue #15031 <https://bugs.python.org/15031>`__: Refactor some .pyc "
#~ "management code to cut down on code duplication. Thanks to Ronan Lamy for "
#~ "the report and taking an initial stab at the problem."
#~ msgstr ""
#~ "`Issue #15031 <https://bugs.python.org/15031>`__: Refactor some .pyc "
#~ "management code to cut down on code duplication. Thanks to Ronan Lamy for "
#~ "the report and taking an initial stab at the problem."

#~ msgid ""
#~ "`Issue #16398 <https://bugs.python.org/16398>`__: Optimize deque.rotate() "
#~ "so that it only moves pointers and doesn't touch the underlying data with "
#~ "increfs and decrefs."
#~ msgstr ""
#~ "`Issue #16398 <https://bugs.python.org/16398>`__: Optimize deque.rotate() "
#~ "so that it only moves pointers and doesn't touch the underlying data with "
#~ "increfs and decrefs."

#~ msgid ""
#~ "`Issue #16900 <https://bugs.python.org/16900>`__: Issue a ResourceWarning "
#~ "when an ssl socket is left unclosed."
#~ msgstr ""
#~ "`Issue #16900 <https://bugs.python.org/16900>`__: Issue a ResourceWarning "
#~ "when an ssl socket is left unclosed."

#~ msgid ""
#~ "`Issue #13899 <https://bugs.python.org/13899>`__: ``\\A``, ``\\Z``, and ``"
#~ "\\B`` now correctly match the A, Z, and B literals when used inside "
#~ "character classes (e.g. ``'[\\A]'``). Patch by Matthew Barnett."
#~ msgstr ""
#~ "`Issue #13899 <https://bugs.python.org/13899>`__: ``\\A``, ``\\Z``, and ``"
#~ "\\B`` now correctly match the A, Z, and B literals when used inside "
#~ "character classes (e.g. ``'[\\A]'``). Patch by Matthew Barnett."

#~ msgid ""
#~ "`Issue #15545 <https://bugs.python.org/15545>`__: Fix regression in "
#~ "sqlite3's iterdump method where it was failing if the connection used a "
#~ "row factory (such as sqlite3.Row) that produced unsortable objects. "
#~ "(Regression was introduced by fix for 9750)."
#~ msgstr ""
#~ "`Issue #15545 <https://bugs.python.org/15545>`__: Fix regression in "
#~ "sqlite3's iterdump method where it was failing if the connection used a "
#~ "row factory (such as sqlite3.Row) that produced unsortable objects. "
#~ "(Regression was introduced by fix for 9750)."

#~ msgid ""
#~ "`Issue #15972 <https://bugs.python.org/15972>`__: Fix error messages when "
#~ "os functions expecting a file name or file descriptor receive the "
#~ "incorrect type."
#~ msgstr ""
#~ "`Issue #15972 <https://bugs.python.org/15972>`__: Fix error messages when "
#~ "os functions expecting a file name or file descriptor receive the "
#~ "incorrect type."

#~ msgid ""
#~ "`Issue #8109 <https://bugs.python.org/8109>`__: The ssl module now has "
#~ "support for server-side SNI, thanks to a :meth:`SSLContext."
#~ "set_servername_callback` method.  Patch by Daniel Black."
#~ msgstr ""
#~ "`Issue #8109 <https://bugs.python.org/8109>`__: The ssl module now has "
#~ "support for server-side SNI, thanks to a :meth:`SSLContext."
#~ "set_servername_callback` method.  Patch by Daniel Black."

#~ msgid ""
#~ "`Issue #16860 <https://bugs.python.org/16860>`__: In tempfile, use "
#~ "O_CLOEXEC when available to set the close-on-exec flag atomically."
#~ msgstr ""
#~ "`Issue #16860 <https://bugs.python.org/16860>`__: In tempfile, use "
#~ "O_CLOEXEC when available to set the close-on-exec flag atomically."

#~ msgid ""
#~ "`Issue #16674 <https://bugs.python.org/16674>`__: random.getrandbits() is "
#~ "now 20-40% faster for small integers."
#~ msgstr ""
#~ "`Issue #16674 <https://bugs.python.org/16674>`__: random.getrandbits() is "
#~ "now 20-40% faster for small integers."

#~ msgid ""
#~ "`Issue #16009 <https://bugs.python.org/16009>`__: JSON error messages now "
#~ "provide more information."
#~ msgstr ""
#~ "`Issue #16009 <https://bugs.python.org/16009>`__: JSON error messages now "
#~ "provide more information."

#~ msgid ""
#~ "`Issue #16828 <https://bugs.python.org/16828>`__: Fix error incorrectly "
#~ "raised by bz2.compress(b'') and bz2.BZ2Compressor.compress(b''). Initial "
#~ "patch by Martin Packman."
#~ msgstr ""
#~ "`Issue #16828 <https://bugs.python.org/16828>`__: Fix error incorrectly "
#~ "raised by bz2.compress(b'') and bz2.BZ2Compressor.compress(b''). Initial "
#~ "patch by Martin Packman."

#~ msgid ""
#~ "`Issue #16833 <https://bugs.python.org/16833>`__: In http.client."
#~ "HTTPConnection, do not concatenate the request headers and body when the "
#~ "payload exceeds 16 KB, since it can consume more memory for no benefit.  "
#~ "Patch by Benno Leslie."
#~ msgstr ""
#~ "`Issue #16833 <https://bugs.python.org/16833>`__: In http.client."
#~ "HTTPConnection, do not concatenate the request headers and body when the "
#~ "payload exceeds 16 KB, since it can consume more memory for no benefit.  "
#~ "Patch by Benno Leslie."

#~ msgid ""
#~ "`Issue #16541 <https://bugs.python.org/16541>`__: tk_setPalette() now "
#~ "works with keyword arguments."
#~ msgstr ""
#~ "`Issue #16541 <https://bugs.python.org/16541>`__: tk_setPalette() now "
#~ "works with keyword arguments."

#~ msgid ""
#~ "`Issue #16820 <https://bugs.python.org/16820>`__: In configparser, "
#~ "`parser.popitem()` no longer raises ValueError. This makes `parser."
#~ "clean()` work correctly."
#~ msgstr ""
#~ "`Issue #16820 <https://bugs.python.org/16820>`__: In configparser, "
#~ "`parser.popitem()` no longer raises ValueError. This makes `parser."
#~ "clean()` work correctly."

#~ msgid ""
#~ "`Issue #16820 <https://bugs.python.org/16820>`__: In configparser, "
#~ "``parser['section'] = {}`` now preserves section order within the parser. "
#~ "This makes `parser.update()` preserve section order as well."
#~ msgstr ""
#~ "`Issue #16820 <https://bugs.python.org/16820>`__: In configparser, "
#~ "``parser['section'] = {}`` now preserves section order within the parser. "
#~ "This makes `parser.update()` preserve section order as well."

#~ msgid ""
#~ "`Issue #16820 <https://bugs.python.org/16820>`__: In configparser, "
#~ "``parser['DEFAULT'] = {}`` now correctly clears previous values stored in "
#~ "the default section. Same goes for ``parser.update({'DEFAULT': {}})``."
#~ msgstr ""
#~ "`Issue #16820 <https://bugs.python.org/16820>`__: In configparser, "
#~ "``parser['DEFAULT'] = {}`` now correctly clears previous values stored in "
#~ "the default section. Same goes for ``parser.update({'DEFAULT': {}})``."

#~ msgid ""
#~ "`Issue #9586 <https://bugs.python.org/9586>`__: Redefine SEM_FAILED on "
#~ "MacOSX to keep compiler happy."
#~ msgstr ""
#~ "`Issue #9586 <https://bugs.python.org/9586>`__: Redefine SEM_FAILED on "
#~ "MacOSX to keep compiler happy."

#~ msgid ""
#~ "`Issue #16787 <https://bugs.python.org/16787>`__: Increase asyncore and "
#~ "asynchat default output buffers size, to decrease CPU usage and increase "
#~ "throughput."
#~ msgstr ""
#~ "`Issue #16787 <https://bugs.python.org/16787>`__: Increase asyncore and "
#~ "asynchat default output buffers size, to decrease CPU usage and increase "
#~ "throughput."

#~ msgid ""
#~ "`Issue #10527 <https://bugs.python.org/10527>`__: make multiprocessing "
#~ "use poll() instead of select() if available."
#~ msgstr ""
#~ "`Issue #10527 <https://bugs.python.org/10527>`__: make multiprocessing "
#~ "use poll() instead of select() if available."

#~ msgid ""
#~ "`Issue #16688 <https://bugs.python.org/16688>`__: Now regexes contained "
#~ "backreferences correctly work with non-ASCII strings.  Patch by Matthew "
#~ "Barnett."
#~ msgstr ""
#~ "`Issue #16688 <https://bugs.python.org/16688>`__: Now regexes contained "
#~ "backreferences correctly work with non-ASCII strings.  Patch by Matthew "
#~ "Barnett."

#~ msgid ""
#~ "`Issue #16486 <https://bugs.python.org/16486>`__: Make aifc files act as "
#~ "context managers."
#~ msgstr ""
#~ "`Issue #16486 <https://bugs.python.org/16486>`__: Make aifc files act as "
#~ "context managers."

#~ msgid ""
#~ "`Issue #16485 <https://bugs.python.org/16485>`__: Now file descriptors "
#~ "are closed if file header patching failed on closing an aifc file."
#~ msgstr ""
#~ "`Issue #16485 <https://bugs.python.org/16485>`__: Now file descriptors "
#~ "are closed if file header patching failed on closing an aifc file."

#~ msgid ""
#~ "`Issue #16640 <https://bugs.python.org/16640>`__: Run less code under a "
#~ "lock in sched module."
#~ msgstr ""
#~ "`Issue #16640 <https://bugs.python.org/16640>`__: Run less code under a "
#~ "lock in sched module."

#~ msgid ""
#~ "`Issue #16165 <https://bugs.python.org/16165>`__: sched.scheduler.run() "
#~ "no longer blocks a scheduler for other threads."
#~ msgstr ""
#~ "`Issue #16165 <https://bugs.python.org/16165>`__: sched.scheduler.run() "
#~ "no longer blocks a scheduler for other threads."

#~ msgid ""
#~ "`Issue #16641 <https://bugs.python.org/16641>`__: Default values of sched."
#~ "scheduler.enter() are no longer modifiable."
#~ msgstr ""
#~ "`Issue #16641 <https://bugs.python.org/16641>`__: Default values of sched."
#~ "scheduler.enter() are no longer modifiable."

#~ msgid ""
#~ "`Issue #16618 <https://bugs.python.org/16618>`__: Make glob.glob match "
#~ "consistently across strings and bytes regarding leading dots.  Patch by "
#~ "Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16618 <https://bugs.python.org/16618>`__: Make glob.glob match "
#~ "consistently across strings and bytes regarding leading dots.  Patch by "
#~ "Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16788 <https://bugs.python.org/16788>`__: Add samestat to Lib/"
#~ "ntpath.py"
#~ msgstr ""
#~ "`Issue #16788 <https://bugs.python.org/16788>`__: Add samestat to Lib/"
#~ "ntpath.py"

#~ msgid ""
#~ "`Issue #16713 <https://bugs.python.org/16713>`__: Parsing of 'tel' urls "
#~ "using urlparse separates params from path."
#~ msgstr ""
#~ "`Issue #16713 <https://bugs.python.org/16713>`__: Parsing of 'tel' urls "
#~ "using urlparse separates params from path."

#~ msgid ""
#~ "`Issue #16443 <https://bugs.python.org/16443>`__: Add docstrings to "
#~ "regular expression match objects. Patch by Anton Kasyanov."
#~ msgstr ""
#~ "`Issue #16443 <https://bugs.python.org/16443>`__: Add docstrings to "
#~ "regular expression match objects. Patch by Anton Kasyanov."

#~ msgid ""
#~ "`Issue #15701 <https://bugs.python.org/15701>`__: Fix HTTPError info "
#~ "method call to return the headers information."
#~ msgstr ""
#~ "`Issue #15701 <https://bugs.python.org/15701>`__: Fix HTTPError info "
#~ "method call to return the headers information."

#~ msgid ""
#~ "`Issue #16752 <https://bugs.python.org/16752>`__: Add a missing import to "
#~ "modulefinder. Patch by Berker Peksag."
#~ msgstr ""
#~ "`Issue #16752 <https://bugs.python.org/16752>`__: Add a missing import to "
#~ "modulefinder. Patch by Berker Peksag."

#~ msgid ""
#~ "`Issue #16646 <https://bugs.python.org/16646>`__: ftplib.FTP.makeport() "
#~ "might lose socket error details. (patch by Serhiy Storchaka)"
#~ msgstr ""
#~ "`Issue #16646 <https://bugs.python.org/16646>`__: ftplib.FTP.makeport() "
#~ "might lose socket error details. (patch by Serhiy Storchaka)"

#~ msgid ""
#~ "`Issue #16626 <https://bugs.python.org/16626>`__: Fix infinite recursion "
#~ "in glob.glob() on Windows when the pattern contains a wildcard in the "
#~ "drive or UNC path.  Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16626 <https://bugs.python.org/16626>`__: Fix infinite recursion "
#~ "in glob.glob() on Windows when the pattern contains a wildcard in the "
#~ "drive or UNC path.  Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #15783 <https://bugs.python.org/15783>`__: Except for the number "
#~ "methods, the C version of decimal now supports all None default values "
#~ "present in decimal.py. These values were largely undocumented."
#~ msgstr ""
#~ "`Issue #15783 <https://bugs.python.org/15783>`__: Except for the number "
#~ "methods, the C version of decimal now supports all None default values "
#~ "present in decimal.py. These values were largely undocumented."

#~ msgid ""
#~ "`Issue #11175 <https://bugs.python.org/11175>`__: argparse.FileType now "
#~ "accepts encoding and errors arguments. Patch by Lucas Maystre."
#~ msgstr ""
#~ "`Issue #11175 <https://bugs.python.org/11175>`__: argparse.FileType now "
#~ "accepts encoding and errors arguments. Patch by Lucas Maystre."

#~ msgid ""
#~ "`Issue #16488 <https://bugs.python.org/16488>`__: epoll() objects now "
#~ "support the `with` statement.  Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16488 <https://bugs.python.org/16488>`__: epoll() objects now "
#~ "support the `with` statement.  Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16298 <https://bugs.python.org/16298>`__: In HTTPResponse.read(), "
#~ "close the socket when there is no Content-Length and the incoming stream "
#~ "is finished.  Patch by Eran Rundstein."
#~ msgstr ""
#~ "`Issue #16298 <https://bugs.python.org/16298>`__: In HTTPResponse.read(), "
#~ "close the socket when there is no Content-Length and the incoming stream "
#~ "is finished.  Patch by Eran Rundstein."

#~ msgid ""
#~ "`Issue #16049 <https://bugs.python.org/16049>`__: Add abc.ABC class to "
#~ "enable the use of inheritance to create ABCs, rather than the more "
#~ "cumbersome metaclass=ABCMeta. Patch by Bruno Dupuis."
#~ msgstr ""
#~ "`Issue #16049 <https://bugs.python.org/16049>`__: Add abc.ABC class to "
#~ "enable the use of inheritance to create ABCs, rather than the more "
#~ "cumbersome metaclass=ABCMeta. Patch by Bruno Dupuis."

#~ msgid ""
#~ "`Issue #15701 <https://bugs.python.org/15701>`__: Add a .headers "
#~ "attribute to urllib.error.HTTPError. Patch contributed by Berker Peksag."
#~ msgstr ""
#~ "`Issue #15701 <https://bugs.python.org/15701>`__: Add a .headers "
#~ "attribute to urllib.error.HTTPError. Patch contributed by Berker Peksag."

#~ msgid ""
#~ "`Issue #15872 <https://bugs.python.org/15872>`__: Fix 3.3 regression "
#~ "introduced by the new fd-based shutil.rmtree that caused it to not ignore "
#~ "certain errors when ignore_errors was set. Patch by Alessandro Moura and "
#~ "Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #15872 <https://bugs.python.org/15872>`__: Fix 3.3 regression "
#~ "introduced by the new fd-based shutil.rmtree that caused it to not ignore "
#~ "certain errors when ignore_errors was set. Patch by Alessandro Moura and "
#~ "Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16248 <https://bugs.python.org/16248>`__: Disable code execution "
#~ "from the user's home directory by tkinter when the -E flag is passed to "
#~ "Python.  Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #16248 <https://bugs.python.org/16248>`__: Disable code execution "
#~ "from the user's home directory by tkinter when the -E flag is passed to "
#~ "Python.  Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #13390 <https://bugs.python.org/13390>`__: New function :func:`sys."
#~ "getallocatedblocks()` returns the number of memory blocks currently "
#~ "allocated."
#~ msgstr ""
#~ "`Issue #13390 <https://bugs.python.org/13390>`__: New function :func:`sys."
#~ "getallocatedblocks()` returns the number of memory blocks currently "
#~ "allocated."

#~ msgid ""
#~ "`Issue #16628 <https://bugs.python.org/16628>`__: Fix a memory leak in "
#~ "ctypes.resize()."
#~ msgstr ""
#~ "`Issue #16628 <https://bugs.python.org/16628>`__: Fix a memory leak in "
#~ "ctypes.resize()."

#~ msgid ""
#~ "`Issue #13614 <https://bugs.python.org/13614>`__: Fix setup.py register "
#~ "failure with invalid rst in description. Patch by Julien Courteau and "
#~ "Pierre Paul Lefebvre."
#~ msgstr ""
#~ "`Issue #13614 <https://bugs.python.org/13614>`__: Fix setup.py register "
#~ "failure with invalid rst in description. Patch by Julien Courteau and "
#~ "Pierre Paul Lefebvre."

#~ msgid ""
#~ "`Issue #13512 <https://bugs.python.org/13512>`__: Create ~/.pypirc "
#~ "securely (CVE-2011-4944).  Initial patch by Philip Jenvey, tested by "
#~ "Mageia and Debian."
#~ msgstr ""
#~ "`Issue #13512 <https://bugs.python.org/13512>`__: Create ~/.pypirc "
#~ "securely (CVE-2011-4944).  Initial patch by Philip Jenvey, tested by "
#~ "Mageia and Debian."

#~ msgid ""
#~ "`Issue #7719 <https://bugs.python.org/7719>`__: Make distutils ignore ``."
#~ "nfs*`` files instead of choking later on.  Initial patch by SilentGhost "
#~ "and Jeff Ramnani."
#~ msgstr ""
#~ "`Issue #7719 <https://bugs.python.org/7719>`__: Make distutils ignore ``."
#~ "nfs*`` files instead of choking later on.  Initial patch by SilentGhost "
#~ "and Jeff Ramnani."

#~ msgid ""
#~ "`Issue #13120 <https://bugs.python.org/13120>`__: Allow calling pdb."
#~ "set_trace() from thread. Patch by Ilya Sandler."
#~ msgstr ""
#~ "`Issue #13120 <https://bugs.python.org/13120>`__: Allow calling pdb."
#~ "set_trace() from thread. Patch by Ilya Sandler."

#~ msgid ""
#~ "`Issue #16585 <https://bugs.python.org/16585>`__: Make CJK encoders "
#~ "support error handlers that return bytes per PEP 383."
#~ msgstr ""
#~ "`Issue #16585 <https://bugs.python.org/16585>`__: Make CJK encoders "
#~ "support error handlers that return bytes per PEP 383."

#~ msgid ""
#~ "`Issue #10182 <https://bugs.python.org/10182>`__: The re module doesn't "
#~ "truncate indices to 32 bits anymore. Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #10182 <https://bugs.python.org/10182>`__: The re module doesn't "
#~ "truncate indices to 32 bits anymore. Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16333 <https://bugs.python.org/16333>`__: use (\",\", \": \") as "
#~ "default separator in json when indent is specified, to avoid trailing "
#~ "whitespace.  Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16333 <https://bugs.python.org/16333>`__: use (\",\", \": \") as "
#~ "default separator in json when indent is specified, to avoid trailing "
#~ "whitespace.  Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16573 <https://bugs.python.org/16573>`__: In 2to3, treat "
#~ "enumerate() like a consuming call, so superfluous list() calls aren't "
#~ "added to filter(), map(), and zip() which are directly passed enumerate()."
#~ msgstr ""
#~ "`Issue #16573 <https://bugs.python.org/16573>`__: In 2to3, treat "
#~ "enumerate() like a consuming call, so superfluous list() calls aren't "
#~ "added to filter(), map(), and zip() which are directly passed enumerate()."

#~ msgid ""
#~ "`Issue #16464 <https://bugs.python.org/16464>`__: Reset the Content-"
#~ "Length header when a urllib Request is reused with new data."
#~ msgstr ""
#~ "`Issue #16464 <https://bugs.python.org/16464>`__: Reset the Content-"
#~ "Length header when a urllib Request is reused with new data."

#~ msgid ""
#~ "`Issue #12848 <https://bugs.python.org/12848>`__: The pure Python pickle "
#~ "implementation now treats object lengths as unsigned 32-bit integers, "
#~ "like the C implementation does. Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #12848 <https://bugs.python.org/12848>`__: The pure Python pickle "
#~ "implementation now treats object lengths as unsigned 32-bit integers, "
#~ "like the C implementation does. Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16423 <https://bugs.python.org/16423>`__: urllib.request now has "
#~ "support for ``data:`` URLs.  Patch by Mathias Panzenb√∂ck."
#~ msgstr ""
#~ "`Issue #16423 <https://bugs.python.org/16423>`__: urllib.request now has "
#~ "support for ``data:`` URLs.  Patch by Mathias Panzenb√∂ck."

#~ msgid ""
#~ "`Issue #4473 <https://bugs.python.org/4473>`__: Add a POP3.stls() to "
#~ "switch a clear-text POP3 session into an encrypted POP3 session, on "
#~ "supported servers.  Patch by Lorenzo Catucci."
#~ msgstr ""
#~ "`Issue #4473 <https://bugs.python.org/4473>`__: Add a POP3.stls() to "
#~ "switch a clear-text POP3 session into an encrypted POP3 session, on "
#~ "supported servers.  Patch by Lorenzo Catucci."

#~ msgid ""
#~ "`Issue #4473 <https://bugs.python.org/4473>`__: Add a POP3.capa() method "
#~ "to query the capabilities advertised by the POP3 server.  Patch by "
#~ "Lorenzo Catucci."
#~ msgstr ""
#~ "`Issue #4473 <https://bugs.python.org/4473>`__: Add a POP3.capa() method "
#~ "to query the capabilities advertised by the POP3 server.  Patch by "
#~ "Lorenzo Catucci."

#~ msgid ""
#~ "`Issue #4473 <https://bugs.python.org/4473>`__: Ensure the socket is "
#~ "shutdown cleanly in POP3.close(). Patch by Lorenzo Catucci."
#~ msgstr ""
#~ "`Issue #4473 <https://bugs.python.org/4473>`__: Ensure the socket is "
#~ "shutdown cleanly in POP3.close(). Patch by Lorenzo Catucci."

#~ msgid ""
#~ "`Issue #16522 <https://bugs.python.org/16522>`__: added FAIL_FAST flag to "
#~ "doctest."
#~ msgstr ""
#~ "`Issue #16522 <https://bugs.python.org/16522>`__: added FAIL_FAST flag to "
#~ "doctest."

#~ msgid ""
#~ "`Issue #15627 <https://bugs.python.org/15627>`__: Add the importlib.abc."
#~ "InspectLoader.source_to_code() method."
#~ msgstr ""
#~ "`Issue #15627 <https://bugs.python.org/15627>`__: Add the importlib.abc."
#~ "InspectLoader.source_to_code() method."

#~ msgid ""
#~ "`Issue #14631 <https://bugs.python.org/14631>`__: Add a new :class:"
#~ "`weakref.WeakMethod` to simulate weak references to bound methods."
#~ msgstr ""
#~ "`Issue #14631 <https://bugs.python.org/14631>`__: Add a new :class:"
#~ "`weakref.WeakMethod` to simulate weak references to bound methods."

#~ msgid ""
#~ "`Issue #16469 <https://bugs.python.org/16469>`__: Fix exceptions from "
#~ "float -> Fraction and Decimal -> Fraction conversions for special values "
#~ "to be consistent with those for float -> int and Decimal -> int.  Patch "
#~ "by Alexey Kachayev."
#~ msgstr ""
#~ "`Issue #16469 <https://bugs.python.org/16469>`__: Fix exceptions from "
#~ "float -> Fraction and Decimal -> Fraction conversions for special values "
#~ "to be consistent with those for float -> int and Decimal -> int.  Patch "
#~ "by Alexey Kachayev."

#~ msgid ""
#~ "`Issue #16481 <https://bugs.python.org/16481>`__: multiprocessing no "
#~ "longer leaks process handles on Windows."
#~ msgstr ""
#~ "`Issue #16481 <https://bugs.python.org/16481>`__: multiprocessing no "
#~ "longer leaks process handles on Windows."

#~ msgid ""
#~ "`Issue #12428 <https://bugs.python.org/12428>`__: Add a pure Python "
#~ "implementation of functools.partial(). Patch by Brian Thorne."
#~ msgstr ""
#~ "`Issue #12428 <https://bugs.python.org/12428>`__: Add a pure Python "
#~ "implementation of functools.partial(). Patch by Brian Thorne."

#~ msgid ""
#~ "`Issue #16140 <https://bugs.python.org/16140>`__: The subprocess module "
#~ "no longer double closes its child subprocess.PIPE parent file descriptors "
#~ "on child error prior to exec()."
#~ msgstr ""
#~ "`Issue #16140 <https://bugs.python.org/16140>`__: The subprocess module "
#~ "no longer double closes its child subprocess.PIPE parent file descriptors "
#~ "on child error prior to exec()."

#~ msgid ""
#~ "`Issue #16327 <https://bugs.python.org/16327>`__: The subprocess module "
#~ "no longer leaks file descriptors used for stdin/stdout/stderr pipes to "
#~ "the child when fork() fails."
#~ msgstr ""
#~ "`Issue #16327 <https://bugs.python.org/16327>`__: The subprocess module "
#~ "no longer leaks file descriptors used for stdin/stdout/stderr pipes to "
#~ "the child when fork() fails."

#~ msgid ""
#~ "`Issue #14396 <https://bugs.python.org/14396>`__: Handle the odd rare "
#~ "case of waitpid returning 0 when not expected in subprocess.Popen.wait()."
#~ msgstr ""
#~ "`Issue #14396 <https://bugs.python.org/14396>`__: Handle the odd rare "
#~ "case of waitpid returning 0 when not expected in subprocess.Popen.wait()."

#~ msgid ""
#~ "`Issue #16411 <https://bugs.python.org/16411>`__: Fix a bug where zlib."
#~ "decompressobj().flush() might try to access previously-freed memory. "
#~ "Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16411 <https://bugs.python.org/16411>`__: Fix a bug where zlib."
#~ "decompressobj().flush() might try to access previously-freed memory. "
#~ "Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16357 <https://bugs.python.org/16357>`__: fix calling accept() on "
#~ "a SSLSocket created through SSLContext.wrap_socket().  Original patch by "
#~ "Jeff McNeil."
#~ msgstr ""
#~ "`Issue #16357 <https://bugs.python.org/16357>`__: fix calling accept() on "
#~ "a SSLSocket created through SSLContext.wrap_socket().  Original patch by "
#~ "Jeff McNeil."

#~ msgid ""
#~ "`Issue #16409 <https://bugs.python.org/16409>`__: The reporthook callback "
#~ "made by the legacy urllib.request.urlretrieve API now properly supplies a "
#~ "constant non-zero block_size as it did in Python 3.2 and 2.7.  This "
#~ "matches the behavior of urllib.request.URLopener.retrieve."
#~ msgstr ""
#~ "`Issue #16409 <https://bugs.python.org/16409>`__: The reporthook callback "
#~ "made by the legacy urllib.request.urlretrieve API now properly supplies a "
#~ "constant non-zero block_size as it did in Python 3.2 and 2.7.  This "
#~ "matches the behavior of urllib.request.URLopener.retrieve."

#~ msgid ""
#~ "`Issue #16431 <https://bugs.python.org/16431>`__: Use the type "
#~ "information when constructing a Decimal subtype from a Decimal argument."
#~ msgstr ""
#~ "`Issue #16431 <https://bugs.python.org/16431>`__: Use the type "
#~ "information when constructing a Decimal subtype from a Decimal argument."

#~ msgid ""
#~ "`Issue #15641 <https://bugs.python.org/15641>`__: Clean up deprecated "
#~ "classes from importlib. Patch by Taras Lyapun."
#~ msgstr ""
#~ "`Issue #15641 <https://bugs.python.org/15641>`__: Clean up deprecated "
#~ "classes from importlib. Patch by Taras Lyapun."

#~ msgid ""
#~ "`Issue #16350 <https://bugs.python.org/16350>`__: zlib.decompressobj()."
#~ "decompress() now accumulates data from successive calls after EOF in "
#~ "unused_data, instead of only saving the argument to the last call. "
#~ "decompressobj().flush() now correctly sets unused_data and "
#~ "unconsumed_tail. A bug in the handling of MemoryError when setting the "
#~ "unconsumed_tail attribute has also been fixed. Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16350 <https://bugs.python.org/16350>`__: zlib.decompressobj()."
#~ "decompress() now accumulates data from successive calls after EOF in "
#~ "unused_data, instead of only saving the argument to the last call. "
#~ "decompressobj().flush() now correctly sets unused_data and "
#~ "unconsumed_tail. A bug in the handling of MemoryError when setting the "
#~ "unconsumed_tail attribute has also been fixed. Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #12759 <https://bugs.python.org/12759>`__: sre_parse now raises a "
#~ "proper error when the name of the group is missing.  Initial patch by "
#~ "Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #12759 <https://bugs.python.org/12759>`__: sre_parse now raises a "
#~ "proper error when the name of the group is missing.  Initial patch by "
#~ "Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16152 <https://bugs.python.org/16152>`__: fix tokenize to ignore "
#~ "whitespace at the end of the code when no newline is found.  Patch by Ned "
#~ "Batchelder."
#~ msgstr ""
#~ "`Issue #16152 <https://bugs.python.org/16152>`__: fix tokenize to ignore "
#~ "whitespace at the end of the code when no newline is found.  Patch by Ned "
#~ "Batchelder."

#~ msgid ""
#~ "`Issue #16284 <https://bugs.python.org/16284>`__: Prevent keeping "
#~ "unnecessary references to worker functions in concurrent.futures "
#~ "ThreadPoolExecutor."
#~ msgstr ""
#~ "`Issue #16284 <https://bugs.python.org/16284>`__: Prevent keeping "
#~ "unnecessary references to worker functions in concurrent.futures "
#~ "ThreadPoolExecutor."

#~ msgid ""
#~ "`Issue #16230 <https://bugs.python.org/16230>`__: Fix a crash in select."
#~ "select() when one of the lists changes size while iterated on.  Patch by "
#~ "Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16230 <https://bugs.python.org/16230>`__: Fix a crash in select."
#~ "select() when one of the lists changes size while iterated on.  Patch by "
#~ "Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16228 <https://bugs.python.org/16228>`__: Fix a crash in the json "
#~ "module where a list changes size while it is being encoded.  Patch by "
#~ "Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16228 <https://bugs.python.org/16228>`__: Fix a crash in the json "
#~ "module where a list changes size while it is being encoded.  Patch by "
#~ "Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16351 <https://bugs.python.org/16351>`__: New function gc."
#~ "get_stats() returns per-generation collection statistics."
#~ msgstr ""
#~ "`Issue #16351 <https://bugs.python.org/16351>`__: New function gc."
#~ "get_stats() returns per-generation collection statistics."

#~ msgid ""
#~ "`Issue #14897 <https://bugs.python.org/14897>`__: Enhance error messages "
#~ "of struct.pack and struct.pack_into. Patch by Matti M√§ki."
#~ msgstr ""
#~ "`Issue #14897 <https://bugs.python.org/14897>`__: Enhance error messages "
#~ "of struct.pack and struct.pack_into. Patch by Matti M√§ki."

#~ msgid ""
#~ "`Issue #16316 <https://bugs.python.org/16316>`__: mimetypes now "
#~ "recognizes the .xz and .txz (.tar.xz) extensions. Patch by Serhiy "
#~ "Storchaka."
#~ msgstr ""
#~ "`Issue #16316 <https://bugs.python.org/16316>`__: mimetypes now "
#~ "recognizes the .xz and .txz (.tar.xz) extensions. Patch by Serhiy "
#~ "Storchaka."

#~ msgid ""
#~ "`Issue #12890 <https://bugs.python.org/12890>`__: cgitb no longer prints "
#~ "spurious <p> tags in text mode when the logdir option is specified."
#~ msgstr ""
#~ "`Issue #12890 <https://bugs.python.org/12890>`__: cgitb no longer prints "
#~ "spurious <p> tags in text mode when the logdir option is specified."

#~ msgid ""
#~ "`Issue #16307 <https://bugs.python.org/16307>`__: Fix multiprocessing."
#~ "Pool.map_async not calling its callbacks. Patch by Janne Karila."
#~ msgstr ""
#~ "`Issue #16307 <https://bugs.python.org/16307>`__: Fix multiprocessing."
#~ "Pool.map_async not calling its callbacks. Patch by Janne Karila."

#~ msgid ""
#~ "`Issue #16305 <https://bugs.python.org/16305>`__: Fix a segmentation "
#~ "fault occurring when interrupting math.factorial."
#~ msgstr ""
#~ "`Issue #16305 <https://bugs.python.org/16305>`__: Fix a segmentation "
#~ "fault occurring when interrupting math.factorial."

#~ msgid ""
#~ "`Issue #16116 <https://bugs.python.org/16116>`__: Fix include and library "
#~ "paths to be correct when building C extensions in venvs."
#~ msgstr ""
#~ "`Issue #16116 <https://bugs.python.org/16116>`__: Fix include and library "
#~ "paths to be correct when building C extensions in venvs."

#~ msgid ""
#~ "`Issue #16245 <https://bugs.python.org/16245>`__: Fix the value of a few "
#~ "entities in html.entities.html5."
#~ msgstr ""
#~ "`Issue #16245 <https://bugs.python.org/16245>`__: Fix the value of a few "
#~ "entities in html.entities.html5."

#~ msgid ""
#~ "`Issue #16301 <https://bugs.python.org/16301>`__: Fix the localhost "
#~ "verification in urllib/request.py for ``file://`` urls."
#~ msgstr ""
#~ "`Issue #16301 <https://bugs.python.org/16301>`__: Fix the localhost "
#~ "verification in urllib/request.py for ``file://`` urls."

#~ msgid ""
#~ "`Issue #16250 <https://bugs.python.org/16250>`__: Fix the invocations of "
#~ "URLError which had misplaced filename attribute for exception."
#~ msgstr ""
#~ "`Issue #16250 <https://bugs.python.org/16250>`__: Fix the invocations of "
#~ "URLError which had misplaced filename attribute for exception."

#~ msgid ""
#~ "`Issue #10836 <https://bugs.python.org/10836>`__: Fix exception raised "
#~ "when file not found in urlretrieve Initial patch by Ezio Melotti."
#~ msgstr ""
#~ "`Issue #10836 <https://bugs.python.org/10836>`__: Fix exception raised "
#~ "when file not found in urlretrieve Initial patch by Ezio Melotti."

#~ msgid ""
#~ "`Issue #14398 <https://bugs.python.org/14398>`__: Fix size truncation and "
#~ "overflow bugs in the bz2 module."
#~ msgstr ""
#~ "`Issue #14398 <https://bugs.python.org/14398>`__: Fix size truncation and "
#~ "overflow bugs in the bz2 module."

#~ msgid ""
#~ "`Issue #12692 <https://bugs.python.org/12692>`__: Fix resource leak in "
#~ "urllib.request when talking to an HTTP server that does not include a "
#~ "``Connection: close`` header in its responses."
#~ msgstr ""
#~ "`Issue #12692 <https://bugs.python.org/12692>`__: Fix resource leak in "
#~ "urllib.request when talking to an HTTP server that does not include a "
#~ "``Connection: close`` header in its responses."

#~ msgid ""
#~ "`Issue #12034 <https://bugs.python.org/12034>`__: Fix bogus caching of "
#~ "result in check_GetFinalPathNameByHandle. Patch by Atsuo Ishimoto."
#~ msgstr ""
#~ "`Issue #12034 <https://bugs.python.org/12034>`__: Fix bogus caching of "
#~ "result in check_GetFinalPathNameByHandle. Patch by Atsuo Ishimoto."

#~ msgid ""
#~ "`Issue #16220 <https://bugs.python.org/16220>`__: wsgiref now always "
#~ "calls close() on an iterable response. Patch by Brent Tubbs."
#~ msgstr ""
#~ "`Issue #16220 <https://bugs.python.org/16220>`__: wsgiref now always "
#~ "calls close() on an iterable response. Patch by Brent Tubbs."

#~ msgid ""
#~ "`Issue #16270 <https://bugs.python.org/16270>`__: urllib may hang when "
#~ "used for retrieving files via FTP by using a context manager.  Patch by "
#~ "Giampaolo Rodola'."
#~ msgstr ""
#~ "`Issue #16270 <https://bugs.python.org/16270>`__: urllib may hang when "
#~ "used for retrieving files via FTP by using a context manager.  Patch by "
#~ "Giampaolo Rodola'."

#~ msgid ""
#~ "`Issue #16461 <https://bugs.python.org/16461>`__: Wave library should be "
#~ "able to deal with 4GB wav files, and sample rate of 44100 Hz."
#~ msgstr ""
#~ "`Issue #16461 <https://bugs.python.org/16461>`__: Wave library should be "
#~ "able to deal with 4GB wav files, and sample rate of 44100 Hz."

#~ msgid ""
#~ "`Issue #16176 <https://bugs.python.org/16176>`__: Properly identify "
#~ "Windows 8 via platform.platform()"
#~ msgstr ""
#~ "`Issue #16176 <https://bugs.python.org/16176>`__: Properly identify "
#~ "Windows 8 via platform.platform()"

#~ msgid ""
#~ "`Issue #16088 <https://bugs.python.org/16088>`__: "
#~ "BaseHTTPRequestHandler's send_error method includes a Content-Length "
#~ "header in its response now. Patch by Antoine Pitrou."
#~ msgstr ""
#~ "`Issue #16088 <https://bugs.python.org/16088>`__: "
#~ "BaseHTTPRequestHandler's send_error method includes a Content-Length "
#~ "header in its response now. Patch by Antoine Pitrou."

#~ msgid ""
#~ "`Issue #16114 <https://bugs.python.org/16114>`__: The subprocess module "
#~ "no longer provides a misleading error message stating that args[0] did "
#~ "not exist when either the cwd or executable keyword arguments specified a "
#~ "path that did not exist."
#~ msgstr ""
#~ "`Issue #16114 <https://bugs.python.org/16114>`__: The subprocess module "
#~ "no longer provides a misleading error message stating that args[0] did "
#~ "not exist when either the cwd or executable keyword arguments specified a "
#~ "path that did not exist."

#~ msgid ""
#~ "`Issue #16169 <https://bugs.python.org/16169>`__: Fix ctypes.WinError()'s "
#~ "confusion between errno and winerror."
#~ msgstr ""
#~ "`Issue #16169 <https://bugs.python.org/16169>`__: Fix ctypes.WinError()'s "
#~ "confusion between errno and winerror."

#~ msgid ""
#~ "`Issue #16110 <https://bugs.python.org/16110>`__: logging.fileConfig now "
#~ "accepts a pre-initialised ConfigParser instance."
#~ msgstr ""
#~ "`Issue #16110 <https://bugs.python.org/16110>`__: logging.fileConfig now "
#~ "accepts a pre-initialised ConfigParser instance."

#~ msgid ""
#~ "`Issue #1492704 <https://bugs.python.org/1492704>`__: shutil.copyfile() "
#~ "raises a distinct SameFileError now if source and destination are the "
#~ "same file. Patch by Atsuo Ishimoto."
#~ msgstr ""
#~ "`Issue #1492704 <https://bugs.python.org/1492704>`__: shutil.copyfile() "
#~ "raises a distinct SameFileError now if source and destination are the "
#~ "same file. Patch by Atsuo Ishimoto."

#~ msgid ""
#~ "`Issue #13896 <https://bugs.python.org/13896>`__: Make shelf instances "
#~ "work with 'with' as context managers. Original patch by Filip "
#~ "Gruszczy≈Ñski."
#~ msgstr ""
#~ "`Issue #13896 <https://bugs.python.org/13896>`__: Make shelf instances "
#~ "work with 'with' as context managers. Original patch by Filip "
#~ "Gruszczy≈Ñski."

#~ msgid ""
#~ "`Issue #15417 <https://bugs.python.org/15417>`__: Add support for csh and "
#~ "fish in venv activation scripts."
#~ msgstr ""
#~ "`Issue #15417 <https://bugs.python.org/15417>`__: Add support for csh and "
#~ "fish in venv activation scripts."

#~ msgid ""
#~ "`Issue #14377 <https://bugs.python.org/14377>`__: ElementTree.write and "
#~ "some of the module-level functions have a new parameter - "
#~ "*short_empty_elements*. It controls how elements with no contents are "
#~ "emitted."
#~ msgstr ""
#~ "`Issue #14377 <https://bugs.python.org/14377>`__: ElementTree.write and "
#~ "some of the module-level functions have a new parameter - "
#~ "*short_empty_elements*. It controls how elements with no contents are "
#~ "emitted."

#~ msgid ""
#~ "`Issue #16089 <https://bugs.python.org/16089>`__: Allow ElementTree."
#~ "TreeBuilder to work again with a non-Element element_factory (fixes a "
#~ "regression in SimpleTAL)."
#~ msgstr ""
#~ "`Issue #16089 <https://bugs.python.org/16089>`__: Allow ElementTree."
#~ "TreeBuilder to work again with a non-Element element_factory (fixes a "
#~ "regression in SimpleTAL)."

#~ msgid ""
#~ "`Issue #9650 <https://bugs.python.org/9650>`__: List commonly used format "
#~ "codes in time.strftime and time.strptime docsttings.  Original patch by "
#~ "Mike Hoy."
#~ msgstr ""
#~ "`Issue #9650 <https://bugs.python.org/9650>`__: List commonly used format "
#~ "codes in time.strftime and time.strptime docsttings.  Original patch by "
#~ "Mike Hoy."

#~ msgid ""
#~ "`Issue #15452 <https://bugs.python.org/15452>`__: logging configuration "
#~ "socket listener now has a verify option that allows an application to "
#~ "apply a verification function to the received configuration data before "
#~ "it is acted upon."
#~ msgstr ""
#~ "`Issue #15452 <https://bugs.python.org/15452>`__: logging configuration "
#~ "socket listener now has a verify option that allows an application to "
#~ "apply a verification function to the received configuration data before "
#~ "it is acted upon."

#~ msgid ""
#~ "`Issue #16034 <https://bugs.python.org/16034>`__: Fix performance "
#~ "regressions in the new `bz2.BZ2File` implementation.  Initial patch by "
#~ "Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16034 <https://bugs.python.org/16034>`__: Fix performance "
#~ "regressions in the new `bz2.BZ2File` implementation.  Initial patch by "
#~ "Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #15756 <https://bugs.python.org/15756>`__: `subprocess.poll()` now "
#~ "properly handles `errno.ECHILD` to return a returncode of 0 when the "
#~ "child has already exited or cannot be waited on."
#~ msgstr ""
#~ "`Issue #15756 <https://bugs.python.org/15756>`__: `subprocess.poll()` now "
#~ "properly handles `errno.ECHILD` to return a returncode of 0 when the "
#~ "child has already exited or cannot be waited on."

#~ msgid ""
#~ "`Issue #15323 <https://bugs.python.org/15323>`__: Improve failure message "
#~ "of `Mock.assert_called_once_with()`."
#~ msgstr ""
#~ "`Issue #15323 <https://bugs.python.org/15323>`__: Improve failure message "
#~ "of `Mock.assert_called_once_with()`."

#~ msgid ""
#~ "`Issue #16064 <https://bugs.python.org/16064>`__: ``unittest -m`` claims "
#~ "executable is \"python\", not \"python3\"."
#~ msgstr ""
#~ "`Issue #16064 <https://bugs.python.org/16064>`__: ``unittest -m`` claims "
#~ "executable is \"python\", not \"python3\"."

#~ msgid ""
#~ "`Issue #12376 <https://bugs.python.org/12376>`__: Pass on parameters in "
#~ "`TextTestResult.__init__()` super call."
#~ msgstr ""
#~ "`Issue #12376 <https://bugs.python.org/12376>`__: Pass on parameters in "
#~ "`TextTestResult.__init__()` super call."

#~ msgid ""
#~ "`Issue #15222 <https://bugs.python.org/15222>`__: Insert blank line after "
#~ "each message in mbox mailboxes."
#~ msgstr ""
#~ "`Issue #15222 <https://bugs.python.org/15222>`__: Insert blank line after "
#~ "each message in mbox mailboxes."

#~ msgid ""
#~ "`Issue #16013 <https://bugs.python.org/16013>`__: Fix `csv.Reader` "
#~ "parsing issue with ending quote characters. Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16013 <https://bugs.python.org/16013>`__: Fix `csv.Reader` "
#~ "parsing issue with ending quote characters. Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #15421 <https://bugs.python.org/15421>`__: Fix an OverflowError in "
#~ "`Calendar.itermonthdates()` after `datetime.MAXYEAR`.  Patch by C√©dric "
#~ "Krier."
#~ msgstr ""
#~ "`Issue #15421 <https://bugs.python.org/15421>`__: Fix an OverflowError in "
#~ "`Calendar.itermonthdates()` after `datetime.MAXYEAR`.  Patch by C√©dric "
#~ "Krier."

#~ msgid ""
#~ "`Issue #16112 <https://bugs.python.org/16112>`__: platform.architecture "
#~ "does not correctly escape argument to /usr/bin/file.  Patch by David "
#~ "Benjamin."
#~ msgstr ""
#~ "`Issue #16112 <https://bugs.python.org/16112>`__: platform.architecture "
#~ "does not correctly escape argument to /usr/bin/file.  Patch by David "
#~ "Benjamin."

#~ msgid ""
#~ "`Issue #15970 <https://bugs.python.org/15970>`__: `xml.etree.ElementTree` "
#~ "now serializes correctly the empty HTML elements 'meta' and 'param'."
#~ msgstr ""
#~ "`Issue #15970 <https://bugs.python.org/15970>`__: `xml.etree.ElementTree` "
#~ "now serializes correctly the empty HTML elements 'meta' and 'param'."

#~ msgid ""
#~ "`Issue #15842 <https://bugs.python.org/15842>`__: The `SocketIO.{readable,"
#~ "writable,seekable}` methods now raise ValueError when the file-like "
#~ "object is closed.  Patch by Alessandro Moura."
#~ msgstr ""
#~ "`Issue #15842 <https://bugs.python.org/15842>`__: The `SocketIO.{readable,"
#~ "writable,seekable}` methods now raise ValueError when the file-like "
#~ "object is closed.  Patch by Alessandro Moura."

#~ msgid ""
#~ "`Issue #15876 <https://bugs.python.org/15876>`__: Fix a refleak in the "
#~ "`curses` module: window.encoding."
#~ msgstr ""
#~ "`Issue #15876 <https://bugs.python.org/15876>`__: Fix a refleak in the "
#~ "`curses` module: window.encoding."

#~ msgid ""
#~ "`Issue #15881 <https://bugs.python.org/15881>`__: Fix `atexit` hook in "
#~ "`multiprocessing`.  Original patch by Chris McDonough."
#~ msgstr ""
#~ "`Issue #15881 <https://bugs.python.org/15881>`__: Fix `atexit` hook in "
#~ "`multiprocessing`.  Original patch by Chris McDonough."

#~ msgid ""
#~ "`Issue #15841 <https://bugs.python.org/15841>`__: The readable(), "
#~ "writable() and seekable() methods of `io.BytesIO` and `io.StringIO` "
#~ "objects now raise ValueError when the object has been closed.  Patch by "
#~ "Alessandro Moura."
#~ msgstr ""
#~ "`Issue #15841 <https://bugs.python.org/15841>`__: The readable(), "
#~ "writable() and seekable() methods of `io.BytesIO` and `io.StringIO` "
#~ "objects now raise ValueError when the object has been closed.  Patch by "
#~ "Alessandro Moura."

#~ msgid ""
#~ "`Issue #15447 <https://bugs.python.org/15447>`__: Use `subprocess."
#~ "DEVNULL` in webbrowser, instead of opening `os.devnull` explicitly and "
#~ "leaving it open."
#~ msgstr ""
#~ "`Issue #15447 <https://bugs.python.org/15447>`__: Use `subprocess."
#~ "DEVNULL` in webbrowser, instead of opening `os.devnull` explicitly and "
#~ "leaving it open."

#~ msgid ""
#~ "`Issue #15509 <https://bugs.python.org/15509>`__: `webbrowser."
#~ "UnixBrowser` no longer passes empty arguments to Popen when ``%action`` "
#~ "substitutions produce empty strings."
#~ msgstr ""
#~ "`Issue #15509 <https://bugs.python.org/15509>`__: `webbrowser."
#~ "UnixBrowser` no longer passes empty arguments to Popen when ``%action`` "
#~ "substitutions produce empty strings."

#~ msgid ""
#~ "`Issue #12776 <https://bugs.python.org/12776>`__, `issue #11839 <https://"
#~ "bugs.python.org/11839>`__: Call `argparse` type function (specified by "
#~ "add_argument) only once. Before, the type function was called twice in "
#~ "the case where the default was specified and the argument was given as "
#~ "well.  This was especially problematic for the FileType type, as a "
#~ "default file would always be opened, even if a file argument was "
#~ "specified on the command line."
#~ msgstr ""
#~ "`Issue #12776 <https://bugs.python.org/12776>`__, `issue #11839 <https://"
#~ "bugs.python.org/11839>`__: Call `argparse` type function (specified by "
#~ "add_argument) only once. Before, the type function was called twice in "
#~ "the case where the default was specified and the argument was given as "
#~ "well.  This was especially problematic for the FileType type, as a "
#~ "default file would always be opened, even if a file argument was "
#~ "specified on the command line."

#~ msgid ""
#~ "`Issue #15906 <https://bugs.python.org/15906>`__: Fix a regression in "
#~ "argparse caused by the preceding change, when ``action='append'``, "
#~ "``type='str'`` and ``default=[]``."
#~ msgstr ""
#~ "`Issue #15906 <https://bugs.python.org/15906>`__: Fix a regression in "
#~ "argparse caused by the preceding change, when ``action='append'``, "
#~ "``type='str'`` and ``default=[]``."

#~ msgid ""
#~ "`Issue #16113 <https://bugs.python.org/16113>`__: Added sha3 module based "
#~ "on the Keccak reference implementation 3.2. The `hashlib` module has four "
#~ "additional hash algorithms: `sha3_224`, `sha3_256`, `sha3_384` and "
#~ "`sha3_512`. As part of the patch some common code was moved from "
#~ "_hashopenssl.c to hashlib.h."
#~ msgstr ""
#~ "`Issue #16113 <https://bugs.python.org/16113>`__: Added sha3 module based "
#~ "on the Keccak reference implementation 3.2. The `hashlib` module has four "
#~ "additional hash algorithms: `sha3_224`, `sha3_256`, `sha3_384` and "
#~ "`sha3_512`. As part of the patch some common code was moved from "
#~ "_hashopenssl.c to hashlib.h."

#~ msgid ""
#~ "`Issue #16692 <https://bugs.python.org/16692>`__: Added TLSv1.1 and "
#~ "TLSv1.2 support for the ssl modules."
#~ msgstr ""
#~ "`Issue #16692 <https://bugs.python.org/16692>`__: Added TLSv1.1 and "
#~ "TLSv1.2 support for the ssl modules."

#~ msgid ""
#~ "`Issue #16832 <https://bugs.python.org/16832>`__: add abc."
#~ "get_cache_token() to expose cache validity checking support in ABCMeta."
#~ msgstr ""
#~ "`Issue #16832 <https://bugs.python.org/16832>`__: add abc."
#~ "get_cache_token() to expose cache validity checking support in ABCMeta."

#~ msgid ""
#~ "`Issue #18429 <https://bugs.python.org/18429>`__: Format / Format "
#~ "Paragraph, now works when comment blocks are selected. As with text "
#~ "blocks, this works best when the selection only includes complete lines."
#~ msgstr ""
#~ "`Issue #18429 <https://bugs.python.org/18429>`__: Format / Format "
#~ "Paragraph, now works when comment blocks are selected. As with text "
#~ "blocks, this works best when the selection only includes complete lines."

#~ msgid ""
#~ "`Issue #18226 <https://bugs.python.org/18226>`__: Add docstrings and "
#~ "unittests for FormatParagraph.py. Original patches by Todd Rovito and "
#~ "Phil Webster."
#~ msgstr ""
#~ "`Issue #18226 <https://bugs.python.org/18226>`__: Add docstrings and "
#~ "unittests for FormatParagraph.py. Original patches by Todd Rovito and "
#~ "Phil Webster."

#~ msgid ""
#~ "`Issue #18279 <https://bugs.python.org/18279>`__: Format - Strip trailing "
#~ "whitespace no longer marks a file as changed when it has not been "
#~ "changed. This fix followed the addition of a test file originally written "
#~ "by Phil Webster (the issue's main goal)."
#~ msgstr ""
#~ "`Issue #18279 <https://bugs.python.org/18279>`__: Format - Strip trailing "
#~ "whitespace no longer marks a file as changed when it has not been "
#~ "changed. This fix followed the addition of a test file originally written "
#~ "by Phil Webster (the issue's main goal)."

#~ msgid ""
#~ "`Issue #7136 <https://bugs.python.org/7136>`__: In the Idle File menu, "
#~ "\"New Window\" is renamed \"New File\". Patch by Tal Einat, Roget Serwy, "
#~ "and Todd Rovito."
#~ msgstr ""
#~ "`Issue #7136 <https://bugs.python.org/7136>`__: In the Idle File menu, "
#~ "\"New Window\" is renamed \"New File\". Patch by Tal Einat, Roget Serwy, "
#~ "and Todd Rovito."

#~ msgid ""
#~ "`Issue #18196 <https://bugs.python.org/18196>`__: Avoid displaying "
#~ "spurious SystemExit tracebacks."
#~ msgstr ""
#~ "`Issue #18196 <https://bugs.python.org/18196>`__: Avoid displaying "
#~ "spurious SystemExit tracebacks."

#~ msgid ""
#~ "`Issue #5492 <https://bugs.python.org/5492>`__: Avoid traceback when "
#~ "exiting IDLE caused by a race condition."
#~ msgstr ""
#~ "`Issue #5492 <https://bugs.python.org/5492>`__: Avoid traceback when "
#~ "exiting IDLE caused by a race condition."

#~ msgid ""
#~ "`Issue #17511 <https://bugs.python.org/17511>`__: Keep IDLE find dialog "
#~ "open after clicking \"Find Next\". Original patch by Sarah K."
#~ msgstr ""
#~ "`Issue #17511 <https://bugs.python.org/17511>`__: Keep IDLE find dialog "
#~ "open after clicking \"Find Next\". Original patch by Sarah K."

#~ msgid ""
#~ "`Issue #18055 <https://bugs.python.org/18055>`__: Move IDLE off of imp "
#~ "and on to importlib."
#~ msgstr ""
#~ "`Issue #18055 <https://bugs.python.org/18055>`__: Move IDLE off of imp "
#~ "and on to importlib."

#~ msgid ""
#~ "`Issue #15392 <https://bugs.python.org/15392>`__: Create a unittest "
#~ "framework for IDLE. Initial patch by Rajagopalasarma Jayakrishnan. See "
#~ "Lib/idlelib/idle_test/README.txt for how to run Idle tests."
#~ msgstr ""
#~ "`Issue #15392 <https://bugs.python.org/15392>`__: Create a unittest "
#~ "framework for IDLE. Initial patch by Rajagopalasarma Jayakrishnan. See "
#~ "Lib/idlelib/idle_test/README.txt for how to run Idle tests."

#~ msgid ""
#~ "`Issue #14146 <https://bugs.python.org/14146>`__: Highlight source line "
#~ "while debugging on Windows."
#~ msgstr ""
#~ "`Issue #14146 <https://bugs.python.org/14146>`__: Highlight source line "
#~ "while debugging on Windows."

#~ msgid ""
#~ "`Issue #17838 <https://bugs.python.org/17838>`__: Allow sys.stdin to be "
#~ "reassigned."
#~ msgstr ""
#~ "`Issue #17838 <https://bugs.python.org/17838>`__: Allow sys.stdin to be "
#~ "reassigned."

#~ msgid ""
#~ "`Issue #13495 <https://bugs.python.org/13495>`__: Avoid loading the color "
#~ "delegator twice in IDLE."
#~ msgstr ""
#~ "`Issue #13495 <https://bugs.python.org/13495>`__: Avoid loading the color "
#~ "delegator twice in IDLE."

#~ msgid ""
#~ "`Issue #17798 <https://bugs.python.org/17798>`__: Allow IDLE to edit new "
#~ "files when specified on command line."
#~ msgstr ""
#~ "`Issue #17798 <https://bugs.python.org/17798>`__: Allow IDLE to edit new "
#~ "files when specified on command line."

#~ msgid ""
#~ "`Issue #14735 <https://bugs.python.org/14735>`__: Update IDLE docs to "
#~ "omit \"Control-z on Windows\"."
#~ msgstr ""
#~ "`Issue #14735 <https://bugs.python.org/14735>`__: Update IDLE docs to "
#~ "omit \"Control-z on Windows\"."

#~ msgid ""
#~ "`Issue #17532 <https://bugs.python.org/17532>`__: Always include Options "
#~ "menu for IDLE on OS X. Patch by Guilherme Sim√µes."
#~ msgstr ""
#~ "`Issue #17532 <https://bugs.python.org/17532>`__: Always include Options "
#~ "menu for IDLE on OS X. Patch by Guilherme Sim√µes."

#~ msgid ""
#~ "`Issue #17657 <https://bugs.python.org/17657>`__: Show full Tk version in "
#~ "IDLE's about dialog. Patch by Todd Rovito."
#~ msgstr ""
#~ "`Issue #17657 <https://bugs.python.org/17657>`__: Show full Tk version in "
#~ "IDLE's about dialog. Patch by Todd Rovito."

#~ msgid ""
#~ "`Issue #17613 <https://bugs.python.org/17613>`__: Prevent traceback when "
#~ "removing syntax colorizer in IDLE."
#~ msgstr ""
#~ "`Issue #17613 <https://bugs.python.org/17613>`__: Prevent traceback when "
#~ "removing syntax colorizer in IDLE."

#~ msgid ""
#~ "`Issue #1207589 <https://bugs.python.org/1207589>`__: Backwards-"
#~ "compatibility patch for right-click menu in IDLE."
#~ msgstr ""
#~ "`Issue #1207589 <https://bugs.python.org/1207589>`__: Backwards-"
#~ "compatibility patch for right-click menu in IDLE."

#~ msgid ""
#~ "`Issue #16887 <https://bugs.python.org/16887>`__: IDLE now accepts Cancel "
#~ "in tabify/untabify dialog box."
#~ msgstr ""
#~ "`Issue #16887 <https://bugs.python.org/16887>`__: IDLE now accepts Cancel "
#~ "in tabify/untabify dialog box."

#~ msgid ""
#~ "`Issue #17625 <https://bugs.python.org/17625>`__: In IDLE, close the "
#~ "replace dialog after it is used."
#~ msgstr ""
#~ "`Issue #17625 <https://bugs.python.org/17625>`__: In IDLE, close the "
#~ "replace dialog after it is used."

#~ msgid ""
#~ "`Issue #14254 <https://bugs.python.org/14254>`__: IDLE now handles "
#~ "readline correctly across shell restarts."
#~ msgstr ""
#~ "`Issue #14254 <https://bugs.python.org/14254>`__: IDLE now handles "
#~ "readline correctly across shell restarts."

#~ msgid ""
#~ "`Issue #17614 <https://bugs.python.org/17614>`__: IDLE no longer raises "
#~ "exception when quickly closing a file."
#~ msgstr ""
#~ "`Issue #17614 <https://bugs.python.org/17614>`__: IDLE no longer raises "
#~ "exception when quickly closing a file."

#~ msgid ""
#~ "`Issue #6698 <https://bugs.python.org/6698>`__: IDLE now opens just an "
#~ "editor window when configured to do so."
#~ msgstr ""
#~ "`Issue #6698 <https://bugs.python.org/6698>`__: IDLE now opens just an "
#~ "editor window when configured to do so."

#~ msgid ""
#~ "`Issue #8900 <https://bugs.python.org/8900>`__: Using keyboard shortcuts "
#~ "in IDLE to open a file no longer raises an exception."
#~ msgstr ""
#~ "`Issue #8900 <https://bugs.python.org/8900>`__: Using keyboard shortcuts "
#~ "in IDLE to open a file no longer raises an exception."

#~ msgid ""
#~ "`Issue #6649 <https://bugs.python.org/6649>`__: Fixed missing exit status "
#~ "in IDLE. Patch by Guilherme Polo."
#~ msgstr ""
#~ "`Issue #6649 <https://bugs.python.org/6649>`__: Fixed missing exit status "
#~ "in IDLE. Patch by Guilherme Polo."

#~ msgid ""
#~ "`Issue #17114 <https://bugs.python.org/17114>`__: IDLE now uses non-"
#~ "strict config parser."
#~ msgstr ""
#~ "`Issue #17114 <https://bugs.python.org/17114>`__: IDLE now uses non-"
#~ "strict config parser."

#~ msgid ""
#~ "`Issue #9290 <https://bugs.python.org/9290>`__: In IDLE the sys.std* "
#~ "streams now implement io.TextIOBase interface and support all mandatory "
#~ "methods and properties."
#~ msgstr ""
#~ "`Issue #9290 <https://bugs.python.org/9290>`__: In IDLE the sys.std* "
#~ "streams now implement io.TextIOBase interface and support all mandatory "
#~ "methods and properties."

#~ msgid ""
#~ "`Issue #5066 <https://bugs.python.org/5066>`__: Update IDLE docs. Patch "
#~ "by Todd Rovito."
#~ msgstr ""
#~ "`Issue #5066 <https://bugs.python.org/5066>`__: Update IDLE docs. Patch "
#~ "by Todd Rovito."

#~ msgid ""
#~ "`Issue #16829 <https://bugs.python.org/16829>`__: IDLE printing no longer "
#~ "fails if there are spaces or other special characters in the file path."
#~ msgstr ""
#~ "`Issue #16829 <https://bugs.python.org/16829>`__: IDLE printing no longer "
#~ "fails if there are spaces or other special characters in the file path."

#~ msgid ""
#~ "`Issue #16819 <https://bugs.python.org/16819>`__: IDLE method completion "
#~ "now correctly works for bytes literals."
#~ msgstr ""
#~ "`Issue #16819 <https://bugs.python.org/16819>`__: IDLE method completion "
#~ "now correctly works for bytes literals."

#~ msgid ""
#~ "`Issue #16504 <https://bugs.python.org/16504>`__: IDLE now catches "
#~ "SyntaxErrors raised by tokenizer. Patch by Roger Serwy."
#~ msgstr ""
#~ "`Issue #16504 <https://bugs.python.org/16504>`__: IDLE now catches "
#~ "SyntaxErrors raised by tokenizer. Patch by Roger Serwy."

#~ msgid ""
#~ "`Issue #16511 <https://bugs.python.org/16511>`__: Use default IDLE width "
#~ "and height if config param is not valid. Patch Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16511 <https://bugs.python.org/16511>`__: Use default IDLE width "
#~ "and height if config param is not valid. Patch Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #1207589 <https://bugs.python.org/1207589>`__: Add Cut/Copy/Paste "
#~ "items to IDLE right click Context Menu. Patch by Todd Rovito."
#~ msgstr ""
#~ "`Issue #1207589 <https://bugs.python.org/1207589>`__: Add Cut/Copy/Paste "
#~ "items to IDLE right click Context Menu. Patch by Todd Rovito."

#~ msgid ""
#~ "`Issue #16123 <https://bugs.python.org/16123>`__: IDLE - deprecate "
#~ "running without a subprocess. Patch by Roger Serwy."
#~ msgstr ""
#~ "`Issue #16123 <https://bugs.python.org/16123>`__: IDLE - deprecate "
#~ "running without a subprocess. Patch by Roger Serwy."

#~ msgid ""
#~ "`Issue #1666318 <https://bugs.python.org/1666318>`__: Add a test that "
#~ "shutil.copytree() retains directory permissions.  Patch by Catherine "
#~ "Devlin."
#~ msgstr ""
#~ "`Issue #1666318 <https://bugs.python.org/1666318>`__: Add a test that "
#~ "shutil.copytree() retains directory permissions.  Patch by Catherine "
#~ "Devlin."

#~ msgid ""
#~ "`Issue #18273 <https://bugs.python.org/18273>`__: move the tests in Lib/"
#~ "test/json_tests to Lib/test/test_json and make them discoverable by "
#~ "unittest.  Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #18273 <https://bugs.python.org/18273>`__: move the tests in Lib/"
#~ "test/json_tests to Lib/test/test_json and make them discoverable by "
#~ "unittest.  Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #18396 <https://bugs.python.org/18396>`__: Fix spurious test "
#~ "failure in test_signal on Windows when faulthandler is enabled (Patch by "
#~ "Jeremy Kloth)"
#~ msgstr ""
#~ "`Issue #18396 <https://bugs.python.org/18396>`__: Fix spurious test "
#~ "failure in test_signal on Windows when faulthandler is enabled (Patch by "
#~ "Jeremy Kloth)"

#~ msgid ""
#~ "`Issue #17046 <https://bugs.python.org/17046>`__: Fix broken "
#~ "test_executable_without_cwd in test_subprocess."
#~ msgstr ""
#~ "`Issue #17046 <https://bugs.python.org/17046>`__: Fix broken "
#~ "test_executable_without_cwd in test_subprocess."

#~ msgid ""
#~ "`Issue #15415 <https://bugs.python.org/15415>`__: Add new temp_dir() and "
#~ "change_cwd() context managers to test.support, and refactor temp_cwd() to "
#~ "use them.  Patch by Chris Jerdonek."
#~ msgstr ""
#~ "`Issue #15415 <https://bugs.python.org/15415>`__: Add new temp_dir() and "
#~ "change_cwd() context managers to test.support, and refactor temp_cwd() to "
#~ "use them.  Patch by Chris Jerdonek."

#~ msgid ""
#~ "`Issue #15494 <https://bugs.python.org/15494>`__: test.support is now a "
#~ "package rather than a module (Initial patch by Indra Talip)"
#~ msgstr ""
#~ "`Issue #15494 <https://bugs.python.org/15494>`__: test.support is now a "
#~ "package rather than a module (Initial patch by Indra Talip)"

#~ msgid ""
#~ "`Issue #17944 <https://bugs.python.org/17944>`__: test_zipfile now "
#~ "discoverable and uses subclassing to generate tests for different "
#~ "compression types.  Fixed a bug with skipping some tests due to use of "
#~ "exhausted iterators."
#~ msgstr ""
#~ "`Issue #17944 <https://bugs.python.org/17944>`__: test_zipfile now "
#~ "discoverable and uses subclassing to generate tests for different "
#~ "compression types.  Fixed a bug with skipping some tests due to use of "
#~ "exhausted iterators."

#~ msgid ""
#~ "`Issue #18266 <https://bugs.python.org/18266>`__: test_largefile now "
#~ "works with unittest test discovery and supports running only selected "
#~ "tests.  Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #18266 <https://bugs.python.org/18266>`__: test_largefile now "
#~ "works with unittest test discovery and supports running only selected "
#~ "tests.  Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17767 <https://bugs.python.org/17767>`__: test_locale now works "
#~ "with unittest test discovery. Original patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17767 <https://bugs.python.org/17767>`__: test_locale now works "
#~ "with unittest test discovery. Original patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #18375 <https://bugs.python.org/18375>`__: Assume --randomize when "
#~ "--randseed is used for running the testsuite."
#~ msgstr ""
#~ "`Issue #18375 <https://bugs.python.org/18375>`__: Assume --randomize when "
#~ "--randseed is used for running the testsuite."

#~ msgid ""
#~ "`Issue #11185 <https://bugs.python.org/11185>`__: Fix test_wait4 under "
#~ "AIX.  Patch by S√©bastien Sabl√©."
#~ msgstr ""
#~ "`Issue #11185 <https://bugs.python.org/11185>`__: Fix test_wait4 under "
#~ "AIX.  Patch by S√©bastien Sabl√©."

#~ msgid ""
#~ "`Issue #18207 <https://bugs.python.org/18207>`__: Fix test_ssl for some "
#~ "versions of OpenSSL that ignore seconds in ASN1_TIME fields."
#~ msgstr ""
#~ "`Issue #18207 <https://bugs.python.org/18207>`__: Fix test_ssl for some "
#~ "versions of OpenSSL that ignore seconds in ASN1_TIME fields."

#~ msgid ""
#~ "`Issue #18094 <https://bugs.python.org/18094>`__: test_uuid no longer "
#~ "reports skipped tests as passed."
#~ msgstr ""
#~ "`Issue #18094 <https://bugs.python.org/18094>`__: test_uuid no longer "
#~ "reports skipped tests as passed."

#~ msgid ""
#~ "`Issue #17992 <https://bugs.python.org/17992>`__: Add timeouts to "
#~ "asyncore and asynchat tests so that they won't accidentally hang."
#~ msgstr ""
#~ "`Issue #17992 <https://bugs.python.org/17992>`__: Add timeouts to "
#~ "asyncore and asynchat tests so that they won't accidentally hang."

#~ msgid ""
#~ "`Issue #17833 <https://bugs.python.org/17833>`__: Fix test_gdb failures "
#~ "seen on machines where debug symbols for glibc are available (seen on "
#~ "PPC64 Linux)."
#~ msgstr ""
#~ "`Issue #17833 <https://bugs.python.org/17833>`__: Fix test_gdb failures "
#~ "seen on machines where debug symbols for glibc are available (seen on "
#~ "PPC64 Linux)."

#~ msgid ""
#~ "`Issue #7855 <https://bugs.python.org/7855>`__: Add tests for ctypes/"
#~ "winreg for issues found in IronPython. Initial patch by Dino Viehland."
#~ msgstr ""
#~ "`Issue #7855 <https://bugs.python.org/7855>`__: Add tests for ctypes/"
#~ "winreg for issues found in IronPython. Initial patch by Dino Viehland."

#~ msgid ""
#~ "`Issue #11078 <https://bugs.python.org/11078>`__: test___all__ now checks "
#~ "for duplicates in __all__. Initial patch by R. David Murray."
#~ msgstr ""
#~ "`Issue #11078 <https://bugs.python.org/11078>`__: test___all__ now checks "
#~ "for duplicates in __all__. Initial patch by R. David Murray."

#~ msgid ""
#~ "`Issue #17712 <https://bugs.python.org/17712>`__: Fix test_gdb failures "
#~ "on Ubuntu 13.04."
#~ msgstr ""
#~ "`Issue #17712 <https://bugs.python.org/17712>`__: Fix test_gdb failures "
#~ "on Ubuntu 13.04."

#~ msgid ""
#~ "`Issue #17835 <https://bugs.python.org/17835>`__: Fix test_io when the "
#~ "default OS pipe buffer size is larger than one million bytes."
#~ msgstr ""
#~ "`Issue #17835 <https://bugs.python.org/17835>`__: Fix test_io when the "
#~ "default OS pipe buffer size is larger than one million bytes."

#~ msgid ""
#~ "`Issue #17065 <https://bugs.python.org/17065>`__: Use process-unique key "
#~ "for winreg tests to avoid failures if test is run multiple times in "
#~ "parallel (eg: on a buildbot host)."
#~ msgstr ""
#~ "`Issue #17065 <https://bugs.python.org/17065>`__: Use process-unique key "
#~ "for winreg tests to avoid failures if test is run multiple times in "
#~ "parallel (eg: on a buildbot host)."

#~ msgid ""
#~ "`Issue #12820 <https://bugs.python.org/12820>`__: add tests for the xml."
#~ "dom.minicompat module. Patch by John Chandler and Phil Connell."
#~ msgstr ""
#~ "`Issue #12820 <https://bugs.python.org/12820>`__: add tests for the xml."
#~ "dom.minicompat module. Patch by John Chandler and Phil Connell."

#~ msgid ""
#~ "`Issue #17691 <https://bugs.python.org/17691>`__: test_univnewlines now "
#~ "works with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17691 <https://bugs.python.org/17691>`__: test_univnewlines now "
#~ "works with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17790 <https://bugs.python.org/17790>`__: test_set now works with "
#~ "unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17790 <https://bugs.python.org/17790>`__: test_set now works with "
#~ "unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17789 <https://bugs.python.org/17789>`__: test_random now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17789 <https://bugs.python.org/17789>`__: test_random now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17779 <https://bugs.python.org/17779>`__: test_osx_env now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17779 <https://bugs.python.org/17779>`__: test_osx_env now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17766 <https://bugs.python.org/17766>`__: test_iterlen now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17766 <https://bugs.python.org/17766>`__: test_iterlen now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17690 <https://bugs.python.org/17690>`__: test_time now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17690 <https://bugs.python.org/17690>`__: test_time now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17692 <https://bugs.python.org/17692>`__: test_sqlite now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17692 <https://bugs.python.org/17692>`__: test_sqlite now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #11995 <https://bugs.python.org/11995>`__: test_pydoc doesn't "
#~ "import all sys.path modules anymore."
#~ msgstr ""
#~ "`Issue #11995 <https://bugs.python.org/11995>`__: test_pydoc doesn't "
#~ "import all sys.path modules anymore."

#~ msgid ""
#~ "`Issue #17448 <https://bugs.python.org/17448>`__: test_sax now skips if "
#~ "there are no xml parsers available instead of raising an ImportError."
#~ msgstr ""
#~ "`Issue #17448 <https://bugs.python.org/17448>`__: test_sax now skips if "
#~ "there are no xml parsers available instead of raising an ImportError."

#~ msgid ""
#~ "`Issue #11420 <https://bugs.python.org/11420>`__: make test suite pass "
#~ "with -B/DONTWRITEBYTECODE set. Initial patch by Thomas Wouters."
#~ msgstr ""
#~ "`Issue #11420 <https://bugs.python.org/11420>`__: make test suite pass "
#~ "with -B/DONTWRITEBYTECODE set. Initial patch by Thomas Wouters."

#~ msgid ""
#~ "`Issue #10652 <https://bugs.python.org/10652>`__: make tcl/tk tests run "
#~ "after __all__ test, patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #10652 <https://bugs.python.org/10652>`__: make tcl/tk tests run "
#~ "after __all__ test, patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #11963 <https://bugs.python.org/11963>`__: remove human "
#~ "verification from test_parser and test_subprocess."
#~ msgstr ""
#~ "`Issue #11963 <https://bugs.python.org/11963>`__: remove human "
#~ "verification from test_parser and test_subprocess."

#~ msgid ""
#~ "`Issue #11732 <https://bugs.python.org/11732>`__: add a new "
#~ "suppress_crash_popup() context manager to test.support that disables "
#~ "crash popups on Windows and use it in test_faulthandler and test_capi."
#~ msgstr ""
#~ "`Issue #11732 <https://bugs.python.org/11732>`__: add a new "
#~ "suppress_crash_popup() context manager to test.support that disables "
#~ "crash popups on Windows and use it in test_faulthandler and test_capi."

#~ msgid ""
#~ "`Issue #13898 <https://bugs.python.org/13898>`__: test_ssl no longer "
#~ "prints a spurious stack trace on Ubuntu."
#~ msgstr ""
#~ "`Issue #13898 <https://bugs.python.org/13898>`__: test_ssl no longer "
#~ "prints a spurious stack trace on Ubuntu."

#~ msgid ""
#~ "`Issue #17283 <https://bugs.python.org/17283>`__: Share code between "
#~ "`__main__.py` and `regrtest.py` in `Lib/test`."
#~ msgstr ""
#~ "`Issue #17283 <https://bugs.python.org/17283>`__: Share code between "
#~ "`__main__.py` and `regrtest.py` in `Lib/test`."

#~ msgid ""
#~ "`Issue #17249 <https://bugs.python.org/17249>`__: convert a test in "
#~ "test_capi to use unittest and reap threads."
#~ msgstr ""
#~ "`Issue #17249 <https://bugs.python.org/17249>`__: convert a test in "
#~ "test_capi to use unittest and reap threads."

#~ msgid ""
#~ "`Issue #17107 <https://bugs.python.org/17107>`__: Test client-side SNI "
#~ "support in urllib.request thanks to the new server-side SNI support in "
#~ "the ssl module.  Initial patch by Daniel Black."
#~ msgstr ""
#~ "`Issue #17107 <https://bugs.python.org/17107>`__: Test client-side SNI "
#~ "support in urllib.request thanks to the new server-side SNI support in "
#~ "the ssl module.  Initial patch by Daniel Black."

#~ msgid ""
#~ "`Issue #17041 <https://bugs.python.org/17041>`__: Fix testing when Python "
#~ "is configured with the --without-doc-strings."
#~ msgstr ""
#~ "`Issue #17041 <https://bugs.python.org/17041>`__: Fix testing when Python "
#~ "is configured with the --without-doc-strings."

#~ msgid ""
#~ "`Issue #16923 <https://bugs.python.org/16923>`__: Fix ResourceWarnings in "
#~ "test_ssl."
#~ msgstr ""
#~ "`Issue #16923 <https://bugs.python.org/16923>`__: Fix ResourceWarnings in "
#~ "test_ssl."

#~ msgid ""
#~ "`Issue #15539 <https://bugs.python.org/15539>`__: Added regression tests "
#~ "for Tools/scripts/pindent.py."
#~ msgstr ""
#~ "`Issue #15539 <https://bugs.python.org/15539>`__: Added regression tests "
#~ "for Tools/scripts/pindent.py."

#~ msgid ""
#~ "`Issue #17479 <https://bugs.python.org/17479>`__: test_io now works with "
#~ "unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17479 <https://bugs.python.org/17479>`__: test_io now works with "
#~ "unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17066 <https://bugs.python.org/17066>`__: test_robotparser now "
#~ "works with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17066 <https://bugs.python.org/17066>`__: test_robotparser now "
#~ "works with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17334 <https://bugs.python.org/17334>`__: test_index now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17334 <https://bugs.python.org/17334>`__: test_index now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17333 <https://bugs.python.org/17333>`__: test_imaplib now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17333 <https://bugs.python.org/17333>`__: test_imaplib now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17082 <https://bugs.python.org/17082>`__: test_dbm* now work with "
#~ "unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17082 <https://bugs.python.org/17082>`__: test_dbm* now work with "
#~ "unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17079 <https://bugs.python.org/17079>`__: test_ctypes now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17079 <https://bugs.python.org/17079>`__: test_ctypes now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17304 <https://bugs.python.org/17304>`__: test_hash now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17304 <https://bugs.python.org/17304>`__: test_hash now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17303 <https://bugs.python.org/17303>`__: test_future* now work "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17303 <https://bugs.python.org/17303>`__: test_future* now work "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #17163 <https://bugs.python.org/17163>`__: test_file now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #17163 <https://bugs.python.org/17163>`__: test_file now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #16925 <https://bugs.python.org/16925>`__: test_configparser now "
#~ "works with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #16925 <https://bugs.python.org/16925>`__: test_configparser now "
#~ "works with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #16918 <https://bugs.python.org/16918>`__: test_codecs now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #16918 <https://bugs.python.org/16918>`__: test_codecs now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #16919 <https://bugs.python.org/16919>`__: test_crypt now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #16919 <https://bugs.python.org/16919>`__: test_crypt now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #16910 <https://bugs.python.org/16910>`__: test_bytes, "
#~ "test_unicode, and test_userstring now work with unittest test discovery.  "
#~ "Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #16910 <https://bugs.python.org/16910>`__: test_bytes, "
#~ "test_unicode, and test_userstring now work with unittest test discovery.  "
#~ "Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #16905 <https://bugs.python.org/16905>`__: test_warnings now works "
#~ "with unittest test discovery. Initial patch by Berker Peksag."
#~ msgstr ""
#~ "`Issue #16905 <https://bugs.python.org/16905>`__: test_warnings now works "
#~ "with unittest test discovery. Initial patch by Berker Peksag."

#~ msgid ""
#~ "`Issue #16898 <https://bugs.python.org/16898>`__: test_bufio now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #16898 <https://bugs.python.org/16898>`__: test_bufio now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #16888 <https://bugs.python.org/16888>`__: test_array now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #16888 <https://bugs.python.org/16888>`__: test_array now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #16896 <https://bugs.python.org/16896>`__: test_asyncore now works "
#~ "with unittest test discovery. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #16896 <https://bugs.python.org/16896>`__: test_asyncore now works "
#~ "with unittest test discovery. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #16897 <https://bugs.python.org/16897>`__: test_bisect now works "
#~ "with unittest test discovery. Initial patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #16897 <https://bugs.python.org/16897>`__: test_bisect now works "
#~ "with unittest test discovery. Initial patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #16852 <https://bugs.python.org/16852>`__: test_genericpath, "
#~ "test_posixpath, test_ntpath, and test_macpath now work with unittest test "
#~ "discovery.  Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #16852 <https://bugs.python.org/16852>`__: test_genericpath, "
#~ "test_posixpath, test_ntpath, and test_macpath now work with unittest test "
#~ "discovery.  Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #16748 <https://bugs.python.org/16748>`__: test_heapq now works "
#~ "with unittest test discovery."
#~ msgstr ""
#~ "`Issue #16748 <https://bugs.python.org/16748>`__: test_heapq now works "
#~ "with unittest test discovery."

#~ msgid ""
#~ "`Issue #10646 <https://bugs.python.org/10646>`__: Tests rearranged for os."
#~ "samefile/samestat to check for not just symlinks but also hard links."
#~ msgstr ""
#~ "`Issue #10646 <https://bugs.python.org/10646>`__: Tests rearranged for os."
#~ "samefile/samestat to check for not just symlinks but also hard links."

#~ msgid ""
#~ "`Issue #15302 <https://bugs.python.org/15302>`__: Switch regrtest from "
#~ "using getopt to using argparse."
#~ msgstr ""
#~ "`Issue #15302 <https://bugs.python.org/15302>`__: Switch regrtest from "
#~ "using getopt to using argparse."

#~ msgid ""
#~ "`Issue #15324 <https://bugs.python.org/15324>`__: Fix regrtest parsing of "
#~ "--fromfile, --match, and --randomize options."
#~ msgstr ""
#~ "`Issue #15324 <https://bugs.python.org/15324>`__: Fix regrtest parsing of "
#~ "--fromfile, --match, and --randomize options."

#~ msgid ""
#~ "`Issue #16702 <https://bugs.python.org/16702>`__: test_urllib2_localnet "
#~ "tests now correctly ignores proxies for localhost tests."
#~ msgstr ""
#~ "`Issue #16702 <https://bugs.python.org/16702>`__: test_urllib2_localnet "
#~ "tests now correctly ignores proxies for localhost tests."

#~ msgid ""
#~ "`Issue #16664 <https://bugs.python.org/16664>`__: Add regression tests "
#~ "for glob's behaviour concerning entries starting with a \".\".  Patch by "
#~ "Sebastian Kreft."
#~ msgstr ""
#~ "`Issue #16664 <https://bugs.python.org/16664>`__: Add regression tests "
#~ "for glob's behaviour concerning entries starting with a \".\".  Patch by "
#~ "Sebastian Kreft."

#~ msgid ""
#~ "`Issue #13390 <https://bugs.python.org/13390>`__: The ``-R`` option to "
#~ "regrtest now also checks for memory allocation leaks, using :func:`sys."
#~ "getallocatedblocks()`."
#~ msgstr ""
#~ "`Issue #13390 <https://bugs.python.org/13390>`__: The ``-R`` option to "
#~ "regrtest now also checks for memory allocation leaks, using :func:`sys."
#~ "getallocatedblocks()`."

#~ msgid ""
#~ "`Issue #16559 <https://bugs.python.org/16559>`__: Add more tests for the "
#~ "json module, including some from the official test suite at json.org.  "
#~ "Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16559 <https://bugs.python.org/16559>`__: Add more tests for the "
#~ "json module, including some from the official test suite at json.org.  "
#~ "Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16661 <https://bugs.python.org/16661>`__: Fix the `os."
#~ "getgrouplist()` test by not assuming that it gives the same output as :"
#~ "command:`id -G`."
#~ msgstr ""
#~ "`Issue #16661 <https://bugs.python.org/16661>`__: Fix the `os."
#~ "getgrouplist()` test by not assuming that it gives the same output as :"
#~ "command:`id -G`."

#~ msgid ""
#~ "`Issue #16115 <https://bugs.python.org/16115>`__: Add some tests for the "
#~ "executable argument to subprocess.Popen().  Initial patch by Kushal Das."
#~ msgstr ""
#~ "`Issue #16115 <https://bugs.python.org/16115>`__: Add some tests for the "
#~ "executable argument to subprocess.Popen().  Initial patch by Kushal Das."

#~ msgid ""
#~ "`Issue #16126 <https://bugs.python.org/16126>`__: PyErr_Format format "
#~ "mismatch in _testcapimodule.c. Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16126 <https://bugs.python.org/16126>`__: PyErr_Format format "
#~ "mismatch in _testcapimodule.c. Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #15304 <https://bugs.python.org/15304>`__: Fix warning message "
#~ "when `os.chdir()` fails inside `test.support.temp_cwd()`.  Patch by Chris "
#~ "Jerdonek."
#~ msgstr ""
#~ "`Issue #15304 <https://bugs.python.org/15304>`__: Fix warning message "
#~ "when `os.chdir()` fails inside `test.support.temp_cwd()`.  Patch by Chris "
#~ "Jerdonek."

#~ msgid ""
#~ "`Issue #15802 <https://bugs.python.org/15802>`__: Fix test logic in "
#~ "`TestMaildir.test_create_tmp()`. Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #15802 <https://bugs.python.org/15802>`__: Fix test logic in "
#~ "`TestMaildir.test_create_tmp()`. Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #15557 <https://bugs.python.org/15557>`__: Added a test suite for "
#~ "the webbrowser module, thanks to Anton Barkovsky."
#~ msgstr ""
#~ "`Issue #15557 <https://bugs.python.org/15557>`__: Added a test suite for "
#~ "the webbrowser module, thanks to Anton Barkovsky."

#~ msgid ""
#~ "`Issue #16698 <https://bugs.python.org/16698>`__: Skip posix "
#~ "test_getgroups when built with OS X deployment target prior to 10.6."
#~ msgstr ""
#~ "`Issue #16698 <https://bugs.python.org/16698>`__: Skip posix "
#~ "test_getgroups when built with OS X deployment target prior to 10.6."

#~ msgid ""
#~ "`Issue #16067 <https://bugs.python.org/16067>`__: Add description into "
#~ "MSI file to replace installer's temporary name."
#~ msgstr ""
#~ "`Issue #16067 <https://bugs.python.org/16067>`__: Add description into "
#~ "MSI file to replace installer's temporary name."

#~ msgid ""
#~ "`Issue #18257 <https://bugs.python.org/18257>`__: Fix readlink usage in "
#~ "python-config.  Install the python version again on Darwin."
#~ msgstr ""
#~ "`Issue #18257 <https://bugs.python.org/18257>`__: Fix readlink usage in "
#~ "python-config.  Install the python version again on Darwin."

#~ msgid ""
#~ "`Issue #18481 <https://bugs.python.org/18481>`__: Add C coverage "
#~ "reporting with gcov and lcov. A new make target \"coverage-report\" "
#~ "creates an instrumented Python build, runs unit tests and creates a HTML. "
#~ "The report can be updated with \"make coverage-lcov\"."
#~ msgstr ""
#~ "`Issue #18481 <https://bugs.python.org/18481>`__: Add C coverage "
#~ "reporting with gcov and lcov. A new make target \"coverage-report\" "
#~ "creates an instrumented Python build, runs unit tests and creates a HTML. "
#~ "The report can be updated with \"make coverage-lcov\"."

#~ msgid ""
#~ "`Issue #17845 <https://bugs.python.org/17845>`__: Clarified the message "
#~ "printed when some module are not built."
#~ msgstr ""
#~ "`Issue #17845 <https://bugs.python.org/17845>`__: Clarified the message "
#~ "printed when some module are not built."

#~ msgid ""
#~ "`Issue #18256 <https://bugs.python.org/18256>`__: Compilation fix for "
#~ "recent AIX releases.  Patch by David Edelsohn."
#~ msgstr ""
#~ "`Issue #18256 <https://bugs.python.org/18256>`__: Compilation fix for "
#~ "recent AIX releases.  Patch by David Edelsohn."

#~ msgid ""
#~ "`Issue #17547 <https://bugs.python.org/17547>`__: In configure, "
#~ "explicitly pass -Wformat for the benefit for GCC 4.8."
#~ msgstr ""
#~ "`Issue #17547 <https://bugs.python.org/17547>`__: In configure, "
#~ "explicitly pass -Wformat for the benefit for GCC 4.8."

#~ msgid ""
#~ "`Issue #15172 <https://bugs.python.org/15172>`__: Document NASM 2.10+ as "
#~ "requirement for building OpenSSL 1.0.1 on Windows."
#~ msgstr ""
#~ "`Issue #15172 <https://bugs.python.org/15172>`__: Document NASM 2.10+ as "
#~ "requirement for building OpenSSL 1.0.1 on Windows."

#~ msgid ""
#~ "`Issue #17591 <https://bugs.python.org/17591>`__: Use lowercase filenames "
#~ "when including Windows header files. Patch by Roumen Petrov."
#~ msgstr ""
#~ "`Issue #17591 <https://bugs.python.org/17591>`__: Use lowercase filenames "
#~ "when including Windows header files. Patch by Roumen Petrov."

#~ msgid ""
#~ "`Issue #17550 <https://bugs.python.org/17550>`__: Fix the --enable-"
#~ "profiling configure switch."
#~ msgstr ""
#~ "`Issue #17550 <https://bugs.python.org/17550>`__: Fix the --enable-"
#~ "profiling configure switch."

#~ msgid ""
#~ "`Issue #17425 <https://bugs.python.org/17425>`__: Build with openssl "
#~ "1.0.1d on Windows."
#~ msgstr ""
#~ "`Issue #17425 <https://bugs.python.org/17425>`__: Build with openssl "
#~ "1.0.1d on Windows."

#~ msgid ""
#~ "`Issue #16754 <https://bugs.python.org/16754>`__: Fix the incorrect "
#~ "shared library extension on linux. Introduce two makefile macros "
#~ "SHLIB_SUFFIX and EXT_SUFFIX. SO now has the value of SHLIB_SUFFIX again "
#~ "(as in 2.x and 3.1). The SO macro is removed in 3.4."
#~ msgstr ""
#~ "`Issue #16754 <https://bugs.python.org/16754>`__: Fix the incorrect "
#~ "shared library extension on linux. Introduce two makefile macros "
#~ "SHLIB_SUFFIX and EXT_SUFFIX. SO now has the value of SHLIB_SUFFIX again "
#~ "(as in 2.x and 3.1). The SO macro is removed in 3.4."

#~ msgid ""
#~ "`Issue #5033 <https://bugs.python.org/5033>`__: Fix building of the "
#~ "sqlite3 extension module when the SQLite library version has \"beta\" in "
#~ "it. Patch by Andreas Pelme."
#~ msgstr ""
#~ "`Issue #5033 <https://bugs.python.org/5033>`__: Fix building of the "
#~ "sqlite3 extension module when the SQLite library version has \"beta\" in "
#~ "it. Patch by Andreas Pelme."

#~ msgid ""
#~ "`Issue #17228 <https://bugs.python.org/17228>`__: Fix building without "
#~ "pymalloc."
#~ msgstr ""
#~ "`Issue #17228 <https://bugs.python.org/17228>`__: Fix building without "
#~ "pymalloc."

#~ msgid ""
#~ "`Issue #3718 <https://bugs.python.org/3718>`__: Use AC_ARG_VAR to set "
#~ "MACHDEP in configure.ac."
#~ msgstr ""
#~ "`Issue #3718 <https://bugs.python.org/3718>`__: Use AC_ARG_VAR to set "
#~ "MACHDEP in configure.ac."

#~ msgid ""
#~ "`Issue #16235 <https://bugs.python.org/16235>`__: Implement python-config "
#~ "as a shell script."
#~ msgstr ""
#~ "`Issue #16235 <https://bugs.python.org/16235>`__: Implement python-config "
#~ "as a shell script."

#~ msgid ""
#~ "`Issue #16769 <https://bugs.python.org/16769>`__: Remove outdated Visual "
#~ "Studio projects."
#~ msgstr ""
#~ "`Issue #16769 <https://bugs.python.org/16769>`__: Remove outdated Visual "
#~ "Studio projects."

#~ msgid ""
#~ "`Issue #17031 <https://bugs.python.org/17031>`__: Fix running regen in "
#~ "cross builds."
#~ msgstr ""
#~ "`Issue #17031 <https://bugs.python.org/17031>`__: Fix running regen in "
#~ "cross builds."

#~ msgid ""
#~ "`Issue #3754 <https://bugs.python.org/3754>`__: fix typo in pthread "
#~ "AC_CACHE_VAL."
#~ msgstr ""
#~ "`Issue #3754 <https://bugs.python.org/3754>`__: fix typo in pthread "
#~ "AC_CACHE_VAL."

#~ msgid ""
#~ "`Issue #15484 <https://bugs.python.org/15484>`__: Fix "
#~ "_PYTHON_PROJECT_BASE for srcdir != builddir builds; use "
#~ "_PYTHON_PROJECT_BASE in distutils/sysconfig.py."
#~ msgstr ""
#~ "`Issue #15484 <https://bugs.python.org/15484>`__: Fix "
#~ "_PYTHON_PROJECT_BASE for srcdir != builddir builds; use "
#~ "_PYTHON_PROJECT_BASE in distutils/sysconfig.py."

#~ msgid ""
#~ "`Issue #17029 <https://bugs.python.org/17029>`__: Let h2py search the "
#~ "multiarch system include directory."
#~ msgstr ""
#~ "`Issue #17029 <https://bugs.python.org/17029>`__: Let h2py search the "
#~ "multiarch system include directory."

#~ msgid ""
#~ "`Issue #16953 <https://bugs.python.org/16953>`__: Fix socket module "
#~ "compilation on platforms with HAVE_BROKEN_POLL. Patch by Jeffrey "
#~ "Armstrong."
#~ msgstr ""
#~ "`Issue #16953 <https://bugs.python.org/16953>`__: Fix socket module "
#~ "compilation on platforms with HAVE_BROKEN_POLL. Patch by Jeffrey "
#~ "Armstrong."

#~ msgid ""
#~ "`Issue #16320 <https://bugs.python.org/16320>`__: Remove redundant "
#~ "Makefile dependencies for strings and bytes."
#~ msgstr ""
#~ "`Issue #16320 <https://bugs.python.org/16320>`__: Remove redundant "
#~ "Makefile dependencies for strings and bytes."

#~ msgid ""
#~ "`Issue #16836 <https://bugs.python.org/16836>`__: Enable IPv6 support "
#~ "even if IPv6 is disabled on the build host."
#~ msgstr ""
#~ "`Issue #16836 <https://bugs.python.org/16836>`__: Enable IPv6 support "
#~ "even if IPv6 is disabled on the build host."

#~ msgid ""
#~ "`Issue #16593 <https://bugs.python.org/16593>`__: Have BSD 'make -s' do "
#~ "the right thing, thanks to Daniel Shahaf"
#~ msgstr ""
#~ "`Issue #16593 <https://bugs.python.org/16593>`__: Have BSD 'make -s' do "
#~ "the right thing, thanks to Daniel Shahaf"

#~ msgid ""
#~ "`Issue #15298 <https://bugs.python.org/15298>`__: ensure _sysconfigdata "
#~ "is generated in build directory, not source directory."
#~ msgstr ""
#~ "`Issue #15298 <https://bugs.python.org/15298>`__: ensure _sysconfigdata "
#~ "is generated in build directory, not source directory."

#~ msgid ""
#~ "`Issue #15833 <https://bugs.python.org/15833>`__: Fix a regression in 3.3 "
#~ "that resulted in exceptions being raised if importlib failed to write "
#~ "byte-compiled files.  This affected attempts to build Python out-of-tree "
#~ "from a read-only source directory."
#~ msgstr ""
#~ "`Issue #15833 <https://bugs.python.org/15833>`__: Fix a regression in 3.3 "
#~ "that resulted in exceptions being raised if importlib failed to write "
#~ "byte-compiled files.  This affected attempts to build Python out-of-tree "
#~ "from a read-only source directory."

#~ msgid ""
#~ "`Issue #15923 <https://bugs.python.org/15923>`__: Fix a mistake in "
#~ "``asdl_c.py`` that resulted in a TypeError after 2801bf875a24 (see "
#~ "#15801)."
#~ msgstr ""
#~ "`Issue #15923 <https://bugs.python.org/15923>`__: Fix a mistake in "
#~ "``asdl_c.py`` that resulted in a TypeError after 2801bf875a24 (see "
#~ "#15801)."

#~ msgid ""
#~ "`Issue #16135 <https://bugs.python.org/16135>`__: Remove OS/2 support."
#~ msgstr ""
#~ "`Issue #16135 <https://bugs.python.org/16135>`__: Remove OS/2 support."

#~ msgid ""
#~ "`Issue #15819 <https://bugs.python.org/15819>`__: Make sure we can build "
#~ "Python out-of-tree from a read-only source directory.  (Somewhat related "
#~ "to `issue #9860 <https://bugs.python.org/9860>`__.)"
#~ msgstr ""
#~ "`Issue #15819 <https://bugs.python.org/15819>`__: Make sure we can build "
#~ "Python out-of-tree from a read-only source directory.  (Somewhat related "
#~ "to `issue #9860 <https://bugs.python.org/9860>`__.)"

#~ msgid ""
#~ "`Issue #15587 <https://bugs.python.org/15587>`__: Enable Tk high-"
#~ "resolution text rendering on Macs with Retina displays.  Applies to "
#~ "Tkinter apps, such as IDLE, on OS X framework builds linked with Cocoa Tk "
#~ "8.5."
#~ msgstr ""
#~ "`Issue #15587 <https://bugs.python.org/15587>`__: Enable Tk high-"
#~ "resolution text rendering on Macs with Retina displays.  Applies to "
#~ "Tkinter apps, such as IDLE, on OS X framework builds linked with Cocoa Tk "
#~ "8.5."

#~ msgid ""
#~ "`Issue #17161 <https://bugs.python.org/17161>`__: make install now also "
#~ "installs a python3 man page."
#~ msgstr ""
#~ "`Issue #17161 <https://bugs.python.org/17161>`__: make install now also "
#~ "installs a python3 man page."

#~ msgid ""
#~ "`Issue #18351 <https://bugs.python.org/18351>`__: Fix various issues in a "
#~ "function in importlib provided to help "
#~ "PyImport_ExecCodeModuleWithPathnames() (and thus by extension "
#~ "PyImport_ExecCodeModule() and PyImport_ExecCodeModuleEx())."
#~ msgstr ""
#~ "`Issue #18351 <https://bugs.python.org/18351>`__: Fix various issues in a "
#~ "function in importlib provided to help "
#~ "PyImport_ExecCodeModuleWithPathnames() (and thus by extension "
#~ "PyImport_ExecCodeModule() and PyImport_ExecCodeModuleEx())."

#~ msgid ""
#~ "`Issue #15767 <https://bugs.python.org/15767>`__: Added "
#~ "PyErr_SetImportErrorSubclass()."
#~ msgstr ""
#~ "`Issue #15767 <https://bugs.python.org/15767>`__: Added "
#~ "PyErr_SetImportErrorSubclass()."

#~ msgid ""
#~ "`Issue #9369 <https://bugs.python.org/9369>`__: The types of `char*` "
#~ "arguments of PyObject_CallFunction() and PyObject_CallMethod() now "
#~ "changed to `const char*`.  Based on patches by J√∂rg M√ºller and Lars "
#~ "Buitinck."
#~ msgstr ""
#~ "`Issue #9369 <https://bugs.python.org/9369>`__: The types of `char*` "
#~ "arguments of PyObject_CallFunction() and PyObject_CallMethod() now "
#~ "changed to `const char*`.  Based on patches by J√∂rg M√ºller and Lars "
#~ "Buitinck."

#~ msgid ""
#~ "`Issue #17206 <https://bugs.python.org/17206>`__: Py_CLEAR(), "
#~ "Py_DECREF(), Py_XINCREF() and Py_XDECREF() now expand their arguments "
#~ "once instead of multiple times.  Patch written by Illia Polosukhin."
#~ msgstr ""
#~ "`Issue #17206 <https://bugs.python.org/17206>`__: Py_CLEAR(), "
#~ "Py_DECREF(), Py_XINCREF() and Py_XDECREF() now expand their arguments "
#~ "once instead of multiple times.  Patch written by Illia Polosukhin."

#~ msgid ""
#~ "`Issue #17522 <https://bugs.python.org/17522>`__: Add the "
#~ "PyGILState_Check() API."
#~ msgstr ""
#~ "`Issue #17522 <https://bugs.python.org/17522>`__: Add the "
#~ "PyGILState_Check() API."

#~ msgid ""
#~ "`Issue #17327 <https://bugs.python.org/17327>`__: Add PyDict_SetDefault."
#~ msgstr ""
#~ "`Issue #17327 <https://bugs.python.org/17327>`__: Add PyDict_SetDefault."

#~ msgid ""
#~ "`Issue #16881 <https://bugs.python.org/16881>`__: Fix Py_ARRAY_LENGTH "
#~ "macro for GCC < 3.1."
#~ msgstr ""
#~ "`Issue #16881 <https://bugs.python.org/16881>`__: Fix Py_ARRAY_LENGTH "
#~ "macro for GCC < 3.1."

#~ msgid ""
#~ "`Issue #16505 <https://bugs.python.org/16505>`__: Remove unused "
#~ "Py_TPFLAGS_INT_SUBCLASS."
#~ msgstr ""
#~ "`Issue #16505 <https://bugs.python.org/16505>`__: Remove unused "
#~ "Py_TPFLAGS_INT_SUBCLASS."

#~ msgid ""
#~ "`Issue #16086 <https://bugs.python.org/16086>`__: PyTypeObject.tp_flags "
#~ "and PyType_Spec.flags are now unsigned (unsigned long and unsigned int) "
#~ "to avoid an undefined behaviour with Py_TPFLAGS_TYPE_SUBCLASS ((1 << 31). "
#~ "PyType_GetFlags() result type is now unsigned too (unsigned long, instead "
#~ "of long)."
#~ msgstr ""
#~ "`Issue #16086 <https://bugs.python.org/16086>`__: PyTypeObject.tp_flags "
#~ "and PyType_Spec.flags are now unsigned (unsigned long and unsigned int) "
#~ "to avoid an undefined behaviour with Py_TPFLAGS_TYPE_SUBCLASS ((1 << 31). "
#~ "PyType_GetFlags() result type is now unsigned too (unsigned long, instead "
#~ "of long)."

#~ msgid ""
#~ "`Issue #16166 <https://bugs.python.org/16166>`__: Add PY_LITTLE_ENDIAN "
#~ "and PY_BIG_ENDIAN macros and unified endianness detection and handling."
#~ msgstr ""
#~ "`Issue #16166 <https://bugs.python.org/16166>`__: Add PY_LITTLE_ENDIAN "
#~ "and PY_BIG_ENDIAN macros and unified endianness detection and handling."

#~ msgid ""
#~ "`Issue #23006 <https://bugs.python.org/23006>`__: Improve the "
#~ "documentation and indexing of dict.__missing__. Add an entry in the "
#~ "language datamodel special methods section. Revise and index its "
#~ "discussion in the stdtypes mapping/dict section."
#~ msgstr ""
#~ "`Issue #23006 <https://bugs.python.org/23006>`__: Improve the "
#~ "documentation and indexing of dict.__missing__. Add an entry in the "
#~ "language datamodel special methods section. Revise and index its "
#~ "discussion in the stdtypes mapping/dict section."

#~ msgid ""
#~ "`Issue #17701 <https://bugs.python.org/17701>`__: Improving strftime "
#~ "documentation."
#~ msgstr ""
#~ "`Issue #17701 <https://bugs.python.org/17701>`__: Improving strftime "
#~ "documentation."

#~ msgid ""
#~ "`Issue #18440 <https://bugs.python.org/18440>`__: Clarify that `hash()` "
#~ "can truncate the value returned from an object's custom `__hash__()` "
#~ "method."
#~ msgstr ""
#~ "`Issue #18440 <https://bugs.python.org/18440>`__: Clarify that `hash()` "
#~ "can truncate the value returned from an object's custom `__hash__()` "
#~ "method."

#~ msgid ""
#~ "`Issue #17844 <https://bugs.python.org/17844>`__: Add links to encoders "
#~ "and decoders for bytes-to-bytes codecs."
#~ msgstr ""
#~ "`Issue #17844 <https://bugs.python.org/17844>`__: Add links to encoders "
#~ "and decoders for bytes-to-bytes codecs."

#~ msgid ""
#~ "`Issue #14097 <https://bugs.python.org/14097>`__: improve the "
#~ "\"introduction\" page of the tutorial."
#~ msgstr ""
#~ "`Issue #14097 <https://bugs.python.org/14097>`__: improve the "
#~ "\"introduction\" page of the tutorial."

#~ msgid ""
#~ "`Issue #17977 <https://bugs.python.org/17977>`__: The documentation for "
#~ "the cadefault argument's default value in urllib.request.urlopen() is "
#~ "fixed to match the code."
#~ msgstr ""
#~ "`Issue #17977 <https://bugs.python.org/17977>`__: The documentation for "
#~ "the cadefault argument's default value in urllib.request.urlopen() is "
#~ "fixed to match the code."

#~ msgid ""
#~ "`Issue #6696 <https://bugs.python.org/6696>`__: add documentation for the "
#~ "Profile objects, and improve profile/cProfile docs.  Patch by Tom "
#~ "Pinckney."
#~ msgstr ""
#~ "`Issue #6696 <https://bugs.python.org/6696>`__: add documentation for the "
#~ "Profile objects, and improve profile/cProfile docs.  Patch by Tom "
#~ "Pinckney."

#~ msgid ""
#~ "`Issue #15940 <https://bugs.python.org/15940>`__: Specify effect of "
#~ "locale on time functions."
#~ msgstr ""
#~ "`Issue #15940 <https://bugs.python.org/15940>`__: Specify effect of "
#~ "locale on time functions."

#~ msgid ""
#~ "`Issue #17538 <https://bugs.python.org/17538>`__: Document XML "
#~ "vulnerabilties"
#~ msgstr ""
#~ "`Issue #17538 <https://bugs.python.org/17538>`__: Document XML "
#~ "vulnerabilties"

#~ msgid ""
#~ "`Issue #16642 <https://bugs.python.org/16642>`__: sched.scheduler "
#~ "timefunc initial default is time.monotonic. Patch by Ramchandra Apte"
#~ msgstr ""
#~ "`Issue #16642 <https://bugs.python.org/16642>`__: sched.scheduler "
#~ "timefunc initial default is time.monotonic. Patch by Ramchandra Apte"

#~ msgid ""
#~ "`Issue #17047 <https://bugs.python.org/17047>`__: remove doubled words in "
#~ "docs and docstrings reported by Serhiy Storchaka and Matthew Barnett."
#~ msgstr ""
#~ "`Issue #17047 <https://bugs.python.org/17047>`__: remove doubled words in "
#~ "docs and docstrings reported by Serhiy Storchaka and Matthew Barnett."

#~ msgid ""
#~ "`Issue #15465 <https://bugs.python.org/15465>`__: Document the versioning "
#~ "macros in the C API docs rather than the standard library docs. Patch by "
#~ "Kushal Das."
#~ msgstr ""
#~ "`Issue #15465 <https://bugs.python.org/15465>`__: Document the versioning "
#~ "macros in the C API docs rather than the standard library docs. Patch by "
#~ "Kushal Das."

#~ msgid ""
#~ "`Issue #16406 <https://bugs.python.org/16406>`__: Combine the pages for "
#~ "uploading and registering to PyPI."
#~ msgstr ""
#~ "`Issue #16406 <https://bugs.python.org/16406>`__: Combine the pages for "
#~ "uploading and registering to PyPI."

#~ msgid ""
#~ "`Issue #16403 <https://bugs.python.org/16403>`__: Document how distutils "
#~ "uses the maintainer field in PKG-INFO. Patch by Jyrki Pulliainen."
#~ msgstr ""
#~ "`Issue #16403 <https://bugs.python.org/16403>`__: Document how distutils "
#~ "uses the maintainer field in PKG-INFO. Patch by Jyrki Pulliainen."

#~ msgid ""
#~ "`Issue #16695 <https://bugs.python.org/16695>`__: Document how glob "
#~ "handles filenames starting with a dot. Initial patch by Jyrki Pulliainen."
#~ msgstr ""
#~ "`Issue #16695 <https://bugs.python.org/16695>`__: Document how glob "
#~ "handles filenames starting with a dot. Initial patch by Jyrki Pulliainen."

#~ msgid ""
#~ "`Issue #8890 <https://bugs.python.org/8890>`__: Stop advertising an "
#~ "insecure practice by replacing uses of the /tmp directory with better "
#~ "alternatives in the documentation. Patch by Geoff Wilson."
#~ msgstr ""
#~ "`Issue #8890 <https://bugs.python.org/8890>`__: Stop advertising an "
#~ "insecure practice by replacing uses of the /tmp directory with better "
#~ "alternatives in the documentation. Patch by Geoff Wilson."

#~ msgid ""
#~ "`Issue #17203 <https://bugs.python.org/17203>`__: add long option names "
#~ "to unittest discovery docs."
#~ msgstr ""
#~ "`Issue #17203 <https://bugs.python.org/17203>`__: add long option names "
#~ "to unittest discovery docs."

#~ msgid ""
#~ "`Issue #13094 <https://bugs.python.org/13094>`__: add \"Why do lambdas "
#~ "defined in a loop with different values all return the same result?\" "
#~ "programming FAQ."
#~ msgstr ""
#~ "`Issue #13094 <https://bugs.python.org/13094>`__: add \"Why do lambdas "
#~ "defined in a loop with different values all return the same result?\" "
#~ "programming FAQ."

#~ msgid ""
#~ "`Issue #14901 <https://bugs.python.org/14901>`__: Update portions of the "
#~ "Windows FAQ. Patch by Ashish Nitin Patil."
#~ msgstr ""
#~ "`Issue #14901 <https://bugs.python.org/14901>`__: Update portions of the "
#~ "Windows FAQ. Patch by Ashish Nitin Patil."

#~ msgid ""
#~ "`Issue #16267 <https://bugs.python.org/16267>`__: Better document the "
#~ "3.3+ approach to combining @abstractmethod with @staticmethod, "
#~ "@classmethod and @property"
#~ msgstr ""
#~ "`Issue #16267 <https://bugs.python.org/16267>`__: Better document the "
#~ "3.3+ approach to combining @abstractmethod with @staticmethod, "
#~ "@classmethod and @property"

#~ msgid ""
#~ "`Issue #15209 <https://bugs.python.org/15209>`__: Clarify exception "
#~ "chaining description in exceptions module documentation"
#~ msgstr ""
#~ "`Issue #15209 <https://bugs.python.org/15209>`__: Clarify exception "
#~ "chaining description in exceptions module documentation"

#~ msgid ""
#~ "`Issue #15990 <https://bugs.python.org/15990>`__: Improve argument/"
#~ "parameter documentation."
#~ msgstr ""
#~ "`Issue #15990 <https://bugs.python.org/15990>`__: Improve argument/"
#~ "parameter documentation."

#~ msgid ""
#~ "`Issue #16209 <https://bugs.python.org/16209>`__: Move the documentation "
#~ "for the str built-in function to a new str class entry in the \"Text "
#~ "Sequence Type\" section."
#~ msgstr ""
#~ "`Issue #16209 <https://bugs.python.org/16209>`__: Move the documentation "
#~ "for the str built-in function to a new str class entry in the \"Text "
#~ "Sequence Type\" section."

#~ msgid ""
#~ "`Issue #13538 <https://bugs.python.org/13538>`__: Improve str() and "
#~ "object.__str__() documentation."
#~ msgstr ""
#~ "`Issue #13538 <https://bugs.python.org/13538>`__: Improve str() and "
#~ "object.__str__() documentation."

#~ msgid ""
#~ "`Issue #16489 <https://bugs.python.org/16489>`__: Make it clearer that "
#~ "importlib.find_loader() needs parent packages to be explicitly imported."
#~ msgstr ""
#~ "`Issue #16489 <https://bugs.python.org/16489>`__: Make it clearer that "
#~ "importlib.find_loader() needs parent packages to be explicitly imported."

#~ msgid ""
#~ "`Issue #16400 <https://bugs.python.org/16400>`__: Update the description "
#~ "of which versions of a given package PyPI displays."
#~ msgstr ""
#~ "`Issue #16400 <https://bugs.python.org/16400>`__: Update the description "
#~ "of which versions of a given package PyPI displays."

#~ msgid ""
#~ "`Issue #15677 <https://bugs.python.org/15677>`__: Document that zlib and "
#~ "gzip accept a compression level of 0 to mean 'no compression'. Patch by "
#~ "Brian Brazil."
#~ msgstr ""
#~ "`Issue #15677 <https://bugs.python.org/15677>`__: Document that zlib and "
#~ "gzip accept a compression level of 0 to mean 'no compression'. Patch by "
#~ "Brian Brazil."

#~ msgid ""
#~ "`Issue #16197 <https://bugs.python.org/16197>`__: Update winreg "
#~ "docstrings and documentation to match code. Patch by Zachary Ware."
#~ msgstr ""
#~ "`Issue #16197 <https://bugs.python.org/16197>`__: Update winreg "
#~ "docstrings and documentation to match code. Patch by Zachary Ware."

#~ msgid ""
#~ "`Issue #8040 <https://bugs.python.org/8040>`__: added a version switcher "
#~ "to the documentation.  Patch by Yury Selivanov."
#~ msgstr ""
#~ "`Issue #8040 <https://bugs.python.org/8040>`__: added a version switcher "
#~ "to the documentation.  Patch by Yury Selivanov."

#~ msgid ""
#~ "`Issue #16241 <https://bugs.python.org/16241>`__: Document -X "
#~ "faulthandler command line option. Patch by Marek ≈†uppa."
#~ msgstr ""
#~ "`Issue #16241 <https://bugs.python.org/16241>`__: Document -X "
#~ "faulthandler command line option. Patch by Marek ≈†uppa."

#~ msgid ""
#~ "`Issue #16115 <https://bugs.python.org/16115>`__: Improve subprocess."
#~ "Popen() documentation around args, shell, and executable arguments."
#~ msgstr ""
#~ "`Issue #16115 <https://bugs.python.org/16115>`__: Improve subprocess."
#~ "Popen() documentation around args, shell, and executable arguments."

#~ msgid ""
#~ "`Issue #13498 <https://bugs.python.org/13498>`__: Clarify docs of os."
#~ "makedirs()'s exist_ok argument.  Done with great native-speaker help from "
#~ "R. David Murray."
#~ msgstr ""
#~ "`Issue #13498 <https://bugs.python.org/13498>`__: Clarify docs of os."
#~ "makedirs()'s exist_ok argument.  Done with great native-speaker help from "
#~ "R. David Murray."

#~ msgid ""
#~ "`Issue #15533 <https://bugs.python.org/15533>`__: Clarify docs and add "
#~ "tests for `subprocess.Popen()`'s cwd argument."
#~ msgstr ""
#~ "`Issue #15533 <https://bugs.python.org/15533>`__: Clarify docs and add "
#~ "tests for `subprocess.Popen()`'s cwd argument."

#~ msgid ""
#~ "`Issue #16036 <https://bugs.python.org/16036>`__: Improve documentation "
#~ "of built-in `int()`'s signature and arguments."
#~ msgstr ""
#~ "`Issue #16036 <https://bugs.python.org/16036>`__: Improve documentation "
#~ "of built-in `int()`'s signature and arguments."

#~ msgid ""
#~ "`Issue #15935 <https://bugs.python.org/15935>`__: Clarification of "
#~ "`argparse` docs, re: add_argument() type and default arguments.  Patch "
#~ "contributed by Chris Jerdonek."
#~ msgstr ""
#~ "`Issue #15935 <https://bugs.python.org/15935>`__: Clarification of "
#~ "`argparse` docs, re: add_argument() type and default arguments.  Patch "
#~ "contributed by Chris Jerdonek."

#~ msgid ""
#~ "`Issue #11964 <https://bugs.python.org/11964>`__: Document a change in "
#~ "v3.2 to the behavior of the indent parameter of json encoding operations."
#~ msgstr ""
#~ "`Issue #11964 <https://bugs.python.org/11964>`__: Document a change in "
#~ "v3.2 to the behavior of the indent parameter of json encoding operations."

#~ msgid ""
#~ "`Issue #15116 <https://bugs.python.org/15116>`__: Remove references to "
#~ "appscript as it is no longer being supported."
#~ msgstr ""
#~ "`Issue #15116 <https://bugs.python.org/15116>`__: Remove references to "
#~ "appscript as it is no longer being supported."

#~ msgid ""
#~ "`Issue #18817 <https://bugs.python.org/18817>`__: Fix a resource warning "
#~ "in Lib/aifc.py demo.  Patch by Vajrasky Kok."
#~ msgstr ""
#~ "`Issue #18817 <https://bugs.python.org/18817>`__: Fix a resource warning "
#~ "in Lib/aifc.py demo.  Patch by Vajrasky Kok."

#~ msgid ""
#~ "`Issue #18439 <https://bugs.python.org/18439>`__: Make patchcheck work on "
#~ "Windows for ACKS, NEWS."
#~ msgstr ""
#~ "`Issue #18439 <https://bugs.python.org/18439>`__: Make patchcheck work on "
#~ "Windows for ACKS, NEWS."

#~ msgid ""
#~ "`Issue #18448 <https://bugs.python.org/18448>`__: Fix a typo in Tools/"
#~ "demo/eiffel.py."
#~ msgstr ""
#~ "`Issue #18448 <https://bugs.python.org/18448>`__: Fix a typo in Tools/"
#~ "demo/eiffel.py."

#~ msgid ""
#~ "`Issue #18457 <https://bugs.python.org/18457>`__: Fixed saving of "
#~ "formulas and complex numbers in Tools/demo/ss1.py."
#~ msgstr ""
#~ "`Issue #18457 <https://bugs.python.org/18457>`__: Fixed saving of "
#~ "formulas and complex numbers in Tools/demo/ss1.py."

#~ msgid ""
#~ "`Issue #18449 <https://bugs.python.org/18449>`__: Make Tools/demo/ss1.py "
#~ "work again on Python 3.  Patch by F√©vry Thibault."
#~ msgstr ""
#~ "`Issue #18449 <https://bugs.python.org/18449>`__: Make Tools/demo/ss1.py "
#~ "work again on Python 3.  Patch by F√©vry Thibault."

#~ msgid ""
#~ "`Issue #12990 <https://bugs.python.org/12990>`__: The \"Python Launcher\" "
#~ "on OSX could not launch python scripts that have paths that include wide "
#~ "characters."
#~ msgstr ""
#~ "`Issue #12990 <https://bugs.python.org/12990>`__: The \"Python Launcher\" "
#~ "on OSX could not launch python scripts that have paths that include wide "
#~ "characters."

#~ msgid ""
#~ "`Issue #15239 <https://bugs.python.org/15239>`__: Make mkstringprep.py "
#~ "work again on Python 3."
#~ msgstr ""
#~ "`Issue #15239 <https://bugs.python.org/15239>`__: Make mkstringprep.py "
#~ "work again on Python 3."

#~ msgid ""
#~ "`Issue #17028 <https://bugs.python.org/17028>`__: Allowed Python "
#~ "arguments to be supplied to the Windows launcher."
#~ msgstr ""
#~ "`Issue #17028 <https://bugs.python.org/17028>`__: Allowed Python "
#~ "arguments to be supplied to the Windows launcher."

#~ msgid ""
#~ "`Issue #17156 <https://bugs.python.org/17156>`__: pygettext.py now "
#~ "detects the encoding of source files and correctly writes and escapes non-"
#~ "ascii characters."
#~ msgstr ""
#~ "`Issue #17156 <https://bugs.python.org/17156>`__: pygettext.py now "
#~ "detects the encoding of source files and correctly writes and escapes non-"
#~ "ascii characters."

#~ msgid ""
#~ "`Issue #15539 <https://bugs.python.org/15539>`__: Fix a number of bugs in "
#~ "Tools/scripts/pindent.py.  Now pindent.py works with a \"with\" "
#~ "statement.  pindent.py no longer produces improper indentation.  pindent."
#~ "py now works with continued lines broken after \"class\" or \"def\" "
#~ "keywords and with continuations at the start of line."
#~ msgstr ""
#~ "`Issue #15539 <https://bugs.python.org/15539>`__: Fix a number of bugs in "
#~ "Tools/scripts/pindent.py.  Now pindent.py works with a \"with\" "
#~ "statement.  pindent.py no longer produces improper indentation.  pindent."
#~ "py now works with continued lines broken after \"class\" or \"def\" "
#~ "keywords and with continuations at the start of line."

#~ msgid ""
#~ "`Issue #11797 <https://bugs.python.org/11797>`__: Add a 2to3 fixer that "
#~ "maps reload() to imp.reload()."
#~ msgstr ""
#~ "`Issue #11797 <https://bugs.python.org/11797>`__: Add a 2to3 fixer that "
#~ "maps reload() to imp.reload()."

#~ msgid ""
#~ "`Issue #10966 <https://bugs.python.org/10966>`__: Remove the concept of "
#~ "unexpected skipped tests."
#~ msgstr ""
#~ "`Issue #10966 <https://bugs.python.org/10966>`__: Remove the concept of "
#~ "unexpected skipped tests."

#~ msgid ""
#~ "`Issue #9893 <https://bugs.python.org/9893>`__: Removed the Misc/Vim "
#~ "directory."
#~ msgstr ""
#~ "`Issue #9893 <https://bugs.python.org/9893>`__: Removed the Misc/Vim "
#~ "directory."

#~ msgid "Removed the Misc/TextMate directory."
#~ msgstr "Le r√©pertoire Misc/TextMate a √©t√© supprim√©."

#~ msgid ""
#~ "`Issue #16245 <https://bugs.python.org/16245>`__: Add the Tools/scripts/"
#~ "parse_html5_entities.py script to parse the list of HTML5 entities and "
#~ "update the html.entities.html5 dictionary."
#~ msgstr ""
#~ "`Issue #16245 <https://bugs.python.org/16245>`__: Add the Tools/scripts/"
#~ "parse_html5_entities.py script to parse the list of HTML5 entities and "
#~ "update the html.entities.html5 dictionary."

#~ msgid ""
#~ "`Issue #15378 <https://bugs.python.org/15378>`__: Fix Tools/unicode/"
#~ "comparecodecs.py.  Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #15378 <https://bugs.python.org/15378>`__: Fix Tools/unicode/"
#~ "comparecodecs.py.  Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #16549 <https://bugs.python.org/16549>`__: Make json.tool work "
#~ "again on Python 3 and add tests. Initial patch by Berker Peksag and "
#~ "Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #16549 <https://bugs.python.org/16549>`__: Make json.tool work "
#~ "again on Python 3 and add tests. Initial patch by Berker Peksag and "
#~ "Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #13301 <https://bugs.python.org/13301>`__: use ast.literal_eval() "
#~ "instead of eval() in Tools/i18n/msgfmt.py. Patch by Serhiy Storchaka."
#~ msgstr ""
#~ "`Issue #13301 <https://bugs.python.org/13301>`__: use ast.literal_eval() "
#~ "instead of eval() in Tools/i18n/msgfmt.py. Patch by Serhiy Storchaka."

#~ msgid ""
#~ "`Issue #18569 <https://bugs.python.org/18569>`__: The installer now adds ."
#~ "py to the PATHEXT variable when extensions are registered. Patch by Paul "
#~ "Moore."
#~ msgstr ""
#~ "`Issue #18569 <https://bugs.python.org/18569>`__: The installer now adds ."
#~ "py to the PATHEXT variable when extensions are registered. Patch by Paul "
#~ "Moore."
