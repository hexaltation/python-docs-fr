# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-27 19:40+0200\n"
"PO-Revision-Date: 2017-09-14 19:10+0200\n"
"Last-Translator: Gregoire Cutzach <caztuc@hotmail.com>\n"
"Language-Team: \n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.8.7.1\n"

#: ../Doc/library/random.rst:2
msgid ":mod:`random` --- Generate pseudo-random numbers"
msgstr ":mod:`random` --- Génère des nombres pseudo-aléatoires"

#: ../Doc/library/random.rst:7
msgid "**Source code:** :source:`Lib/random.py`"
msgstr "**Code source :** :source:`Lib/random.py`"

#: ../Doc/library/random.rst:11
msgid ""
"This module implements pseudo-random number generators for various "
"distributions."
msgstr ""
"Ce module implémente des générations de nombres pseudo-aléatoires selon "
"diverses distributions."

#: ../Doc/library/random.rst:14
msgid ""
"For integers, there is uniform selection from a range. For sequences, there "
"is uniform selection of a random element, a function to generate a random "
"permutation of a list in-place, and a function for random sampling without "
"replacement."
msgstr ""
"Pour les entiers, il y a un tirage uniforme dans un intervalle donné. Pour "
"les séquences, il y a un tirage uniforme  d'un élément choisi aléatoirement, "
"une fonction pour générer la permutation d'un liste en place, et une "
"fonction d’échantillonnage aléatoire sans remplacement."

#: ../Doc/library/random.rst:19
msgid ""
"On the real line, there are functions to compute uniform, normal (Gaussian), "
"lognormal, negative exponential, gamma, and beta distributions. For "
"generating distributions of angles, the von Mises distribution is available."
msgstr ""
"Pour les réels, il y a des des fonctions pour calculer des distributions "
"uniformes, normales (gaussiennes), log-normales, exponentielles négatives, "
"gamma et beta. Pour générer des distributions d'angles, la distribution von "
"Mises est disponible."

#: ../Doc/library/random.rst:23
msgid ""
"Almost all module functions depend on the basic function :func:`.random`, "
"which generates a random float uniformly in the semi-open range [0.0, 1.0).  "
"Python uses the Mersenne Twister as the core generator.  It produces 53-bit "
"precision floats and has a period of 2\\*\\*19937-1.  The underlying "
"implementation in C is both fast and threadsafe.  The Mersenne Twister is "
"one of the most extensively tested random number generators in existence.  "
"However, being completely deterministic, it is not suitable for all "
"purposes, and is completely unsuitable for cryptographic purposes."
msgstr ""
"Quasiment toutes les fonctions du module dépendent de la fonction de base *:"
"func`.random`*, qui génère un réel dans l'intervalle semi-ouvert [0,0 ; "
"1,0). Python utilise le *Mersenne Twister* comme noyau de la génération. Il "
"produit des réels avec une précision de 53 bits et a une période de 2/*/"
"*19937-1. L'implementation sous-jacente en C est à la fois rapide et *thread-"
"safe*. Le *Mersenne Twister* est l'un des générateurs de nombres aléatoires "
"les plus testés qui existent. Néanmoins, étant complètement déterministe, il "
"n'est pas adapté à toutes les utilisations, et est parfaitement inadapté à "
"la cryptographie."

#: ../Doc/library/random.rst:32
msgid ""
"The functions supplied by this module are actually bound methods of a hidden "
"instance of the :class:`random.Random` class.  You can instantiate your own "
"instances of :class:`Random` to get generators that don't share state."
msgstr ""
"Les fonctions fournies par ce module sont en réalité des méthodes d'un "
"instance cachée de la classe :class:`random.Random`. Vous pouvez instancier "
"vos propres instances de :class:`Random` pour obtenir les générateurs qui ne "
"partagent pas leur état."

#: ../Doc/library/random.rst:36
msgid ""
"Class :class:`Random` can also be subclassed if you want to use a different "
"basic generator of your own devising: in that case, override the :meth:"
"`~Random.random`, :meth:`~Random.seed`, :meth:`~Random.getstate`, and :meth:"
"`~Random.setstate` methods. Optionally, a new generator can supply a :meth:"
"`~Random.getrandbits` method --- this allows :meth:`randrange` to produce "
"selections over an arbitrarily large range."
msgstr ""
"La classe :class:`Random` peut aussi être étendue si vous souhaitez un "
"générateur de base de votre cru : dans ce cas surchargez les méthodes :meth:"
"`~Random.random`, :meth:`~Random.seed`, :meth:`~Random.getstate`, and :meth:"
"`~Random.setstate`. Optionnellement, un nouveau générateur peut fournir une "
"méthode :meth:`~Random.getrandbits` --- cela permet à :meth:`randrange` "
"d'effectuer des sélections sur un intervalle d'une largeur arbitraire."

#: ../Doc/library/random.rst:42
msgid ""
"The :mod:`random` module also provides the :class:`SystemRandom` class which "
"uses the system function :func:`os.urandom` to generate random numbers from "
"sources provided by the operating system."
msgstr ""
"Le module :mod:`random` fourni aussi la classe :class:`SystemRandom` qui "
"utilise la fonction système :func:`os.urandom` pour générer les nombres "
"aléatoires depuis les sources fournies par le système d'exploitation."

#: ../Doc/library/random.rst:48
msgid ""
"The pseudo-random generators of this module should not be used for security "
"purposes.  For security or cryptographic uses, see the :mod:`secrets` module."
msgstr ""
"Les générateurs pseudo-aléatoires de ce module ne devraient pas être "
"utilisées à des fins de sécurité. Pour des usages de sécurité ou "
"cryptographiques, référez-vous au module :mod:`secrets`."

#: ../Doc/library/random.rst:54
msgid ""
"M. Matsumoto and T. Nishimura, \"Mersenne Twister: A 623-dimensionally "
"equidistributed uniform pseudorandom number generator\", ACM Transactions on "
"Modeling and Computer Simulation Vol. 8, No. 1, January pp.3--30 1998."
msgstr ""
"M. Matsumoto et T. Nishimura, \"Mersenne Twister: A 623-dimensionally "
"equidistributed uniform pseudorandom number generator\", ACM Transactions on "
"Modeling and Computer Simulation Vol. 8, No. 1, January pp.3--30 1998."

#: ../Doc/library/random.rst:59
msgid ""
"`Complementary-Multiply-with-Carry recipe <https://code.activestate.com/"
"recipes/576707/>`_ for a compatible alternative random number generator with "
"a long period and comparatively simple update operations."
msgstr ""
"`Complementary-Multiply-with-Carry recipe <https://code.activestate.com/"
"recipes/576707/>`_ pour un générateur de nombres aléatoires alternatif "
"compatible avec une longue période et de comparativement simples opérations "
"de mise à jour."

#: ../Doc/library/random.rst:66
msgid "Bookkeeping functions"
msgstr "Fonctions de comptabilité"

#: ../Doc/library/random.rst:70
msgid "Initialize the random number generator."
msgstr "Initialiser le générateur de nombres aléatoires."

#: ../Doc/library/random.rst:72
msgid ""
"If *a* is omitted or ``None``, the current system time is used.  If "
"randomness sources are provided by the operating system, they are used "
"instead of the system time (see the :func:`os.urandom` function for details "
"on availability)."
msgstr ""
"Si *a* est omis ou initialisé à *``None``*, l'heure système est utilisée. Si "
"les sources aléatoires sont fournies par le système d'exploitation, elle "
"sont utilisées à la place de l'heure (voyez la fonction :func:`os.urandom` "
"pour les détails concernant leur disponibilité)."

#: ../Doc/library/random.rst:77
msgid "If *a* is an int, it is used directly."
msgstr "Si *a* est un entier, il est directement utilisé."

#: ../Doc/library/random.rst:79
msgid ""
"With version 2 (the default), a :class:`str`, :class:`bytes`, or :class:"
"`bytearray` object gets converted to an :class:`int` and all of its bits are "
"used."
msgstr ""
"Avec la version 2 (utilisée par défaut), un objet :class:`str`, :class:"
"`bytes`, ou :class:`bytearray` est converti en un :class:`int` et tous ces "
"bits sont utilisés."

#: ../Doc/library/random.rst:82
msgid ""
"With version 1 (provided for reproducing random sequences from older "
"versions of Python), the algorithm for :class:`str` and :class:`bytes` "
"generates a narrower range of seeds."
msgstr ""
"Avec la version 1 (fourni pour reproduire les séquences aléatoires des "
"anciennes versions de Python), l’algorithme pour les :class:`str` et les :"
"class:`bytes` génère un intervalle de graine plus réduit."

#: ../Doc/library/random.rst:86
msgid ""
"Moved to the version 2 scheme which uses all of the bits in a string seed."
msgstr ""
"Déplacé vers la version 2 qui utilise tous les bits d'une chaine de "
"charactère utilisée comme graine."

#: ../Doc/library/random.rst:91
msgid ""
"Return an object capturing the current internal state of the generator.  "
"This object can be passed to :func:`setstate` to restore the state."
msgstr ""
"Retourne un objet qui prend l'état interne du générateur. Cet objet peut "
"être passé à le fonction *:func:`setstate`* pour restaurer l'état."

#: ../Doc/library/random.rst:97
msgid ""
"*state* should have been obtained from a previous call to :func:`getstate`, "
"and :func:`setstate` restores the internal state of the generator to what it "
"was at the time :func:`getstate` was called."
msgstr ""
"*state* doit avoir été obtenu par un précédent appel à :func:`getstate`, et :"
"func:`setstate` restaure l'état interne du générateur tel qu'il était "
"lorsque :func:`getstate` a été appelé."

#: ../Doc/library/random.rst:104
msgid ""
"Returns a Python integer with *k* random bits. This method is supplied with "
"the MersenneTwister generator and some other generators may also provide it "
"as an optional part of the API. When available, :meth:`getrandbits` enables :"
"meth:`randrange` to handle arbitrarily large ranges."
msgstr ""
"Retourne un entier Python de *k* bits aléatoires. Cette méthode est fournie "
"par le générateur MersenneTwister. D'autres générateurs peuvent aussi la "
"fournir comme une option de l'API. Lorsqu'elle est disponible, * :meth:"
"`getrandbits`* permet à  *:meth:`randrange`* de manipuler des intervalles de "
"tailles arbitrairement grandes."

#: ../Doc/library/random.rst:111
msgid "Functions for integers"
msgstr "Fonctions pour les entiers"

#: ../Doc/library/random.rst:116
msgid ""
"Return a randomly selected element from ``range(start, stop, step)``.  This "
"is equivalent to ``choice(range(start, stop, step))``, but doesn't actually "
"build a range object."
msgstr ""
"Retourne un élément sélectionné aléatoirement de *``range(start, stop, "
"step)``*. Ceci est équivalent à *``choice(range(start, stop, step))``*, mais "
"ne construit pas d'objet d'intervalle."

#: ../Doc/library/random.rst:120
msgid ""
"The positional argument pattern matches that of :func:`range`.  Keyword "
"arguments should not be used because the function may use them in unexpected "
"ways."
msgstr ""
"Le motif de l'argument positionnel correspond à celui de *:func:`range`*. "
"Les arguments mots-clés ne devraient pas être utilisé car la fonction peut "
"les utiliser de manières inattendues."

#: ../Doc/library/random.rst:123
msgid ""
":meth:`randrange` is more sophisticated about producing equally distributed "
"values.  Formerly it used a style like ``int(random()*n)`` which could "
"produce slightly uneven distributions."
msgstr ""
"*:meth:`randrange`* est plus sophistiquée pour ce qui est de produire une "
"distribution équiprobable. Précédemment elle fonctionnait comme "
"``int(random()*n)`` qui pouvait produire des distributions légèrement "
"déséquilibrées."

#: ../Doc/library/random.rst:130
msgid ""
"Return a random integer *N* such that ``a <= N <= b``.  Alias for "
"``randrange(a, b+1)``."
msgstr ""
"Retourne un entier aléatoire *N* tel que ``a <= N <= b``. Autrement "
"``randrange(a, b+1)``."

#: ../Doc/library/random.rst:135
msgid "Functions for sequences"
msgstr "Fonctions pour les séquences"

#: ../Doc/library/random.rst:139
msgid ""
"Return a random element from the non-empty sequence *seq*. If *seq* is "
"empty, raises :exc:`IndexError`."
msgstr ""
"Retourne un élément aléatoire de la séquence non-vide *seq*. Si *seq* est "
"vide, lève l'exception :exc:`IndexError`."

#: ../Doc/library/random.rst:144
msgid ""
"Return a *k* sized list of elements chosen from the *population* with "
"replacement. If the *population* is empty, raises :exc:`IndexError`."
msgstr ""
"Retourne une liste d’éléments de taille *k* choisie dans la *population* par "
"remplacement. Si la *population* est vide, lève l'exception :exc:"
"`IndexError`."

#: ../Doc/library/random.rst:147
msgid ""
"If a *weights* sequence is specified, selections are made according to the "
"relative weights.  Alternatively, if a *cum_weights* sequence is given, the "
"selections are made according to the cumulative weights (perhaps computed "
"using :func:`itertools.accumulate`).  For example, the relative weights "
"``[10, 5, 30, 5]`` are equivalent to the cumulative weights ``[10, 15, 45, "
"50]``.  Internally, the relative weights are converted to cumulative weights "
"before making selections, so supplying the cumulative weights saves work."
msgstr ""

#: ../Doc/library/random.rst:156
msgid ""
"If neither *weights* nor *cum_weights* are specified, selections are made "
"with equal probability.  If a weights sequence is supplied, it must be the "
"same length as the *population* sequence.  It is a :exc:`TypeError` to "
"specify both *weights* and *cum_weights*."
msgstr ""

#: ../Doc/library/random.rst:161
msgid ""
"The *weights* or *cum_weights* can use any numeric type that interoperates "
"with the :class:`float` values returned by :func:`random` (that includes "
"integers, floats, and fractions but excludes decimals)."
msgstr ""

#: ../Doc/library/random.rst:170
msgid "Shuffle the sequence *x* in place."
msgstr "Mélange la séquence *x* en place."

#: ../Doc/library/random.rst:172
msgid ""
"The optional argument *random* is a 0-argument function returning a random "
"float in [0.0, 1.0); by default, this is the function :func:`.random`."
msgstr ""
"L'argument optionnel *random* est une fonction sans argument retournant un "
"*float* dans l'intervalle [0.0, 1.0); par défaut, c'est la fonction :func:`."
"random`."

#: ../Doc/library/random.rst:175
msgid ""
"To shuffle an immutable sequence and return a new shuffled list, use "
"``sample(x, k=len(x))`` instead."
msgstr ""
"Pour mélanger une séquence immutable et retourner une nouvelle liste "
"mélangée, à la place utilisez *``sample(x, k=len(x))``*."

#: ../Doc/library/random.rst:178
msgid ""
"Note that even for small ``len(x)``, the total number of permutations of *x* "
"can quickly grow larger than the period of most random number generators. "
"This implies that most permutations of a long sequence can never be "
"generated.  For example, a sequence of length 2080 is the largest that can "
"fit within the period of the Mersenne Twister random number generator."
msgstr ""
"Notez que même pour une petite valeur de ``len(x)``, le nombre total de "
"permutations de *x* peut grandir plus rapidement que la période de la "
"plupart des générateurs de nombres aléatoires. Cela implique que la plupart "
"des permutations d'une longue séquence ne pourront jamais être générées. Par "
"exemple, une séquence de longue de 2080 éléments est la plus large qui "
"puisse tenir dans une période du générateur de nombres aléatoires de "
"Mersenne Twister."

#: ../Doc/library/random.rst:187
msgid ""
"Return a *k* length list of unique elements chosen from the population "
"sequence or set. Used for random sampling without replacement."
msgstr ""
"Retourne une liste d'éléments uniques de longueur *k* choisis parmi la "
"population d'une séquence ou d'un ensemble (*set*). Utilisée pour un "
"échantillonnage aléatoire sans remplacement."

#: ../Doc/library/random.rst:190
msgid ""
"Returns a new list containing elements from the population while leaving the "
"original population unchanged.  The resulting list is in selection order so "
"that all sub-slices will also be valid random samples.  This allows raffle "
"winners (the sample) to be partitioned into grand prize and second place "
"winners (the subslices)."
msgstr ""

#: ../Doc/library/random.rst:196
msgid ""
"Members of the population need not be :term:`hashable` or unique.  If the "
"population contains repeats, then each occurrence is a possible selection in "
"the sample."
msgstr ""

#: ../Doc/library/random.rst:199
msgid ""
"To choose a sample from a range of integers, use a :func:`range` object as "
"an argument.  This is especially fast and space efficient for sampling from "
"a large population:  ``sample(range(10000000), k=60)``."
msgstr ""

#: ../Doc/library/random.rst:203
msgid ""
"If the sample size is larger than the population size, a :exc:`ValueError` "
"is raised."
msgstr ""

#: ../Doc/library/random.rst:207
msgid "Real-valued distributions"
msgstr "Distributions réelles"

#: ../Doc/library/random.rst:209
msgid ""
"The following functions generate specific real-valued distributions. "
"Function parameters are named after the corresponding variables in the "
"distribution's equation, as used in common mathematical practice; most of "
"these equations can be found in any statistics text."
msgstr ""

#: ../Doc/library/random.rst:217
msgid "Return the next random floating point number in the range [0.0, 1.0)."
msgstr ""

#: ../Doc/library/random.rst:222
msgid ""
"Return a random floating point number *N* such that ``a <= N <= b`` for ``a "
"<= b`` and ``b <= N <= a`` for ``b < a``."
msgstr ""

#: ../Doc/library/random.rst:225
msgid ""
"The end-point value ``b`` may or may not be included in the range depending "
"on floating-point rounding in the equation ``a + (b-a) * random()``."
msgstr ""

#: ../Doc/library/random.rst:231
msgid ""
"Return a random floating point number *N* such that ``low <= N <= high`` and "
"with the specified *mode* between those bounds.  The *low* and *high* bounds "
"default to zero and one.  The *mode* argument defaults to the midpoint "
"between the bounds, giving a symmetric distribution."
msgstr ""

#: ../Doc/library/random.rst:239
msgid ""
"Beta distribution.  Conditions on the parameters are ``alpha > 0`` and "
"``beta > 0``. Returned values range between 0 and 1."
msgstr ""
"Distribution Beta. Les conditions sur les paramètres sont ``alpha > 0`` et "
"``beta > 0``. Les valeurs retournées sont contenues dans l'intervalle [0, 1]."

#: ../Doc/library/random.rst:245
msgid ""
"Exponential distribution.  *lambd* is 1.0 divided by the desired mean.  It "
"should be nonzero.  (The parameter would be called \"lambda\", but that is a "
"reserved word in Python.)  Returned values range from 0 to positive infinity "
"if *lambd* is positive, and from negative infinity to 0 if *lambd* is "
"negative."
msgstr ""
"Distributions exponentielle. *lambd* vaut 1.0 divisé par l'espérance "
"désirée. Elle ne doit pas être égale à zéro. (Le paramètre aurait put être "
"appelé \"lambda\", mais c'est un mot réservé en Python.) Les valeurs "
"retournées sont contenues dans l'intervalle [0, + ∞[ si *lambd* est positif, "
"et dans l'intervalle ]-∞, 0] si *lambd* est négatif."

#: ../Doc/library/random.rst:254
msgid ""
"Gamma distribution.  (*Not* the gamma function!)  Conditions on the "
"parameters are ``alpha > 0`` and ``beta > 0``."
msgstr ""
"Distribution Gamma. (*Pas* la fonction gamma !) Les conditions sur les "
"paramètres sont ``alpha > 0`` et ``beta > 0``."

#: ../Doc/library/random.rst:257
msgid "The probability distribution function is::"
msgstr "La fonction de distribution de probabilité est : ::"

#: ../Doc/library/random.rst:266
msgid ""
"Gaussian distribution.  *mu* is the mean, and *sigma* is the standard "
"deviation.  This is slightly faster than the :func:`normalvariate` function "
"defined below."
msgstr ""
"Distribution gaussienne. *mu* est l'espérance, et *sigma* l'écart type. "
"C'est légèrement plus rapide que la fonction :func:`normalvariate` définie "
"ci-dessous."

#: ../Doc/library/random.rst:273
msgid ""
"Log normal distribution.  If you take the natural logarithm of this "
"distribution, you'll get a normal distribution with mean *mu* and standard "
"deviation *sigma*.  *mu* can have any value, and *sigma* must be greater "
"than zero."
msgstr ""
"Distribution Log-normale. Si vous prenez le logarithme naturel de cette "
"distribution, vous obtiendrez une distribution normale avec l'espérance *mu* "
"et l'écart type *sigma*. *mu* peut prendre n'importe quelle valeur, et "
"*sigma* doit être plus grand que zéro."

#: ../Doc/library/random.rst:281
msgid ""
"Normal distribution.  *mu* is the mean, and *sigma* is the standard "
"deviation."
msgstr ""
"Distribution normale. *mu* est l'espérance, et *sigma* est l'écart type."

#: ../Doc/library/random.rst:286
msgid ""
"*mu* is the mean angle, expressed in radians between 0 and 2\\*\\ *pi*, and "
"*kappa* is the concentration parameter, which must be greater than or equal "
"to zero.  If *kappa* is equal to zero, this distribution reduces to a "
"uniform random angle over the range 0 to 2\\*\\ *pi*."
msgstr ""
"Distribution de von Mises. *mu* est la moyenne angulaire, elle est exprimée "
"en radians et est contenue dans [0, 2\\*\\ *pi*], et *kappa* est le "
"paramètre de concentration qui doit être supérieur ou égal à zéro. Si "
"*kappa* est égal à zéro, cette distribution se limite à un angle uniforme "
"aléatoire dans l'intervalle [0, 2\\*\\ *pi*]."

#: ../Doc/library/random.rst:294
msgid "Pareto distribution.  *alpha* is the shape parameter."
msgstr "Distribution de pareto. *alpha* est le paramètre de forme."

#: ../Doc/library/random.rst:299
msgid ""
"Weibull distribution.  *alpha* is the scale parameter and *beta* is the "
"shape parameter."
msgstr ""
"Distribution de Weibull. *alpha* est le paramètre d'échelle et *beta* le "
"paramètrre de forme."

#: ../Doc/library/random.rst:304
msgid "Alternative Generator"
msgstr "Générateur alternatif"

#: ../Doc/library/random.rst:308
msgid ""
"Class that uses the :func:`os.urandom` function for generating random "
"numbers from sources provided by the operating system. Not available on all "
"systems. Does not rely on software state, and sequences are not "
"reproducible. Accordingly, the :meth:`seed` method has no effect and is "
"ignored. The :meth:`getstate` and :meth:`setstate` methods raise :exc:"
"`NotImplementedError` if called."
msgstr ""

#: ../Doc/library/random.rst:317
msgid "Notes on Reproducibility"
msgstr "Notes sur la reproducibilité"

#: ../Doc/library/random.rst:319
msgid ""
"Sometimes it is useful to be able to reproduce the sequences given by a "
"pseudo random number generator.  By re-using a seed value, the same sequence "
"should be reproducible from run to run as long as multiple threads are not "
"running."
msgstr ""

#: ../Doc/library/random.rst:323
msgid ""
"Most of the random module's algorithms and seeding functions are subject to "
"change across Python versions, but two aspects are guaranteed not to change:"
msgstr ""

#: ../Doc/library/random.rst:326
msgid ""
"If a new seeding method is added, then a backward compatible seeder will be "
"offered."
msgstr ""

#: ../Doc/library/random.rst:329
msgid ""
"The generator's :meth:`~Random.random` method will continue to produce the "
"same sequence when the compatible seeder is given the same seed."
msgstr ""

#: ../Doc/library/random.rst:335
msgid "Examples and Recipes"
msgstr "Exemples et Recettes"

#: ../Doc/library/random.rst:337
msgid "Basic examples::"
msgstr "Utilisation basique : ::"

#: ../Doc/library/random.rst:365
msgid "Simulations::"
msgstr "Simulations : ::"

#: ../Doc/library/random.rst:390
msgid ""
"Example of `statistical bootstrapping <https://en.wikipedia.org/wiki/"
"Bootstrapping_(statistics)>`_ using resampling with replacement to estimate "
"a confidence interval for the mean of a sample of size five::"
msgstr ""

#: ../Doc/library/random.rst:404
msgid ""
"Example of a `resampling permutation test <https://en.wikipedia.org/wiki/"
"Resampling_(statistics)#Permutation_tests>`_ to determine the statistical "
"significance or `p-value <https://en.wikipedia.org/wiki/P-value>`_ of an "
"observed difference between the effects of a drug versus a placebo::"
msgstr ""

#: ../Doc/library/random.rst:431
msgid ""
"Simulation of arrival times and service deliveries in a single server queue::"
msgstr ""
"Simulation d'heures d’arrivées et de services de livraisons dans une file "
"d'attente d'un serveur unique."

#: ../Doc/library/random.rst:462
msgid ""
"`Statistics for Hackers <https://www.youtube.com/watch?v=Iq9DzN6mvYA>`_ a "
"video tutorial by `Jake Vanderplas <https://us.pycon.org/2016/speaker/"
"profile/295/>`_ on statistical analysis using just a few fundamental "
"concepts including simulation, sampling, shuffling, and cross-validation."
msgstr ""

#: ../Doc/library/random.rst:468
msgid ""
"`Economics Simulation <http://nbviewer.jupyter.org/url/norvig.com/ipython/"
"Economics.ipynb>`_ a simulation of a marketplace by `Peter Norvig <http://"
"norvig.com/bio.html>`_ that shows effective use of many of the tools and "
"distributions provided by this module (gauss, uniform, sample, betavariate, "
"choice, triangular, and randrange)."
msgstr ""

#: ../Doc/library/random.rst:475
msgid ""
"`A Concrete Introduction to Probability (using Python) <http://nbviewer."
"jupyter.org/url/norvig.com/ipython/Probability.ipynb>`_ a tutorial by `Peter "
"Norvig <http://norvig.com/bio.html>`_ covering the basics of probability "
"theory, how to write simulations, and how to perform data analysis using "
"Python."
msgstr ""
